	.file	"frmMain.c"
	.intel_syntax noprefix
	.text
	.data
	.align 32
_ZN14CLASSCONTAINER8CLASSES$E:
	.quad	0
	.quad	0
	.quad	0
	.quad	24
	.quad	0
	.quad	8
	.space 192
	.section .rdata,"dr"
.LC0:
	.ascii "N2MY3SYS6OBJECTE\0"
	.data
	.align 16
_ZTSN2MY3SYS6OBJECTE:
	.quad	0
	.quad	.LC0
	.quad	__fb_ZTS6Object
	.align 32
_ZTVN2MY3SYS6OBJECTE:
	.quad	0
	.quad	_ZTSN2MY3SYS6OBJECTE
	.quad	_ZN2MY3SYS6OBJECT8TOSTRINGEv
	.quad	_ZN2MY3SYS6OBJECT12READPROPERTYER8FBSTRING
	.quad	_ZN2MY3SYS6OBJECT13WRITEPROPERTYER8FBSTRINGPv
	.section .rdata,"dr"
	.align 8
.LC1:
	.ascii "N2MY3SYS14COMPONENTMODEL11MARGINSTYPEE\0"
	.data
	.align 16
_ZTSN2MY3SYS14COMPONENTMODEL11MARGINSTYPEE:
	.quad	0
	.quad	.LC1
	.quad	_ZTSN2MY3SYS6OBJECTE
	.align 32
_ZTVN2MY3SYS14COMPONENTMODEL11MARGINSTYPEE:
	.quad	0
	.quad	_ZTSN2MY3SYS14COMPONENTMODEL11MARGINSTYPEE
	.quad	_ZN2MY3SYS14COMPONENTMODEL11MARGINSTYPE8TOSTRINGEv
	.quad	_ZN2MY3SYS6OBJECT12READPROPERTYER8FBSTRING
	.quad	_ZN2MY3SYS6OBJECT13WRITEPROPERTYER8FBSTRINGPv
	.section .rdata,"dr"
	.align 8
.LC2:
	.ascii "N2MY3SYS14COMPONENTMODEL9COMPONENTE\0"
	.data
	.align 16
_ZTSN2MY3SYS14COMPONENTMODEL9COMPONENTE:
	.quad	0
	.quad	.LC2
	.quad	_ZTSN2MY3SYS6OBJECTE
	.align 32
_ZTVN2MY3SYS14COMPONENTMODEL9COMPONENTE:
	.quad	0
	.quad	_ZTSN2MY3SYS14COMPONENTMODEL9COMPONENTE
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT8TOSTRINGEv
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12READPROPERTYER8FBSTRING
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13WRITEPROPERTYER8FBSTRINGPv
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT4MOVEEu7INTEGERS3_S3_S3_
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT17DESIGNMODE__get__Ev
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT17DESIGNMODE__set__Eb
	.section .rdata,"dr"
.LC3:
	.ascii "N2MY3SYS7DRAWING3PENE\0"
	.data
	.align 16
_ZTSN2MY3SYS7DRAWING3PENE:
	.quad	0
	.quad	.LC3
	.quad	_ZTSN2MY3SYS6OBJECTE
	.align 32
_ZTVN2MY3SYS7DRAWING3PENE:
	.quad	0
	.quad	_ZTSN2MY3SYS7DRAWING3PENE
	.quad	_ZN2MY3SYS6OBJECT8TOSTRINGEv
	.quad	_ZN2MY3SYS7DRAWING3PEN12READPROPERTYER8FBSTRING
	.quad	_ZN2MY3SYS7DRAWING3PEN13WRITEPROPERTYER8FBSTRINGPv
	.section .rdata,"dr"
.LC4:
	.ascii "N2MY3SYS7DRAWING5BRUSHE\0"
	.data
	.align 16
_ZTSN2MY3SYS7DRAWING5BRUSHE:
	.quad	0
	.quad	.LC4
	.quad	_ZTSN2MY3SYS6OBJECTE
	.align 32
_ZTVN2MY3SYS7DRAWING5BRUSHE:
	.quad	0
	.quad	_ZTSN2MY3SYS7DRAWING5BRUSHE
	.quad	_ZN2MY3SYS6OBJECT8TOSTRINGEv
	.quad	_ZN2MY3SYS7DRAWING5BRUSH12READPROPERTYER8FBSTRING
	.quad	_ZN2MY3SYS7DRAWING5BRUSH13WRITEPROPERTYER8FBSTRINGPv
	.section .rdata,"dr"
.LC5:
	.ascii "N2MY3SYS7DRAWING10BITMAPTYPEE\0"
	.data
	.align 16
_ZTSN2MY3SYS7DRAWING10BITMAPTYPEE:
	.quad	0
	.quad	.LC5
	.quad	_ZTSN2MY3SYS6OBJECTE
	.align 32
_ZTVN2MY3SYS7DRAWING10BITMAPTYPEE:
	.quad	0
	.quad	_ZTSN2MY3SYS7DRAWING10BITMAPTYPEE
	.quad	_ZN2MY3SYS7DRAWING10BITMAPTYPE8TOSTRINGEv
	.quad	_ZN2MY3SYS7DRAWING10BITMAPTYPE12READPROPERTYER8FBSTRING
	.quad	_ZN2MY3SYS7DRAWING10BITMAPTYPE13WRITEPROPERTYER8FBSTRINGPv
	.section .rdata,"dr"
.LC6:
	.ascii "N2MY3SYS7DRAWING4ICONE\0"
	.data
	.align 16
_ZTSN2MY3SYS7DRAWING4ICONE:
	.quad	0
	.quad	.LC6
	.quad	_ZTSN2MY3SYS6OBJECTE
	.align 32
_ZTVN2MY3SYS7DRAWING4ICONE:
	.quad	0
	.quad	_ZTSN2MY3SYS7DRAWING4ICONE
	.quad	_ZN2MY3SYS7DRAWING4ICON8TOSTRINGEv
	.quad	_ZN2MY3SYS7DRAWING4ICON12READPROPERTYER8FBSTRING
	.quad	_ZN2MY3SYS7DRAWING4ICON13WRITEPROPERTYER8FBSTRINGPv
	.section .rdata,"dr"
.LC7:
	.ascii "N2MY3SYS7DRAWING6CURSORE\0"
	.data
	.align 16
_ZTSN2MY3SYS7DRAWING6CURSORE:
	.quad	0
	.quad	.LC7
	.quad	_ZTSN2MY3SYS6OBJECTE
	.align 32
_ZTVN2MY3SYS7DRAWING6CURSORE:
	.quad	0
	.quad	_ZTSN2MY3SYS7DRAWING6CURSORE
	.quad	_ZN2MY3SYS7DRAWING6CURSOR8TOSTRINGEv
	.quad	_ZN2MY3SYS7DRAWING6CURSOR12READPROPERTYER8FBSTRING
	.quad	_ZN2MY3SYS7DRAWING6CURSOR13WRITEPROPERTYER8FBSTRINGPv
	.section .rdata,"dr"
.LC8:
	.ascii "N2MY3SYS7DRAWING4FONTE\0"
	.data
	.align 16
_ZTSN2MY3SYS7DRAWING4FONTE:
	.quad	0
	.quad	.LC8
	.quad	_ZTSN2MY3SYS6OBJECTE
	.align 32
_ZTVN2MY3SYS7DRAWING4FONTE:
	.quad	0
	.quad	_ZTSN2MY3SYS7DRAWING4FONTE
	.quad	_ZN2MY3SYS7DRAWING4FONT8TOSTRINGEv
	.quad	_ZN2MY3SYS7DRAWING4FONT12READPROPERTYER8FBSTRING
	.quad	_ZN2MY3SYS7DRAWING4FONT13WRITEPROPERTYER8FBSTRINGPv
	.section .rdata,"dr"
.LC9:
	.ascii "N2MY3SYS7DRAWING6CANVASE\0"
	.data
	.align 16
_ZTSN2MY3SYS7DRAWING6CANVASE:
	.quad	0
	.quad	.LC9
	.quad	_ZTSN2MY3SYS6OBJECTE
	.align 32
_ZTVN2MY3SYS7DRAWING6CANVASE:
	.quad	0
	.quad	_ZTSN2MY3SYS7DRAWING6CANVASE
	.quad	_ZN2MY3SYS6OBJECT8TOSTRINGEv
	.quad	_ZN2MY3SYS7DRAWING6CANVAS12READPROPERTYER8FBSTRING
	.quad	_ZN2MY3SYS7DRAWING6CANVAS13WRITEPROPERTYER8FBSTRINGPv
	.section .rdata,"dr"
	.align 8
.LC10:
	.ascii "N2MY3SYS7DRAWING11GRAPHICTYPEE\0"
	.data
	.align 16
_ZTSN2MY3SYS7DRAWING11GRAPHICTYPEE:
	.quad	0
	.quad	.LC10
	.quad	_ZTSN2MY3SYS6OBJECTE
	.align 32
_ZTVN2MY3SYS7DRAWING11GRAPHICTYPEE:
	.quad	0
	.quad	_ZTSN2MY3SYS7DRAWING11GRAPHICTYPEE
	.quad	_ZN2MY3SYS7DRAWING11GRAPHICTYPE8TOSTRINGEv
	.quad	_ZN2MY3SYS7DRAWING11GRAPHICTYPE12READPROPERTYER8FBSTRING
	.quad	_ZN2MY3SYS7DRAWING11GRAPHICTYPE13WRITEPROPERTYER8FBSTRINGPv
	.section .rdata,"dr"
.LC11:
	.ascii "N2MY3SYS5FORMS9IMAGELISTE\0"
	.data
	.align 16
_ZTSN2MY3SYS5FORMS9IMAGELISTE:
	.quad	0
	.quad	.LC11
	.quad	_ZTSN2MY3SYS14COMPONENTMODEL9COMPONENTE
	.align 32
_ZTVN2MY3SYS5FORMS9IMAGELISTE:
	.quad	0
	.quad	_ZTSN2MY3SYS5FORMS9IMAGELISTE
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT8TOSTRINGEv
	.quad	_ZN2MY3SYS5FORMS9IMAGELIST12READPROPERTYER8FBSTRING
	.quad	_ZN2MY3SYS5FORMS9IMAGELIST13WRITEPROPERTYER8FBSTRINGPv
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT4MOVEEu7INTEGERS3_S3_S3_
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT17DESIGNMODE__get__Ev
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT17DESIGNMODE__set__Eb
	.section .rdata,"dr"
.LC12:
	.ascii "N2MY3SYS5FORMS8MENUITEME\0"
	.data
	.align 16
_ZTSN2MY3SYS5FORMS8MENUITEME:
	.quad	0
	.quad	.LC12
	.quad	_ZTSN2MY3SYS6OBJECTE
	.align 32
_ZTVN2MY3SYS5FORMS8MENUITEME:
	.quad	0
	.quad	_ZTSN2MY3SYS5FORMS8MENUITEME
	.quad	_ZN2MY3SYS5FORMS8MENUITEM8TOSTRINGEv
	.quad	_ZN2MY3SYS5FORMS8MENUITEM12READPROPERTYER8FBSTRING
	.quad	_ZN2MY3SYS5FORMS8MENUITEM13WRITEPROPERTYER8FBSTRINGPv
	.section .rdata,"dr"
.LC13:
	.ascii "N2MY3SYS5FORMS4MENUE\0"
	.data
	.align 16
_ZTSN2MY3SYS5FORMS4MENUE:
	.quad	0
	.quad	.LC13
	.quad	_ZTSN2MY3SYS14COMPONENTMODEL9COMPONENTE
	.align 32
_ZTVN2MY3SYS5FORMS4MENUE:
	.quad	0
	.quad	_ZTSN2MY3SYS5FORMS4MENUE
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT8TOSTRINGEv
	.quad	_ZN2MY3SYS5FORMS4MENU12READPROPERTYER8FBSTRING
	.quad	_ZN2MY3SYS5FORMS4MENU13WRITEPROPERTYER8FBSTRINGPv
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT4MOVEEu7INTEGERS3_S3_S3_
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT17DESIGNMODE__get__Ev
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT17DESIGNMODE__set__Eb
	.quad	_ZN2MY3SYS5FORMS4MENU14PROCESSMESSAGEER7MESSAGE
	.section .rdata,"dr"
.LC14:
	.ascii "N2MY3SYS5FORMS8MAINMENUE\0"
	.data
	.align 16
_ZTSN2MY3SYS5FORMS8MAINMENUE:
	.quad	0
	.quad	.LC14
	.quad	_ZTSN2MY3SYS5FORMS4MENUE
	.align 32
_ZTVN2MY3SYS5FORMS8MAINMENUE:
	.quad	0
	.quad	_ZTSN2MY3SYS5FORMS8MAINMENUE
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT8TOSTRINGEv
	.quad	_ZN2MY3SYS5FORMS8MAINMENU12READPROPERTYER8FBSTRING
	.quad	_ZN2MY3SYS5FORMS8MAINMENU13WRITEPROPERTYER8FBSTRINGPv
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT4MOVEEu7INTEGERS3_S3_S3_
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT17DESIGNMODE__get__Ev
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT17DESIGNMODE__set__Eb
	.quad	_ZN2MY3SYS5FORMS4MENU14PROCESSMESSAGEER7MESSAGE
	.quad	_ZN2MY3SYS5FORMS8MAINMENU15PROCESSMESSAGESER7MESSAGE
	.section .rdata,"dr"
.LC15:
	.ascii "N2MY3SYS5FORMS9POPUPMENUE\0"
	.data
	.align 16
_ZTSN2MY3SYS5FORMS9POPUPMENUE:
	.quad	0
	.quad	.LC15
	.quad	_ZTSN2MY3SYS5FORMS4MENUE
	.align 32
_ZTVN2MY3SYS5FORMS9POPUPMENUE:
	.quad	0
	.quad	_ZTSN2MY3SYS5FORMS9POPUPMENUE
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT8TOSTRINGEv
	.quad	_ZN2MY3SYS5FORMS9POPUPMENU12READPROPERTYER8FBSTRING
	.quad	_ZN2MY3SYS5FORMS9POPUPMENU13WRITEPROPERTYER8FBSTRINGPv
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT4MOVEEu7INTEGERS3_S3_S3_
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT17DESIGNMODE__get__Ev
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT17DESIGNMODE__set__Eb
	.quad	_ZN2MY3SYS5FORMS4MENU14PROCESSMESSAGEER7MESSAGE
	.quad	_ZN2MY3SYS5FORMS9POPUPMENU15PROCESSMESSAGESER7MESSAGE
	.section .rdata,"dr"
	.align 8
.LC16:
	.ascii "N2MY3SYS5FORMS15SIZECONSTRAINTSE\0"
	.data
	.align 16
_ZTSN2MY3SYS5FORMS15SIZECONSTRAINTSE:
	.quad	0
	.quad	.LC16
	.quad	_ZTSN2MY3SYS6OBJECTE
	.align 32
_ZTVN2MY3SYS5FORMS15SIZECONSTRAINTSE:
	.quad	0
	.quad	_ZTSN2MY3SYS5FORMS15SIZECONSTRAINTSE
	.quad	_ZN2MY3SYS5FORMS15SIZECONSTRAINTS8TOSTRINGEv
	.quad	_ZN2MY3SYS6OBJECT12READPROPERTYER8FBSTRING
	.quad	_ZN2MY3SYS6OBJECT13WRITEPROPERTYER8FBSTRINGPv
	.section .rdata,"dr"
.LC17:
	.ascii "N2MY3SYS5FORMS10ANCHORTYPEE\0"
	.data
	.align 16
_ZTSN2MY3SYS5FORMS10ANCHORTYPEE:
	.quad	0
	.quad	.LC17
	.quad	_ZTSN2MY3SYS6OBJECTE
	.align 32
_ZTVN2MY3SYS5FORMS10ANCHORTYPEE:
	.quad	0
	.quad	_ZTSN2MY3SYS5FORMS10ANCHORTYPEE
	.quad	_ZN2MY3SYS5FORMS10ANCHORTYPE8TOSTRINGEv
	.quad	_ZN2MY3SYS6OBJECT12READPROPERTYER8FBSTRING
	.quad	_ZN2MY3SYS6OBJECT13WRITEPROPERTYER8FBSTRINGPv
	.section .rdata,"dr"
	.align 8
.LC18:
	.ascii "N2MY3SYS5FORMS17CONTROLCOLLECTIONE\0"
	.data
	.align 16
_ZTSN2MY3SYS5FORMS17CONTROLCOLLECTIONE:
	.quad	0
	.quad	.LC18
	.quad	_ZTSN2MY3SYS6OBJECTE
	.align 32
_ZTVN2MY3SYS5FORMS17CONTROLCOLLECTIONE:
	.quad	0
	.quad	_ZTSN2MY3SYS5FORMS17CONTROLCOLLECTIONE
	.quad	_ZN2MY3SYS6OBJECT8TOSTRINGEv
	.quad	_ZN2MY3SYS6OBJECT12READPROPERTYER8FBSTRING
	.quad	_ZN2MY3SYS6OBJECT13WRITEPROPERTYER8FBSTRINGPv
	.section .rdata,"dr"
.LC19:
	.ascii "N2MY3SYS5FORMS7CONTROLE\0"
	.data
	.align 16
_ZTSN2MY3SYS5FORMS7CONTROLE:
	.quad	0
	.quad	.LC19
	.quad	_ZTSN2MY3SYS14COMPONENTMODEL9COMPONENTE
	.align 32
_ZTVN2MY3SYS5FORMS7CONTROLE:
	.quad	0
	.quad	_ZTSN2MY3SYS5FORMS7CONTROLE
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT8TOSTRINGEv
	.quad	_ZN2MY3SYS5FORMS7CONTROL12READPROPERTYER8FBSTRING
	.quad	_ZN2MY3SYS5FORMS7CONTROL13WRITEPROPERTYER8FBSTRINGPv
	.quad	_ZN2MY3SYS5FORMS7CONTROL4MOVEEu7INTEGERS3_S3_S3_
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT17DESIGNMODE__get__Ev
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT17DESIGNMODE__set__Eb
	.quad	_ZN2MY3SYS5FORMS7CONTROL7SETDARKEb
	.quad	_ZN2MY3SYS5FORMS7CONTROL14PROCESSMESSAGEER7MESSAGE
	.quad	_ZN2MY3SYS5FORMS7CONTROL19PROCESSMESSAGEAFTERER7MESSAGE
	.quad	_ZN2MY3SYS5FORMS7CONTROL11TEXT__get__Ev
	.quad	_ZN2MY3SYS5FORMS7CONTROL11TEXT__set__ERw
	.quad	_ZN2MY3SYS5FORMS7CONTROL14VISIBLE__get__Ev
	.quad	_ZN2MY3SYS5FORMS7CONTROL14VISIBLE__set__Eb
	.quad	_ZN2MY3SYS5FORMS7CONTROL9CREATEWNDEv
	.quad	_ZN2MY3SYS5FORMS7CONTROL4SHOWEv
	.quad	_ZN2MY3SYS5FORMS7CONTROL4HIDEEv
	.quad	_ZN2MY3SYS5FORMS7CONTROL3ADDEPS2_u7INTEGER
.lcomm _ZN2MY3SYS5FORMS16CREATIONCONTROL$E,8,8
	.section .rdata,"dr"
	.align 8
.LC20:
	.ascii "N2MY3SYS5FORMS16CONTAINERCONTROLE\0"
	.data
	.align 16
_ZTSN2MY3SYS5FORMS16CONTAINERCONTROLE:
	.quad	0
	.quad	.LC20
	.quad	_ZTSN2MY3SYS5FORMS7CONTROLE
	.align 32
_ZTVN2MY3SYS5FORMS16CONTAINERCONTROLE:
	.quad	0
	.quad	_ZTSN2MY3SYS5FORMS16CONTAINERCONTROLE
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT8TOSTRINGEv
	.quad	_ZN2MY3SYS5FORMS16CONTAINERCONTROL12READPROPERTYER8FBSTRING
	.quad	_ZN2MY3SYS5FORMS16CONTAINERCONTROL13WRITEPROPERTYER8FBSTRINGPv
	.quad	_ZN2MY3SYS5FORMS7CONTROL4MOVEEu7INTEGERS3_S3_S3_
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT17DESIGNMODE__get__Ev
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT17DESIGNMODE__set__Eb
	.quad	_ZN2MY3SYS5FORMS7CONTROL7SETDARKEb
	.quad	_ZN2MY3SYS5FORMS16CONTAINERCONTROL14PROCESSMESSAGEER7MESSAGE
	.quad	_ZN2MY3SYS5FORMS7CONTROL19PROCESSMESSAGEAFTERER7MESSAGE
	.quad	_ZN2MY3SYS5FORMS7CONTROL11TEXT__get__Ev
	.quad	_ZN2MY3SYS5FORMS7CONTROL11TEXT__set__ERw
	.quad	_ZN2MY3SYS5FORMS16CONTAINERCONTROL14VISIBLE__get__Ev
	.quad	_ZN2MY3SYS5FORMS16CONTAINERCONTROL14VISIBLE__set__Eb
	.quad	_ZN2MY3SYS5FORMS7CONTROL9CREATEWNDEv
	.quad	_ZN2MY3SYS5FORMS7CONTROL4SHOWEv
	.quad	_ZN2MY3SYS5FORMS7CONTROL4HIDEEv
	.quad	_ZN2MY3SYS5FORMS7CONTROL3ADDEPS2_u7INTEGER
	.quad	_ZN2MY3SYS5FORMS16CONTAINERCONTROL15AUTOSIZE__get__Ev
	.quad	_ZN2MY3SYS5FORMS16CONTAINERCONTROL15AUTOSIZE__set__Eb
	.section .rdata,"dr"
.LC21:
	.ascii "N2MY3SYS5FORMS4FORME\0"
	.data
	.align 16
_ZTSN2MY3SYS5FORMS4FORME:
	.quad	0
	.quad	.LC21
	.quad	_ZTSN2MY3SYS5FORMS16CONTAINERCONTROLE
	.align 32
_ZTVN2MY3SYS5FORMS4FORME:
	.quad	0
	.quad	_ZTSN2MY3SYS5FORMS4FORME
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT8TOSTRINGEv
	.quad	_ZN2MY3SYS5FORMS4FORM12READPROPERTYER8FBSTRING
	.quad	_ZN2MY3SYS5FORMS4FORM13WRITEPROPERTYER8FBSTRINGPv
	.quad	_ZN2MY3SYS5FORMS7CONTROL4MOVEEu7INTEGERS3_S3_S3_
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT17DESIGNMODE__get__Ev
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT17DESIGNMODE__set__Eb
	.quad	_ZN2MY3SYS5FORMS4FORM7SETDARKEb
	.quad	_ZN2MY3SYS5FORMS4FORM14PROCESSMESSAGEER7MESSAGE
	.quad	_ZN2MY3SYS5FORMS7CONTROL19PROCESSMESSAGEAFTERER7MESSAGE
	.quad	_ZN2MY3SYS5FORMS4FORM11TEXT__get__Ev
	.quad	_ZN2MY3SYS5FORMS4FORM11TEXT__set__ERw
	.quad	_ZN2MY3SYS5FORMS4FORM14VISIBLE__get__Ev
	.quad	_ZN2MY3SYS5FORMS4FORM14VISIBLE__set__Eb
	.quad	_ZN2MY3SYS5FORMS7CONTROL9CREATEWNDEv
	.quad	_ZN2MY3SYS5FORMS4FORM4SHOWEv
	.quad	_ZN2MY3SYS5FORMS4FORM4HIDEEv
	.quad	_ZN2MY3SYS5FORMS7CONTROL3ADDEPS2_u7INTEGER
	.quad	_ZN2MY3SYS5FORMS16CONTAINERCONTROL15AUTOSIZE__get__Ev
	.quad	_ZN2MY3SYS5FORMS16CONTAINERCONTROL15AUTOSIZE__set__Eb
	.section .rdata,"dr"
.LC22:
	.ascii "N2MY3SYS5FORMS8GROUPBOXE\0"
	.data
	.align 16
_ZTSN2MY3SYS5FORMS8GROUPBOXE:
	.quad	0
	.quad	.LC22
	.quad	_ZTSN2MY3SYS5FORMS16CONTAINERCONTROLE
	.align 32
_ZTVN2MY3SYS5FORMS8GROUPBOXE:
	.quad	0
	.quad	_ZTSN2MY3SYS5FORMS8GROUPBOXE
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT8TOSTRINGEv
	.quad	_ZN2MY3SYS5FORMS8GROUPBOX12READPROPERTYER8FBSTRING
	.quad	_ZN2MY3SYS5FORMS8GROUPBOX13WRITEPROPERTYER8FBSTRINGPv
	.quad	_ZN2MY3SYS5FORMS7CONTROL4MOVEEu7INTEGERS3_S3_S3_
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT17DESIGNMODE__get__Ev
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT17DESIGNMODE__set__Eb
	.quad	_ZN2MY3SYS5FORMS7CONTROL7SETDARKEb
	.quad	_ZN2MY3SYS5FORMS8GROUPBOX14PROCESSMESSAGEER7MESSAGE
	.quad	_ZN2MY3SYS5FORMS7CONTROL19PROCESSMESSAGEAFTERER7MESSAGE
	.quad	_ZN2MY3SYS5FORMS8GROUPBOX11TEXT__get__Ev
	.quad	_ZN2MY3SYS5FORMS8GROUPBOX11TEXT__set__ERw
	.quad	_ZN2MY3SYS5FORMS16CONTAINERCONTROL14VISIBLE__get__Ev
	.quad	_ZN2MY3SYS5FORMS16CONTAINERCONTROL14VISIBLE__set__Eb
	.quad	_ZN2MY3SYS5FORMS7CONTROL9CREATEWNDEv
	.quad	_ZN2MY3SYS5FORMS7CONTROL4SHOWEv
	.quad	_ZN2MY3SYS5FORMS7CONTROL4HIDEEv
	.quad	_ZN2MY3SYS5FORMS7CONTROL3ADDEPS2_u7INTEGER
	.quad	_ZN2MY3SYS5FORMS16CONTAINERCONTROL15AUTOSIZE__get__Ev
	.quad	_ZN2MY3SYS5FORMS16CONTAINERCONTROL15AUTOSIZE__set__Eb
	.section .rdata,"dr"
	.align 8
.LC23:
	.ascii "N2MY3SYS5FORMS13COMMANDBUTTONE\0"
	.data
	.align 16
_ZTSN2MY3SYS5FORMS13COMMANDBUTTONE:
	.quad	0
	.quad	.LC23
	.quad	_ZTSN2MY3SYS5FORMS7CONTROLE
	.align 32
_ZTVN2MY3SYS5FORMS13COMMANDBUTTONE:
	.quad	0
	.quad	_ZTSN2MY3SYS5FORMS13COMMANDBUTTONE
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT8TOSTRINGEv
	.quad	_ZN2MY3SYS5FORMS13COMMANDBUTTON12READPROPERTYER8FBSTRING
	.quad	_ZN2MY3SYS5FORMS13COMMANDBUTTON13WRITEPROPERTYER8FBSTRINGPv
	.quad	_ZN2MY3SYS5FORMS7CONTROL4MOVEEu7INTEGERS3_S3_S3_
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT17DESIGNMODE__get__Ev
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT17DESIGNMODE__set__Eb
	.quad	_ZN2MY3SYS5FORMS7CONTROL7SETDARKEb
	.quad	_ZN2MY3SYS5FORMS13COMMANDBUTTON14PROCESSMESSAGEER7MESSAGE
	.quad	_ZN2MY3SYS5FORMS7CONTROL19PROCESSMESSAGEAFTERER7MESSAGE
	.quad	_ZN2MY3SYS5FORMS13COMMANDBUTTON11TEXT__get__Ev
	.quad	_ZN2MY3SYS5FORMS13COMMANDBUTTON11TEXT__set__ERw
	.quad	_ZN2MY3SYS5FORMS7CONTROL14VISIBLE__get__Ev
	.quad	_ZN2MY3SYS5FORMS7CONTROL14VISIBLE__set__Eb
	.quad	_ZN2MY3SYS5FORMS7CONTROL9CREATEWNDEv
	.quad	_ZN2MY3SYS5FORMS7CONTROL4SHOWEv
	.quad	_ZN2MY3SYS5FORMS7CONTROL4HIDEEv
	.quad	_ZN2MY3SYS5FORMS7CONTROL3ADDEPS2_u7INTEGER
	.section .rdata,"dr"
.LC24:
	.ascii "N2MY11APPLICATIONE\0"
	.data
	.align 16
_ZTSN2MY11APPLICATIONE:
	.quad	0
	.quad	.LC24
	.quad	_ZTSN2MY3SYS6OBJECTE
	.align 32
_ZTVN2MY11APPLICATIONE:
	.quad	0
	.quad	_ZTSN2MY11APPLICATIONE
	.quad	_ZN2MY3SYS6OBJECT8TOSTRINGEv
	.quad	_ZN2MY11APPLICATION12READPROPERTYER8FBSTRING
	.quad	_ZN2MY11APPLICATION13WRITEPROPERTYER8FBSTRINGPv
.lcomm G_BRITEMBACKGROUND$,8,8
.lcomm G_BRITEMBACKGROUNDHOT$,8,8
.lcomm G_BRITEMBACKGROUNDSELECTED$,8,8
.lcomm HBRBKGND$,8,8
.lcomm HBRHLBKGND$,8,8
.lcomm G_MENUTHEME$,8,8
.lcomm DEFAULTFONT$,160,32
	.section .rdata,"dr"
.LC25:
	.ascii "15INTEGERLISTITEM\0"
	.data
	.align 16
_ZTSN15INTEGERLISTITEME:
	.quad	0
	.quad	.LC25
	.quad	__fb_ZTS6Object
	.align 16
_ZTVN15INTEGERLISTITEME:
	.quad	0
	.quad	_ZTSN15INTEGERLISTITEME
	.section .rdata,"dr"
.LC26:
	.ascii "11INTEGERLIST\0"
	.data
	.align 16
_ZTSN11INTEGERLISTE:
	.quad	0
	.quad	.LC26
	.quad	__fb_ZTS6Object
	.align 16
_ZTVN11INTEGERLISTE:
	.quad	0
	.quad	_ZTSN11INTEGERLISTE
.lcomm _SETWINDOWCOMPOSITIONATTRIBUTE$,8,8
.lcomm _SHOULDAPPSUSEDARKMODE$,8,8
.lcomm _ALLOWDARKMODEFORWINDOW$,8,8
.lcomm _ALLOWDARKMODEFORAPP$,8,8
.lcomm _FLUSHMENUTHEMES$,8,8
.lcomm _REFRESHIMMERSIVECOLORPOLICYSTATE$,8,8
.lcomm _ISDARKMODEALLOWEDFORWINDOW$,8,8
.lcomm _GETISIMMERSIVECOLORUSINGHIGHCONTRAST$,8,8
.lcomm _OPENNCTHEMEDATA$,8,8
.lcomm _SETPREFERREDAPPMODE$,8,8
.lcomm G_BUILDNUMBER$,4,4
.lcomm G_DARKSCROLLBARWINDOWS$,16,16
.lcomm G_DARKSCROLLBARMUTEX$,8,8
.lcomm APP$,472,32
	.align 8
DEBUGWINDOWHANDLE$:
	.quad	722642
	.section .rdata,"dr"
.LC27:
	.ascii "9FORM1TYPE\0"
	.data
	.align 16
_ZTSN9FORM1TYPEE:
	.quad	0
	.quad	.LC27
	.quad	_ZTSN2MY3SYS5FORMS4FORME
	.align 32
_ZTVN9FORM1TYPEE:
	.quad	0
	.quad	_ZTSN9FORM1TYPEE
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT8TOSTRINGEv
	.quad	_ZN2MY3SYS5FORMS4FORM12READPROPERTYER8FBSTRING
	.quad	_ZN2MY3SYS5FORMS4FORM13WRITEPROPERTYER8FBSTRINGPv
	.quad	_ZN2MY3SYS5FORMS7CONTROL4MOVEEu7INTEGERS3_S3_S3_
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT17DESIGNMODE__get__Ev
	.quad	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT17DESIGNMODE__set__Eb
	.quad	_ZN2MY3SYS5FORMS4FORM7SETDARKEb
	.quad	_ZN2MY3SYS5FORMS4FORM14PROCESSMESSAGEER7MESSAGE
	.quad	_ZN2MY3SYS5FORMS7CONTROL19PROCESSMESSAGEAFTERER7MESSAGE
	.quad	_ZN2MY3SYS5FORMS4FORM11TEXT__get__Ev
	.quad	_ZN2MY3SYS5FORMS4FORM11TEXT__set__ERw
	.quad	_ZN2MY3SYS5FORMS4FORM14VISIBLE__get__Ev
	.quad	_ZN2MY3SYS5FORMS4FORM14VISIBLE__set__Eb
	.quad	_ZN2MY3SYS5FORMS7CONTROL9CREATEWNDEv
	.quad	_ZN2MY3SYS5FORMS4FORM4SHOWEv
	.quad	_ZN2MY3SYS5FORMS4FORM4HIDEEv
	.quad	_ZN2MY3SYS5FORMS7CONTROL3ADDEPS2_u7INTEGER
	.quad	_ZN2MY3SYS5FORMS16CONTAINERCONTROL15AUTOSIZE__get__Ev
	.quad	_ZN2MY3SYS5FORMS16CONTAINERCONTROL15AUTOSIZE__set__Eb
.lcomm FORM1$,3584,32
	.comm	FILENUMBERCOUNTER$, 4, 2
	.comm	FILENUMBERS$, 8, 3
	.comm	PDEFAULTFONT$, 8, 3
	.comm	G_DARKMODESUPPORTED$, 1, 0
	.comm	G_DARKMODEENABLED$, 1, 0
	.comm	PAPP$, 8, 3
	.section .rdata,"dr"
	.align 8
.LC28:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Component.bas\0"
.LC29:
	.ascii "THREADCREATE_\0"
	.text
	.globl	THREADCREATE_
	.def	THREADCREATE_;	.scl	2;	.type	32;	.endef
THREADCREATE_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR -48[rbp], 0
	lea	rcx, .LC28[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC29[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L2:
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	fb_ThreadCreate
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	nop
.L3:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -48[rbp]
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC30:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Icon.bas\0"
.LC31:
	.ascii "ICONLOADFROMFILE\0"
	.text
	.globl	IconLoadFromFile
	.def	IconLoadFromFile;	.scl	2;	.type	32;	.endef
IconLoadFromFile:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
.L6:
	lea	rcx, .LC30[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC31[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 40[rbp]
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r9, rcx
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4ICON12LOADFROMFILEERwu7INTEGERS4_
.L7:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC32:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\DarkMode\\IatHook.bi\0"
.LC33:
	.ascii "RVA2VA\0"
	.text
	.globl	RVA2VA
	.def	RVA2VA;	.scl	2;	.type	32;	.endef
RVA2VA:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	DWORD PTR 24[rbp], edx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC32[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC33[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L9:
	mov	eax, DWORD PTR 24[rbp]
	movsx	rdx, eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, rdx
	mov	QWORD PTR -40[rbp], rax
	nop
.L10:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC34:
	.ascii "DATADIRECTORYFROMMODULEBASE\0"
	.text
	.globl	DATADIRECTORYFROMMODULEBASE
	.def	DATADIRECTORYFROMMODULEBASE;	.scl	2;	.type	32;	.endef
DATADIRECTORYFROMMODULEBASE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 144
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -104[rbp], 0
	lea	rcx, .LC32[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC34[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L13:
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	r8, .LC32[rip]
	mov	edx, 17
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L22
	jmp	[QWORD PTR -56[rbp]]
.L22:
	nop
.L15:
	mov	rax, QWORD PTR -48[rbp]
	add	rax, 60
	mov	eax, DWORD PTR [rax]
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	RVA2VA
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	r9, .LC32[rip]
	mov	r8d, 18
	mov	edx, 15
	mov	rcx, rax
	call	fb_ArraySngBoundChk
	mov	QWORD PTR -88[rbp], rax
	cmp	QWORD PTR -88[rbp], 0
	je	.L23
	jmp	[QWORD PTR -88[rbp]]
.L23:
	nop
.L17:
	mov	rax, QWORD PTR -80[rbp]
	sal	rax, 3
	lea	rdx, 136[rax]
	mov	rax, QWORD PTR -72[rbp]
	add	rax, rdx
	mov	eax, DWORD PTR [rax]
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	RVA2VA
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	nop
.L18:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -104[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC35:
	.ascii "FINDADDRESSBYNAME\0"
	.text
	.globl	FINDADDRESSBYNAME
	.def	FINDADDRESSBYNAME;	.scl	2;	.type	32;	.endef
FINDADDRESSBYNAME:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
	mov	QWORD PTR -64[rbp], 0
	lea	rcx, .LC32[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC35[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L25:
.L26:
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jns	.L39
	add	QWORD PTR 24[rbp], 8
	add	QWORD PTR 32[rbp], 8
	jmp	.L29
.L28:
.L39:
	nop
.L30:
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	RVA2VA
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR 40[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR -48[rbp]
	lea	rcx, 2[rdx]
	mov	rdx, rax
	call	strcmp
	mov	DWORD PTR -52[rbp], eax
	cmp	DWORD PTR -52[rbp], 0
	je	.L40
	add	QWORD PTR 24[rbp], 8
	add	QWORD PTR 32[rbp], 8
	jmp	.L29
.L32:
.L40:
	nop
.L33:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -64[rbp], rax
	jmp	.L34
.L29:
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L41
	jmp	.L25
.L41:
	nop
.L35:
	mov	QWORD PTR -64[rbp], 0
	nop
.L34:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -64[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC36:
	.ascii "FINDADDRESSBYORDINAL\0"
	.text
	.globl	FINDADDRESSBYORDINAL
	.def	FINDADDRESSBYORDINAL;	.scl	2;	.type	32;	.endef
FINDADDRESSBYORDINAL:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	eax, r9d
	mov	WORD PTR 40[rbp], ax
	mov	QWORD PTR -48[rbp], 0
	lea	rcx, .LC32[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC36[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L43:
.L44:
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jns	.L57
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	movzx	edx, ax
	movzx	eax, WORD PTR 40[rbp]
	cmp	rdx, rax
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L47
.L57:
	nop
.L46:
	mov	QWORD PTR -8[rbp], 0
.L47:
	cmp	QWORD PTR -8[rbp], 0
	je	.L58
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -48[rbp], rax
	jmp	.L50
.L49:
.L58:
	nop
.L51:
	add	QWORD PTR 24[rbp], 8
	add	QWORD PTR 32[rbp], 8
.L52:
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L59
	jmp	.L43
.L59:
	nop
.L53:
	mov	QWORD PTR -48[rbp], 0
	nop
.L50:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -48[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC37:
	.ascii "FINDIATTHUNKINMODULE\0"
	.text
	.globl	FINDIATTHUNKINMODULE
	.def	FINDIATTHUNKINMODULE;	.scl	2;	.type	32;	.endef
FINDIATTHUNKINMODULE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 208
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR -176[rbp], 0
	lea	rcx, .LC32[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC37[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L61:
	mov	edx, 1
	mov	rcx, QWORD PTR 16[rbp]
	call	DATADIRECTORYFROMMODULEBASE
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -8[rbp], rax
.L62:
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	r8, .LC32[rip]
	mov	edx, 55
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -64[rbp], rax
	cmp	QWORD PTR -64[rbp], 0
	je	.L83
	jmp	[QWORD PTR -64[rbp]]
.L83:
	nop
.L64:
	mov	rax, QWORD PTR -56[rbp]
	add	rax, 12
	mov	eax, DWORD PTR [rax]
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	RVA2VA
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, rax
	call	_stricmp
	mov	DWORD PTR -76[rbp], eax
	cmp	DWORD PTR -76[rbp], 0
	je	.L84
	add	QWORD PTR -8[rbp], 20
	nop
.L67:
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	r8, .LC32[rip]
	mov	edx, 63
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -96[rbp], rax
	cmp	QWORD PTR -96[rbp], 0
	jne	.L74
	jmp	.L80
.L66:
.L84:
	nop
.L68:
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	lea	r8, .LC32[rip]
	mov	edx, 60
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -112[rbp], rax
	cmp	QWORD PTR -112[rbp], 0
	je	.L85
	jmp	[QWORD PTR -112[rbp]]
.L85:
	nop
.L70:
	mov	rax, QWORD PTR -104[rbp]
	mov	eax, DWORD PTR [rax]
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	RVA2VA
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	lea	r8, .LC32[rip]
	mov	edx, 61
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -144[rbp], rax
	cmp	QWORD PTR -144[rbp], 0
	je	.L86
	jmp	[QWORD PTR -144[rbp]]
.L86:
	nop
.L72:
	mov	rax, QWORD PTR -136[rbp]
	add	rax, 16
	mov	eax, DWORD PTR [rax]
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	RVA2VA
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	mov	QWORD PTR -160[rbp], rax
	mov	rcx, QWORD PTR 32[rbp]
	mov	rdx, QWORD PTR -160[rbp]
	mov	rax, QWORD PTR -128[rbp]
	mov	r9, rcx
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	FINDADDRESSBYNAME
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -176[rbp], rax
	jmp	.L73
.L74:
	jmp	[QWORD PTR -96[rbp]]
.L80:
.L75:
	mov	rax, QWORD PTR -88[rbp]
	add	rax, 12
	mov	eax, DWORD PTR [rax]
	test	eax, eax
	je	.L87
	jmp	.L62
.L87:
	nop
.L76:
	mov	QWORD PTR -176[rbp], 0
	nop
.L73:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -176[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC38:
	.ascii "FINDDELAYLOADTHUNKINMODULE\0"
	.text
	.globl	_Z26FINDDELAYLOADTHUNKINMODULEPvR8FBSTRINGS1_
	.def	_Z26FINDDELAYLOADTHUNKINMODULEPvR8FBSTRINGS1_;	.scl	2;	.type	32;	.endef
_Z26FINDDELAYLOADTHUNKINMODULEPvR8FBSTRINGS1_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 208
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR -176[rbp], 0
	lea	rcx, .LC32[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC38[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L89:
	mov	edx, 13
	mov	rcx, QWORD PTR 16[rbp]
	call	DATADIRECTORYFROMMODULEBASE
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -8[rbp], rax
.L90:
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	r8, .LC32[rip]
	mov	edx, 70
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -64[rbp], rax
	cmp	QWORD PTR -64[rbp], 0
	je	.L111
	jmp	[QWORD PTR -64[rbp]]
.L111:
	nop
.L92:
	mov	rax, QWORD PTR -56[rbp]
	add	rax, 4
	mov	eax, DWORD PTR [rax]
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	RVA2VA
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, rax
	call	_stricmp
	mov	DWORD PTR -76[rbp], eax
	cmp	DWORD PTR -76[rbp], 0
	je	.L112
	add	QWORD PTR -8[rbp], 32
	nop
.L95:
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	r8, .LC32[rip]
	mov	edx, 78
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -96[rbp], rax
	cmp	QWORD PTR -96[rbp], 0
	jne	.L102
	jmp	.L108
.L94:
.L112:
	nop
.L96:
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	lea	r8, .LC32[rip]
	mov	edx, 75
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -112[rbp], rax
	cmp	QWORD PTR -112[rbp], 0
	je	.L113
	jmp	[QWORD PTR -112[rbp]]
.L113:
	nop
.L98:
	mov	rax, QWORD PTR -104[rbp]
	add	rax, 16
	mov	eax, DWORD PTR [rax]
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	RVA2VA
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	lea	r8, .LC32[rip]
	mov	edx, 76
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -144[rbp], rax
	cmp	QWORD PTR -144[rbp], 0
	je	.L114
	jmp	[QWORD PTR -144[rbp]]
.L114:
	nop
.L100:
	mov	rax, QWORD PTR -136[rbp]
	add	rax, 12
	mov	eax, DWORD PTR [rax]
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	RVA2VA
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	mov	QWORD PTR -160[rbp], rax
	mov	rcx, QWORD PTR 32[rbp]
	mov	rdx, QWORD PTR -160[rbp]
	mov	rax, QWORD PTR -128[rbp]
	mov	r9, rcx
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	FINDADDRESSBYNAME
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -176[rbp], rax
	jmp	.L101
.L102:
	jmp	[QWORD PTR -96[rbp]]
.L108:
.L103:
	mov	rax, QWORD PTR -88[rbp]
	add	rax, 4
	mov	eax, DWORD PTR [rax]
	test	eax, eax
	je	.L115
	jmp	.L90
.L115:
	nop
.L104:
	mov	QWORD PTR -176[rbp], 0
	nop
.L101:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -176[rbp]
	leave
	ret
	.globl	_Z26FINDDELAYLOADTHUNKINMODULEPvR8FBSTRINGt
	.def	_Z26FINDDELAYLOADTHUNKINMODULEPvR8FBSTRINGt;	.scl	2;	.type	32;	.endef
_Z26FINDDELAYLOADTHUNKINMODULEPvR8FBSTRINGt:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 208
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	eax, r8d
	mov	WORD PTR 32[rbp], ax
	mov	QWORD PTR -176[rbp], 0
	lea	rcx, .LC32[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC38[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L117:
	mov	edx, 13
	mov	rcx, QWORD PTR 16[rbp]
	call	DATADIRECTORYFROMMODULEBASE
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -8[rbp], rax
.L118:
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	r8, .LC32[rip]
	mov	edx, 85
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -64[rbp], rax
	cmp	QWORD PTR -64[rbp], 0
	je	.L139
	jmp	[QWORD PTR -64[rbp]]
.L139:
	nop
.L120:
	mov	rax, QWORD PTR -56[rbp]
	add	rax, 4
	mov	eax, DWORD PTR [rax]
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	RVA2VA
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, rax
	call	_stricmp
	mov	DWORD PTR -76[rbp], eax
	cmp	DWORD PTR -76[rbp], 0
	je	.L140
	add	QWORD PTR -8[rbp], 32
	nop
.L123:
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	r8, .LC32[rip]
	mov	edx, 93
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -96[rbp], rax
	cmp	QWORD PTR -96[rbp], 0
	jne	.L130
	jmp	.L136
.L122:
.L140:
	nop
.L124:
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	lea	r8, .LC32[rip]
	mov	edx, 90
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -112[rbp], rax
	cmp	QWORD PTR -112[rbp], 0
	je	.L141
	jmp	[QWORD PTR -112[rbp]]
.L141:
	nop
.L126:
	mov	rax, QWORD PTR -104[rbp]
	add	rax, 16
	mov	eax, DWORD PTR [rax]
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	RVA2VA
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	lea	r8, .LC32[rip]
	mov	edx, 91
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -144[rbp], rax
	cmp	QWORD PTR -144[rbp], 0
	je	.L142
	jmp	[QWORD PTR -144[rbp]]
.L142:
	nop
.L128:
	mov	rax, QWORD PTR -136[rbp]
	add	rax, 12
	mov	eax, DWORD PTR [rax]
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	RVA2VA
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	mov	QWORD PTR -160[rbp], rax
	movzx	ecx, WORD PTR 32[rbp]
	mov	rdx, QWORD PTR -160[rbp]
	mov	rax, QWORD PTR -128[rbp]
	mov	r9d, ecx
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	FINDADDRESSBYORDINAL
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -176[rbp], rax
	jmp	.L129
.L130:
	jmp	[QWORD PTR -96[rbp]]
.L136:
.L131:
	mov	rax, QWORD PTR -88[rbp]
	add	rax, 4
	mov	eax, DWORD PTR [rax]
	test	eax, eax
	je	.L143
	jmp	.L118
.L143:
	nop
.L132:
	mov	QWORD PTR -176[rbp], 0
	nop
.L129:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -176[rbp]
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC39:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\DarkMode\\DarkMode.bas\0"
.LC40:
	.ascii "SHOULDAPPSUSEDARKMODE\0"
	.text
	.globl	SHOULDAPPSUSEDARKMODE
	.def	SHOULDAPPSUSEDARKMODE;	.scl	2;	.type	32;	.endef
SHOULDAPPSUSEDARKMODE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	DWORD PTR -56[rbp], 0
	lea	rcx, .LC39[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC40[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L145:
	mov	rax, QWORD PTR _SHOULDAPPSUSEDARKMODE$[rip]
	test	rax, rax
	jne	.L155
	mov	DWORD PTR -56[rbp], 0
	jmp	.L148
.L147:
.L155:
	nop
.L149:
	mov	rax, QWORD PTR _SHOULDAPPSUSEDARKMODE$[rip]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	lea	r8, .LC39[rip]
	mov	edx, 116
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -48[rbp], rax
	cmp	QWORD PTR -48[rbp], 0
	je	.L156
	jmp	[QWORD PTR -48[rbp]]
.L156:
	nop
.L151:
	mov	rax, QWORD PTR -40[rbp]
	call	rax
	mov	DWORD PTR -52[rbp], eax
	mov	eax, DWORD PTR -52[rbp]
	mov	DWORD PTR -56[rbp], eax
	nop
.L148:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	eax, DWORD PTR -56[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC41:
	.ascii "ALLOWDARKMODEFORWINDOW\0"
	.text
	.globl	ALLOWDARKMODEFORWINDOW
	.def	ALLOWDARKMODEFORWINDOW;	.scl	2;	.type	32;	.endef
ALLOWDARKMODEFORWINDOW:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
	mov	DWORD PTR 24[rbp], edx
	mov	DWORD PTR -64[rbp], 0
	lea	rcx, .LC39[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC41[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L158:
	lea	rax, G_DARKMODESUPPORTED$[rip]
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	neg	eax
	test	eax, eax
	je	.L172
	mov	rax, QWORD PTR _ALLOWDARKMODEFORWINDOW$[rip]
	test	rax, rax
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L161
.L172:
	nop
.L160:
	mov	QWORD PTR -8[rbp], 0
.L161:
	cmp	QWORD PTR -8[rbp], 0
	je	.L173
	mov	rax, QWORD PTR _ALLOWDARKMODEFORWINDOW$[rip]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	r8, .LC39[rip]
	mov	edx, 121
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L174
	jmp	[QWORD PTR -56[rbp]]
.L174:
	nop
.L165:
	mov	eax, DWORD PTR 24[rbp]
	mov	r8, QWORD PTR -48[rbp]
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	r8
	mov	DWORD PTR -60[rbp], eax
	mov	eax, DWORD PTR -60[rbp]
	mov	DWORD PTR -64[rbp], eax
	jmp	.L166
.L163:
.L173:
	nop
.L167:
	mov	DWORD PTR -64[rbp], 0
	nop
.L166:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	eax, DWORD PTR -64[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC42:
	.ascii "ISHIGHCONTRAST\0"
	.text
	.globl	ISHIGHCONTRAST
	.def	ISHIGHCONTRAST;	.scl	2;	.type	32;	.endef
ISHIGHCONTRAST:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	DWORD PTR -40[rbp], 0
	lea	rcx, .LC39[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC42[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L176:
	lea	rax, -64[rbp]
	mov	DWORD PTR [rax], 16
	lea	rax, -64[rbp]
	add	rax, 4
	mov	QWORD PTR [rax], 0
	mov	DWORD PTR 8[rax], 0
	lea	rax, -64[rbp]
	mov	r9d, 0
	mov	r8, rax
	mov	edx, 16
	mov	ecx, 66
	call	SystemParametersInfoW
	mov	DWORD PTR -36[rbp], eax
	cmp	DWORD PTR -36[rbp], 0
	je	.L183
	lea	rax, -64[rbp]
	add	rax, 4
	mov	eax, DWORD PTR [rax]
	and	eax, 1
	mov	DWORD PTR -40[rbp], eax
	jmp	.L179
.L178:
.L183:
	nop
.L180:
	mov	DWORD PTR -40[rbp], 0
	nop
.L179:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	eax, DWORD PTR -40[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC43:
	.ascii "SETTITLEBARTHEMECOLOR\0"
	.align 8
.LC44:
	.ascii "U\0s\0e\0I\0m\0m\0e\0r\0s\0i\0v\0e\0D\0a\0r\0k\0M\0o\0d\0e\0C\0o\0l\0o\0r\0s\0\0\0"
	.text
	.globl	SETTITLEBARTHEMECOLOR
	.def	SETTITLEBARTHEMECOLOR;	.scl	2;	.type	32;	.endef
SETTITLEBARTHEMECOLOR:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	DWORD PTR 24[rbp], edx
.L185:
	lea	rcx, .LC39[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC43[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	eax, DWORD PTR G_BUILDNUMBER$[rip]
	cmp	eax, 18361
	ja	.L196
	mov	eax, DWORD PTR 24[rbp]
	cdqe
	mov	r8, rax
	lea	rdx, .LC44[rip]
	mov	rcx, QWORD PTR 16[rbp]
	call	SetPropW
	jmp	.L193
.L196:
	nop
.L187:
	mov	rax, QWORD PTR _SETWINDOWCOMPOSITIONATTRIBUTE$[rip]
	test	rax, rax
	je	.L197
	lea	rax, -80[rbp]
	mov	QWORD PTR [rax], 26
	lea	rax, -80[rbp]
	add	rax, 8
	lea	rdx, 24[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -80[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], 4
	mov	rax, QWORD PTR _SETWINDOWCOMPOSITIONATTRIBUTE$[rip]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	lea	r8, .LC39[rip]
	mov	edx, 139
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -48[rbp], rax
	cmp	QWORD PTR -48[rbp], 0
	je	.L198
	jmp	[QWORD PTR -48[rbp]]
.L198:
	nop
.L191:
	lea	rax, -80[rbp]
	mov	r8, QWORD PTR -40[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	r8
	jmp	.L193
.L188:
.L192:
.L197:
	nop
.L193:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC45:
	.ascii "REFRESHTITLEBARTHEMECOLOR\0"
	.text
	.globl	REFRESHTITLEBARTHEMECOLOR
	.def	REFRESHTITLEBARTHEMECOLOR;	.scl	2;	.type	32;	.endef
REFRESHTITLEBARTHEMECOLOR:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 144
	mov	QWORD PTR 16[rbp], rcx
.L200:
	lea	rcx, .LC39[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	lea	rcx, .LC45[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	DWORD PTR -12[rbp], 0
	mov	rax, QWORD PTR _ISDARKMODEALLOWEDFORWINDOW$[rip]
	test	rax, rax
	je	.L226
	mov	rax, QWORD PTR _SHOULDAPPSUSEDARKMODE$[rip]
	test	rax, rax
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L203
.L226:
	nop
.L202:
	mov	QWORD PTR -8[rbp], 0
.L203:
	cmp	QWORD PTR -8[rbp], 0
	je	.L227
	mov	rax, QWORD PTR _ISDARKMODEALLOWEDFORWINDOW$[rip]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	r8, .LC39[rip]
	mov	edx, 146
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L228
	jmp	[QWORD PTR -80[rbp]]
.L228:
	nop
.L207:
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	mov	DWORD PTR -84[rbp], eax
	cmp	DWORD PTR -84[rbp], 0
	je	.L229
	mov	rax, QWORD PTR _SHOULDAPPSUSEDARKMODE$[rip]
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	lea	r8, .LC39[rip]
	mov	edx, 146
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -104[rbp], rax
	cmp	QWORD PTR -104[rbp], 0
	je	.L230
	jmp	[QWORD PTR -104[rbp]]
.L230:
	nop
.L211:
	mov	rax, QWORD PTR -96[rbp]
	call	rax
	mov	DWORD PTR -108[rbp], eax
	cmp	DWORD PTR -108[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -24[rbp], rax
	jmp	.L212
.L229:
	nop
.L209:
	mov	QWORD PTR -24[rbp], 0
.L212:
	cmp	QWORD PTR -24[rbp], 0
	je	.L231
	call	ISHIGHCONTRAST
	mov	DWORD PTR -112[rbp], eax
	cmp	DWORD PTR -112[rbp], -1
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -32[rbp], rax
	jmp	.L215
.L231:
	nop
.L214:
	mov	QWORD PTR -32[rbp], 0
.L215:
	cmp	QWORD PTR -32[rbp], 0
	je	.L232
	mov	DWORD PTR -12[rbp], -1
	jmp	.L219
.L205:
.L217:
.L218:
.L227:
	nop
	jmp	.L219
.L232:
	nop
.L219:
	mov	eax, DWORD PTR -12[rbp]
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	SETTITLEBARTHEMECOLOR
.L220:
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC46:
	.ascii "ISCOLORSCHEMECHANGEMESSAGE\0"
	.align 8
.LC47:
	.ascii "I\0m\0m\0e\0r\0s\0i\0v\0e\0C\0o\0l\0o\0r\0S\0e\0t\0\0\0"
	.text
	.globl	_Z26ISCOLORSCHEMECHANGEMESSAGEx
	.def	_Z26ISCOLORSCHEMECHANGEMESSAGEx;	.scl	2;	.type	32;	.endef
_Z26ISCOLORSCHEMECHANGEMESSAGEx:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 144
	mov	QWORD PTR 16[rbp], rcx
	mov	DWORD PTR -100[rbp], 0
	lea	rcx, .LC39[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	lea	rcx, .LC46[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
.L234:
	mov	DWORD PTR -20[rbp], 0
	cmp	QWORD PTR 16[rbp], 0
	je	.L257
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, .LC47[rip]
	mov	rcx, rax
	call	lstrcmpiW
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L237
.L257:
	nop
.L236:
	mov	QWORD PTR -8[rbp], 0
.L237:
	mov	rax, QWORD PTR -8[rbp]
	test	rax, rax
	je	.L258
	mov	rax, QWORD PTR _REFRESHIMMERSIVECOLORPOLICYSTATE$[rip]
	test	rax, rax
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -16[rbp], rax
	jmp	.L240
.L258:
	nop
.L239:
	mov	QWORD PTR -16[rbp], 0
.L240:
	cmp	QWORD PTR -16[rbp], 0
	je	.L259
	mov	rax, QWORD PTR _REFRESHIMMERSIVECOLORPOLICYSTATE$[rip]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	r8, .LC39[rip]
	mov	edx, 157
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L260
	jmp	[QWORD PTR -80[rbp]]
.L260:
	nop
.L244:
	mov	rax, QWORD PTR -72[rbp]
	call	rax
	mov	DWORD PTR -20[rbp], -1
	jmp	.L245
.L242:
.L259:
	nop
.L245:
	mov	rax, QWORD PTR _GETISIMMERSIVECOLORUSINGHIGHCONTRAST$[rip]
	test	rax, rax
	je	.L261
	mov	rax, QWORD PTR _GETISIMMERSIVECOLORUSINGHIGHCONTRAST$[rip]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	r8, .LC39[rip]
	mov	edx, 161
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -96[rbp], rax
	cmp	QWORD PTR -96[rbp], 0
	je	.L262
	jmp	[QWORD PTR -96[rbp]]
.L262:
	nop
.L249:
	mov	rax, QWORD PTR -88[rbp]
	mov	ecx, 1
	call	rax
	jmp	.L250
.L247:
.L261:
	nop
.L250:
	mov	eax, DWORD PTR -20[rbp]
	mov	DWORD PTR -100[rbp], eax
	nop
.L251:
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	eax, DWORD PTR -100[rbp]
	leave
	ret
	.globl	_Z26ISCOLORSCHEMECHANGEMESSAGEjx
	.def	_Z26ISCOLORSCHEMECHANGEMESSAGEjx;	.scl	2;	.type	32;	.endef
_Z26ISCOLORSCHEMECHANGEMESSAGEjx:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	DWORD PTR 16[rbp], ecx
	mov	QWORD PTR 24[rbp], rdx
	mov	DWORD PTR -40[rbp], 0
	lea	rcx, .LC39[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC46[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L264:
	cmp	DWORD PTR 16[rbp], 26
	jne	.L271
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_Z26ISCOLORSCHEMECHANGEMESSAGEx
	mov	DWORD PTR -36[rbp], eax
	mov	eax, DWORD PTR -36[rbp]
	mov	DWORD PTR -40[rbp], eax
	jmp	.L267
.L266:
.L271:
	nop
.L268:
	mov	DWORD PTR -40[rbp], 0
	nop
.L267:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	eax, DWORD PTR -40[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC48:
	.ascii "ALLOWDARKMODEFORAPP\0"
	.text
	.globl	ALLOWDARKMODEFORAPP
	.def	ALLOWDARKMODEFORAPP;	.scl	2;	.type	32;	.endef
ALLOWDARKMODEFORAPP:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	DWORD PTR 16[rbp], ecx
.L273:
	lea	rcx, .LC39[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC48[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR _ALLOWDARKMODEFORAPP$[rip]
	test	rax, rax
	je	.L291
	mov	rax, QWORD PTR _ALLOWDARKMODEFORAPP$[rip]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	r8, .LC39[rip]
	mov	edx, 175
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L292
	jmp	[QWORD PTR -56[rbp]]
.L292:
	nop
.L277:
	mov	rax, QWORD PTR -48[rbp]
	mov	ecx, DWORD PTR 16[rbp]
	call	rax
	jmp	.L286
.L291:
	nop
.L275:
	mov	rax, QWORD PTR _SETPREFERREDAPPMODE$[rip]
	test	rax, rax
	je	.L293
	cmp	DWORD PTR 16[rbp], 0
	je	.L294
	mov	QWORD PTR -8[rbp], 2
	jmp	.L282
.L294:
	nop
.L281:
	mov	QWORD PTR -8[rbp], 0
.L282:
	mov	rax, QWORD PTR _SETPREFERREDAPPMODE$[rip]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	lea	r8, .LC39[rip]
	mov	edx, 177
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	je	.L295
	jmp	[QWORD PTR -72[rbp]]
.L295:
	nop
.L284:
	mov	rax, QWORD PTR -8[rbp]
	mov	rdx, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	rdx
	jmp	.L286
.L278:
.L285:
.L293:
	nop
.L286:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC49:
	.ascii "FLUSHMENUTHEMES\0"
	.text
	.globl	FLUSHMENUTHEMES
	.def	FLUSHMENUTHEMES;	.scl	2;	.type	32;	.endef
FLUSHMENUTHEMES:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
.L297:
	lea	rcx, .LC39[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC49[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR _FLUSHMENUTHEMES$[rip]
	test	rax, rax
	je	.L305
	mov	rax, QWORD PTR _FLUSHMENUTHEMES$[rip]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	lea	r8, .LC39[rip]
	mov	edx, 183
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -48[rbp], rax
	cmp	QWORD PTR -48[rbp], 0
	je	.L306
	jmp	[QWORD PTR -48[rbp]]
.L306:
	nop
.L301:
	mov	rax, QWORD PTR -40[rbp]
	call	rax
	jmp	.L303
.L299:
.L302:
.L305:
	nop
.L303:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC50:
	.ascii "ENABLEDARKSCROLLBARFORWINDOWANDCHILDREN\0"
	.text
	.globl	ENABLEDARKSCROLLBARFORWINDOWANDCHILDREN
	.def	ENABLEDARKSCROLLBARFORWINDOWANDCHILDREN;	.scl	2;	.type	32;	.endef
ENABLEDARKSCROLLBARFORWINDOWANDCHILDREN:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L308:
	lea	rcx, .LC39[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC50[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rdx, QWORD PTR 16[rbp]
	lea	rcx, G_DARKSCROLLBARWINDOWS$[rip]
	call	_ZN4LIST3ADDEPv
.L309:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC51:
	.ascii "ISWINDOWORPARENTUSINGDARKSCROLLBAR\0"
	.text
	.globl	ISWINDOWORPARENTUSINGDARKSCROLLBAR
	.def	ISWINDOWORPARENTUSINGDARKSCROLLBAR;	.scl	2;	.type	32;	.endef
ISWINDOWORPARENTUSINGDARKSCROLLBAR:
	push	rbp
	mov	rbp, rsp
	add	rsp, -128
	mov	QWORD PTR 16[rbp], rcx
	mov	DWORD PTR -84[rbp], 0
	lea	rcx, .LC39[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC51[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L311:
	mov	edx, 2
	mov	rcx, QWORD PTR 16[rbp]
	call	GetAncestor
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	QWORD PTR -72[rbp], -1
	lea	rax, -72[rbp]
	mov	r8, rax
	mov	rdx, QWORD PTR 16[rbp]
	lea	rcx, G_DARKSCROLLBARWINDOWS$[rip]
	call	_ZN4LIST8CONTAINSEPvRu7INTEGER
	mov	BYTE PTR -57[rbp], al
	cmp	BYTE PTR -57[rbp], 0
	je	.L326
	mov	DWORD PTR -84[rbp], -1
	jmp	.L314
.L313:
.L326:
	nop
.L315:
	mov	rax, QWORD PTR 16[rbp]
	cmp	rax, QWORD PTR -56[rbp]
	je	.L327
	mov	QWORD PTR -80[rbp], -1
	lea	rdx, -80[rbp]
	mov	rax, QWORD PTR -56[rbp]
	mov	r8, rdx
	mov	rdx, rax
	lea	rcx, G_DARKSCROLLBARWINDOWS$[rip]
	call	_ZN4LIST8CONTAINSEPvRu7INTEGER
	mov	BYTE PTR -58[rbp], al
	movsx	eax, BYTE PTR -58[rbp]
	neg	eax
	test	eax, eax
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L318
.L327:
	nop
.L317:
	mov	QWORD PTR -8[rbp], 0
.L318:
	cmp	QWORD PTR -8[rbp], 0
	je	.L328
	mov	DWORD PTR -84[rbp], -1
	jmp	.L314
.L320:
.L328:
	nop
.L321:
	mov	DWORD PTR -84[rbp], 0
	nop
.L314:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	eax, DWORD PTR -84[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC52:
	.ascii "MYOPENTHEMEDATA\0"
	.align 2
.LC53:
	.ascii "S\0c\0r\0o\0l\0l\0B\0a\0r\0\0\0"
	.align 8
.LC54:
	.ascii "E\0x\0p\0l\0o\0r\0e\0r\0:\0:\0S\0c\0r\0o\0l\0l\0B\0a\0r\0\0\0"
	.text
	.globl	MYOPENTHEMEDATA
	.def	MYOPENTHEMEDATA;	.scl	2;	.type	32;	.endef
MYOPENTHEMEDATA:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -72[rbp], 0
	lea	rcx, .LC39[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC52[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L330:
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, .LC53[rip]
	mov	rcx, rax
	call	wcscmp
	mov	DWORD PTR -36[rbp], eax
	cmp	DWORD PTR -36[rbp], 0
	jne	.L342
	mov	rcx, QWORD PTR 16[rbp]
	call	ISWINDOWORPARENTUSINGDARKSCROLLBAR
	mov	DWORD PTR -40[rbp], eax
	cmp	DWORD PTR -40[rbp], 0
	je	.L343
	mov	QWORD PTR 16[rbp], 0
	lea	rax, .LC54[rip]
	mov	QWORD PTR 24[rbp], rax
	jmp	.L336
.L332:
.L334:
.L335:
.L342:
	nop
	jmp	.L336
.L343:
	nop
.L336:
	mov	rax, QWORD PTR _OPENNCTHEMEDATA$[rip]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	r8, .LC39[rip]
	mov	edx, 219
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L344
	jmp	[QWORD PTR -56[rbp]]
.L344:
	nop
.L338:
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, QWORD PTR -48[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	r8
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -72[rbp], rax
	nop
.L339:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -72[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC55:
	.ascii "FIXDARKSCROLLBAR\0"
	.align 2
.LC56:
	.ascii "c\0o\0m\0c\0t\0l\0"
	.ascii "3\0"
	.ascii "2\0.\0d\0l\0l\0\0\0"
.LC57:
	.ascii "uxtheme.dll\0"
	.text
	.globl	FIXDARKSCROLLBAR
	.def	FIXDARKSCROLLBAR;	.scl	2;	.type	32;	.endef
FIXDARKSCROLLBAR:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 176
.L346:
	lea	rcx, .LC39[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC55[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	r8d, 2048
	mov	edx, 0
	lea	rcx, .LC56[rip]
	call	LoadLibraryExW
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L361
	lea	rax, -112[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	lea	rax, -112[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9d, 12
	lea	r8, .LC57[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrAssign
	lea	rdx, -112[rbp]
	mov	rax, QWORD PTR -56[rbp]
	mov	r8d, 49
	mov	rcx, rax
	call	_Z26FINDDELAYLOADTHUNKINMODULEPvR8FBSTRINGt
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -72[rbp], rax
	lea	rax, -112[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	cmp	QWORD PTR -72[rbp], 0
	je	.L362
	mov	DWORD PTR -116[rbp], 0
	lea	rdx, -116[rbp]
	mov	rax, QWORD PTR -72[rbp]
	mov	r9, rdx
	mov	r8d, 4
	mov	edx, 8
	mov	rcx, rax
	call	VirtualProtect
	mov	DWORD PTR -76[rbp], eax
	mov	eax, DWORD PTR -76[rbp]
	cdqe
	test	rax, rax
	je	.L363
	mov	rax, QWORD PTR _OPENNCTHEMEDATA$[rip]
	test	rax, rax
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L353
.L363:
	nop
.L352:
	mov	QWORD PTR -8[rbp], 0
.L353:
	cmp	QWORD PTR -8[rbp], 0
	je	.L364
	lea	rdx, MYOPENTHEMEDATA[rip]
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR [rax], rdx
	mov	edx, DWORD PTR -116[rbp]
	lea	rcx, -116[rbp]
	mov	rax, QWORD PTR -72[rbp]
	mov	r9, rcx
	mov	r8d, edx
	mov	edx, 8
	mov	rcx, rax
	call	VirtualProtect
	jmp	.L359
.L355:
.L356:
.L350:
.L357:
.L348:
.L358:
.L361:
	nop
	jmp	.L359
.L362:
	nop
	jmp	.L359
.L364:
	nop
.L359:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC58:
	.ascii "CHECKBUILDNUMBER\0"
	.text
	.globl	CHECKBUILDNUMBER
	.def	CHECKBUILDNUMBER;	.scl	2;	.type	32;	.endef
CHECKBUILDNUMBER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 144
	mov	DWORD PTR 16[rbp], ecx
	mov	BYTE PTR -105[rbp], 0
	lea	rcx, .LC39[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	QWORD PTR -88[rbp], rax
	lea	rcx, .LC58[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
.L366:
	cmp	DWORD PTR 16[rbp], 17763
	je	.L405
	cmp	DWORD PTR 16[rbp], 18362
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L369
.L405:
	nop
.L368:
	mov	QWORD PTR -8[rbp], -1
.L369:
	cmp	QWORD PTR -8[rbp], 0
	jne	.L406
	cmp	DWORD PTR 16[rbp], 18363
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -16[rbp], rax
	jmp	.L372
.L406:
	nop
.L371:
	mov	QWORD PTR -16[rbp], -1
.L372:
	cmp	QWORD PTR -16[rbp], 0
	jne	.L407
	cmp	DWORD PTR 16[rbp], 19041
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -24[rbp], rax
	jmp	.L375
.L407:
	nop
.L374:
	mov	QWORD PTR -24[rbp], -1
.L375:
	cmp	QWORD PTR -24[rbp], 0
	jne	.L408
	cmp	DWORD PTR 16[rbp], 19042
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -32[rbp], rax
	jmp	.L378
.L408:
	nop
.L377:
	mov	QWORD PTR -32[rbp], -1
.L378:
	cmp	QWORD PTR -32[rbp], 0
	jne	.L409
	cmp	DWORD PTR 16[rbp], 19043
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -40[rbp], rax
	jmp	.L381
.L409:
	nop
.L380:
	mov	QWORD PTR -40[rbp], -1
.L381:
	cmp	QWORD PTR -40[rbp], 0
	jne	.L410
	cmp	DWORD PTR 16[rbp], 19044
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -48[rbp], rax
	jmp	.L384
.L410:
	nop
.L383:
	mov	QWORD PTR -48[rbp], -1
.L384:
	cmp	QWORD PTR -48[rbp], 0
	jne	.L411
	cmp	DWORD PTR 16[rbp], 19044
	jbe	.L412
	cmp	DWORD PTR 16[rbp], 21999
	setbe	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -56[rbp], rax
	jmp	.L389
.L412:
	nop
.L388:
	mov	QWORD PTR -56[rbp], 0
.L389:
	cmp	QWORD PTR -56[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -64[rbp], rax
	jmp	.L390
.L411:
	nop
.L386:
	mov	QWORD PTR -64[rbp], -1
.L390:
	cmp	QWORD PTR -64[rbp], 0
	jne	.L413
	cmp	DWORD PTR 16[rbp], 21999
	seta	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -72[rbp], rax
	jmp	.L393
.L413:
	nop
.L392:
	mov	QWORD PTR -72[rbp], -1
.L393:
	cmp	QWORD PTR -72[rbp], 0
	setne	al
	mov	BYTE PTR -105[rbp], al
	nop
.L394:
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -88[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -105[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC59:
	.ascii "ISWINDOWS11\0"
	.text
	.globl	ISWINDOWS11
	.def	ISWINDOWS11;	.scl	2;	.type	32;	.endef
ISWINDOWS11:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	DWORD PTR -36[rbp], 0
	lea	rcx, .LC39[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC59[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L415:
	mov	eax, DWORD PTR G_BUILDNUMBER$[rip]
	cmp	eax, 21999
	seta	al
	movzx	eax, al
	neg	eax
	mov	DWORD PTR -36[rbp], eax
	nop
.L416:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	eax, DWORD PTR -36[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC60:
	.ascii "INITDARKMODE\0"
	.align 2
.LC61:
	.ascii "n\0t\0d\0l\0l\0.\0d\0l\0l\0\0\0"
.LC62:
	.ascii "RtlGetNtVersionNumbers\0"
	.align 2
.LC63:
	.ascii "u\0x\0t\0h\0e\0m\0e\0.\0d\0l\0l\0\0\0"
	.align 2
.LC64:
	.ascii "u\0s\0e\0r\0"
	.ascii "3\0"
	.ascii "2\0.\0d\0l\0l\0\0\0"
.LC65:
	.ascii "SetWindowCompositionAttribute\0"
	.text
	.globl	INITDARKMODE
	.def	INITDARKMODE;	.scl	2;	.type	32;	.endef
INITDARKMODE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 304
.L419:
	lea	rcx, .LC39[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	QWORD PTR -88[rbp], rax
	lea	rcx, .LC60[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	QWORD PTR -8[rbp], 0
	lea	rcx, .LC61[rip]
	call	GetModuleHandleW
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	mov	QWORD PTR -120[rbp], rax
	cmp	QWORD PTR -120[rbp], 0
	je	.L484
	mov	rax, QWORD PTR -120[rbp]
	lea	rdx, .LC62[rip]
	mov	rcx, rax
	call	GetProcAddress
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	mov	QWORD PTR -8[rbp], rax
	jmp	.L422
.L421:
.L484:
	nop
.L422:
	cmp	QWORD PTR -8[rbp], 0
	je	.L485
	mov	DWORD PTR -268[rbp], 0
	mov	DWORD PTR -272[rbp], 0
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	lea	r8, .LC39[rip]
	mov	edx, 271
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -144[rbp], rax
	cmp	QWORD PTR -144[rbp], 0
	je	.L486
	jmp	[QWORD PTR -144[rbp]]
.L486:
	nop
.L426:
	lea	rdx, -272[rbp]
	lea	rax, -268[rbp]
	mov	r9, QWORD PTR -136[rbp]
	lea	r8, G_BUILDNUMBER$[rip]
	mov	rcx, rax
	call	r9
	mov	eax, DWORD PTR G_BUILDNUMBER$[rip]
	and	eax, -268435456
	mov	DWORD PTR G_BUILDNUMBER$[rip], eax
	mov	eax, DWORD PTR -268[rbp]
	cmp	eax, 10
	jne	.L487
	mov	eax, DWORD PTR -272[rbp]
	test	eax, eax
	jne	.L429
	mov	eax, 1
	jmp	.L430
.L429:
	mov	eax, 0
.L430:
	mov	BYTE PTR -9[rbp], al
	jmp	.L431
.L487:
	nop
.L428:
	mov	BYTE PTR -9[rbp], 0
.L431:
	cmp	BYTE PTR -9[rbp], 0
	je	.L488
	mov	eax, DWORD PTR G_BUILDNUMBER$[rip]
	mov	ecx, eax
	call	CHECKBUILDNUMBER
	mov	BYTE PTR -145[rbp], al
	cmp	BYTE PTR -145[rbp], 0
	setne	al
	mov	BYTE PTR -10[rbp], al
	jmp	.L434
.L488:
	nop
.L433:
	mov	BYTE PTR -10[rbp], 0
.L434:
	cmp	BYTE PTR -10[rbp], 0
	je	.L489
	mov	r8d, 2048
	mov	edx, 0
	lea	rcx, .LC63[rip]
	call	LoadLibraryExW
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	mov	QWORD PTR -168[rbp], rax
	cmp	QWORD PTR -168[rbp], 0
	je	.L490
	mov	rax, QWORD PTR -168[rbp]
	mov	edx, 49
	mov	rcx, rax
	call	GetProcAddress
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	mov	QWORD PTR _OPENNCTHEMEDATA$[rip], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	edx, 104
	mov	rcx, rax
	call	GetProcAddress
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	mov	QWORD PTR _REFRESHIMMERSIVECOLORPOLICYSTATE$[rip], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	edx, 106
	mov	rcx, rax
	call	GetProcAddress
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -192[rbp]
	mov	QWORD PTR _GETISIMMERSIVECOLORUSINGHIGHCONTRAST$[rip], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	edx, 132
	mov	rcx, rax
	call	GetProcAddress
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	mov	QWORD PTR _SHOULDAPPSUSEDARKMODE$[rip], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	edx, 133
	mov	rcx, rax
	call	GetProcAddress
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR -208[rbp]
	mov	QWORD PTR _ALLOWDARKMODEFORWINDOW$[rip], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	edx, 135
	mov	rcx, rax
	call	GetProcAddress
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR -216[rbp]
	mov	QWORD PTR -224[rbp], rax
	mov	eax, DWORD PTR G_BUILDNUMBER$[rip]
	cmp	eax, 18361
	ja	.L491
	mov	rax, QWORD PTR -224[rbp]
	mov	QWORD PTR _ALLOWDARKMODEFORAPP$[rip], rax
	jmp	.L440
.L491:
	nop
.L439:
	mov	rax, QWORD PTR -224[rbp]
	mov	QWORD PTR _SETPREFERREDAPPMODE$[rip], rax
.L440:
	mov	rax, QWORD PTR -168[rbp]
	mov	edx, 136
	mov	rcx, rax
	call	GetProcAddress
	mov	QWORD PTR -232[rbp], rax
	mov	rax, QWORD PTR -232[rbp]
	mov	QWORD PTR _FLUSHMENUTHEMES$[rip], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	edx, 137
	mov	rcx, rax
	call	GetProcAddress
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -240[rbp]
	mov	QWORD PTR _ISDARKMODEALLOWEDFORWINDOW$[rip], rax
	lea	rcx, .LC64[rip]
	call	GetModuleHandleW
	mov	QWORD PTR -248[rbp], rax
	mov	rax, QWORD PTR -248[rbp]
	mov	QWORD PTR -256[rbp], rax
	cmp	QWORD PTR -256[rbp], 0
	je	.L492
	mov	rax, QWORD PTR -256[rbp]
	lea	rdx, .LC65[rip]
	mov	rcx, rax
	call	GetProcAddress
	mov	QWORD PTR -264[rbp], rax
	mov	rax, QWORD PTR -264[rbp]
	mov	QWORD PTR _SETWINDOWCOMPOSITIONATTRIBUTE$[rip], rax
	jmp	.L443
.L442:
.L492:
	nop
.L443:
	mov	rax, QWORD PTR _OPENNCTHEMEDATA$[rip]
	test	rax, rax
	je	.L493
	mov	rax, QWORD PTR _REFRESHIMMERSIVECOLORPOLICYSTATE$[rip]
	test	rax, rax
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -24[rbp], rax
	jmp	.L446
.L493:
	nop
.L445:
	mov	QWORD PTR -24[rbp], 0
.L446:
	mov	rax, QWORD PTR -24[rbp]
	test	rax, rax
	je	.L494
	mov	rax, QWORD PTR _SHOULDAPPSUSEDARKMODE$[rip]
	test	rax, rax
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -32[rbp], rax
	jmp	.L449
.L494:
	nop
.L448:
	mov	QWORD PTR -32[rbp], 0
.L449:
	mov	rax, QWORD PTR -32[rbp]
	test	rax, rax
	je	.L495
	mov	rax, QWORD PTR _ALLOWDARKMODEFORWINDOW$[rip]
	test	rax, rax
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -40[rbp], rax
	jmp	.L452
.L495:
	nop
.L451:
	mov	QWORD PTR -40[rbp], 0
.L452:
	cmp	QWORD PTR -40[rbp], 0
	je	.L496
	mov	rax, QWORD PTR _ALLOWDARKMODEFORAPP$[rip]
	test	rax, rax
	jne	.L497
	mov	rax, QWORD PTR _SETPREFERREDAPPMODE$[rip]
	test	rax, rax
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -48[rbp], rax
	jmp	.L457
.L497:
	nop
.L456:
	mov	QWORD PTR -48[rbp], -1
.L457:
	cmp	QWORD PTR -48[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -56[rbp], rax
	jmp	.L458
.L496:
	nop
.L454:
	mov	QWORD PTR -56[rbp], 0
.L458:
	mov	rax, QWORD PTR -56[rbp]
	test	rax, rax
	je	.L498
	mov	rax, QWORD PTR _FLUSHMENUTHEMES$[rip]
	test	rax, rax
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -64[rbp], rax
	jmp	.L461
.L498:
	nop
.L460:
	mov	QWORD PTR -64[rbp], 0
.L461:
	mov	rax, QWORD PTR -64[rbp]
	test	rax, rax
	je	.L499
	mov	rax, QWORD PTR _ISDARKMODEALLOWEDFORWINDOW$[rip]
	test	rax, rax
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -72[rbp], rax
	jmp	.L464
.L499:
	nop
.L463:
	mov	QWORD PTR -72[rbp], 0
.L464:
	cmp	QWORD PTR -72[rbp], 0
	je	.L500
	lea	rax, G_DARKMODESUPPORTED$[rip]
	mov	BYTE PTR [rax], 1
	jmp	.L472
.L436:
.L466:
.L467:
.L468:
.L469:
.L470:
.L424:
.L471:
.L485:
	nop
	jmp	.L472
.L489:
	nop
	jmp	.L472
.L490:
	nop
	jmp	.L472
.L500:
	nop
.L472:
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -88[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC66:
	.ascii "SETDARKMODE\0"
	.text
	.globl	SETDARKMODE
	.def	SETDARKMODE;	.scl	2;	.type	32;	.endef
SETDARKMODE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	eax, edx
	mov	edx, ecx
	mov	BYTE PTR 16[rbp], dl
	mov	BYTE PTR 24[rbp], al
.L502:
	lea	rcx, .LC39[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC66[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	lea	rax, G_DARKMODESUPPORTED$[rip]
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L518
	movsx	eax, BYTE PTR 16[rbp]
	neg	eax
	mov	ecx, eax
	call	ALLOWDARKMODEFORAPP
	call	FLUSHMENUTHEMES
	cmp	BYTE PTR 24[rbp], 0
	je	.L519
	call	FIXDARKSCROLLBAR
	jmp	.L507
.L506:
.L519:
	nop
.L507:
	cmp	BYTE PTR 16[rbp], 0
	je	.L520
	call	SHOULDAPPSUSEDARKMODE
	mov	DWORD PTR -44[rbp], eax
	cmp	DWORD PTR -44[rbp], 0
	je	.L521
	call	ISHIGHCONTRAST
	mov	DWORD PTR -48[rbp], eax
	cmp	DWORD PTR -48[rbp], -1
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L512
.L521:
	nop
.L511:
	mov	QWORD PTR -8[rbp], 0
.L512:
	cmp	QWORD PTR -8[rbp], 0
	setne	al
	mov	edx, eax
	lea	rax, G_DARKMODEENABLED$[rip]
	mov	BYTE PTR [rax], dl
	jmp	.L515
.L520:
	nop
.L509:
	lea	rax, G_DARKMODEENABLED$[rip]
	mov	BYTE PTR [rax], 0
	jmp	.L515
.L504:
.L513:
.L514:
.L518:
	nop
.L515:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC67:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Application.bas\0"
.LC68:
	.ascii "LOADFROMFILE\0"
	.align 2
.LC69:
	.ascii "u\0t\0f\0-\0"
	.ascii "3\0"
	.ascii "2\0\0\0"
	.align 2
.LC70:
	.ascii "u\0t\0f\0-\0"
	.ascii "1\0"
	.ascii "6\0\0\0"
	.align 2
.LC71:
	.ascii "u\0t\0f\0-\0"
	.ascii "8\0\0\0"
	.align 2
.LC72:
	.ascii "a\0s\0c\0i\0i\0\0\0"
.LC73:
	.ascii "\15\12\0"
.LC74:
	.ascii "\12\0"
.LC75:
	.ascii "\15\0"
	.align 8
.LC76:
	.ascii "O\0p\0e\0n\0 \0f\0i\0l\0e\0 \0f\0a\0i\0l\0u\0r\0e\0!\0 \0i\0n\0 \0f\0u\0n\0c\0t\0i\0o\0n\0 \0L\0o\0a\0d\0F\0r\0o\0m\0F\0i\0l\0e\0 \0\0\0"
	.align 2
.LC77:
	.ascii "\0\0"
	.text
	.globl	LOADFROMFILE
	.def	LOADFROMFILE;	.scl	2;	.type	32;	.endef
LOADFROMFILE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 720
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR -552[rbp], 0
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	lea	rcx, .LC68[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
.L523:
	lea	rax, -576[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	lea	rax, -608[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	lea	rax, -640[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR -88[rbp], -1
	mov	QWORD PTR -648[rbp], 0
	mov	QWORD PTR -656[rbp], 0
	call	FREEFILE_
	mov	DWORD PTR -92[rbp], eax
	mov	eax, DWORD PTR -92[rbp]
	cdqe
	mov	QWORD PTR -648[rbp], rax
	lea	rax, -512[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	lea	rax, -512[rbp]
	mov	r9d, 0
	mov	r8, QWORD PTR 16[rbp]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA
	mov	rax, QWORD PTR -648[rbp]
	mov	edx, eax
	lea	rax, -512[rbp]
	mov	DWORD PTR 40[rsp], 0
	mov	DWORD PTR 32[rsp], edx
	mov	r9d, 0
	mov	r8d, 1
	mov	edx, 0
	mov	rcx, rax
	call	fb_FileOpen
	mov	DWORD PTR -96[rbp], eax
	cmp	DWORD PTR -96[rbp], 0
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -104[rbp], rax
	lea	rax, -512[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	cmp	QWORD PTR -104[rbp], 0
	je	.L630
	mov	rax, QWORD PTR -648[rbp]
	mov	ecx, eax
	call	fb_FileSize
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	add	rax, 1
	mov	QWORD PTR -656[rbp], rax
	mov	edx, 0
	mov	ecx, 4
	call	fb_StrFill1
	mov	QWORD PTR -120[rbp], rax
	mov	rdx, QWORD PTR -120[rbp]
	lea	rax, -576[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrAssign
.L526:
	mov	rax, QWORD PTR -648[rbp]
	mov	ecx, eax
	lea	rax, -576[rbp]
	mov	r9, -1
	mov	r8, rax
	mov	edx, 0
	call	fb_FileGetStrLarge
	mov	DWORD PTR -124[rbp], eax
	cmp	DWORD PTR -124[rbp], 0
	je	.L631
	jmp	.L606
.L530:
	jmp	rax
.L606:
	lea	r9, .L529[rip]
	lea	r8, .L526[rip]
	lea	rdx, .LC67[rip]
	mov	ecx, 808
	call	fb_ErrorThrowAt
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	jmp	.L530
.L631:
	nop
.L529:
	lea	rax, -576[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 809
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -152[rbp], rax
	cmp	QWORD PTR -152[rbp], 0
	je	.L632
	mov	rax, QWORD PTR -152[rbp]
	jmp	.L530
.L632:
	nop
.L532:
	mov	rax, QWORD PTR -144[rbp]
	movzx	eax, BYTE PTR [rax]
	cmp	al, -1
	jne	.L633
	lea	rax, -576[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 809
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -168[rbp], rax
	cmp	QWORD PTR -168[rbp], 0
	je	.L634
	mov	rax, QWORD PTR -168[rbp]
	jmp	.L530
.L634:
	nop
.L536:
	mov	rax, QWORD PTR -160[rbp]
	add	rax, 1
	movzx	eax, BYTE PTR [rax]
	cmp	al, -2
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L537
.L633:
	nop
.L534:
	mov	QWORD PTR -8[rbp], 0
.L537:
	cmp	QWORD PTR -8[rbp], 0
	je	.L635
	lea	rax, -576[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 809
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -184[rbp], rax
	cmp	QWORD PTR -184[rbp], 0
	je	.L636
	mov	rax, QWORD PTR -184[rbp]
	jmp	.L530
.L636:
	nop
.L541:
	mov	rax, QWORD PTR -176[rbp]
	add	rax, 2
	movzx	eax, BYTE PTR [rax]
	test	al, al
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -16[rbp], rax
	jmp	.L542
.L635:
	nop
.L539:
	mov	QWORD PTR -16[rbp], 0
.L542:
	cmp	QWORD PTR -16[rbp], 0
	je	.L637
	lea	rax, -576[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -192[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 809
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -200[rbp], rax
	cmp	QWORD PTR -200[rbp], 0
	je	.L638
	mov	rax, QWORD PTR -200[rbp]
	jmp	.L530
.L638:
	nop
.L546:
	mov	rax, QWORD PTR -192[rbp]
	add	rax, 3
	movzx	eax, BYTE PTR [rax]
	test	al, al
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -24[rbp], rax
	jmp	.L547
.L637:
	nop
.L544:
	mov	QWORD PTR -24[rbp], 0
.L547:
	cmp	QWORD PTR -24[rbp], 0
	je	.L639
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rax], 4
	lea	rax, -608[rbp]
	mov	r9d, 0
	lea	r8, .LC69[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA
	mov	edx, 0
	mov	ecx, 1024
	call	fb_StrFill1
	mov	QWORD PTR -208[rbp], rax
	mov	rdx, QWORD PTR -208[rbp]
	lea	rax, -576[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrAssign
.L550:
	mov	rax, QWORD PTR -648[rbp]
	mov	ecx, eax
	lea	rax, -576[rbp]
	mov	r9, -1
	mov	r8, rax
	mov	edx, 0
	call	fb_FileGetStrLarge
	mov	DWORD PTR -364[rbp], eax
	cmp	DWORD PTR -364[rbp], 0
	je	.L640
	lea	r9, .L552[rip]
	lea	r8, .L550[rip]
	lea	rdx, .LC67[rip]
	mov	ecx, 813
	call	fb_ErrorThrowAt
	mov	QWORD PTR -376[rbp], rax
	mov	rax, QWORD PTR -376[rbp]
	jmp	.L530
.L640:
	nop
.L552:
	jmp	.L588
.L639:
	nop
.L549:
	lea	rax, -576[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR -216[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 815
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -224[rbp], rax
	cmp	QWORD PTR -224[rbp], 0
	je	.L641
	mov	rax, QWORD PTR -224[rbp]
	jmp	.L530
.L641:
	nop
.L555:
	mov	rax, QWORD PTR -216[rbp]
	movzx	eax, BYTE PTR [rax]
	cmp	al, -1
	jne	.L642
	lea	rax, -576[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -232[rbp], rax
	mov	rax, QWORD PTR -232[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 815
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -240[rbp], rax
	cmp	QWORD PTR -240[rbp], 0
	je	.L643
	mov	rax, QWORD PTR -240[rbp]
	jmp	.L530
.L643:
	nop
.L559:
	mov	rax, QWORD PTR -232[rbp]
	add	rax, 1
	movzx	eax, BYTE PTR [rax]
	cmp	al, -2
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -32[rbp], rax
	jmp	.L560
.L642:
	nop
.L557:
	mov	QWORD PTR -32[rbp], 0
.L560:
	cmp	QWORD PTR -32[rbp], 0
	je	.L644
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rax], 3
	lea	rax, -608[rbp]
	mov	r9d, 0
	lea	r8, .LC70[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA
	mov	edx, 0
	mov	ecx, 1024
	call	fb_StrFill1
	mov	QWORD PTR -248[rbp], rax
	mov	rdx, QWORD PTR -248[rbp]
	lea	rax, -576[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrAssign
.L563:
	mov	rax, QWORD PTR -648[rbp]
	mov	ecx, eax
	lea	rax, -576[rbp]
	mov	r9, -1
	mov	r8, rax
	mov	edx, 0
	call	fb_FileGetStrLarge
	mov	DWORD PTR -348[rbp], eax
	cmp	DWORD PTR -348[rbp], 0
	je	.L645
	lea	r9, .L565[rip]
	lea	r8, .L563[rip]
	lea	rdx, .LC67[rip]
	mov	ecx, 819
	call	fb_ErrorThrowAt
	mov	QWORD PTR -360[rbp], rax
	mov	rax, QWORD PTR -360[rbp]
	jmp	.L530
.L645:
	nop
.L565:
	jmp	.L588
.L644:
	nop
.L562:
	lea	rax, -576[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -256[rbp], rax
	mov	rax, QWORD PTR -256[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 820
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -264[rbp], rax
	cmp	QWORD PTR -264[rbp], 0
	je	.L646
	mov	rax, QWORD PTR -264[rbp]
	jmp	.L530
.L646:
	nop
.L567:
	mov	rax, QWORD PTR -256[rbp]
	movzx	eax, BYTE PTR [rax]
	cmp	al, -17
	jne	.L647
	lea	rax, -576[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -272[rbp], rax
	mov	rax, QWORD PTR -272[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 820
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -280[rbp], rax
	cmp	QWORD PTR -280[rbp], 0
	je	.L648
	mov	rax, QWORD PTR -280[rbp]
	jmp	.L530
.L648:
	nop
.L571:
	mov	rax, QWORD PTR -272[rbp]
	add	rax, 1
	movzx	eax, BYTE PTR [rax]
	cmp	al, -69
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -40[rbp], rax
	jmp	.L572
.L647:
	nop
.L569:
	mov	QWORD PTR -40[rbp], 0
.L572:
	cmp	QWORD PTR -40[rbp], 0
	je	.L649
	lea	rax, -576[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -288[rbp], rax
	mov	rax, QWORD PTR -288[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 820
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -296[rbp], rax
	cmp	QWORD PTR -296[rbp], 0
	je	.L650
	mov	rax, QWORD PTR -296[rbp]
	jmp	.L530
.L650:
	nop
.L576:
	mov	rax, QWORD PTR -288[rbp]
	add	rax, 2
	movzx	eax, BYTE PTR [rax]
	cmp	al, -65
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -48[rbp], rax
	jmp	.L577
.L649:
	nop
.L574:
	mov	QWORD PTR -48[rbp], 0
.L577:
	cmp	QWORD PTR -48[rbp], 0
	je	.L651
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rax], 2
	lea	rax, -608[rbp]
	mov	r9d, 0
	lea	r8, .LC71[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA
	mov	edx, 0
	mov	ecx, 1024
	call	fb_StrFill1
	mov	QWORD PTR -304[rbp], rax
	mov	rdx, QWORD PTR -304[rbp]
	lea	rax, -576[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrAssign
.L580:
	mov	rax, QWORD PTR -648[rbp]
	mov	ecx, eax
	lea	rax, -576[rbp]
	mov	r9, -1
	mov	r8, rax
	mov	edx, 0
	call	fb_FileGetStrLarge
	mov	DWORD PTR -332[rbp], eax
	cmp	DWORD PTR -332[rbp], 0
	je	.L652
	lea	r9, .L582[rip]
	lea	r8, .L580[rip]
	lea	rdx, .LC67[rip]
	mov	ecx, 824
	call	fb_ErrorThrowAt
	mov	QWORD PTR -344[rbp], rax
	mov	rax, QWORD PTR -344[rbp]
	jmp	.L530
.L652:
	nop
.L582:
	jmp	.L588
.L651:
	nop
.L579:
	mov	rax, QWORD PTR -656[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrFill1
	mov	QWORD PTR -312[rbp], rax
	mov	rdx, QWORD PTR -312[rbp]
	lea	rax, -576[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrAssign
.L583:
	mov	rax, QWORD PTR -648[rbp]
	mov	ecx, eax
	lea	rax, -576[rbp]
	mov	r9, -1
	mov	r8, rax
	mov	edx, 0
	call	fb_FileGetStrLarge
	mov	DWORD PTR -316[rbp], eax
	cmp	DWORD PTR -316[rbp], 0
	je	.L653
	lea	r9, .L585[rip]
	lea	r8, .L583[rip]
	lea	rdx, .LC67[rip]
	mov	ecx, 827
	call	fb_ErrorThrowAt
	mov	QWORD PTR -328[rbp], rax
	mov	rax, QWORD PTR -328[rbp]
	jmp	.L530
.L653:
	nop
.L585:
	lea	rax, -576[rbp]
	mov	rcx, rax
	call	CHECKUTF8NOBOM
	mov	BYTE PTR -377[rbp], al
	cmp	BYTE PTR -377[rbp], 0
	je	.L654
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rax], 1
	lea	rax, -608[rbp]
	mov	r9d, 0
	lea	r8, .LC72[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA
	jmp	.L588
.L654:
	nop
.L587:
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rax], 0
	lea	rax, -608[rbp]
	mov	r9d, 0
	lea	r8, .LC72[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA
.L553:
.L588:
	mov	edx, 2
	lea	rcx, .LC73[rip]
	call	fb_StrAllocTempDescZEx
	mov	QWORD PTR -392[rbp], rax
	mov	rdx, QWORD PTR -392[rbp]
	lea	rax, -576[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	ecx, 1
	call	fb_StrInstr
	mov	QWORD PTR -400[rbp], rax
	cmp	QWORD PTR -400[rbp], 0
	je	.L655
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR [rax], 0
	lea	rax, -640[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9d, 2
	lea	r8, .LC74[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrAssign
	jmp	.L591
.L655:
	nop
.L590:
	mov	edx, 1
	lea	rcx, .LC74[rip]
	call	fb_StrAllocTempDescZEx
	mov	QWORD PTR -408[rbp], rax
	mov	rdx, QWORD PTR -408[rbp]
	lea	rax, -576[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	ecx, 1
	call	fb_StrInstr
	mov	QWORD PTR -416[rbp], rax
	cmp	QWORD PTR -416[rbp], 0
	je	.L656
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR [rax], 1
	lea	rax, -640[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9d, 2
	lea	r8, .LC74[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrAssign
	jmp	.L591
.L656:
	nop
.L593:
	mov	edx, 1
	lea	rcx, .LC75[rip]
	call	fb_StrAllocTempDescZEx
	mov	QWORD PTR -424[rbp], rax
	mov	rdx, QWORD PTR -424[rbp]
	lea	rax, -576[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	ecx, 1
	call	fb_StrInstr
	mov	QWORD PTR -432[rbp], rax
	cmp	QWORD PTR -432[rbp], 0
	je	.L657
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR [rax], 2
	lea	rax, -640[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9d, 2
	lea	r8, .LC75[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrAssign
	jmp	.L591
.L657:
	nop
.L595:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR [rax], 0
	lea	rax, -640[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9d, 2
	lea	r8, .LC74[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrAssign
	jmp	.L596
.L591:
	jmp	.L596
.L630:
	nop
.L525:
	mov	rdx, QWORD PTR 16[rbp]
	lea	rcx, .LC76[rip]
	call	fb_WstrConcat
	mov	QWORD PTR -480[rbp], rax
	mov	rax, QWORD PTR -480[rbp]
	mov	QWORD PTR -488[rbp], rax
	mov	rax, QWORD PTR -488[rbp]
	mov	DWORD PTR 32[rsp], 1
	mov	r9d, 0
	mov	r8d, 0
	mov	edx, 1
	mov	rcx, rax
	call	_ZN5DEBUG5PRINTERwbbbb
	mov	rax, QWORD PTR -488[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -648[rbp]
	mov	ecx, eax
	call	CLOSEFILE_
	lea	rax, .LC77[rip]
	mov	QWORD PTR -552[rbp], rax
	lea	rax, -640[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	lea	rax, -608[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	lea	rax, -576[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L597
.L596:
	mov	rax, QWORD PTR -648[rbp]
	mov	ecx, eax
	call	CLOSEFILE_
	call	FREEFILE_
	mov	DWORD PTR -436[rbp], eax
	mov	eax, DWORD PTR -436[rbp]
	cdqe
	mov	QWORD PTR -648[rbp], rax
	lea	rax, -544[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	lea	rax, -544[rbp]
	mov	r9d, 0
	mov	r8, QWORD PTR 16[rbp]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA
	lea	rax, -608[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -648[rbp]
	mov	ecx, eax
	lea	rax, -544[rbp]
	mov	QWORD PTR 48[rsp], rdx
	mov	DWORD PTR 40[rsp], 0
	mov	DWORD PTR 32[rsp], ecx
	mov	r9d, 0
	mov	r8d, 0
	mov	edx, 2
	mov	rcx, rax
	call	fb_FileOpenEncod
	mov	DWORD PTR -440[rbp], eax
	mov	eax, DWORD PTR -440[rbp]
	cdqe
	mov	QWORD PTR -88[rbp], rax
	lea	rax, -544[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	cmp	QWORD PTR -88[rbp], 0
	jne	.L658
	mov	rax, QWORD PTR -656[rbp]
	add	rax, rax
	add	rax, 2
	mov	rdx, rax
	mov	rax, QWORD PTR PBUFF$1.6953[rip]
	mov	rcx, rax
	call	realloc
	mov	QWORD PTR -448[rbp], rax
	mov	rax, QWORD PTR -448[rbp]
	mov	QWORD PTR PBUFF$1.6953[rip], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	cmp	rax, 1
	jne	.L659
	mov	rax, QWORD PTR -648[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR -656[rbp]
	mov	rcx, rax
	call	fb_FileStrInput
	mov	QWORD PTR -456[rbp], rax
	mov	rdx, QWORD PTR -456[rbp]
	lea	rax, -576[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrAssign
	mov	rdx, QWORD PTR PBUFF$1.6953[rip]
	lea	rax, -576[rbp]
	mov	rax, QWORD PTR [rax]
	lea	rcx, -656[rbp]
	mov	r9, rcx
	mov	r8, rdx
	mov	rdx, rax
	mov	ecx, 1
	call	fb_UTFToWChar
	jmp	.L603
.L659:
	nop
.L601:
	mov	rax, QWORD PTR -648[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR -656[rbp]
	mov	rcx, rax
	call	fb_FileWstrInput
	mov	QWORD PTR -464[rbp], rax
	mov	rax, QWORD PTR -464[rbp]
	mov	QWORD PTR -472[rbp], rax
	mov	rax, QWORD PTR PBUFF$1.6953[rip]
	mov	rdx, QWORD PTR -472[rbp]
	mov	r8, rdx
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrAssign
	mov	rax, QWORD PTR -472[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L603
.L599:
.L602:
.L658:
	nop
.L603:
	mov	rax, QWORD PTR -648[rbp]
	mov	ecx, eax
	call	CLOSEFILE_
	mov	rax, QWORD PTR PBUFF$1.6953[rip]
	mov	QWORD PTR -552[rbp], rax
	lea	rax, -640[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	lea	rax, -608[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	lea	rax, -576[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	nop
.L597:
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -552[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC78:
	.ascii "SAVETOFILE\0"
	.align 2
.LC79:
	.ascii "\15\0\12\0\0\0"
	.align 8
.LC80:
	.ascii "S\0a\0v\0e\0 \0f\0i\0l\0e\0 \0f\0a\0i\0l\0u\0r\0e\0!\0 \0\0\0"
	.text
	.globl	SAVETOFILE
	.def	SAVETOFILE;	.scl	2;	.type	32;	.endef
SAVETOFILE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 592
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
	mov	BYTE PTR -385[rbp], 0
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC78[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L661:
	call	FREEFILE_
	mov	DWORD PTR -36[rbp], eax
	mov	eax, DWORD PTR -36[rbp]
	cdqe
	mov	QWORD PTR -48[rbp], rax
	mov	QWORD PTR -400[rbp], 0
	lea	rax, -432[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	lea	rax, -464[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	rax, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR [rax]
	cmp	rax, 1
	jne	.L707
	lea	rax, -432[rbp]
	mov	r9d, 0
	lea	r8, .LC72[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA
	jmp	.L664
.L707:
	nop
.L663:
	mov	rax, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR [rax]
	cmp	rax, 2
	jne	.L708
	lea	rax, -432[rbp]
	mov	r9d, 0
	lea	r8, .LC71[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA
	jmp	.L664
.L708:
	nop
.L666:
	mov	rax, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR [rax]
	cmp	rax, 3
	jne	.L709
	lea	rax, -432[rbp]
	mov	r9d, 0
	lea	r8, .LC70[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA
	jmp	.L664
.L709:
	nop
.L668:
	mov	rax, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR [rax]
	cmp	rax, 4
	jne	.L710
	lea	rax, -432[rbp]
	mov	r9d, 0
	lea	r8, .LC69[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA
	jmp	.L664
.L710:
	nop
.L670:
	lea	rax, -432[rbp]
	mov	r9d, 0
	lea	r8, .LC72[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA
.L664:
	mov	rax, QWORD PTR 40[rbp]
	mov	rax, QWORD PTR [rax]
	cmp	rax, 1
	jne	.L711
	lea	rax, -464[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9d, 2
	lea	r8, .LC74[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrAssign
	jmp	.L673
.L711:
	nop
.L672:
	mov	rax, QWORD PTR 40[rbp]
	mov	rax, QWORD PTR [rax]
	cmp	rax, 2
	jne	.L712
	lea	rax, -464[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9d, 2
	lea	r8, .LC75[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrAssign
	jmp	.L673
.L712:
	nop
.L675:
	lea	rax, -464[rbp]
	mov	r9d, 0
	lea	r8, .LC77[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA
.L673:
	lea	rax, -384[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	lea	rax, -384[rbp]
	mov	r9d, 0
	mov	r8, QWORD PTR 16[rbp]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA
	lea	rax, -432[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -48[rbp]
	mov	ecx, eax
	lea	rax, -384[rbp]
	mov	QWORD PTR 48[rsp], rdx
	mov	DWORD PTR 40[rsp], 0
	mov	DWORD PTR 32[rsp], ecx
	mov	r9d, 0
	mov	r8d, 0
	mov	edx, 3
	mov	rcx, rax
	call	fb_FileOpenEncod
	mov	DWORD PTR -52[rbp], eax
	cmp	DWORD PTR -52[rbp], 0
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -64[rbp], rax
	lea	rax, -384[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	cmp	QWORD PTR -64[rbp], 0
	je	.L713
	mov	rax, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR [rax]
	cmp	rax, 1
	jne	.L714
	lea	rax, -464[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	rdx, .LC77[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -84[rbp], eax
	cmp	DWORD PTR -84[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -96[rbp], 0
	je	.L715
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	QWORD PTR -472[rbp], 0
	lea	rax, -464[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	mov	QWORD PTR -120[rbp], rax
	mov	r8, QWORD PTR -120[rbp]
	mov	rdx, QWORD PTR 24[rbp]
	lea	rax, -528[rbp]
	mov	DWORD PTR 48[rsp], 1
	lea	rcx, -472[rbp]
	mov	QWORD PTR 40[rsp], rcx
	mov	QWORD PTR 32[rsp], 1
	mov	r9, r8
	lea	r8, .LC79[rip]
	mov	rcx, rax
	call	REPLACE
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	mov	rcx, rax
	call	_ZN7USTRINGcvwEv
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	mov	rcx, rax
	call	TOUTF8
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR -144[rbp]
	mov	r8d, 0
	mov	rdx, rax
	call	fb_PrintString
	mov	rax, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	_ZN7USTRINGD1Ev
	nop
.L682:
	jmp	.L691
.L715:
	nop
.L681:
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	TOUTF8
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR -160[rbp]
	mov	r8d, 0
	mov	rdx, rax
	call	fb_PrintString
	jmp	.L691
.L714:
	nop
.L679:
	mov	rax, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jne	.L716
	lea	rax, -464[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	lea	rdx, .LC77[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -180[rbp], eax
	cmp	DWORD PTR -180[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -192[rbp], 0
	je	.L717
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -200[rbp], rax
	mov	QWORD PTR -480[rbp], 0
	lea	rax, -464[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR -208[rbp]
	mov	QWORD PTR -216[rbp], rax
	mov	r8, QWORD PTR -216[rbp]
	mov	rdx, QWORD PTR 24[rbp]
	lea	rax, -528[rbp]
	mov	DWORD PTR 48[rsp], 1
	lea	rcx, -480[rbp]
	mov	QWORD PTR 40[rsp], rcx
	mov	QWORD PTR 32[rsp], 1
	mov	r9, r8
	lea	r8, .LC79[rip]
	mov	rcx, rax
	call	REPLACE
	mov	QWORD PTR -224[rbp], rax
	mov	rax, QWORD PTR -224[rbp]
	mov	rcx, rax
	call	_ZN7USTRINGcvwEv
	mov	QWORD PTR -232[rbp], rax
	mov	rax, QWORD PTR -232[rbp]
	mov	rcx, rax
	call	fb_WstrToStr
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR -240[rbp]
	mov	r8d, 0
	mov	rdx, rax
	call	fb_PrintString
	mov	rax, QWORD PTR -216[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	_ZN7USTRINGD1Ev
	nop
.L688:
	jmp	.L691
.L717:
	nop
.L687:
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -248[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	fb_WstrToStr
	mov	QWORD PTR -256[rbp], rax
	mov	rax, QWORD PTR -248[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR -256[rbp]
	mov	r8d, 0
	mov	rdx, rax
	call	fb_PrintString
	jmp	.L691
.L716:
	nop
.L685:
	lea	rax, -464[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -264[rbp], rax
	mov	rax, QWORD PTR -264[rbp]
	mov	QWORD PTR -272[rbp], rax
	mov	rax, QWORD PTR -272[rbp]
	lea	rdx, .LC77[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -276[rbp], eax
	cmp	DWORD PTR -276[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -288[rbp], rax
	mov	rax, QWORD PTR -272[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -288[rbp], 0
	je	.L718
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -296[rbp], rax
	mov	QWORD PTR -488[rbp], 0
	lea	rax, -464[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -304[rbp], rax
	mov	rax, QWORD PTR -304[rbp]
	mov	QWORD PTR -312[rbp], rax
	mov	r8, QWORD PTR -312[rbp]
	mov	rdx, QWORD PTR 24[rbp]
	lea	rax, -528[rbp]
	mov	DWORD PTR 48[rsp], 1
	lea	rcx, -488[rbp]
	mov	QWORD PTR 40[rsp], rcx
	mov	QWORD PTR 32[rsp], 1
	mov	r9, r8
	lea	r8, .LC79[rip]
	mov	rcx, rax
	call	REPLACE
	mov	QWORD PTR -320[rbp], rax
	mov	rax, QWORD PTR -320[rbp]
	mov	rcx, rax
	call	_ZN7USTRINGcvwEv
	mov	QWORD PTR -328[rbp], rax
	mov	rax, QWORD PTR -296[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR -328[rbp]
	mov	r8d, 0
	mov	rdx, rax
	call	fb_PrintWstr
	mov	rax, QWORD PTR -312[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	_ZN7USTRINGD1Ev
	jmp	.L691
.L718:
	nop
.L690:
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -336[rbp], rax
	mov	rax, QWORD PTR -336[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR 24[rbp]
	mov	r8d, 0
	mov	rdx, rax
	call	fb_PrintWstr
	jmp	.L692
.L683:
.L691:
	jmp	.L692
.L713:
	nop
.L677:
	mov	rdx, QWORD PTR 16[rbp]
	lea	rcx, .LC80[rip]
	call	fb_WstrConcat
	mov	QWORD PTR -344[rbp], rax
	mov	rax, QWORD PTR -344[rbp]
	mov	QWORD PTR -352[rbp], rax
	mov	rax, QWORD PTR -352[rbp]
	mov	DWORD PTR 32[rsp], 1
	mov	r9d, 0
	mov	r8d, 0
	mov	edx, 1
	mov	rcx, rax
	call	_ZN5DEBUG5PRINTERwbbbb
	mov	rax, QWORD PTR -352[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	BYTE PTR -385[rbp], 0
	lea	rax, -464[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	lea	rax, -432[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L693
.L692:
	mov	rax, QWORD PTR -48[rbp]
	mov	ecx, eax
	call	CLOSEFILE_
	mov	BYTE PTR -385[rbp], 1
	lea	rax, -464[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	lea	rax, -432[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	nop
.L693:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -385[rbp]
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC81:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Control.bas\0"
.LC82:
	.ascii "GETMAX\0"
	.text
	.globl	_ZN2MY3SYS5FORMS7CONTROL6GETMAXERu7INTEGERS4_
	.def	_ZN2MY3SYS5FORMS7CONTROL6GETMAXERu7INTEGERS4_;	.scl	2;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL6GETMAXERu7INTEGERS4_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 176
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
.L720:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC82[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR -8[rbp], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12CONTROLCOUNTEv
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	sub	rax, 1
	mov	QWORD PTR -56[rbp], rax
	jmp	.L721
.L741:
	nop
.L722:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2182
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	je	.L737
	jmp	[QWORD PTR -72[rbp]]
.L737:
	nop
.L724:
	mov	rax, QWORD PTR -8[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -64[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	add	rax, 970
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L738
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT11LEFT__get__Ev
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12WIDTH__get__Ev
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR -88[rbp]
	mov	rdx, QWORD PTR -96[rbp]
	add	rcx, rdx
	mov	rdx, QWORD PTR -80[rbp]
	add	rdx, 320
	mov	rdx, QWORD PTR [rdx]
	add	rdx, rcx
	cmp	rax, rdx
	jge	.L739
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT11LEFT__get__Ev
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12WIDTH__get__Ev
	mov	QWORD PTR -112[rbp], rax
	mov	rdx, QWORD PTR -104[rbp]
	mov	rax, QWORD PTR -112[rbp]
	add	rdx, rax
	mov	rax, QWORD PTR -80[rbp]
	add	rax, 320
	mov	rax, QWORD PTR [rax]
	add	rdx, rax
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rax], rdx
	jmp	.L728
.L739:
	nop
.L728:
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT10TOP__get__Ev
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HEIGHT__get__Ev
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR -120[rbp]
	mov	rdx, QWORD PTR -128[rbp]
	add	rcx, rdx
	mov	rdx, QWORD PTR -80[rbp]
	add	rdx, 328
	mov	rdx, QWORD PTR [rdx]
	add	rdx, rcx
	cmp	rax, rdx
	jge	.L740
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT10TOP__get__Ev
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HEIGHT__get__Ev
	mov	QWORD PTR -144[rbp], rax
	mov	rdx, QWORD PTR -136[rbp]
	mov	rax, QWORD PTR -144[rbp]
	add	rdx, rax
	mov	rax, QWORD PTR -80[rbp]
	add	rax, 328
	mov	rax, QWORD PTR [rax]
	add	rdx, rax
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR [rax], rdx
	jmp	.L732
.L726:
.L730:
.L731:
.L738:
	nop
	jmp	.L732
.L740:
	nop
.L732:
	add	QWORD PTR -8[rbp], 1
.L721:
	mov	rax, QWORD PTR -8[rbp]
	cmp	rax, QWORD PTR -56[rbp]
	jle	.L741
	nop
.L733:
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 240
	mov	rax, QWORD PTR [rax]
	add	rdx, rax
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 248
	mov	rax, QWORD PTR [rax]
	add	rdx, rax
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR [rax], rdx
.L734:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC83:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\ContainerControl.bas\0"
.LC84:
	.ascii "VISIBLE\0"
	.text
	.globl	_ZN2MY3SYS5FORMS16CONTAINERCONTROL14VISIBLE__get__Ev
	.def	_ZN2MY3SYS5FORMS16CONTAINERCONTROL14VISIBLE__get__Ev;	.scl	2;	.type	32;	.endef
_ZN2MY3SYS5FORMS16CONTAINERCONTROL14VISIBLE__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	BYTE PTR -34[rbp], 0
	lea	rcx, .LC83[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC84[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L743:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL14VISIBLE__get__Ev
	mov	BYTE PTR -33[rbp], al
	movzx	eax, BYTE PTR -33[rbp]
	mov	BYTE PTR -34[rbp], al
	nop
.L744:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -34[rbp]
	leave
	ret
	.globl	_ZN2MY3SYS5FORMS16CONTAINERCONTROL14VISIBLE__set__Eb
	.def	_ZN2MY3SYS5FORMS16CONTAINERCONTROL14VISIBLE__set__Eb;	.scl	2;	.type	32;	.endef
_ZN2MY3SYS5FORMS16CONTAINERCONTROL14VISIBLE__set__Eb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	BYTE PTR 24[rbp], al
.L747:
	lea	rcx, .LC83[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC84[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	movsx	eax, BYTE PTR 24[rbp]
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL14VISIBLE__set__Eb
.L748:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC85:
	.ascii "AUTOSIZE\0"
	.text
	.globl	_ZN2MY3SYS5FORMS16CONTAINERCONTROL15AUTOSIZE__get__Ev
	.def	_ZN2MY3SYS5FORMS16CONTAINERCONTROL15AUTOSIZE__get__Ev;	.scl	2;	.type	32;	.endef
_ZN2MY3SYS5FORMS16CONTAINERCONTROL15AUTOSIZE__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	BYTE PTR -33[rbp], 0
	lea	rcx, .LC83[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC85[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L750:
	mov	rax, QWORD PTR 16[rbp]
	movzx	eax, BYTE PTR 392[rax]
	mov	BYTE PTR -33[rbp], al
	nop
.L751:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -33[rbp]
	leave
	ret
	.globl	_ZN2MY3SYS5FORMS16CONTAINERCONTROL15AUTOSIZE__set__Eb
	.def	_ZN2MY3SYS5FORMS16CONTAINERCONTROL15AUTOSIZE__set__Eb;	.scl	2;	.type	32;	.endef
_ZN2MY3SYS5FORMS16CONTAINERCONTROL15AUTOSIZE__set__Eb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	BYTE PTR 24[rbp], al
.L754:
	lea	rcx, .LC83[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC85[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 392[rax]
	movzx	eax, BYTE PTR 24[rbp]
	mov	BYTE PTR [rdx], al
.L755:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC86:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Form.bas\0"
.LC87:
	.ascii "WINDOWSTATE\0"
	.text
	.globl	_ZN2MY3SYS5FORMS4FORM18WINDOWSTATE__get__Ev
	.def	_ZN2MY3SYS5FORMS4FORM18WINDOWSTATE__get__Ev;	.scl	2;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM18WINDOWSTATE__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -80[rbp], 0
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC87[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L757:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -40[rbp], rax
	cmp	QWORD PTR -40[rbp], 0
	je	.L770
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	IsIconic
	mov	DWORD PTR -52[rbp], eax
	cmp	DWORD PTR -52[rbp], 0
	je	.L771
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2712
	mov	QWORD PTR [rax], 3
	jmp	.L765
.L771:
	nop
.L761:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	IsZoomed
	mov	DWORD PTR -68[rbp], eax
	cmp	DWORD PTR -68[rbp], 0
	je	.L772
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2712
	mov	QWORD PTR [rax], 2
	jmp	.L765
.L772:
	nop
.L763:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2712
	mov	QWORD PTR [rax], 1
	jmp	.L765
.L759:
.L764:
.L770:
	nop
.L765:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2712[rax]
	mov	QWORD PTR -80[rbp], rax
	nop
.L766:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -80[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC88:
	.ascii "HOOKCLIENTPROC\0"
	.align 2
.LC89:
	.ascii "M\0F\0F\0C\0o\0n\0t\0r\0o\0l\0\0\0"
	.align 2
.LC90:
	.ascii "@\0@\0@\0@\0P\0r\0o\0c\0\0\0"
	.text
	.globl	_ZN2MY3SYS5FORMS4FORM14HOOKCLIENTPROCEP6HWND__jyx
	.def	_ZN2MY3SYS5FORMS4FORM14HOOKCLIENTPROCEP6HWND__jyx;	.scl	2;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM14HOOKCLIENTPROCEP6HWND__jyx:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 288
	mov	QWORD PTR 16[rbp], rcx
	mov	DWORD PTR 24[rbp], edx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
	mov	QWORD PTR -240[rbp], 0
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC88[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L774:
	lea	rdx, .LC89[rip]
	mov	rcx, QWORD PTR 16[rbp]
	call	GetPropW
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	cmp	QWORD PTR -48[rbp], 0
	je	.L807
	cmp	DWORD PTR 24[rbp], 70
	jne	.L808
	nop
.L777:
	mov	rax, QWORD PTR 40[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	lea	r8, .LC86[rip]
	mov	edx, 735
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	je	.L809
	jmp	[QWORD PTR -72[rbp]]
.L809:
	nop
.L779:
	mov	rax, QWORD PTR -64[rbp]
	add	rax, 432
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	SCALEX
	movd	eax, xmm0
	mov	DWORD PTR -76[rbp], eax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	r8, .LC86[rip]
	mov	edx, 735
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -96[rbp], rax
	cmp	QWORD PTR -96[rbp], 0
	je	.L810
	jmp	[QWORD PTR -96[rbp]]
.L810:
	nop
.L781:
	mov	eax, DWORD PTR -76[rbp]
	movd	xmm0, eax
	call	nearbyintf
	mov	rax, QWORD PTR -88[rbp]
	lea	rdx, 16[rax]
	cvttss2si	eax, xmm0
	mov	DWORD PTR [rdx], eax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	lea	r8, .LC86[rip]
	mov	edx, 736
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -112[rbp], rax
	cmp	QWORD PTR -112[rbp], 0
	je	.L811
	jmp	[QWORD PTR -112[rbp]]
.L811:
	nop
.L783:
	mov	rax, QWORD PTR -104[rbp]
	add	rax, 440
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	SCALEY
	movd	eax, xmm0
	mov	DWORD PTR -116[rbp], eax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	r8, .LC86[rip]
	mov	edx, 736
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -136[rbp], rax
	cmp	QWORD PTR -136[rbp], 0
	je	.L812
	jmp	[QWORD PTR -136[rbp]]
.L812:
	nop
.L785:
	mov	eax, DWORD PTR -116[rbp]
	movd	xmm0, eax
	call	nearbyintf
	mov	rax, QWORD PTR -128[rbp]
	lea	rdx, 20[rax]
	cvttss2si	eax, xmm0
	mov	DWORD PTR [rdx], eax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	lea	r8, .LC86[rip]
	mov	edx, 737
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -152[rbp], rax
	cmp	QWORD PTR -152[rbp], 0
	je	.L813
	jmp	[QWORD PTR -152[rbp]]
.L813:
	nop
.L787:
	mov	rax, QWORD PTR -144[rbp]
	add	rax, 448
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	SCALEX
	movd	eax, xmm0
	mov	DWORD PTR -156[rbp], eax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	lea	r8, .LC86[rip]
	mov	edx, 737
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -176[rbp], rax
	cmp	QWORD PTR -176[rbp], 0
	je	.L814
	jmp	[QWORD PTR -176[rbp]]
.L814:
	nop
.L789:
	mov	eax, DWORD PTR -156[rbp]
	movd	xmm0, eax
	call	nearbyintf
	mov	rax, QWORD PTR -168[rbp]
	lea	rdx, 24[rax]
	cvttss2si	eax, xmm0
	mov	DWORD PTR [rdx], eax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	lea	r8, .LC86[rip]
	mov	edx, 738
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -192[rbp], rax
	cmp	QWORD PTR -192[rbp], 0
	je	.L815
	jmp	[QWORD PTR -192[rbp]]
.L815:
	nop
.L791:
	mov	rax, QWORD PTR -184[rbp]
	add	rax, 456
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	SCALEY
	movd	eax, xmm0
	mov	DWORD PTR -196[rbp], eax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR -208[rbp]
	lea	r8, .LC86[rip]
	mov	edx, 738
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -216[rbp], rax
	cmp	QWORD PTR -216[rbp], 0
	je	.L816
	jmp	[QWORD PTR -216[rbp]]
.L816:
	nop
.L793:
	mov	eax, DWORD PTR -196[rbp]
	movd	xmm0, eax
	call	nearbyintf
	mov	rax, QWORD PTR -208[rbp]
	lea	rdx, 28[rax]
	cvttss2si	eax, xmm0
	mov	DWORD PTR [rdx], eax
	jmp	.L796
.L776:
.L794:
.L795:
.L807:
	nop
	jmp	.L796
.L808:
	nop
.L796:
	lea	rdx, .LC90[rip]
	mov	rcx, QWORD PTR 16[rbp]
	call	GetPropW
	mov	QWORD PTR -224[rbp], rax
	mov	rax, QWORD PTR -224[rbp]
	mov	r8, QWORD PTR 32[rbp]
	mov	ecx, DWORD PTR 24[rbp]
	mov	rdx, QWORD PTR 40[rbp]
	mov	QWORD PTR 32[rsp], rdx
	mov	r9, r8
	mov	r8d, ecx
	mov	rdx, QWORD PTR 16[rbp]
	mov	rcx, rax
	call	CallWindowProcW
	mov	QWORD PTR -232[rbp], rax
	mov	rax, QWORD PTR -232[rbp]
	mov	QWORD PTR -240[rbp], rax
	nop
.L797:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -240[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC91:
	.ascii "frmMain.frm\0"
.LC92:
	.ascii "\0"
	.align 2
.LC93:
	.ascii "F\0o\0r\0m\0"
	.ascii "1\0\0\0"
	.align 2
.LC94:
	.ascii "K\0i\0w\0i\0 \0D\0e\0b\0u\0g\0\0\0"
	.text
	.globl	_ZN9FORM1TYPEC1Ev
	.def	_ZN9FORM1TYPEC1Ev;	.scl	2;	.type	32;	.endef
_ZN9FORM1TYPEC1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
.L818:
	lea	rcx, .LC91[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORMC1Ev
	lea	rdx, _ZTVN9FORM1TYPEE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	lea	rdx, .LC93[rip]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT11NAME__set__ERw
	mov	rax, QWORD PTR -40[rbp]
	lea	rdx, .LC94[rip]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4FORM11TEXT__set__ERw
	mov	rax, QWORD PTR -40[rbp]
	lea	rdx, 16[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	edx, 1
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4FORM20STARTPOSITION__set__Eu7INTEGER
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR 32[rsp], 300
	mov	r9d, 420
	mov	r8d, 0
	mov	edx, 0
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT9SETBOUNDSEu7INTEGERS3_S3_S3_
.L819:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	__main;	.scl	2;	.type	32;	.endef
	.section .rdata,"dr"
	.align 2
.LC95:
	.ascii "T\0a\0h\0o\0m\0a\0\0\0"
	.text
	.globl	main
	.def	main;	.scl	2;	.type	32;	.endef
main:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	DWORD PTR 16[rbp], ecx
	mov	QWORD PTR 24[rbp], rdx
	call	__main
	mov	DWORD PTR -76[rbp], 0
	lea	rcx, .LC91[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	r8d, 0
	mov	rdx, rax
	mov	ecx, DWORD PTR 16[rbp]
	call	fb_Init
	call	fb_InitSignals
.L821:
	mov	ecx, -4144897
	call	CreateSolidBrush
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR G_BRITEMBACKGROUND$[rip], rax
	mov	ecx, -3092225
	call	CreateSolidBrush
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR G_BRITEMBACKGROUNDHOT$[rip], rax
	mov	ecx, -2039553
	call	CreateSolidBrush
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR G_BRITEMBACKGROUNDSELECTED$[rip], rax
	mov	ecx, 3684408
	call	CreateSolidBrush
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR HBRBKGND$[rip], rax
	mov	ecx, 6447714
	call	CreateSolidBrush
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR HBRHLBKGND$[rip], rax
	lea	rax, PDEFAULTFONT$[rip]
	lea	rdx, DEFAULTFONT$[rip]
	mov	QWORD PTR [rax], rdx
	lea	rdx, .LC95[rip]
	lea	rcx, DEFAULTFONT$[rip]
	call	_ZN2MY3SYS7DRAWING4FONT11NAME__set__ERw
	mov	edx, 8
	lea	rcx, DEFAULTFONT$[rip]
	call	_ZN2MY3SYS7DRAWING4FONT11SIZE__set__Eu7INTEGER
	lea	rax, PAPP$[rip]
	lea	rdx, APP$[rip]
	mov	QWORD PTR [rax], rdx
	lea	rcx, FORM1$[rip]
	call	_ZN2MY3SYS5FORMS4FORM4SHOWEv
	lea	rcx, APP$[rip]
	call	_ZN2MY11APPLICATION3RUNEv
.L822:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	ecx, 0
	call	fb_End
	mov	eax, DWORD PTR -76[rbp]
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC96:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\FBMemCheck.bi\0"
.LC97:
	.ascii "FREEFILE_\0"
	.text
	.def	FREEFILE_;	.scl	3;	.type	32;	.endef
FREEFILE_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 144
	mov	DWORD PTR -108[rbp], 0
	lea	rcx, .LC96[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC97[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L825:
	mov	QWORD PTR -8[rbp], 1
	lea	rax, FILENUMBERCOUNTER$[rip]
	mov	eax, DWORD PTR [rax]
	cdqe
	mov	QWORD PTR -48[rbp], rax
	jmp	.L826
.L848:
	nop
.L827:
	lea	rax, FILENUMBERS$[rip]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	r8, .LC96[rip]
	mov	edx, 498
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -88[rbp], rax
	cmp	QWORD PTR -88[rbp], 0
	je	.L845
	jmp	[QWORD PTR -88[rbp]]
.L845:
	nop
.L829:
	mov	rdx, QWORD PTR -8[rbp]
	mov	rax, QWORD PTR -80[rbp]
	add	rax, rdx
	movzx	eax, BYTE PTR [rax]
	test	al, al
	jne	.L846
	lea	rax, FILENUMBERS$[rip]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	lea	r8, .LC96[rip]
	mov	edx, 498
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -104[rbp], rax
	cmp	QWORD PTR -104[rbp], 0
	je	.L847
	jmp	[QWORD PTR -104[rbp]]
.L847:
	nop
.L833:
	mov	rdx, QWORD PTR -8[rbp]
	mov	rax, QWORD PTR -96[rbp]
	add	rax, rdx
	mov	BYTE PTR [rax], 1
	mov	rax, QWORD PTR -8[rbp]
	mov	DWORD PTR -108[rbp], eax
	jmp	.L834
.L831:
.L846:
	nop
.L835:
	add	QWORD PTR -8[rbp], 1
.L826:
	mov	rax, QWORD PTR -8[rbp]
	cmp	rax, QWORD PTR -48[rbp]
	jle	.L848
	nop
.L836:
	lea	rax, FILENUMBERCOUNTER$[rip]
	mov	eax, DWORD PTR [rax]
	lea	edx, 1[rax]
	lea	rax, FILENUMBERCOUNTER$[rip]
	mov	DWORD PTR [rax], edx
	lea	rax, FILENUMBERCOUNTER$[rip]
	mov	eax, DWORD PTR [rax]
	cdqe
	add	rax, 1
	mov	rdx, rax
	lea	rax, FILENUMBERS$[rip]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	realloc
	mov	QWORD PTR -56[rbp], rax
	lea	rax, FILENUMBERS$[rip]
	mov	rdx, QWORD PTR -56[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, FILENUMBERS$[rip]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	lea	r8, .LC96[rip]
	mov	edx, 502
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	je	.L849
	jmp	[QWORD PTR -72[rbp]]
.L849:
	nop
.L838:
	lea	rax, FILENUMBERCOUNTER$[rip]
	mov	eax, DWORD PTR [rax]
	movsx	rdx, eax
	mov	rax, QWORD PTR -64[rbp]
	add	rax, rdx
	mov	BYTE PTR [rax], 1
	lea	rax, FILENUMBERCOUNTER$[rip]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR -108[rbp], eax
	nop
.L834:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	eax, DWORD PTR -108[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC98:
	.ascii "CLOSEFILE_\0"
	.align 8
.LC99:
	.ascii "F\0i\0l\0e\0 \0n\0u\0m\0b\0e\0r\0 \0c\0l\0o\0s\0e\0d\0 \0e\0a\0r\0l\0i\0e\0r\0\0\0"
	.align 8
.LC100:
	.ascii "F\0i\0l\0e\0 \0n\0u\0m\0b\0e\0r\0 \0n\0o\0t\0 \0r\0e\0t\0r\0i\0e\0v\0e\0d\0 \0f\0r\0o\0m\0 \0F\0r\0e\0e\0F\0i\0l\0e\0\0\0"
	.text
	.def	CLOSEFILE_;	.scl	3;	.type	32;	.endef
CLOSEFILE_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	DWORD PTR 16[rbp], ecx
	mov	DWORD PTR -72[rbp], 0
	lea	rcx, .LC96[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC98[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L851:
	lea	rax, FILENUMBERCOUNTER$[rip]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR 16[rbp], eax
	jg	.L868
	lea	rax, FILENUMBERS$[rip]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	lea	r8, .LC96[rip]
	mov	edx, 508
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -48[rbp], rax
	cmp	QWORD PTR -48[rbp], 0
	je	.L869
	jmp	[QWORD PTR -48[rbp]]
.L869:
	nop
.L855:
	mov	eax, DWORD PTR 16[rbp]
	movsx	rdx, eax
	mov	rax, QWORD PTR -40[rbp]
	add	rax, rdx
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L870
	lea	rax, FILENUMBERS$[rip]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	r8, .LC96[rip]
	mov	edx, 509
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -64[rbp], rax
	cmp	QWORD PTR -64[rbp], 0
	je	.L871
	jmp	[QWORD PTR -64[rbp]]
.L871:
	nop
.L859:
	mov	eax, DWORD PTR 16[rbp]
	movsx	rdx, eax
	mov	rax, QWORD PTR -56[rbp]
	add	rax, rdx
	mov	BYTE PTR [rax], 0
	nop
.L860:
	jmp	.L861
.L870:
	nop
.L857:
	mov	r8d, 1
	lea	rdx, .LC99[rip]
	mov	ecx, 0
	call	fb_PrintWstr
	jmp	.L861
.L868:
	nop
.L853:
	mov	r8d, 1
	lea	rdx, .LC100[rip]
	mov	ecx, 0
	call	fb_PrintWstr
.L861:
	mov	ecx, DWORD PTR 16[rbp]
	call	fb_FileClose
	mov	DWORD PTR -68[rbp], eax
	mov	eax, DWORD PTR -68[rbp]
	mov	DWORD PTR -72[rbp], eax
	nop
.L862:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	eax, DWORD PTR -72[rbp]
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC101:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\UString.bas\0"
	.text
	.def	_ZN7USTRINGC1Ev;	.scl	3;	.type	32;	.endef
_ZN7USTRINGC1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
.L873:
	lea	rcx, .LC101[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 24
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], 2
	mov	edx, 1
	mov	ecx, 2
	call	calloc
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 24[rax]
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L881
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	r8, .LC101[rip]
	mov	edx, 9
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L882
	jmp	[QWORD PTR -56[rbp]]
.L882:
	nop
.L877:
	mov	rax, QWORD PTR -48[rbp]
	mov	WORD PTR [rax], 0
	jmp	.L879
.L875:
.L878:
.L881:
	nop
.L879:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN7USTRINGC1ERw;	.scl	3;	.type	32;	.endef
_ZN7USTRINGC1ERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L884:
	lea	rcx, .LC101[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 24
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	fb_WstrLen
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rdx, QWORD PTR -40[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, [rax+rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	add	rdx, 2
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, rax
	call	calloc
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 24[rax]
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L889
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrAssign
	jmp	.L888
.L886:
.L887:
.L889:
	nop
.L888:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN7USTRINGC1ERS_;	.scl	3;	.type	32;	.endef
_ZN7USTRINGC1ERS_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L891:
	lea	rcx, .LC101[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 24
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 16[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 16[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, rax
	call	calloc
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 24[rax]
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L896
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	mov	r8, rdx
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrAssign
	jmp	.L895
.L893:
.L894:
.L896:
	nop
.L895:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN7USTRINGD1Ev;	.scl	3;	.type	32;	.endef
_ZN7USTRINGD1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L898:
	lea	rcx, .LC101[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L903
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	free
	jmp	.L902
.L900:
.L901:
.L903:
	nop
.L902:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC102:
	.ascii "WREALLOCATE\0"
	.text
	.def	WREALLOCATE;	.scl	3;	.type	32;	.endef
WREALLOCATE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L905:
	lea	rcx, .LC101[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC102[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L911
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	free
	mov	rax, QWORD PTR 24[rbp]
	add	rax, rax
	add	rax, 2
	mov	edx, 1
	mov	rcx, rax
	call	calloc
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rdx, QWORD PTR -40[rbp]
	mov	QWORD PTR [rax], rdx
	jmp	.L909
.L911:
	nop
.L907:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, rax
	add	rax, 2
	mov	edx, 1
	mov	rcx, rax
	call	calloc
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rdx, QWORD PTR -48[rbp]
	mov	QWORD PTR [rax], rdx
.L908:
.L909:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC103:
	.ascii "WLET\0"
	.text
	.def	WLET;	.scl	3;	.type	32;	.endef
WLET:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L913:
	lea	rcx, .LC101[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC103[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	fb_WstrLen
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	WREALLOCATE
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrAssign
.L914:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC104:
	.ascii "WADD\0"
	.text
	.def	WADD;	.scl	3;	.type	32;	.endef
WADD:
	push	rbp
	mov	rbp, rsp
	add	rsp, -128
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	eax, r8d
	mov	BYTE PTR 32[rbp], al
.L916:
	lea	rcx, .LC101[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC104[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	QWORD PTR -88[rbp], 0
	cmp	BYTE PTR 32[rbp], 0
	je	.L922
	mov	rcx, QWORD PTR 16[rbp]
	call	WGET
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rdx, QWORD PTR -56[rbp]
	lea	rax, -88[rbp]
	mov	rcx, rax
	call	WLET
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L919
.L922:
	nop
.L918:
	mov	rcx, QWORD PTR 16[rbp]
	call	WGET
	mov	QWORD PTR -64[rbp], rax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rdx, QWORD PTR -80[rbp]
	lea	rax, -88[rbp]
	mov	rcx, rax
	call	WLET
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L919:
	mov	rax, QWORD PTR -88[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	WLET
	lea	rax, -88[rbp]
	mov	rcx, rax
	call	_Z11WDEALLOCATERPw
.L920:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC105:
	.ascii "RESIZE\0"
	.text
	.def	_ZN7USTRING6RESIZEEu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN7USTRING6RESIZEEu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L924:
	lea	rcx, .LC101[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC105[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, [rax+rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	add	rdx, 2
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR 24[rbp], rax
	jle	.L929
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 24[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	call	WREALLOCATE
	jmp	.L927
.L926:
.L929:
	nop
.L927:
	mov	rax, QWORD PTR 16[rbp]
	mov	rdx, QWORD PTR 24[rbp]
	mov	QWORD PTR [rax], rdx
.L928:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN7USTRINGaSERS_;	.scl	3;	.type	32;	.endef
_ZN7USTRINGaSERS_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L931:
	lea	rcx, .LC101[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	cmp	rax, QWORD PTR 24[rbp]
	je	.L945
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	cmp	rdx, rax
	jle	.L946
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L947
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	free
	jmp	.L938
.L937:
.L947:
	nop
.L938:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	malloc
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 24[rax]
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR [rdx], rax
	jmp	.L939
.L935:
.L946:
	nop
.L939:
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 16[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 16[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 8[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 8[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L948
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	mov	r8, rdx
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrAssign
	jmp	.L944
.L933:
.L941:
.L942:
.L943:
.L945:
	nop
	jmp	.L944
.L948:
	nop
.L944:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN7USTRINGaSERw;	.scl	3;	.type	32;	.endef
_ZN7USTRINGaSERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L950:
	lea	rcx, .LC101[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	fb_WstrLen
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN7USTRING6RESIZEEu7INTEGER
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L955
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrAssign
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	fb_WstrLen
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rdx, QWORD PTR -48[rbp]
	add	rdx, rdx
	mov	QWORD PTR [rax], rdx
	jmp	.L954
.L952:
.L953:
.L955:
	nop
.L954:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN7USTRINGaSERKc;	.scl	3;	.type	32;	.endef
_ZN7USTRINGaSERKc:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L957:
	lea	rcx, .LC101[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLen
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN7USTRING6RESIZEEu7INTEGER
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L962
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 24[rbp]
	mov	r9d, 0
	mov	r8, rdx
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrAssignFromA
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLen
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rdx, QWORD PTR -48[rbp]
	add	rdx, rdx
	mov	QWORD PTR [rax], rdx
	jmp	.L961
.L959:
.L960:
.L962:
	nop
.L961:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN7USTRINGcvwEv;	.scl	3;	.type	32;	.endef
_ZN7USTRINGcvwEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC101[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L964:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L965:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN7USTRINGcvPvEv;	.scl	3;	.type	32;	.endef
_ZN7USTRINGcvPvEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC101[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L968:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L969:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC106:
	.ascii "VPTR\0"
	.text
	.def	_ZN7USTRING4VPTREv;	.scl	3;	.type	32;	.endef
_ZN7USTRING4VPTREv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC101[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC106[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L972:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L973:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_Zv13lenR7USTRING;	.scl	3;	.type	32;	.endef
_Zv13lenR7USTRING:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -56[rbp], 0
	lea	rcx, .LC101[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L976:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN7USTRING4VPTREv
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_WstrLen
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	nop
.L977:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -56[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC107:
	.ascii "TALLYNUMW\0"
	.text
	.def	_Z9TALLYNUMWRwS_;	.scl	3;	.type	32;	.endef
_Z9TALLYNUMWRwS_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 240
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -160[rbp], 0
	lea	rcx, .LC101[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC107[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L980:
	mov	QWORD PTR -168[rbp], 0
	mov	QWORD PTR -176[rbp], 0
	mov	QWORD PTR -184[rbp], 0
	mov	QWORD PTR -192[rbp], 0
	mov	QWORD PTR -200[rbp], 0
	mov	QWORD PTR -208[rbp], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	fb_WstrLen
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	test	rax, rax
	jne	.L1022
	mov	QWORD PTR -160[rbp], 0
	jmp	.L983
.L1022:
	nop
.L982:
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	fb_WstrLen
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -192[rbp]
	test	rax, rax
	jne	.L1023
	mov	QWORD PTR -160[rbp], 0
	jmp	.L983
.L1023:
	nop
.L985:
	mov	QWORD PTR -200[rbp], 0
	mov	QWORD PTR -168[rbp], -1
.L986:
	mov	rax, QWORD PTR -168[rbp]
	add	rax, 1
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	r8, .LC101[rip]
	mov	edx, 216
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -64[rbp], rax
	cmp	QWORD PTR -64[rbp], 0
	je	.L1024
	jmp	[QWORD PTR -64[rbp]]
.L1024:
	nop
.L988:
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	r8, .LC101[rip]
	mov	edx, 216
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L1025
	jmp	[QWORD PTR -80[rbp]]
.L1025:
	nop
.L990:
	mov	rax, QWORD PTR -168[rbp]
	add	rax, rax
	mov	rdx, rax
	mov	rax, QWORD PTR -56[rbp]
	add	rax, rdx
	movzx	edx, WORD PTR [rax]
	mov	rax, QWORD PTR -72[rbp]
	movzx	eax, WORD PTR [rax]
	cmp	dx, ax
	jne	.L1026
	nop
.L992:
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	r8, .LC101[rip]
	mov	edx, 217
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -96[rbp], rax
	cmp	QWORD PTR -96[rbp], 0
	je	.L1027
	jmp	[QWORD PTR -96[rbp]]
.L1027:
	nop
.L995:
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	lea	r8, .LC101[rip]
	mov	edx, 217
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -112[rbp], rax
	cmp	QWORD PTR -112[rbp], 0
	je	.L1028
	jmp	[QWORD PTR -112[rbp]]
.L1028:
	nop
.L997:
	mov	rax, QWORD PTR -168[rbp]
	add	rax, rax
	mov	rdx, rax
	mov	rax, QWORD PTR -88[rbp]
	add	rax, rdx
	movzx	edx, WORD PTR [rax]
	mov	rax, QWORD PTR -104[rbp]
	movzx	eax, WORD PTR [rax]
	cmp	dx, ax
	jne	.L1029
	mov	QWORD PTR -176[rbp], 0
	mov	rax, QWORD PTR -192[rbp]
	sub	rax, 1
	mov	QWORD PTR -120[rbp], rax
	jmp	.L1000
.L1033:
	nop
.L1001:
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	r8, .LC101[rip]
	mov	edx, 219
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -136[rbp], rax
	cmp	QWORD PTR -136[rbp], 0
	je	.L1030
	jmp	[QWORD PTR -136[rbp]]
.L1030:
	nop
.L1003:
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	lea	r8, .LC101[rip]
	mov	edx, 219
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -152[rbp], rax
	cmp	QWORD PTR -152[rbp], 0
	je	.L1031
	jmp	[QWORD PTR -152[rbp]]
.L1031:
	nop
.L1005:
	mov	rdx, QWORD PTR -176[rbp]
	mov	rax, QWORD PTR -168[rbp]
	add	rax, rdx
	add	rax, rax
	mov	rdx, rax
	mov	rax, QWORD PTR -128[rbp]
	add	rax, rdx
	movzx	edx, WORD PTR [rax]
	mov	rax, QWORD PTR -176[rbp]
	add	rax, rax
	mov	rcx, rax
	mov	rax, QWORD PTR -144[rbp]
	add	rax, rcx
	movzx	eax, WORD PTR [rax]
	cmp	dx, ax
	jne	.L1032
.L1007:
	nop
.L1008:
	mov	rax, QWORD PTR -176[rbp]
	add	rax, 1
	mov	QWORD PTR -176[rbp], rax
.L1000:
	mov	rax, QWORD PTR -176[rbp]
	cmp	QWORD PTR -120[rbp], rax
	jge	.L1033
	jmp	.L1010
.L999:
.L1009:
.L1029:
	nop
.L1010:
	mov	rax, QWORD PTR -200[rbp]
	add	rax, 1
	mov	QWORD PTR -200[rbp], rax
	mov	rdx, QWORD PTR -168[rbp]
	mov	rax, QWORD PTR -192[rbp]
	add	rax, rdx
	sub	rax, 1
	mov	QWORD PTR -168[rbp], rax
	jmp	.L993
.L1026:
	nop
	jmp	.L993
.L1032:
	nop
.L993:
	mov	rax, QWORD PTR -184[rbp]
	lea	rdx, -1[rax]
	mov	rax, QWORD PTR -168[rbp]
	cmp	rdx, rax
	jle	.L1034
	jmp	.L986
.L1034:
	nop
.L1011:
	mov	rax, QWORD PTR -200[rbp]
	mov	QWORD PTR -160[rbp], rax
	nop
.L983:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -160[rbp]
	leave
	ret
	.def	_Zv23catR7USTRINGS0_;	.scl	3;	.type	32;	.endef
_Zv23catR7USTRINGS0_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
.L1036:
	lea	rcx, .LC101[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 32[rbp]
	mov	rcx, rax
	call	_ZN7USTRING4VPTREv
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN7USTRING4VPTREv
	mov	QWORD PTR -48[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN7USTRINGC1ERw
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	nop
.L1037:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR 16[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC108:
	.ascii "REPLACE\0"
	.text
	.def	REPLACE;	.scl	3;	.type	32;	.endef
REPLACE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 496
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
	mov	eax, DWORD PTR 64[rbp]
	mov	BYTE PTR -452[rbp], al
.L1040:
	lea	rcx, .LC101[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC108[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 32[rbp]
	mov	rcx, rax
	call	fb_WstrLen
	mov	QWORD PTR -48[rbp], rax
	cmp	QWORD PTR -48[rbp], 0
	jne	.L1116
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN7USTRINGC1ERw
	jmp	.L1043
.L1116:
	nop
.L1042:
	mov	QWORD PTR -376[rbp], 0
	mov	QWORD PTR -384[rbp], 0
	cmp	BYTE PTR -452[rbp], 0
	je	.L1117
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -376[rbp], rax
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -384[rbp], rax
	jmp	.L1046
.L1117:
	nop
.L1045:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rdx, QWORD PTR -64[rbp]
	lea	rax, -376[rbp]
	mov	rcx, rax
	call	WLET
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR 32[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rdx, QWORD PTR -80[rbp]
	lea	rax, -384[rbp]
	mov	rcx, rax
	call	WLET
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1046:
	mov	rdx, QWORD PTR -384[rbp]
	mov	rax, QWORD PTR -376[rbp]
	mov	rcx, rax
	call	_Z9TALLYNUMWRwS_
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	QWORD PTR -96[rbp], rax
	cmp	QWORD PTR -96[rbp], 0
	jne	.L1118
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN7USTRINGC1ERw
	jmp	.L1043
.L1118:
	nop
.L1048:
	mov	DWORD PTR -388[rbp], 0
	mov	DWORD PTR -392[rbp], 0
	mov	DWORD PTR -396[rbp], 0
	mov	DWORD PTR -400[rbp], 0
	mov	DWORD PTR -404[rbp], 0
	mov	rax, QWORD PTR 32[rbp]
	mov	rcx, rax
	call	fb_WstrLen
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR 40[rbp]
	mov	rcx, rax
	call	fb_WstrLen
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	fb_WstrLen
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	fb_WstrLen
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	sub	rax, QWORD PTR -112[rbp]
	imul	rax, QWORD PTR -96[rbp]
	mov	rdx, rax
	mov	rax, QWORD PTR -152[rbp]
	add	rax, rdx
	mov	QWORD PTR -96[rbp], rax
	lea	rax, -448[rbp]
	mov	rcx, rax
	call	_ZN7USTRINGC1Ev
	mov	rdx, QWORD PTR -96[rbp]
	lea	rax, -448[rbp]
	mov	rcx, rax
	call	_ZN7USTRING6RESIZEEu7INTEGER
	lea	rax, -448[rbp]
	mov	rcx, rax
	call	_ZN7USTRING4VPTREv
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR 48[rbp]
	sub	eax, 1
	mov	DWORD PTR -392[rbp], eax
	mov	QWORD PTR -8[rbp], 0
	mov	eax, DWORD PTR -392[rbp]
	cdqe
	sub	rax, 1
	mov	QWORD PTR -176[rbp], rax
	jmp	.L1049
.L1121:
	nop
.L1050:
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -344[rbp], rax
	mov	rax, QWORD PTR -344[rbp]
	lea	r8, .LC101[rip]
	mov	edx, 256
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -352[rbp], rax
	cmp	QWORD PTR -352[rbp], 0
	je	.L1119
	jmp	[QWORD PTR -352[rbp]]
.L1119:
	nop
.L1052:
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -360[rbp], rax
	mov	rax, QWORD PTR -360[rbp]
	lea	r8, .LC101[rip]
	mov	edx, 256
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -368[rbp], rax
	cmp	QWORD PTR -368[rbp], 0
	je	.L1120
	jmp	[QWORD PTR -368[rbp]]
.L1120:
	nop
.L1054:
	mov	rax, QWORD PTR -8[rbp]
	add	rax, rax
	mov	rdx, rax
	mov	rax, QWORD PTR -344[rbp]
	add	rax, rdx
	mov	rdx, QWORD PTR -8[rbp]
	add	rdx, rdx
	mov	rcx, rdx
	mov	rdx, QWORD PTR -360[rbp]
	add	rdx, rcx
	movzx	eax, WORD PTR [rax]
	mov	WORD PTR [rdx], ax
.L1055:
	add	QWORD PTR -8[rbp], 1
.L1049:
	mov	rax, QWORD PTR -8[rbp]
	cmp	rax, QWORD PTR -176[rbp]
	jle	.L1121
	nop
.L1056:
.L1057:
	mov	rax, QWORD PTR -376[rbp]
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	lea	r8, .LC101[rip]
	mov	edx, 259
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -192[rbp], rax
	cmp	QWORD PTR -192[rbp], 0
	je	.L1122
	jmp	[QWORD PTR -192[rbp]]
.L1122:
	nop
.L1059:
	mov	rax, QWORD PTR -384[rbp]
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	lea	r8, .LC101[rip]
	mov	edx, 259
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -208[rbp], rax
	cmp	QWORD PTR -208[rbp], 0
	je	.L1123
	jmp	[QWORD PTR -208[rbp]]
.L1123:
	nop
.L1061:
	mov	eax, DWORD PTR -392[rbp]
	cdqe
	add	rax, rax
	mov	rdx, rax
	mov	rax, QWORD PTR -184[rbp]
	add	rax, rdx
	movzx	edx, WORD PTR [rax]
	mov	rax, QWORD PTR -200[rbp]
	movzx	eax, WORD PTR [rax]
	cmp	dx, ax
	jne	.L1124
	mov	DWORD PTR -400[rbp], 0
	mov	rax, QWORD PTR -112[rbp]
	sub	eax, 1
	mov	DWORD PTR -212[rbp], eax
	jmp	.L1064
.L1128:
	nop
.L1065:
	mov	rax, QWORD PTR -376[rbp]
	mov	QWORD PTR -224[rbp], rax
	mov	rax, QWORD PTR -224[rbp]
	lea	r8, .LC101[rip]
	mov	edx, 261
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -232[rbp], rax
	cmp	QWORD PTR -232[rbp], 0
	je	.L1125
	jmp	[QWORD PTR -232[rbp]]
.L1125:
	nop
.L1067:
	mov	rax, QWORD PTR -384[rbp]
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -240[rbp]
	lea	r8, .LC101[rip]
	mov	edx, 261
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -248[rbp], rax
	cmp	QWORD PTR -248[rbp], 0
	je	.L1126
	jmp	[QWORD PTR -248[rbp]]
.L1126:
	nop
.L1069:
	mov	eax, DWORD PTR -392[rbp]
	movsx	rdx, eax
	mov	eax, DWORD PTR -400[rbp]
	cdqe
	add	rax, rdx
	add	rax, rax
	mov	rdx, rax
	mov	rax, QWORD PTR -224[rbp]
	add	rax, rdx
	movzx	edx, WORD PTR [rax]
	mov	eax, DWORD PTR -400[rbp]
	cdqe
	add	rax, rax
	mov	rcx, rax
	mov	rax, QWORD PTR -240[rbp]
	add	rax, rcx
	movzx	eax, WORD PTR [rax]
	cmp	dx, ax
	jne	.L1127
.L1071:
	nop
.L1073:
	mov	eax, DWORD PTR -400[rbp]
	add	eax, 1
	mov	DWORD PTR -400[rbp], eax
.L1064:
	mov	eax, DWORD PTR -400[rbp]
	cmp	DWORD PTR -212[rbp], eax
	jge	.L1128
	nop
.L1074:
	mov	DWORD PTR -388[rbp], 1
	jmp	.L1075
.L1063:
.L1124:
	nop
.L1075:
	mov	eax, DWORD PTR -388[rbp]
	test	eax, eax
	je	.L1129
	mov	DWORD PTR -400[rbp], 0
	mov	rax, QWORD PTR -128[rbp]
	sub	eax, 1
	mov	DWORD PTR -252[rbp], eax
	jmp	.L1077
.L1132:
	nop
.L1078:
	mov	rax, QWORD PTR 40[rbp]
	mov	QWORD PTR -264[rbp], rax
	mov	rax, QWORD PTR -264[rbp]
	lea	r8, .LC101[rip]
	mov	edx, 267
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -272[rbp], rax
	cmp	QWORD PTR -272[rbp], 0
	je	.L1130
	jmp	[QWORD PTR -272[rbp]]
.L1130:
	nop
.L1080:
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -280[rbp], rax
	mov	rax, QWORD PTR -280[rbp]
	lea	r8, .LC101[rip]
	mov	edx, 267
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -288[rbp], rax
	cmp	QWORD PTR -288[rbp], 0
	je	.L1131
	jmp	[QWORD PTR -288[rbp]]
.L1131:
	nop
.L1082:
	mov	eax, DWORD PTR -400[rbp]
	cdqe
	add	rax, rax
	mov	rdx, rax
	mov	rax, QWORD PTR -264[rbp]
	add	rax, rdx
	mov	edx, DWORD PTR -396[rbp]
	movsx	rdx, edx
	add	rdx, rdx
	mov	rcx, rdx
	mov	rdx, QWORD PTR -280[rbp]
	add	rdx, rcx
	movzx	eax, WORD PTR [rax]
	mov	WORD PTR [rdx], ax
	mov	eax, DWORD PTR -396[rbp]
	add	eax, 1
	mov	DWORD PTR -396[rbp], eax
.L1083:
	mov	eax, DWORD PTR -400[rbp]
	add	eax, 1
	mov	DWORD PTR -400[rbp], eax
.L1077:
	mov	eax, DWORD PTR -400[rbp]
	cmp	DWORD PTR -252[rbp], eax
	jge	.L1132
	nop
.L1084:
	mov	rax, QWORD PTR -112[rbp]
	mov	edx, eax
	mov	eax, DWORD PTR -392[rbp]
	add	eax, edx
	mov	DWORD PTR -392[rbp], eax
	mov	DWORD PTR -388[rbp], 0
	mov	eax, DWORD PTR -404[rbp]
	add	eax, 1
	mov	DWORD PTR -404[rbp], eax
	jmp	.L1085
.L1072:
.L1086:
.L1127:
	nop
	jmp	.L1087
.L1129:
	nop
.L1087:
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -296[rbp], rax
	mov	rax, QWORD PTR -296[rbp]
	lea	r8, .LC101[rip]
	mov	edx, 276
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -304[rbp], rax
	cmp	QWORD PTR -304[rbp], 0
	je	.L1133
	jmp	[QWORD PTR -304[rbp]]
.L1133:
	nop
.L1089:
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -312[rbp], rax
	mov	rax, QWORD PTR -312[rbp]
	lea	r8, .LC101[rip]
	mov	edx, 276
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -320[rbp], rax
	cmp	QWORD PTR -320[rbp], 0
	je	.L1134
	jmp	[QWORD PTR -320[rbp]]
.L1134:
	nop
.L1091:
	mov	eax, DWORD PTR -392[rbp]
	cdqe
	add	rax, rax
	mov	rdx, rax
	mov	rax, QWORD PTR -296[rbp]
	add	rax, rdx
	mov	edx, DWORD PTR -396[rbp]
	movsx	rdx, edx
	add	rdx, rdx
	mov	rcx, rdx
	mov	rdx, QWORD PTR -312[rbp]
	add	rdx, rcx
	movzx	eax, WORD PTR [rax]
	mov	WORD PTR [rdx], ax
	mov	eax, DWORD PTR -396[rbp]
	add	eax, 1
	mov	DWORD PTR -396[rbp], eax
	mov	eax, DWORD PTR -392[rbp]
	add	eax, 1
	mov	DWORD PTR -392[rbp], eax
.L1085:
	mov	eax, DWORD PTR -392[rbp]
	cdqe
	cmp	QWORD PTR -144[rbp], rax
	jle	.L1135
	jmp	.L1056
.L1135:
	nop
.L1092:
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -328[rbp], rax
	mov	rax, QWORD PTR -328[rbp]
	lea	r8, .LC101[rip]
	mov	edx, 280
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -336[rbp], rax
	cmp	QWORD PTR -336[rbp], 0
	je	.L1136
	jmp	[QWORD PTR -336[rbp]]
.L1136:
	nop
.L1094:
	mov	eax, DWORD PTR -396[rbp]
	cdqe
	add	rax, rax
	mov	rdx, rax
	mov	rax, QWORD PTR -328[rbp]
	add	rax, rdx
	mov	WORD PTR [rax], 0
	mov	eax, DWORD PTR -404[rbp]
	movsx	rdx, eax
	mov	rax, QWORD PTR 56[rbp]
	mov	QWORD PTR [rax], rdx
	cmp	BYTE PTR -452[rbp], 0
	jne	.L1137
	lea	rax, -376[rbp]
	mov	rcx, rax
	call	_Z11WDEALLOCATERPw
	lea	rax, -384[rbp]
	mov	rcx, rax
	call	_Z11WDEALLOCATERPw
	jmp	.L1097
.L1096:
.L1137:
	nop
.L1097:
	mov	rax, QWORD PTR -168[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN7USTRINGC1ERw
	lea	rax, -448[rbp]
	mov	rcx, rax
	call	_ZN7USTRINGD1Ev
	nop
.L1043:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR 16[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC109:
	.ascii "WDEALLOCATE\0"
	.text
	.def	_Z11WDEALLOCATERPw;	.scl	3;	.type	32;	.endef
_Z11WDEALLOCATERPw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L1139:
	lea	rcx, .LC101[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC109[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L1143
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	free
	jmp	.L1141
.L1143:
	nop
.L1141:
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], 0
.L1142:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC110:
	.ascii "WGET\0"
	.text
	.def	WGET;	.scl	3;	.type	32;	.endef
WGET:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC101[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC110[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1145:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jne	.L1152
	lea	rax, .LC77[rip]
	mov	QWORD PTR -40[rbp], rax
	jmp	.L1149
.L1152:
	nop
.L1147:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -40[rbp], rax
.L1148:
	nop
.L1149:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC111:
	.ascii "TOUTF8\0"
	.text
	.def	TOUTF8;	.scl	3;	.type	32;	.endef
TOUTF8:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 176
	mov	QWORD PTR 16[rbp], rcx
	lea	rax, -96[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	lea	rcx, .LC101[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC111[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1154:
	mov	rcx, QWORD PTR 16[rbp]
	call	fb_WstrLen
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	edx, eax
	mov	eax, edx
	sal	eax, 2
	add	eax, edx
	add	eax, 1
	mov	DWORD PTR -100[rbp], eax
	mov	eax, DWORD PTR -100[rbp]
	mov	eax, eax
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrFill1
	mov	QWORD PTR -56[rbp], rax
	mov	rdx, QWORD PTR -56[rbp]
	lea	rax, -128[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -128[rbp]
	mov	rcx, QWORD PTR [rax]
	mov	rdx, QWORD PTR -48[rbp]
	lea	rax, -100[rbp]
	mov	QWORD PTR 32[rsp], rax
	mov	r9, rcx
	mov	r8, rdx
	mov	rdx, QWORD PTR 16[rbp]
	mov	ecx, 1
	call	fb_WCharToUTF
	mov	QWORD PTR -64[rbp], rax
	mov	rdx, QWORD PTR -64[rbp]
	lea	rax, -96[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -128[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	nop
.L1155:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	lea	rax, -96[rbp]
	mov	rcx, rax
	call	fb_StrAllocTempResult
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC112:
	.ascii "FILEEXISTS\0"
	.text
	.def	_Z10FILEEXISTSRw;	.scl	3;	.type	32;	.endef
_Z10FILEEXISTSRw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	BYTE PTR -37[rbp], 0
	lea	rcx, .LC101[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC112[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1158:
	mov	rcx, QWORD PTR 16[rbp]
	call	PathFileExistsW
	mov	DWORD PTR -36[rbp], eax
	cmp	DWORD PTR -36[rbp], 0
	je	.L1165
	mov	BYTE PTR -37[rbp], 1
	jmp	.L1162
.L1165:
	nop
.L1160:
	mov	BYTE PTR -37[rbp], 0
.L1161:
	nop
.L1162:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -37[rbp]
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC113:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\SysUtils.bas\0"
.LC114:
	.ascii "ENUMTHREADWINDOWSPROC\0"
	.text
	.def	ENUMTHREADWINDOWSPROC;	.scl	3;	.type	32;	.endef
ENUMTHREADWINDOWSPROC:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	DWORD PTR -68[rbp], 0
	lea	rcx, .LC113[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC114[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1167:
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	edx, -20
	mov	rcx, QWORD PTR 16[rbp]
	call	GetWindowLongW
	mov	DWORD PTR -44[rbp], eax
	mov	eax, DWORD PTR -44[rbp]
	cdqe
	and	eax, 262144
	test	rax, rax
	je	.L1176
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	r8, .LC113[rip]
	mov	edx, 21
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -64[rbp], rax
	cmp	QWORD PTR -64[rbp], 0
	je	.L1177
	jmp	[QWORD PTR -64[rbp]]
.L1177:
	nop
.L1171:
	mov	rax, QWORD PTR -56[rbp]
	mov	rdx, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	jmp	.L1172
.L1169:
.L1176:
	nop
.L1172:
	mov	DWORD PTR -68[rbp], -1
	nop
.L1173:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	eax, DWORD PTR -68[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC115:
	.ascii "ZGET\0"
	.text
	.def	ZGET;	.scl	3;	.type	32;	.endef
ZGET:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	lea	rax, -64[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	lea	rcx, .LC113[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC115[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1179:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jne	.L1185
	lea	rax, -64[rbp]
	mov	r9d, 0
	lea	r8, .LC77[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA_Init
	jmp	.L1182
.L1185:
	nop
.L1181:
	mov	rax, QWORD PTR 16[rbp]
	mov	rdx, QWORD PTR [rax]
	lea	rax, -64[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	nop
.L1182:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	lea	rax, -64[rbp]
	mov	rcx, rax
	call	fb_StrAllocTempResult
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC116:
	.ascii "CLASSNAME\0"
	.text
	.def	_ZN14CLASSCONTAINER9CLASSTYPE16CLASSNAME__get__Ev;	.scl	3;	.type	32;	.endef
_ZN14CLASSCONTAINER9CLASSTYPE16CLASSNAME__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -48[rbp], 0
	lea	rcx, .LC113[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC116[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1187:
	mov	rcx, QWORD PTR 16[rbp]
	call	WGET
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	nop
.L1188:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -48[rbp]
	leave
	ret
	.def	_ZN14CLASSCONTAINER9CLASSTYPE16CLASSNAME__set__ERw;	.scl	3;	.type	32;	.endef
_ZN14CLASSCONTAINER9CLASSTYPE16CLASSNAME__set__ERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L1191:
	lea	rcx, .LC113[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC116[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	WLET
.L1192:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC117:
	.ascii "CLASSANCESTOR\0"
	.text
	.def	_ZN14CLASSCONTAINER9CLASSTYPE20CLASSANCESTOR__set__ERw;	.scl	3;	.type	32;	.endef
_ZN14CLASSCONTAINER9CLASSTYPE20CLASSANCESTOR__set__ERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L1194:
	lea	rcx, .LC113[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC117[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 8[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	call	WLET
.L1195:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN14CLASSCONTAINER9CLASSTYPEC1Ev;	.scl	3;	.type	32;	.endef
_ZN14CLASSCONTAINER9CLASSTYPEC1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], 0
	lea	rcx, .LC113[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1197:
.L1198:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN14CLASSCONTAINER9CLASSTYPED1Ev;	.scl	3;	.type	32;	.endef
_ZN14CLASSCONTAINER9CLASSTYPED1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L1200:
	lea	rcx, .LC113[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L1206
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	free
	jmp	.L1202
.L1206:
	nop
.L1202:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L1207
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	free
	jmp	.L1205
.L1204:
.L1207:
	nop
.L1205:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC118:
	.ascii "FINDCLASS\0"
	.text
	.def	_ZN14CLASSCONTAINER9FINDCLASSERw;	.scl	3;	.type	32;	.endef
_ZN14CLASSCONTAINER9FINDCLASSERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 192
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -136[rbp], 0
	lea	rcx, .LC113[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC118[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L1209:
	mov	QWORD PTR -8[rbp], 0
	mov	edx, 1
	lea	rcx, _ZN14CLASSCONTAINER8CLASSES$E[rip]
	call	fb_ArrayUBound
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	jmp	.L1210
.L1225:
	nop
.L1211:
	mov	edx, 0
	mov	rcx, QWORD PTR 16[rbp]
	call	fb_WstrUcase2
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -80[rbp], rax
	lea	rax, _ZN14CLASSCONTAINER8CLASSES$E[rip+64]
	mov	r8, QWORD PTR [rax]
	lea	rax, _ZN14CLASSCONTAINER8CLASSES$E[rip+56]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -80[rbp]
	lea	rcx, .LC113[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 102
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -88[rbp], rax
	cmp	QWORD PTR -88[rbp], 0
	je	.L1223
	jmp	[QWORD PTR -88[rbp]]
.L1223:
	nop
.L1213:
	mov	rdx, QWORD PTR -80[rbp]
	mov	rax, rdx
	add	rax, rax
	add	rax, rdx
	sal	rax, 3
	mov	rdx, rax
	lea	rax, _ZN14CLASSCONTAINER8CLASSES$E[rip]
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	mov	rcx, rax
	call	_ZN14CLASSCONTAINER9CLASSTYPE16CLASSNAME__get__Ev
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrUcase2
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	QWORD PTR -112[rbp], rax
	mov	rdx, QWORD PTR -72[rbp]
	mov	rax, QWORD PTR -112[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -116[rbp], eax
	cmp	DWORD PTR -116[rbp], 0
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -112[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -128[rbp], 0
	je	.L1224
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -136[rbp], rax
	jmp	.L1216
.L1215:
.L1224:
	nop
.L1217:
	add	QWORD PTR -8[rbp], 1
.L1210:
	mov	rax, QWORD PTR -8[rbp]
	cmp	rax, QWORD PTR -56[rbp]
	jle	.L1225
	nop
.L1218:
	mov	QWORD PTR -136[rbp], -1
	nop
.L1216:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -136[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC119:
	.ascii "STORECLASS\0"
	.text
	.def	_ZN14CLASSCONTAINER10STORECLASSERwS0_Pv;	.scl	3;	.type	32;	.endef
_ZN14CLASSCONTAINER10STORECLASSERwS0_Pv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 208
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
.L1227:
	lea	rcx, .LC113[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC119[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN14CLASSCONTAINER9FINDCLASSERw
	mov	QWORD PTR -40[rbp], rax
	cmp	QWORD PTR -40[rbp], -1
	jne	.L1246
.L1228:
	mov	edx, 1
	lea	rcx, _ZN14CLASSCONTAINER8CLASSES$E[rip]
	call	fb_ArrayUBound
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	add	rax, 1
	mov	QWORD PTR 48[rsp], rax
	mov	QWORD PTR 40[rsp], 0
	mov	QWORD PTR 32[rsp], 1
	lea	r9, _ZN14CLASSCONTAINER9CLASSTYPED1Ev[rip]
	lea	r8, _ZN14CLASSCONTAINER9CLASSTYPEC1Ev[rip]
	mov	edx, 24
	lea	rcx, _ZN14CLASSCONTAINER8CLASSES$E[rip]
	call	fb_ArrayRedimPresvObj
	mov	DWORD PTR -52[rbp], eax
	cmp	DWORD PTR -52[rbp], 0
	je	.L1247
	jmp	.L1242
.L1233:
	jmp	rax
.L1242:
	lea	r9, .L1232[rip]
	lea	r8, .L1228[rip]
	lea	rdx, .LC113[rip]
	mov	ecx, 109
	call	fb_ErrorThrowAt
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	jmp	.L1233
.L1247:
	nop
.L1232:
	mov	edx, 1
	lea	rcx, _ZN14CLASSCONTAINER8CLASSES$E[rip]
	call	fb_ArrayUBound
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	lea	rax, _ZN14CLASSCONTAINER8CLASSES$E[rip+64]
	mov	r8, QWORD PTR [rax]
	lea	rax, _ZN14CLASSCONTAINER8CLASSES$E[rip+56]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -80[rbp]
	lea	rcx, .LC113[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 110
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -88[rbp], rax
	cmp	QWORD PTR -88[rbp], 0
	je	.L1248
	mov	rax, QWORD PTR -88[rbp]
	jmp	.L1233
.L1248:
	nop
.L1235:
	mov	rdx, QWORD PTR -80[rbp]
	mov	rax, rdx
	add	rax, rax
	add	rax, rdx
	sal	rax, 3
	mov	rdx, rax
	lea	rax, _ZN14CLASSCONTAINER8CLASSES$E[rip]
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	mov	rdx, QWORD PTR 16[rbp]
	mov	rcx, rax
	call	_ZN14CLASSCONTAINER9CLASSTYPE16CLASSNAME__set__ERw
	mov	edx, 1
	lea	rcx, _ZN14CLASSCONTAINER8CLASSES$E[rip]
	call	fb_ArrayUBound
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	lea	rax, _ZN14CLASSCONTAINER8CLASSES$E[rip+64]
	mov	r8, QWORD PTR [rax]
	lea	rax, _ZN14CLASSCONTAINER8CLASSES$E[rip+56]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -104[rbp]
	lea	rcx, .LC113[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 111
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -112[rbp], rax
	cmp	QWORD PTR -112[rbp], 0
	je	.L1249
	mov	rax, QWORD PTR -112[rbp]
	jmp	.L1233
.L1249:
	nop
.L1237:
	mov	rdx, QWORD PTR -104[rbp]
	mov	rax, rdx
	add	rax, rax
	add	rax, rdx
	sal	rax, 3
	mov	rdx, rax
	lea	rax, _ZN14CLASSCONTAINER8CLASSES$E[rip]
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	mov	rcx, rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	call	_ZN14CLASSCONTAINER9CLASSTYPE20CLASSANCESTOR__set__ERw
	mov	edx, 1
	lea	rcx, _ZN14CLASSCONTAINER8CLASSES$E[rip]
	call	fb_ArrayUBound
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	QWORD PTR -128[rbp], rax
	lea	rax, _ZN14CLASSCONTAINER8CLASSES$E[rip+64]
	mov	r8, QWORD PTR [rax]
	lea	rax, _ZN14CLASSCONTAINER8CLASSES$E[rip+56]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -128[rbp]
	lea	rcx, .LC113[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 112
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -136[rbp], rax
	cmp	QWORD PTR -136[rbp], 0
	je	.L1250
	mov	rax, QWORD PTR -136[rbp]
	jmp	.L1233
.L1250:
	nop
.L1239:
	mov	rdx, QWORD PTR -128[rbp]
	mov	rax, rdx
	add	rax, rax
	add	rax, rdx
	sal	rax, 3
	mov	rdx, rax
	lea	rax, _ZN14CLASSCONTAINER8CLASSES$E[rip]
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	add	rax, 16
	mov	rdx, rax
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR [rdx], rax
	jmp	.L1241
.L1229:
.L1240:
.L1246:
	nop
.L1241:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC120:
	.ascii "GETCLASSPROC\0"
	.text
	.def	_ZN14CLASSCONTAINER12GETCLASSPROCERw;	.scl	3;	.type	32;	.endef
_ZN14CLASSCONTAINER12GETCLASSPROCERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 208
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -152[rbp], 0
	lea	rcx, .LC113[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC120[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L1252:
	mov	QWORD PTR -8[rbp], 0
	mov	edx, 1
	lea	rcx, _ZN14CLASSCONTAINER8CLASSES$E[rip]
	call	fb_ArrayUBound
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	jmp	.L1253
.L1272:
	nop
.L1254:
	mov	edx, 0
	mov	rcx, QWORD PTR 16[rbp]
	call	fb_WstrUcase2
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -80[rbp], rax
	lea	rax, _ZN14CLASSCONTAINER8CLASSES$E[rip+64]
	mov	r8, QWORD PTR [rax]
	lea	rax, _ZN14CLASSCONTAINER8CLASSES$E[rip+56]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -80[rbp]
	lea	rcx, .LC113[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 118
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -88[rbp], rax
	cmp	QWORD PTR -88[rbp], 0
	je	.L1269
	jmp	[QWORD PTR -88[rbp]]
.L1269:
	nop
.L1256:
	mov	rdx, QWORD PTR -80[rbp]
	mov	rax, rdx
	add	rax, rax
	add	rax, rdx
	sal	rax, 3
	mov	rdx, rax
	lea	rax, _ZN14CLASSCONTAINER8CLASSES$E[rip]
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	mov	rcx, rax
	call	_ZN14CLASSCONTAINER9CLASSTYPE16CLASSNAME__get__Ev
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrUcase2
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	QWORD PTR -112[rbp], rax
	mov	rdx, QWORD PTR -72[rbp]
	mov	rax, QWORD PTR -112[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -116[rbp], eax
	cmp	DWORD PTR -116[rbp], 0
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -112[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -128[rbp], 0
	je	.L1270
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -136[rbp], rax
	lea	rax, _ZN14CLASSCONTAINER8CLASSES$E[rip+64]
	mov	r8, QWORD PTR [rax]
	lea	rax, _ZN14CLASSCONTAINER8CLASSES$E[rip+56]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -136[rbp]
	lea	rcx, .LC113[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 118
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -144[rbp], rax
	cmp	QWORD PTR -144[rbp], 0
	je	.L1271
	jmp	[QWORD PTR -144[rbp]]
.L1271:
	nop
.L1260:
	mov	rdx, QWORD PTR -136[rbp]
	mov	rax, rdx
	add	rax, rax
	add	rax, rdx
	sal	rax, 3
	mov	rdx, rax
	lea	rax, _ZN14CLASSCONTAINER8CLASSES$E[rip]
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -152[rbp], rax
	jmp	.L1261
.L1258:
.L1270:
	nop
.L1262:
	add	QWORD PTR -8[rbp], 1
.L1253:
	mov	rax, QWORD PTR -8[rbp]
	cmp	rax, QWORD PTR -56[rbp]
	jle	.L1272
	nop
.L1263:
	mov	QWORD PTR -152[rbp], 0
	nop
.L1261:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -152[rbp]
	leave
	ret
	.def	_ZN14CLASSCONTAINER12GETCLASSPROCEP6HWND__;	.scl	3;	.type	32;	.endef
_ZN14CLASSCONTAINER12GETCLASSPROCEP6HWND__:
	push	rbp
	mov	rbp, rsp
	push	rdi
	sub	rsp, 648
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -88[rbp], 0
	lea	rcx, .LC113[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rcx, .LC120[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
.L1274:
	lea	rax, -608[rbp]
	mov	rdx, rax
	mov	eax, 0
	mov	ecx, 63
	mov	rdi, rdx
	rep stosq
	mov	rdx, rdi
	mov	DWORD PTR [rdx], eax
	add	rdx, 4
	mov	WORD PTR [rdx], ax
	add	rdx, 2
	mov	QWORD PTR -616[rbp], 0
	lea	rax, -608[rbp]
	mov	r8d, 255
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	GetClassNameW
	mov	DWORD PTR -52[rbp], eax
	mov	eax, DWORD PTR -52[rbp]
	cdqe
	mov	QWORD PTR -616[rbp], rax
	mov	rdx, QWORD PTR -616[rbp]
	lea	rax, -608[rbp]
	mov	rcx, rax
	call	fb_WstrLeft
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, rax
	call	_ZN14CLASSCONTAINER12GETCLASSPROCERw
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	nop
.L1275:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -88[rbp]
	add	rsp, 648
	pop	rdi
	pop	rbp
	ret
	.section .rdata,"dr"
.LC121:
	.ascii "FINALIZATION\0"
	.text
	.def	_ZN14CLASSCONTAINER12FINALIZATIONEv;	.scl	3;	.type	32;	.endef
_ZN14CLASSCONTAINER12FINALIZATIONEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 144
.L1278:
	lea	rcx, .LC113[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC121[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	QWORD PTR -8[rbp], 0
	mov	edx, 1
	lea	rcx, _ZN14CLASSCONTAINER8CLASSES$E[rip]
	call	fb_ArrayUBound
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	jmp	.L1279
.L1289:
	nop
.L1280:
	mov	ecx, 0
	call	GetModuleHandleW
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -72[rbp], rax
	lea	rax, _ZN14CLASSCONTAINER8CLASSES$E[rip+64]
	mov	r8, QWORD PTR [rax]
	lea	rax, _ZN14CLASSCONTAINER8CLASSES$E[rip+56]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -72[rbp]
	lea	rcx, .LC113[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 140
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L1288
	jmp	[QWORD PTR -80[rbp]]
.L1288:
	nop
.L1282:
	mov	rdx, QWORD PTR -72[rbp]
	mov	rax, rdx
	add	rax, rax
	add	rax, rdx
	sal	rax, 3
	mov	rdx, rax
	lea	rax, _ZN14CLASSCONTAINER8CLASSES$E[rip]
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	mov	rcx, rax
	call	_ZN14CLASSCONTAINER9CLASSTYPE16CLASSNAME__get__Ev
	mov	QWORD PTR -88[rbp], rax
	mov	rdx, QWORD PTR -64[rbp]
	mov	rax, QWORD PTR -88[rbp]
	mov	rcx, rax
	call	UnregisterClassW
.L1283:
	add	QWORD PTR -8[rbp], 1
.L1279:
	mov	rax, QWORD PTR -8[rbp]
	cmp	rax, QWORD PTR -56[rbp]
	jle	.L1289
.L1284:
	nop
.L1285:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section	.dtors,"w"
	.align 8
	.quad	_ZN14CLASSCONTAINER12FINALIZATIONEv
	.section .rdata,"dr"
.LC122:
	.ascii "SCALEX\0"
	.text
	.def	SCALEX;	.scl	3;	.type	32;	.endef
SCALEX:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	movss	DWORD PTR 16[rbp], xmm0
	lea	rax, -48[rbp]
	mov	DWORD PTR [rax], 0
	lea	rcx, .LC113[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC122[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1291:
	movss	xmm0, DWORD PTR BB$1.7937[rip]
	pxor	xmm1, xmm1
	ucomiss	xmm0, xmm1
	jp	.L1301
	pxor	xmm1, xmm1
	ucomiss	xmm0, xmm1
	jne	.L1301
	mov	QWORD PTR -56[rbp], 0
	mov	ecx, 0
	call	GetDC
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	edx, 88
	mov	rcx, rax
	call	GetDeviceCaps
	mov	DWORD PTR -44[rbp], eax
	cvtsi2sd	xmm0, DWORD PTR -44[rbp]
	movsd	xmm1, QWORD PTR .LC124[rip]
	divsd	xmm0, xmm1
	cvtsd2ss	xmm0, xmm0
	movss	DWORD PTR BB$1.7937[rip], xmm0
	mov	rax, QWORD PTR -56[rbp]
	mov	rdx, rax
	mov	ecx, 0
	call	ReleaseDC
	movss	xmm0, DWORD PTR BB$1.7937[rip]
	pxor	xmm1, xmm1
	ucomiss	xmm0, xmm1
	jp	.L1302
	pxor	xmm1, xmm1
	ucomiss	xmm0, xmm1
	jne	.L1302
	movss	xmm0, DWORD PTR .LC125[rip]
	movss	DWORD PTR BB$1.7937[rip], xmm0
	jmp	.L1298
.L1297:
.L1294:
.L1301:
	nop
	jmp	.L1298
.L1302:
	nop
.L1298:
	movss	xmm0, DWORD PTR BB$1.7937[rip]
	mulss	xmm0, DWORD PTR 16[rbp]
	movss	DWORD PTR -48[rbp], xmm0
.L1299:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movss	xmm0, DWORD PTR -48[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC126:
	.ascii "UNSCALEX\0"
	.text
	.def	UNSCALEX;	.scl	3;	.type	32;	.endef
UNSCALEX:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	movss	DWORD PTR 16[rbp], xmm0
	lea	rax, -48[rbp]
	mov	DWORD PTR [rax], 0
	lea	rcx, .LC113[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC126[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1304:
	movss	xmm0, DWORD PTR BB$1.7954[rip]
	pxor	xmm1, xmm1
	ucomiss	xmm0, xmm1
	jp	.L1314
	pxor	xmm1, xmm1
	ucomiss	xmm0, xmm1
	jne	.L1314
	mov	QWORD PTR -56[rbp], 0
	mov	ecx, 0
	call	GetDC
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	edx, 88
	mov	rcx, rax
	call	GetDeviceCaps
	mov	DWORD PTR -44[rbp], eax
	cvtsi2sd	xmm0, DWORD PTR -44[rbp]
	movsd	xmm1, QWORD PTR .LC124[rip]
	divsd	xmm0, xmm1
	cvtsd2ss	xmm0, xmm0
	movss	DWORD PTR BB$1.7954[rip], xmm0
	mov	rax, QWORD PTR -56[rbp]
	mov	rdx, rax
	mov	ecx, 0
	call	ReleaseDC
	movss	xmm0, DWORD PTR BB$1.7954[rip]
	pxor	xmm1, xmm1
	ucomiss	xmm0, xmm1
	jp	.L1315
	pxor	xmm1, xmm1
	ucomiss	xmm0, xmm1
	jne	.L1315
	movss	xmm0, DWORD PTR .LC125[rip]
	movss	DWORD PTR BB$1.7954[rip], xmm0
	jmp	.L1311
.L1310:
.L1307:
.L1314:
	nop
	jmp	.L1311
.L1315:
	nop
.L1311:
	movss	xmm1, DWORD PTR BB$1.7954[rip]
	movss	xmm0, DWORD PTR 16[rbp]
	divss	xmm0, xmm1
	movss	DWORD PTR -48[rbp], xmm0
.L1312:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movss	xmm0, DWORD PTR -48[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC127:
	.ascii "SCALEY\0"
	.text
	.def	SCALEY;	.scl	3;	.type	32;	.endef
SCALEY:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	movss	DWORD PTR 16[rbp], xmm0
	lea	rax, -48[rbp]
	mov	DWORD PTR [rax], 0
	lea	rcx, .LC113[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC127[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1317:
	movss	xmm0, DWORD PTR BB$1.7971[rip]
	pxor	xmm1, xmm1
	ucomiss	xmm0, xmm1
	jp	.L1327
	pxor	xmm1, xmm1
	ucomiss	xmm0, xmm1
	jne	.L1327
	mov	QWORD PTR -56[rbp], 0
	mov	ecx, 0
	call	GetDC
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	edx, 90
	mov	rcx, rax
	call	GetDeviceCaps
	mov	DWORD PTR -44[rbp], eax
	cvtsi2sd	xmm0, DWORD PTR -44[rbp]
	movsd	xmm1, QWORD PTR .LC124[rip]
	divsd	xmm0, xmm1
	cvtsd2ss	xmm0, xmm0
	movss	DWORD PTR BB$1.7971[rip], xmm0
	mov	rax, QWORD PTR -56[rbp]
	mov	rdx, rax
	mov	ecx, 0
	call	ReleaseDC
	movss	xmm0, DWORD PTR BB$1.7971[rip]
	pxor	xmm1, xmm1
	ucomiss	xmm0, xmm1
	jp	.L1328
	pxor	xmm1, xmm1
	ucomiss	xmm0, xmm1
	jne	.L1328
	movss	xmm0, DWORD PTR .LC125[rip]
	movss	DWORD PTR BB$1.7971[rip], xmm0
	jmp	.L1324
.L1323:
.L1320:
.L1327:
	nop
	jmp	.L1324
.L1328:
	nop
.L1324:
	movss	xmm0, DWORD PTR BB$1.7971[rip]
	mulss	xmm0, DWORD PTR 16[rbp]
	movss	DWORD PTR -48[rbp], xmm0
.L1325:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movss	xmm0, DWORD PTR -48[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC128:
	.ascii "UNSCALEY\0"
	.text
	.def	UNSCALEY;	.scl	3;	.type	32;	.endef
UNSCALEY:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	movss	DWORD PTR 16[rbp], xmm0
	lea	rax, -48[rbp]
	mov	DWORD PTR [rax], 0
	lea	rcx, .LC113[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC128[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1330:
	movss	xmm0, DWORD PTR BB$1.7988[rip]
	pxor	xmm1, xmm1
	ucomiss	xmm0, xmm1
	jp	.L1340
	pxor	xmm1, xmm1
	ucomiss	xmm0, xmm1
	jne	.L1340
	mov	QWORD PTR -56[rbp], 0
	mov	ecx, 0
	call	GetDC
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	edx, 90
	mov	rcx, rax
	call	GetDeviceCaps
	mov	DWORD PTR -44[rbp], eax
	cvtsi2sd	xmm0, DWORD PTR -44[rbp]
	movsd	xmm1, QWORD PTR .LC124[rip]
	divsd	xmm0, xmm1
	cvtsd2ss	xmm0, xmm0
	movss	DWORD PTR BB$1.7988[rip], xmm0
	mov	rax, QWORD PTR -56[rbp]
	mov	rdx, rax
	mov	ecx, 0
	call	ReleaseDC
	movss	xmm0, DWORD PTR BB$1.7988[rip]
	pxor	xmm1, xmm1
	ucomiss	xmm0, xmm1
	jp	.L1341
	pxor	xmm1, xmm1
	ucomiss	xmm0, xmm1
	jne	.L1341
	movss	xmm0, DWORD PTR .LC125[rip]
	movss	DWORD PTR BB$1.7988[rip], xmm0
	jmp	.L1337
.L1336:
.L1333:
.L1340:
	nop
	jmp	.L1337
.L1341:
	nop
.L1337:
	movss	xmm1, DWORD PTR BB$1.7988[rip]
	movss	xmm0, DWORD PTR 16[rbp]
	divss	xmm0, xmm1
	movss	DWORD PTR -48[rbp], xmm0
.L1338:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movss	xmm0, DWORD PTR -48[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC129:
	.ascii "STRINGPARSECOUNT\0"
	.text
	.def	STRINGPARSECOUNT;	.scl	3;	.type	32;	.endef
STRINGPARSECOUNT:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 160
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	eax, r8d
	mov	BYTE PTR 32[rbp], al
	mov	DWORD PTR -116[rbp], 0
	lea	rcx, .LC113[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rcx, .LC129[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
.L1343:
	lea	rdx, .LC77[rip]
	mov	rcx, QWORD PTR 16[rbp]
	call	fb_WstrCompare
	mov	DWORD PTR -52[rbp], eax
	cmp	DWORD PTR -52[rbp], 0
	je	.L1362
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, .LC77[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -56[rbp], eax
	cmp	DWORD PTR -56[rbp], 0
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L1346
.L1362:
	nop
.L1345:
	mov	QWORD PTR -8[rbp], -1
.L1346:
	cmp	QWORD PTR -8[rbp], 0
	je	.L1363
	mov	DWORD PTR -116[rbp], 0
	jmp	.L1349
.L1363:
	nop
.L1348:
	mov	DWORD PTR -12[rbp], 1
	mov	DWORD PTR -16[rbp], 1
.L1350:
	cmp	BYTE PTR 32[rbp], 0
	je	.L1364
	mov	eax, DWORD PTR -16[rbp]
	cdqe
	mov	rdx, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, QWORD PTR 16[rbp]
	mov	rcx, rax
	call	fb_WstrInstr
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	DWORD PTR -16[rbp], eax
	jmp	.L1353
.L1364:
	nop
.L1352:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrUcase2
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	edx, 0
	mov	rcx, QWORD PTR 16[rbp]
	call	fb_WstrUcase2
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	QWORD PTR -96[rbp], rax
	mov	eax, DWORD PTR -16[rbp]
	cdqe
	mov	rcx, QWORD PTR -80[rbp]
	mov	rdx, QWORD PTR -96[rbp]
	mov	r8, rcx
	mov	rcx, rax
	call	fb_WstrInstr
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	DWORD PTR -16[rbp], eax
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -96[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1353:
	cmp	DWORD PTR -16[rbp], 0
	je	.L1365
	nop
.L1355:
	add	DWORD PTR -12[rbp], 1
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	fb_WstrLen
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	add	DWORD PTR -16[rbp], eax
.L1357:
	jmp	.L1350
.L1365:
	nop
.L1356:
	mov	eax, DWORD PTR -12[rbp]
	mov	DWORD PTR -116[rbp], eax
	nop
.L1349:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	eax, DWORD PTR -116[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC130:
	.ascii "ERRDESCRIPTION\0"
	.align 2
.LC131:
	.ascii "N\0o\0 \0e\0r\0r\0o\0r\0\0\0"
	.align 8
.LC132:
	.ascii "I\0l\0l\0e\0g\0a\0l\0 \0f\0u\0n\0c\0t\0i\0o\0n\0 \0c\0a\0l\0l\0\0\0"
	.align 8
.LC133:
	.ascii "F\0i\0l\0e\0 \0n\0o\0t\0 \0f\0o\0u\0n\0d\0 \0s\0i\0g\0n\0a\0l\0\0\0"
	.align 2
.LC134:
	.ascii "F\0i\0l\0e\0 \0I\0/\0O\0 \0e\0r\0r\0o\0r\0\0\0"
	.align 2
.LC135:
	.ascii "O\0u\0t\0 \0o\0f\0 \0m\0e\0m\0o\0r\0y\0\0\0"
	.align 2
.LC136:
	.ascii "I\0l\0l\0e\0g\0a\0l\0 \0r\0e\0s\0u\0m\0e\0\0\0"
	.align 8
.LC137:
	.ascii "O\0u\0t\0 \0o\0f\0 \0b\0o\0u\0n\0d\0s\0 \0a\0r\0r\0a\0y\0 \0a\0c\0c\0e\0s\0s\0\0\0"
	.align 8
.LC138:
	.ascii "N\0u\0l\0l\0 \0P\0o\0i\0n\0t\0e\0r\0 \0A\0c\0c\0e\0s\0s\0\0\0"
	.align 2
.LC139:
	.ascii "N\0o\0 \0p\0r\0i\0v\0i\0l\0e\0g\0e\0s\0\0\0"
	.align 8
.LC140:
	.ascii "I\0n\0t\0e\0r\0r\0u\0p\0t\0e\0d\0 \0s\0i\0g\0n\0a\0l\0\0\0"
	.align 8
.LC141:
	.ascii "I\0l\0l\0e\0g\0a\0l\0 \0i\0n\0s\0t\0r\0u\0c\0t\0i\0o\0n\0 \0s\0i\0g\0n\0a\0l\0\0\0"
	.align 8
.LC142:
	.ascii "F\0l\0o\0a\0t\0i\0n\0g\0 \0p\0o\0i\0n\0t\0 \0e\0r\0r\0o\0r\0 \0s\0i\0g\0n\0a\0l\0\0\0"
	.align 8
.LC143:
	.ascii "S\0e\0g\0m\0e\0n\0t\0a\0t\0i\0o\0n\0 \0v\0i\0o\0l\0a\0t\0i\0o\0n\0 \0s\0i\0g\0n\0a\0l\0\0\0"
	.align 8
.LC144:
	.ascii "T\0e\0r\0m\0i\0n\0a\0t\0i\0o\0n\0 \0r\0e\0q\0u\0e\0s\0t\0 \0s\0i\0g\0n\0a\0l\0\0\0"
	.align 8
.LC145:
	.ascii "A\0b\0n\0o\0r\0m\0a\0l\0 \0t\0e\0r\0m\0i\0n\0a\0t\0i\0o\0n\0 \0s\0i\0g\0n\0a\0l\0\0\0"
	.align 8
.LC146:
	.ascii "Q\0u\0i\0t\0 \0r\0e\0q\0u\0e\0s\0t\0 \0s\0i\0g\0n\0a\0l\0\0\0"
	.align 8
.LC147:
	.ascii "R\0e\0t\0u\0r\0n\0 \0w\0i\0t\0h\0o\0u\0t\0 \0g\0o\0s\0u\0b\0\0\0"
	.align 2
.LC148:
	.ascii "E\0n\0d\0 \0o\0f\0 \0f\0i\0l\0e\0\0\0"
	.text
	.def	ERRDESCRIPTION;	.scl	3;	.type	32;	.endef
ERRDESCRIPTION:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC113[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC130[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1367:
	cmp	QWORD PTR 16[rbp], 0
	jne	.L1426
	nop
.L1368:
	lea	rax, .LC131[rip]
	mov	QWORD PTR -40[rbp], rax
	jmp	.L1406
.L1426:
	nop
.L1369:
	cmp	QWORD PTR 16[rbp], 1
	jne	.L1427
	nop
.L1371:
	lea	rax, .LC132[rip]
	mov	QWORD PTR -40[rbp], rax
	jmp	.L1406
.L1427:
	nop
.L1372:
	cmp	QWORD PTR 16[rbp], 2
	jne	.L1428
	nop
.L1373:
	lea	rax, .LC133[rip]
	mov	QWORD PTR -40[rbp], rax
	jmp	.L1406
.L1428:
	nop
.L1374:
	cmp	QWORD PTR 16[rbp], 3
	jne	.L1429
	nop
.L1375:
	lea	rax, .LC134[rip]
	mov	QWORD PTR -40[rbp], rax
	jmp	.L1406
.L1429:
	nop
.L1376:
	cmp	QWORD PTR 16[rbp], 4
	jne	.L1430
	nop
.L1377:
	lea	rax, .LC135[rip]
	mov	QWORD PTR -40[rbp], rax
	jmp	.L1406
.L1430:
	nop
.L1378:
	cmp	QWORD PTR 16[rbp], 5
	jne	.L1431
	nop
.L1379:
	lea	rax, .LC136[rip]
	mov	QWORD PTR -40[rbp], rax
	jmp	.L1406
.L1431:
	nop
.L1380:
	cmp	QWORD PTR 16[rbp], 6
	jne	.L1432
	nop
.L1381:
	lea	rax, .LC137[rip]
	mov	QWORD PTR -40[rbp], rax
	jmp	.L1406
.L1432:
	nop
.L1382:
	cmp	QWORD PTR 16[rbp], 7
	jne	.L1433
	nop
.L1383:
	lea	rax, .LC138[rip]
	mov	QWORD PTR -40[rbp], rax
	jmp	.L1406
.L1433:
	nop
.L1384:
	cmp	QWORD PTR 16[rbp], 8
	jne	.L1434
	nop
.L1385:
	lea	rax, .LC139[rip]
	mov	QWORD PTR -40[rbp], rax
	jmp	.L1406
.L1434:
	nop
.L1386:
	cmp	QWORD PTR 16[rbp], 9
	jne	.L1435
	nop
.L1387:
	lea	rax, .LC140[rip]
	mov	QWORD PTR -40[rbp], rax
	jmp	.L1406
.L1435:
	nop
.L1388:
	cmp	QWORD PTR 16[rbp], 10
	jne	.L1436
	nop
.L1389:
	lea	rax, .LC141[rip]
	mov	QWORD PTR -40[rbp], rax
	jmp	.L1406
.L1436:
	nop
.L1390:
	cmp	QWORD PTR 16[rbp], 11
	jne	.L1437
	nop
.L1391:
	lea	rax, .LC142[rip]
	mov	QWORD PTR -40[rbp], rax
	jmp	.L1406
.L1437:
	nop
.L1392:
	cmp	QWORD PTR 16[rbp], 12
	jne	.L1438
	nop
.L1393:
	lea	rax, .LC143[rip]
	mov	QWORD PTR -40[rbp], rax
	jmp	.L1406
.L1438:
	nop
.L1394:
	cmp	QWORD PTR 16[rbp], 13
	jne	.L1439
	nop
.L1395:
	lea	rax, .LC144[rip]
	mov	QWORD PTR -40[rbp], rax
	jmp	.L1406
.L1439:
	nop
.L1396:
	cmp	QWORD PTR 16[rbp], 14
	jne	.L1440
	nop
.L1397:
	lea	rax, .LC145[rip]
	mov	QWORD PTR -40[rbp], rax
	jmp	.L1406
.L1440:
	nop
.L1398:
	cmp	QWORD PTR 16[rbp], 15
	jne	.L1441
	nop
.L1399:
	lea	rax, .LC146[rip]
	mov	QWORD PTR -40[rbp], rax
	jmp	.L1406
.L1441:
	nop
.L1400:
	cmp	QWORD PTR 16[rbp], 16
	jne	.L1442
	nop
.L1401:
	lea	rax, .LC147[rip]
	mov	QWORD PTR -40[rbp], rax
	jmp	.L1406
.L1442:
	nop
.L1402:
	cmp	QWORD PTR 16[rbp], 17
	jne	.L1443
	nop
.L1403:
	lea	rax, .LC148[rip]
	mov	QWORD PTR -40[rbp], rax
	jmp	.L1406
.L1443:
	nop
.L1404:
	lea	rax, .LC77[rip]
	mov	QWORD PTR -40[rbp], rax
.L1370:
.L1405:
	nop
.L1406:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC149:
	.ascii "MATCH\0"
	.text
	.def	MATCH;	.scl	3;	.type	32;	.endef
MATCH:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 208
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	BYTE PTR -139[rbp], 0
	lea	rcx, .LC113[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rcx, .LC149[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
.L1445:
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	r8, .LC113[rip]
	mov	edx, 1678
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -64[rbp], rax
	cmp	QWORD PTR -64[rbp], 0
	je	.L1483
	jmp	[QWORD PTR -64[rbp]]
.L1483:
	nop
.L1447:
	mov	rax, QWORD PTR -56[rbp]
	movzx	eax, WORD PTR [rax]
	test	ax, ax
	jne	.L1484
	mov	BYTE PTR -139[rbp], 1
	jmp	.L1450
.L1449:
.L1484:
	nop
.L1451:
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	r8, .LC113[rip]
	mov	edx, 1682
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L1485
	jmp	[QWORD PTR -80[rbp]]
.L1485:
	nop
.L1453:
	mov	rax, QWORD PTR -72[rbp]
	movzx	eax, WORD PTR [rax]
	cmp	ax, 63
	je	.L1486
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	r8, .LC113[rip]
	mov	edx, 1682
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -96[rbp], rax
	cmp	QWORD PTR -96[rbp], 0
	je	.L1487
	jmp	[QWORD PTR -96[rbp]]
.L1487:
	nop
.L1457:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	lea	r8, .LC113[rip]
	mov	edx, 1682
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -112[rbp], rax
	cmp	QWORD PTR -112[rbp], 0
	je	.L1488
	jmp	[QWORD PTR -112[rbp]]
.L1488:
	nop
.L1459:
	mov	rax, QWORD PTR -88[rbp]
	movzx	edx, WORD PTR [rax]
	mov	rax, QWORD PTR -104[rbp]
	movzx	eax, WORD PTR [rax]
	cmp	dx, ax
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L1460
.L1486:
	nop
.L1455:
	mov	QWORD PTR -8[rbp], -1
.L1460:
	cmp	QWORD PTR -8[rbp], 0
	je	.L1489
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 2
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 2
	mov	QWORD PTR -152[rbp], rax
	lea	rdx, -160[rbp]
	lea	rax, -152[rbp]
	mov	rcx, rax
	call	MATCH
	mov	BYTE PTR -113[rbp], al
	movzx	eax, BYTE PTR -113[rbp]
	mov	BYTE PTR -139[rbp], al
	jmp	.L1450
.L1462:
.L1489:
	nop
.L1463:
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	r8, .LC113[rip]
	mov	edx, 1686
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -136[rbp], rax
	cmp	QWORD PTR -136[rbp], 0
	je	.L1490
	jmp	[QWORD PTR -136[rbp]]
.L1490:
	nop
.L1465:
	mov	rax, QWORD PTR -128[rbp]
	movzx	eax, WORD PTR [rax]
	cmp	ax, 42
	jne	.L1491
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 2
	mov	QWORD PTR -168[rbp], rax
	lea	rax, -168[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	MATCH
	mov	BYTE PTR -137[rbp], al
	cmp	BYTE PTR -137[rbp], 0
	jne	.L1492
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 2
	mov	QWORD PTR -176[rbp], rax
	mov	rdx, QWORD PTR 24[rbp]
	lea	rax, -176[rbp]
	mov	rcx, rax
	call	MATCH
	mov	BYTE PTR -138[rbp], al
	cmp	BYTE PTR -138[rbp], 0
	setne	al
	mov	BYTE PTR -9[rbp], al
	jmp	.L1470
.L1492:
	nop
.L1469:
	mov	BYTE PTR -9[rbp], 1
.L1470:
	movzx	eax, BYTE PTR -9[rbp]
	mov	BYTE PTR -139[rbp], al
	jmp	.L1450
.L1467:
.L1491:
	nop
.L1471:
	mov	BYTE PTR -139[rbp], 0
	nop
.L1450:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -139[rbp]
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC150:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Object.bi\0"
	.text
	.def	_ZN2MY3SYS6OBJECTaSERKS1_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS6OBJECTaSERKS1_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L1494:
	lea	rcx, .LC150[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 8[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 8[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 16[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 16[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 24[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 32[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 32[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 40[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 40[rax]
	mov	BYTE PTR [rdx], al
.L1495:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC151:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Object.bas\0"
.LC152:
	.ascii "READPROPERTY\0"
	.align 2
.LC153:
	.ascii "c\0l\0a\0s\0s\0n\0a\0m\0e\0\0\0"
	.text
	.def	_ZN2MY3SYS6OBJECT12READPROPERTYER8FBSTRING;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS6OBJECT12READPROPERTYER8FBSTRING:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 144
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -72[rbp], 0
	lea	rcx, .LC151[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC152[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1497:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -96[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -96[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC153[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L1505
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1500:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 32[rax]
	mov	QWORD PTR -72[rbp], rax
	lea	rax, -96[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L1502
.L1505:
	nop
.L1499:
	mov	QWORD PTR -72[rbp], 0
	lea	rax, -96[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	nop
.L1502:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -72[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC154:
	.ascii "WRITEPROPERTY\0"
	.text
	.def	_ZN2MY3SYS6OBJECT13WRITEPROPERTYER8FBSTRINGPv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS6OBJECT13WRITEPROPERTYER8FBSTRINGPv:
	push	rbp
	mov	rbp, rsp
	add	rsp, -128
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	BYTE PTR -41[rbp], 0
	lea	rcx, .LC151[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC154[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1507:
	cmp	QWORD PTR 32[rbp], 0
	je	.L1514
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -80[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	mov	BYTE PTR -41[rbp], 0
	lea	rax, -80[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L1510
.L1509:
.L1514:
	nop
.L1511:
	mov	BYTE PTR -41[rbp], 1
	nop
.L1510:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -41[rbp]
	leave
	ret
	.def	_ZN2MY3SYS6OBJECT9CLASSNAMEEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS6OBJECT9CLASSNAMEEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC151[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC116[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1516:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 32
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	sete	al
	movzx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 32
	mov	rax, QWORD PTR [rax]
	cmp	rax, 24
	sete	al
	movzx	eax, al
	neg	eax
	or	eax, edx
	test	eax, eax
	je	.L1523
	lea	rax, .LC77[rip]
	mov	QWORD PTR -40[rbp], rax
	jmp	.L1520
.L1523:
	nop
.L1518:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 32[rax]
	mov	QWORD PTR -40[rbp], rax
.L1519:
	nop
.L1520:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC155:
	.ascii "TOSTRING\0"
	.align 2
.LC156:
	.ascii "(\0\0\0"
	.align 2
.LC157:
	.ascii ")\0\0\0"
	.text
	.def	_ZN2MY3SYS6OBJECT8TOSTRINGEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS6OBJECT8TOSTRINGEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -80[rbp], 0
	lea	rcx, .LC151[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC155[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1525:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT9CLASSNAMEEv
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	rdx, rax
	lea	rcx, .LC156[rip]
	call	fb_WstrConcat
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC157[rip]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 24[rax]
	mov	rax, QWORD PTR -72[rbp]
	mov	rdx, rax
	call	WLET
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -80[rbp], rax
	nop
.L1526:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -80[rbp]
	leave
	ret
	.def	_ZN2MY3SYS6OBJECTC1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS6OBJECTC1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L1529:
	lea	rcx, .LC151[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10fb_Object$C1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 24
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 32
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 40
	mov	BYTE PTR [rax], 0
	lea	rdx, _ZTVN2MY3SYS6OBJECTE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 24
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 32
	mov	QWORD PTR [rax], 0
.L1530:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS6OBJECTD1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS6OBJECTD1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	lea	rdx, _ZTVN2MY3SYS6OBJECTE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rcx, .LC151[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1532:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 24
	mov	rcx, rax
	call	_Z11WDEALLOCATERPw
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 32
	mov	rcx, rax
	call	_Z11WDEALLOCATERPw
.L1533:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC158:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Component.bi\0"
	.text
	.def	_ZN2MY3SYS14COMPONENTMODEL11MARGINSTYPEC1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS14COMPONENTMODEL11MARGINSTYPEC1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	QWORD PTR [rax], 0
	lea	rdx, _ZTVN2MY3SYS14COMPONENTMODEL11MARGINSTYPEE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rcx, .LC158[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1535:
.L1536:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS14COMPONENTMODEL11MARGINSTYPEaSERKS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS14COMPONENTMODEL11MARGINSTYPEaSERKS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L1538:
	lea	rcx, .LC158[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTaSERKS1_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 48[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 56[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 56[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 64[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 64[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 72[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 72[rax]
	mov	QWORD PTR [rdx], rax
.L1539:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS14COMPONENTMODEL11MARGINSTYPED1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS14COMPONENTMODEL11MARGINSTYPED1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	lea	rdx, _ZTVN2MY3SYS14COMPONENTMODEL11MARGINSTYPEE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rcx, .LC158[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1541:
.L1542:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTD1Ev
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS14COMPONENTMODEL9COMPONENTC1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS14COMPONENTMODEL9COMPONENTC1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 57
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 96
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 120
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 136
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 168
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 176
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL11MARGINSTYPEC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 256
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL11MARGINSTYPEC1Ev
	lea	rdx, _ZTVN2MY3SYS14COMPONENTMODEL9COMPONENTE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rcx, .LC158[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1544:
.L1545:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS14COMPONENTMODEL9COMPONENTaSERKS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS14COMPONENTMODEL9COMPONENTaSERKS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L1547:
	lea	rcx, .LC158[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTaSERKS1_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 48[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 56[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 56[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 57[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 57[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 64[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 64[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 72[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 72[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 80[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 80[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 88[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 88[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 96[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 96[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 104[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 104[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 112[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 112[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 120[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 120[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 128[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 128[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 136[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 136
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrAssign
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 160[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 160[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 168[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 168[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 176[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 176
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL11MARGINSTYPEaSERKS2_
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 256[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 256
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL11MARGINSTYPEaSERKS2_
.L1548:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 2
.LC159:
	.ascii ";\0 \0\0\0"
	.text
	.def	_ZN2MY3SYS14COMPONENTMODEL11MARGINSTYPE8TOSTRINGEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS14COMPONENTMODEL11MARGINSTYPE8TOSTRINGEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 224
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -192[rbp], 0
	lea	rcx, .LC28[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC155[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1550:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_LongintToWstr
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_LongintToWstr
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_LongintToWstr
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_LongintToStr
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	r8, .LC159[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrConcatAW
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rdx, QWORD PTR -80[rbp]
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	lea	rdx, .LC159[rip]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	mov	QWORD PTR -136[rbp], rax
	mov	rdx, QWORD PTR -64[rbp]
	mov	rax, QWORD PTR -136[rbp]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	lea	rdx, .LC159[rip]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	mov	QWORD PTR -168[rbp], rax
	mov	rdx, QWORD PTR -48[rbp]
	mov	rax, QWORD PTR -168[rbp]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 24[rax]
	mov	rax, QWORD PTR -184[rbp]
	mov	rdx, rax
	call	WLET
	mov	rax, QWORD PTR -184[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -168[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -152[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -136[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -192[rbp], rax
	nop
.L1551:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -192[rbp]
	leave
	ret
	.section .rdata,"dr"
	.align 2
.LC160:
	.ascii "d\0e\0s\0i\0g\0n\0m\0o\0d\0e\0\0\0"
	.align 2
.LC161:
	.ascii "c\0l\0a\0s\0s\0a\0n\0c\0e\0s\0t\0o\0r\0\0\0"
	.align 2
.LC162:
	.ascii "t\0a\0g\0\0\0"
	.align 2
.LC163:
	.ascii "h\0a\0n\0d\0l\0e\0\0\0"
	.align 2
.LC164:
	.ascii "l\0e\0f\0t\0\0\0"
	.align 2
.LC165:
	.ascii "t\0o\0p\0\0\0"
	.align 2
.LC166:
	.ascii "w\0i\0d\0t\0h\0\0\0"
	.align 2
.LC167:
	.ascii "h\0e\0i\0g\0h\0t\0\0\0"
	.align 2
.LC168:
	.ascii "p\0a\0r\0e\0n\0t\0\0\0"
	.align 2
.LC169:
	.ascii "m\0a\0r\0g\0i\0n\0s\0\0\0"
	.align 2
.LC170:
	.ascii "m\0a\0r\0g\0i\0n\0s\0.\0l\0e\0f\0t\0\0\0"
	.align 2
.LC171:
	.ascii "m\0a\0r\0g\0i\0n\0s\0.\0r\0i\0g\0h\0t\0\0\0"
	.align 2
.LC172:
	.ascii "m\0a\0r\0g\0i\0n\0s\0.\0t\0o\0p\0\0\0"
	.align 2
.LC173:
	.ascii "m\0a\0r\0g\0i\0n\0s\0.\0b\0o\0t\0t\0o\0m\0\0\0"
	.align 2
.LC174:
	.ascii "e\0x\0t\0r\0a\0m\0a\0r\0g\0i\0n\0s\0\0\0"
	.align 8
.LC175:
	.ascii "e\0x\0t\0r\0a\0m\0a\0r\0g\0i\0n\0s\0.\0l\0e\0f\0t\0\0\0"
	.align 8
.LC176:
	.ascii "e\0x\0t\0r\0a\0m\0a\0r\0g\0i\0n\0s\0.\0r\0i\0g\0h\0t\0\0\0"
	.align 8
.LC177:
	.ascii "e\0x\0t\0r\0a\0m\0a\0r\0g\0i\0n\0s\0.\0t\0o\0p\0\0\0"
	.align 8
.LC178:
	.ascii "e\0x\0t\0r\0a\0m\0a\0r\0g\0i\0n\0s\0.\0b\0o\0t\0t\0o\0m\0\0\0"
	.align 2
.LC179:
	.ascii "n\0a\0m\0e\0\0\0"
	.text
	.def	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12READPROPERTYER8FBSTRING;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12READPROPERTYER8FBSTRING:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 640
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -568[rbp], 0
	lea	rcx, .LC28[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC152[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1554:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -592[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -592[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC160[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L1638
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1557:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	QWORD PTR -568[rbp], rax
	lea	rax, -592[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L1616
.L1638:
	nop
.L1556:
	lea	rax, -592[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	rdx, .LC161[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -84[rbp], eax
	cmp	DWORD PTR -84[rbp], 0
	jne	.L1639
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1561:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 48[rax]
	mov	QWORD PTR -568[rbp], rax
	lea	rax, -592[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L1616
.L1639:
	nop
.L1560:
	lea	rax, -592[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	lea	rdx, .LC162[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -108[rbp], eax
	cmp	DWORD PTR -108[rbp], 0
	jne	.L1640
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1564:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 168[rax]
	mov	QWORD PTR -568[rbp], rax
	lea	rax, -592[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L1616
.L1640:
	nop
.L1563:
	lea	rax, -592[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	rdx, .LC163[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -132[rbp], eax
	cmp	DWORD PTR -132[rbp], 0
	jne	.L1641
	mov	rax, QWORD PTR -128[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1567:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	QWORD PTR -568[rbp], rax
	lea	rax, -592[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L1616
.L1641:
	nop
.L1566:
	lea	rax, -592[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	lea	rdx, .LC164[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -156[rbp], eax
	cmp	DWORD PTR -156[rbp], 0
	jne	.L1642
	mov	rax, QWORD PTR -152[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1570:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT11LEFT__get__Ev
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 80[rax]
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	QWORD PTR -568[rbp], rax
	lea	rax, -592[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L1616
.L1642:
	nop
.L1569:
	lea	rax, -592[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	lea	rdx, .LC165[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -188[rbp], eax
	cmp	DWORD PTR -188[rbp], 0
	jne	.L1643
	mov	rax, QWORD PTR -184[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1573:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT10TOP__get__Ev
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 88[rax]
	mov	rax, QWORD PTR -200[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	QWORD PTR -568[rbp], rax
	lea	rax, -592[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L1616
.L1643:
	nop
.L1572:
	lea	rax, -592[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR -208[rbp]
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR -216[rbp]
	lea	rdx, .LC166[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -220[rbp], eax
	cmp	DWORD PTR -220[rbp], 0
	jne	.L1644
	mov	rax, QWORD PTR -216[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1576:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12WIDTH__get__Ev
	mov	QWORD PTR -232[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 96[rax]
	mov	rax, QWORD PTR -232[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 96
	mov	QWORD PTR -568[rbp], rax
	lea	rax, -592[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L1616
.L1644:
	nop
.L1575:
	lea	rax, -592[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -240[rbp]
	mov	QWORD PTR -248[rbp], rax
	mov	rax, QWORD PTR -248[rbp]
	lea	rdx, .LC167[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -252[rbp], eax
	cmp	DWORD PTR -252[rbp], 0
	jne	.L1645
	mov	rax, QWORD PTR -248[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1579:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HEIGHT__get__Ev
	mov	QWORD PTR -264[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 104[rax]
	mov	rax, QWORD PTR -264[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	QWORD PTR -568[rbp], rax
	lea	rax, -592[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L1616
.L1645:
	nop
.L1578:
	lea	rax, -592[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -272[rbp], rax
	mov	rax, QWORD PTR -272[rbp]
	mov	QWORD PTR -280[rbp], rax
	mov	rax, QWORD PTR -280[rbp]
	lea	rdx, .LC168[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -284[rbp], eax
	cmp	DWORD PTR -284[rbp], 0
	jne	.L1646
	mov	rax, QWORD PTR -280[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1582:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 128[rax]
	mov	QWORD PTR -568[rbp], rax
	lea	rax, -592[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L1616
.L1646:
	nop
.L1581:
	lea	rax, -592[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -296[rbp], rax
	mov	rax, QWORD PTR -296[rbp]
	mov	QWORD PTR -304[rbp], rax
	mov	rax, QWORD PTR -304[rbp]
	lea	rdx, .LC169[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -308[rbp], eax
	cmp	DWORD PTR -308[rbp], 0
	jne	.L1647
	mov	rax, QWORD PTR -304[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1585:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 176
	mov	QWORD PTR -568[rbp], rax
	lea	rax, -592[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L1616
.L1647:
	nop
.L1584:
	lea	rax, -592[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -320[rbp], rax
	mov	rax, QWORD PTR -320[rbp]
	mov	QWORD PTR -328[rbp], rax
	mov	rax, QWORD PTR -328[rbp]
	lea	rdx, .LC170[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -332[rbp], eax
	cmp	DWORD PTR -332[rbp], 0
	jne	.L1648
	mov	rax, QWORD PTR -328[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1588:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 224
	mov	QWORD PTR -568[rbp], rax
	lea	rax, -592[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L1616
.L1648:
	nop
.L1587:
	lea	rax, -592[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -344[rbp], rax
	mov	rax, QWORD PTR -344[rbp]
	mov	QWORD PTR -352[rbp], rax
	mov	rax, QWORD PTR -352[rbp]
	lea	rdx, .LC171[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -356[rbp], eax
	cmp	DWORD PTR -356[rbp], 0
	jne	.L1649
	mov	rax, QWORD PTR -352[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1591:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 240
	mov	QWORD PTR -568[rbp], rax
	lea	rax, -592[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L1616
.L1649:
	nop
.L1590:
	lea	rax, -592[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -368[rbp], rax
	mov	rax, QWORD PTR -368[rbp]
	mov	QWORD PTR -376[rbp], rax
	mov	rax, QWORD PTR -376[rbp]
	lea	rdx, .LC172[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -380[rbp], eax
	cmp	DWORD PTR -380[rbp], 0
	jne	.L1650
	mov	rax, QWORD PTR -376[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1594:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 232
	mov	QWORD PTR -568[rbp], rax
	lea	rax, -592[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L1616
.L1650:
	nop
.L1593:
	lea	rax, -592[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -392[rbp], rax
	mov	rax, QWORD PTR -392[rbp]
	mov	QWORD PTR -400[rbp], rax
	mov	rax, QWORD PTR -400[rbp]
	lea	rdx, .LC173[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -404[rbp], eax
	cmp	DWORD PTR -404[rbp], 0
	jne	.L1651
	mov	rax, QWORD PTR -400[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1597:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 248
	mov	QWORD PTR -568[rbp], rax
	lea	rax, -592[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L1616
.L1651:
	nop
.L1596:
	lea	rax, -592[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -416[rbp], rax
	mov	rax, QWORD PTR -416[rbp]
	mov	QWORD PTR -424[rbp], rax
	mov	rax, QWORD PTR -424[rbp]
	lea	rdx, .LC174[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -428[rbp], eax
	cmp	DWORD PTR -428[rbp], 0
	jne	.L1652
	mov	rax, QWORD PTR -424[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1600:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 256
	mov	QWORD PTR -568[rbp], rax
	lea	rax, -592[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L1616
.L1652:
	nop
.L1599:
	lea	rax, -592[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -440[rbp], rax
	mov	rax, QWORD PTR -440[rbp]
	mov	QWORD PTR -448[rbp], rax
	mov	rax, QWORD PTR -448[rbp]
	lea	rdx, .LC175[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -452[rbp], eax
	cmp	DWORD PTR -452[rbp], 0
	jne	.L1653
	mov	rax, QWORD PTR -448[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1603:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 304
	mov	QWORD PTR -568[rbp], rax
	lea	rax, -592[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L1616
.L1653:
	nop
.L1602:
	lea	rax, -592[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -464[rbp], rax
	mov	rax, QWORD PTR -464[rbp]
	mov	QWORD PTR -472[rbp], rax
	mov	rax, QWORD PTR -472[rbp]
	lea	rdx, .LC176[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -476[rbp], eax
	cmp	DWORD PTR -476[rbp], 0
	jne	.L1654
	mov	rax, QWORD PTR -472[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1606:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 320
	mov	QWORD PTR -568[rbp], rax
	lea	rax, -592[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L1616
.L1654:
	nop
.L1605:
	lea	rax, -592[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -488[rbp], rax
	mov	rax, QWORD PTR -488[rbp]
	mov	QWORD PTR -496[rbp], rax
	mov	rax, QWORD PTR -496[rbp]
	lea	rdx, .LC177[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -500[rbp], eax
	cmp	DWORD PTR -500[rbp], 0
	jne	.L1655
	mov	rax, QWORD PTR -496[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1609:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 312
	mov	QWORD PTR -568[rbp], rax
	lea	rax, -592[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L1616
.L1655:
	nop
.L1608:
	lea	rax, -592[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -512[rbp], rax
	mov	rax, QWORD PTR -512[rbp]
	mov	QWORD PTR -520[rbp], rax
	mov	rax, QWORD PTR -520[rbp]
	lea	rdx, .LC178[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -524[rbp], eax
	cmp	DWORD PTR -524[rbp], 0
	jne	.L1656
	mov	rax, QWORD PTR -520[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1612:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 328
	mov	QWORD PTR -568[rbp], rax
	lea	rax, -592[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L1616
.L1656:
	nop
.L1611:
	lea	rax, -592[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -536[rbp], rax
	mov	rax, QWORD PTR -536[rbp]
	mov	QWORD PTR -544[rbp], rax
	mov	rax, QWORD PTR -544[rbp]
	lea	rdx, .LC179[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -548[rbp], eax
	cmp	DWORD PTR -548[rbp], 0
	jne	.L1657
	mov	rax, QWORD PTR -544[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1615:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 72[rax]
	mov	QWORD PTR -568[rbp], rax
	lea	rax, -592[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L1616
.L1657:
	nop
.L1614:
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT12READPROPERTYER8FBSTRING
	mov	QWORD PTR -560[rbp], rax
	mov	rax, QWORD PTR -560[rbp]
	mov	QWORD PTR -568[rbp], rax
	lea	rax, -592[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	nop
.L1616:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -568[rbp]
	leave
	ret
	.def	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13WRITEPROPERTYER8FBSTRINGPv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13WRITEPROPERTYER8FBSTRINGPv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 752
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	BYTE PTR -674[rbp], 0
	lea	rcx, .LC28[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC154[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1659:
	cmp	QWORD PTR 32[rbp], 0
	je	.L1777
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -704[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -704[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC162[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L1778
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1664:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 168[rax]
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR [rdx], rax
	jmp	.L1743
.L1778:
	nop
.L1663:
	lea	rax, -704[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	rdx, .LC179[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -84[rbp], eax
	cmp	DWORD PTR -84[rbp], 0
	jne	.L1779
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1668:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT11NAME__set__ERw
	jmp	.L1743
.L1779:
	nop
.L1667:
	lea	rax, -704[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	lea	rdx, .LC160[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -108[rbp], eax
	cmp	DWORD PTR -108[rbp], 0
	jne	.L1780
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1671:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	lea	r8, .LC28[rip]
	mov	edx, 55
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -128[rbp], rax
	cmp	QWORD PTR -128[rbp], 0
	je	.L1781
	jmp	[QWORD PTR -128[rbp]]
.L1781:
	nop
.L1673:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 40
	mov	r8, QWORD PTR [rax]
	mov	rax, QWORD PTR -120[rbp]
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	r8
	jmp	.L1743
.L1780:
	nop
.L1670:
	lea	rax, -704[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	lea	rdx, .LC163[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -148[rbp], eax
	cmp	DWORD PTR -148[rbp], 0
	jne	.L1782
	mov	rax, QWORD PTR -144[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1676:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	lea	r8, .LC28[rip]
	mov	edx, 65
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -168[rbp], rax
	cmp	QWORD PTR -168[rbp], 0
	je	.L1783
	jmp	[QWORD PTR -168[rbp]]
.L1783:
	nop
.L1678:
	mov	rax, QWORD PTR -160[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__set__EP6HWND__
	jmp	.L1743
.L1782:
	nop
.L1675:
	lea	rax, -704[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	lea	rdx, .LC164[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -188[rbp], eax
	cmp	DWORD PTR -188[rbp], 0
	jne	.L1784
	mov	rax, QWORD PTR -184[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1681:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	lea	r8, .LC28[rip]
	mov	edx, 67
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -208[rbp], rax
	cmp	QWORD PTR -208[rbp], 0
	je	.L1785
	jmp	[QWORD PTR -208[rbp]]
.L1785:
	nop
.L1683:
	mov	rax, QWORD PTR -200[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT11LEFT__set__Eu7INTEGER
	jmp	.L1743
.L1784:
	nop
.L1680:
	lea	rax, -704[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR -216[rbp]
	mov	QWORD PTR -224[rbp], rax
	mov	rax, QWORD PTR -224[rbp]
	lea	rdx, .LC165[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -228[rbp], eax
	cmp	DWORD PTR -228[rbp], 0
	jne	.L1786
	mov	rax, QWORD PTR -224[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1686:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -240[rbp]
	lea	r8, .LC28[rip]
	mov	edx, 68
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -248[rbp], rax
	cmp	QWORD PTR -248[rbp], 0
	je	.L1787
	jmp	[QWORD PTR -248[rbp]]
.L1787:
	nop
.L1688:
	mov	rax, QWORD PTR -240[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT10TOP__set__Eu7INTEGER
	jmp	.L1743
.L1786:
	nop
.L1685:
	lea	rax, -704[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -256[rbp], rax
	mov	rax, QWORD PTR -256[rbp]
	mov	QWORD PTR -264[rbp], rax
	mov	rax, QWORD PTR -264[rbp]
	lea	rdx, .LC166[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -268[rbp], eax
	cmp	DWORD PTR -268[rbp], 0
	jne	.L1788
	mov	rax, QWORD PTR -264[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1691:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -280[rbp], rax
	mov	rax, QWORD PTR -280[rbp]
	lea	r8, .LC28[rip]
	mov	edx, 69
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -288[rbp], rax
	cmp	QWORD PTR -288[rbp], 0
	je	.L1789
	jmp	[QWORD PTR -288[rbp]]
.L1789:
	nop
.L1693:
	mov	rax, QWORD PTR -280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12WIDTH__set__Eu7INTEGER
	jmp	.L1743
.L1788:
	nop
.L1690:
	lea	rax, -704[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -296[rbp], rax
	mov	rax, QWORD PTR -296[rbp]
	mov	QWORD PTR -304[rbp], rax
	mov	rax, QWORD PTR -304[rbp]
	lea	rdx, .LC167[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -308[rbp], eax
	cmp	DWORD PTR -308[rbp], 0
	jne	.L1790
	mov	rax, QWORD PTR -304[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1696:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -320[rbp], rax
	mov	rax, QWORD PTR -320[rbp]
	lea	r8, .LC28[rip]
	mov	edx, 70
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -328[rbp], rax
	cmp	QWORD PTR -328[rbp], 0
	je	.L1791
	jmp	[QWORD PTR -328[rbp]]
.L1791:
	nop
.L1698:
	mov	rax, QWORD PTR -320[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HEIGHT__set__Eu7INTEGER
	jmp	.L1743
.L1790:
	nop
.L1695:
	lea	rax, -704[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -336[rbp], rax
	mov	rax, QWORD PTR -336[rbp]
	mov	QWORD PTR -344[rbp], rax
	mov	rax, QWORD PTR -344[rbp]
	lea	rdx, .LC168[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -348[rbp], eax
	cmp	DWORD PTR -348[rbp], 0
	jne	.L1792
	mov	rax, QWORD PTR -344[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1701:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13PARENT__set__EPS2_
	jmp	.L1743
.L1792:
	nop
.L1700:
	lea	rax, -704[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -360[rbp], rax
	mov	rax, QWORD PTR -360[rbp]
	mov	QWORD PTR -368[rbp], rax
	mov	rax, QWORD PTR -368[rbp]
	lea	rdx, .LC170[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -372[rbp], eax
	cmp	DWORD PTR -372[rbp], 0
	jne	.L1793
	mov	rax, QWORD PTR -368[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1704:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -384[rbp], rax
	mov	rax, QWORD PTR -384[rbp]
	lea	r8, .LC28[rip]
	mov	edx, 72
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -392[rbp], rax
	cmp	QWORD PTR -392[rbp], 0
	je	.L1794
	jmp	[QWORD PTR -392[rbp]]
.L1794:
	nop
.L1706:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 224[rax]
	mov	rax, QWORD PTR -384[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L1743
.L1793:
	nop
.L1703:
	lea	rax, -704[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -400[rbp], rax
	mov	rax, QWORD PTR -400[rbp]
	mov	QWORD PTR -408[rbp], rax
	mov	rax, QWORD PTR -408[rbp]
	lea	rdx, .LC171[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -412[rbp], eax
	cmp	DWORD PTR -412[rbp], 0
	jne	.L1795
	mov	rax, QWORD PTR -408[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1709:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -424[rbp], rax
	mov	rax, QWORD PTR -424[rbp]
	lea	r8, .LC28[rip]
	mov	edx, 73
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -432[rbp], rax
	cmp	QWORD PTR -432[rbp], 0
	je	.L1796
	jmp	[QWORD PTR -432[rbp]]
.L1796:
	nop
.L1711:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 240[rax]
	mov	rax, QWORD PTR -424[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L1743
.L1795:
	nop
.L1708:
	lea	rax, -704[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -440[rbp], rax
	mov	rax, QWORD PTR -440[rbp]
	mov	QWORD PTR -448[rbp], rax
	mov	rax, QWORD PTR -448[rbp]
	lea	rdx, .LC172[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -452[rbp], eax
	cmp	DWORD PTR -452[rbp], 0
	jne	.L1797
	mov	rax, QWORD PTR -448[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1714:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -464[rbp], rax
	mov	rax, QWORD PTR -464[rbp]
	lea	r8, .LC28[rip]
	mov	edx, 74
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -472[rbp], rax
	cmp	QWORD PTR -472[rbp], 0
	je	.L1798
	jmp	[QWORD PTR -472[rbp]]
.L1798:
	nop
.L1716:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 232[rax]
	mov	rax, QWORD PTR -464[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L1743
.L1797:
	nop
.L1713:
	lea	rax, -704[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -480[rbp], rax
	mov	rax, QWORD PTR -480[rbp]
	mov	QWORD PTR -488[rbp], rax
	mov	rax, QWORD PTR -488[rbp]
	lea	rdx, .LC173[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -492[rbp], eax
	cmp	DWORD PTR -492[rbp], 0
	jne	.L1799
	mov	rax, QWORD PTR -488[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1719:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -504[rbp], rax
	mov	rax, QWORD PTR -504[rbp]
	lea	r8, .LC28[rip]
	mov	edx, 75
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -512[rbp], rax
	cmp	QWORD PTR -512[rbp], 0
	je	.L1800
	jmp	[QWORD PTR -512[rbp]]
.L1800:
	nop
.L1721:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 248[rax]
	mov	rax, QWORD PTR -504[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L1743
.L1799:
	nop
.L1718:
	lea	rax, -704[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -520[rbp], rax
	mov	rax, QWORD PTR -520[rbp]
	mov	QWORD PTR -528[rbp], rax
	mov	rax, QWORD PTR -528[rbp]
	lea	rdx, .LC175[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -532[rbp], eax
	cmp	DWORD PTR -532[rbp], 0
	jne	.L1801
	mov	rax, QWORD PTR -528[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1724:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -544[rbp], rax
	mov	rax, QWORD PTR -544[rbp]
	lea	r8, .LC28[rip]
	mov	edx, 76
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -552[rbp], rax
	cmp	QWORD PTR -552[rbp], 0
	je	.L1802
	jmp	[QWORD PTR -552[rbp]]
.L1802:
	nop
.L1726:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 304[rax]
	mov	rax, QWORD PTR -544[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L1743
.L1801:
	nop
.L1723:
	lea	rax, -704[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -560[rbp], rax
	mov	rax, QWORD PTR -560[rbp]
	mov	QWORD PTR -568[rbp], rax
	mov	rax, QWORD PTR -568[rbp]
	lea	rdx, .LC176[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -572[rbp], eax
	cmp	DWORD PTR -572[rbp], 0
	jne	.L1803
	mov	rax, QWORD PTR -568[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1729:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -584[rbp], rax
	mov	rax, QWORD PTR -584[rbp]
	lea	r8, .LC28[rip]
	mov	edx, 77
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -592[rbp], rax
	cmp	QWORD PTR -592[rbp], 0
	je	.L1804
	jmp	[QWORD PTR -592[rbp]]
.L1804:
	nop
.L1731:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 320[rax]
	mov	rax, QWORD PTR -584[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L1743
.L1803:
	nop
.L1728:
	lea	rax, -704[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -600[rbp], rax
	mov	rax, QWORD PTR -600[rbp]
	mov	QWORD PTR -608[rbp], rax
	mov	rax, QWORD PTR -608[rbp]
	lea	rdx, .LC177[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -612[rbp], eax
	cmp	DWORD PTR -612[rbp], 0
	jne	.L1805
	mov	rax, QWORD PTR -608[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1734:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -624[rbp], rax
	mov	rax, QWORD PTR -624[rbp]
	lea	r8, .LC28[rip]
	mov	edx, 78
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -632[rbp], rax
	cmp	QWORD PTR -632[rbp], 0
	je	.L1806
	jmp	[QWORD PTR -632[rbp]]
.L1806:
	nop
.L1736:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 312[rax]
	mov	rax, QWORD PTR -624[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L1743
.L1805:
	nop
.L1733:
	lea	rax, -704[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -640[rbp], rax
	mov	rax, QWORD PTR -640[rbp]
	mov	QWORD PTR -648[rbp], rax
	mov	rax, QWORD PTR -648[rbp]
	lea	rdx, .LC178[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -652[rbp], eax
	cmp	DWORD PTR -652[rbp], 0
	jne	.L1807
	mov	rax, QWORD PTR -648[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1739:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -664[rbp], rax
	mov	rax, QWORD PTR -664[rbp]
	lea	r8, .LC28[rip]
	mov	edx, 79
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -672[rbp], rax
	cmp	QWORD PTR -672[rbp], 0
	je	.L1808
	jmp	[QWORD PTR -672[rbp]]
.L1808:
	nop
.L1741:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 328[rax]
	mov	rax, QWORD PTR -664[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L1743
.L1807:
	nop
.L1738:
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT13WRITEPROPERTYER8FBSTRINGPv
	mov	BYTE PTR -673[rbp], al
	movzx	eax, BYTE PTR -673[rbp]
	mov	BYTE PTR -674[rbp], al
	lea	rax, -704[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L1742
.L1665:
.L1743:
	lea	rax, -704[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L1744
.L1661:
.L1777:
	nop
.L1744:
	mov	BYTE PTR -674[rbp], 1
	nop
.L1742:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -674[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC180:
	.ascii "GETTOPLEVEL\0"
	.text
	.def	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT11GETTOPLEVELEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS14COMPONENTMODEL9COMPONENT11GETTOPLEVELEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -48[rbp], 0
	lea	rcx, .LC28[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC180[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1810:
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jne	.L1817
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR -48[rbp], rax
	jmp	.L1814
.L1817:
	nop
.L1812:
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT11GETTOPLEVELEv
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
.L1813:
	nop
.L1814:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -48[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC181:
	.ascii "PARENT\0"
	.text
	.def	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13PARENT__set__EPS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13PARENT__set__EPS2_:
	push	rbp
	mov	rbp, rsp
	add	rsp, -128
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L1819:
	lea	rcx, .LC28[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	lea	rcx, .LC181[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR 24[rbp], rax
	je	.L1842
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 128[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	neg	eax
	test	eax, eax
	je	.L1843
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L1824
.L1843:
	nop
.L1823:
	mov	QWORD PTR -8[rbp], 0
.L1824:
	cmp	QWORD PTR -8[rbp], 0
	je	.L1844
	cmp	QWORD PTR 24[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -16[rbp], rax
	jmp	.L1827
.L1844:
	nop
.L1826:
	mov	QWORD PTR -16[rbp], 0
.L1827:
	cmp	QWORD PTR -16[rbp], 0
	je	.L1845
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -64[rbp], rax
	cmp	QWORD PTR -64[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -24[rbp], rax
	jmp	.L1830
.L1845:
	nop
.L1829:
	mov	QWORD PTR -24[rbp], 0
.L1830:
	cmp	QWORD PTR -24[rbp], 0
	je	.L1846
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	GetParent
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	cmp	rax, QWORD PTR -80[rbp]
	je	.L1847
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR -88[rbp]
	mov	rcx, rax
	call	SetParent
	jmp	.L1838
.L1821:
.L1833:
.L1834:
.L1835:
.L1836:
.L1837:
.L1842:
	nop
	jmp	.L1838
.L1846:
	nop
	jmp	.L1838
.L1847:
	nop
.L1838:
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13CLASSANCESTOREv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13CLASSANCESTOREv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -48[rbp], 0
	lea	rcx, .LC28[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC117[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1849:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rcx, rax
	call	WGET
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	nop
.L1850:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -48[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC182:
	.ascii "DESIGNMODE\0"
	.text
	.def	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT17DESIGNMODE__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS14COMPONENTMODEL9COMPONENT17DESIGNMODE__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	BYTE PTR -33[rbp], 0
	lea	rcx, .LC28[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC182[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1853:
	mov	rax, QWORD PTR 16[rbp]
	movzx	eax, BYTE PTR 56[rax]
	mov	BYTE PTR -33[rbp], al
	nop
.L1854:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -33[rbp]
	leave
	ret
	.def	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT17DESIGNMODE__set__Eb;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS14COMPONENTMODEL9COMPONENT17DESIGNMODE__set__Eb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	BYTE PTR 24[rbp], al
.L1857:
	lea	rcx, .LC28[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC182[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 56[rax]
	movzx	eax, BYTE PTR 24[rbp]
	mov	BYTE PTR [rdx], al
.L1858:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC183:
	.ascii "NAME\0"
	.text
	.def	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT11NAME__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS14COMPONENTMODEL9COMPONENT11NAME__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -48[rbp], 0
	lea	rcx, .LC28[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC183[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1860:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	rcx, rax
	call	WGET
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	nop
.L1861:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -48[rbp]
	leave
	ret
	.def	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT11NAME__set__ERw;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS14COMPONENTMODEL9COMPONENT11NAME__set__ERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L1864:
	lea	rcx, .LC28[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC183[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 72[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	call	WLET
.L1865:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC184:
	.ascii "HANDLE\0"
	.text
	.def	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC28[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC184[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1867:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 160[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L1868:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__set__EP6HWND__;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__set__EP6HWND__:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L1871:
	lea	rcx, .LC28[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC184[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 160[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
.L1872:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC185:
	.ascii "MOVE\0"
	.text
	.def	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT4MOVEEu7INTEGERS3_S3_S3_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS14COMPONENTMODEL9COMPONENT4MOVEEu7INTEGERS3_S3_S3_:
	push	rbp
	mov	rbp, rsp
	push	rdi
	push	rsi
	push	rbx
	sub	rsp, 152
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
.L1874:
	lea	rcx, .LC28[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	lea	rcx, .LC185[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR 40[rbp]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR 48[rbp]
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L1884
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 128[rax]
	mov	QWORD PTR -104[rbp], rax
	cmp	QWORD PTR -104[rbp], 0
	jmp	.L1879
.L1876:
.L1877:
.L1878:
.L1884:
	nop
.L1879:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L1885
	cvtsi2ss	xmm0, QWORD PTR -96[rbp]
	call	SCALEY
	movd	eax, xmm0
	mov	DWORD PTR -108[rbp], eax
	cvtsi2ss	xmm0, QWORD PTR -88[rbp]
	call	SCALEX
	movd	eax, xmm0
	mov	DWORD PTR -112[rbp], eax
	cvtsi2ss	xmm0, QWORD PTR -80[rbp]
	call	SCALEY
	movd	eax, xmm0
	mov	DWORD PTR -116[rbp], eax
	cvtsi2ss	xmm0, QWORD PTR -72[rbp]
	call	SCALEX
	movd	eax, xmm0
	mov	DWORD PTR -120[rbp], eax
	mov	eax, DWORD PTR -108[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	ebx, xmm0
	mov	eax, DWORD PTR -112[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	edi, xmm0
	mov	eax, DWORD PTR -116[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	esi, xmm0
	mov	eax, DWORD PTR -120[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	edx, xmm0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR 40[rsp], -1
	mov	DWORD PTR 32[rsp], ebx
	mov	r9d, edi
	mov	r8d, esi
	mov	rcx, rax
	call	MoveWindow
	jmp	.L1883
.L1881:
.L1882:
.L1885:
	nop
.L1883:
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	add	rsp, 152
	pop	rbx
	pop	rsi
	pop	rdi
	pop	rbp
	ret
	.section .rdata,"dr"
.LC186:
	.ascii "SETBOUNDS\0"
	.text
	.def	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT9SETBOUNDSEu7INTEGERS3_S3_S3_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS14COMPONENTMODEL9COMPONENT9SETBOUNDSEu7INTEGERS3_S3_S3_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
.L1887:
	lea	rcx, .LC28[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rcx, .LC186[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 80[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 88[rax]
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 96[rax]
	mov	rax, QWORD PTR 40[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 104[rax]
	mov	rax, QWORD PTR 48[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 96
	mov	rax, QWORD PTR [rax]
	cmp	rdx, rax
	jle	.L1897
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 112[rax]
	mov	QWORD PTR -8[rbp], rax
	jmp	.L1890
.L1897:
	nop
.L1889:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 96[rax]
	mov	QWORD PTR -8[rbp], rax
.L1890:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 96[rax]
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 120
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	cmp	rdx, rax
	jle	.L1898
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 120[rax]
	mov	QWORD PTR -16[rbp], rax
	jmp	.L1893
.L1898:
	nop
.L1892:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 104[rax]
	mov	QWORD PTR -16[rbp], rax
.L1893:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 104[rax]
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 24
	mov	r10, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 96
	mov	r8, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR 32[rsp], rdx
	mov	r9, r8
	mov	r8, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	r10
.L1894:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC187:
	.ascii "LEFT\0"
	.align 2
.LC188:
	.ascii "T\0A\0B\0C\0O\0N\0T\0R\0O\0L\0\0\0"
	.text
	.def	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT11LEFT__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS14COMPONENTMODEL9COMPONENT11LEFT__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 160
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -112[rbp], 0
	lea	rcx, .LC28[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC187[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L1900:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L1913
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L1914
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS6OBJECT9CLASSNAMEEv
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrUcase2
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	lea	rdx, .LC188[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -68[rbp], eax
	cmp	DWORD PTR -68[rbp], 0
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L1905
.L1914:
	nop
.L1904:
	mov	QWORD PTR -8[rbp], 0
.L1905:
	cmp	QWORD PTR -8[rbp], 0
	jne	.L1915
	nop
.L1907:
	lea	rax, -128[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -80[rbp], rax
	lea	rdx, -128[rbp]
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	GetWindowRect
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	rcx, rax
	call	GetParent
	mov	QWORD PTR -96[rbp], rax
	lea	rdx, -128[rbp]
	mov	rax, QWORD PTR -96[rbp]
	mov	r9d, 2
	mov	r8, rdx
	mov	rdx, rax
	mov	ecx, 0
	call	MapWindowPoints
	lea	rax, -128[rbp]
	mov	eax, DWORD PTR [rax]
	cvtsi2ss	xmm0, eax
	call	UNSCALEX
	movd	eax, xmm0
	mov	DWORD PTR -100[rbp], eax
	mov	eax, DWORD PTR -100[rbp]
	movd	xmm0, eax
	call	nearbyintf
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 80[rax]
	cvttss2si	rax, xmm0
	mov	QWORD PTR [rdx], rax
	jmp	.L1909
.L1902:
.L1908:
.L1913:
	nop
	jmp	.L1909
.L1915:
	nop
.L1909:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 80[rax]
	mov	QWORD PTR -112[rbp], rax
	nop
.L1910:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -112[rbp]
	leave
	ret
	.def	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT11LEFT__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS14COMPONENTMODEL9COMPONENT11LEFT__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L1917:
	lea	rcx, .LC28[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC187[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 80[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HEIGHT__get__Ev
	mov	QWORD PTR -40[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12WIDTH__get__Ev
	mov	QWORD PTR -48[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT10TOP__get__Ev
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 24
	mov	r10, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR -48[rbp]
	mov	rcx, QWORD PTR -56[rbp]
	mov	rdx, QWORD PTR -40[rbp]
	mov	QWORD PTR 32[rsp], rdx
	mov	r9, r8
	mov	r8, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	r10
.L1918:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC189:
	.ascii "TOP\0"
	.align 8
.LC190:
	.ascii "S\0Y\0S\0T\0A\0B\0C\0O\0N\0T\0R\0O\0L\0"
	.ascii "3\0"
	.ascii "2\0\0\0"
	.text
	.def	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT10TOP__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS14COMPONENTMODEL9COMPONENT10TOP__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 192
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -144[rbp], 0
	lea	rcx, .LC28[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC189[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L1920:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L1933
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L1934
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS6OBJECT9CLASSNAMEEv
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrUcase2
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	lea	rdx, .LC190[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -68[rbp], eax
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS6OBJECT9CLASSNAMEEv
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrUcase2
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	lea	rdx, .LC188[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -100[rbp], eax
	cmp	DWORD PTR -68[rbp], 0
	sete	al
	movzx	eax, al
	neg	eax
	mov	edx, eax
	cmp	DWORD PTR -100[rbp], 0
	sete	al
	movzx	eax, al
	neg	eax
	or	eax, edx
	test	eax, eax
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L1925
.L1934:
	nop
.L1924:
	mov	QWORD PTR -8[rbp], 0
.L1925:
	cmp	QWORD PTR -8[rbp], 0
	jne	.L1935
	nop
.L1927:
	lea	rax, -160[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -112[rbp], rax
	lea	rdx, -160[rbp]
	mov	rax, QWORD PTR -112[rbp]
	mov	rcx, rax
	call	GetWindowRect
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	GetParent
	mov	QWORD PTR -128[rbp], rax
	lea	rdx, -160[rbp]
	mov	rax, QWORD PTR -128[rbp]
	mov	r9d, 2
	mov	r8, rdx
	mov	rdx, rax
	mov	ecx, 0
	call	MapWindowPoints
	lea	rax, -160[rbp]
	add	rax, 4
	mov	eax, DWORD PTR [rax]
	cvtsi2ss	xmm0, eax
	call	UNSCALEY
	movd	eax, xmm0
	mov	DWORD PTR -132[rbp], eax
	mov	eax, DWORD PTR -132[rbp]
	movd	xmm0, eax
	call	nearbyintf
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 88[rax]
	cvttss2si	rax, xmm0
	mov	QWORD PTR [rdx], rax
	jmp	.L1929
.L1922:
.L1928:
.L1933:
	nop
	jmp	.L1929
.L1935:
	nop
.L1929:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 88[rax]
	mov	QWORD PTR -144[rbp], rax
	nop
.L1930:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -144[rbp]
	leave
	ret
	.def	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT10TOP__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS14COMPONENTMODEL9COMPONENT10TOP__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L1937:
	lea	rcx, .LC28[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC189[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 88[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HEIGHT__get__Ev
	mov	QWORD PTR -40[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12WIDTH__get__Ev
	mov	QWORD PTR -48[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT11LEFT__get__Ev
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 24
	mov	r10, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	rcx, QWORD PTR [rax]
	mov	r8, QWORD PTR -48[rbp]
	mov	rax, QWORD PTR -56[rbp]
	mov	rdx, QWORD PTR -40[rbp]
	mov	QWORD PTR 32[rsp], rdx
	mov	r9, r8
	mov	r8, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	r10
.L1938:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC191:
	.ascii "WIDTH\0"
	.text
	.def	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12WIDTH__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12WIDTH__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -64[rbp], 0
	lea	rcx, .LC28[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC191[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1940:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L1946
	lea	rax, -80[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -40[rbp], rax
	lea	rdx, -80[rbp]
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	GetWindowRect
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	GetParent
	mov	QWORD PTR -48[rbp], rax
	lea	rdx, -80[rbp]
	mov	rax, QWORD PTR -48[rbp]
	mov	r9d, 2
	mov	r8, rdx
	mov	rdx, rax
	mov	ecx, 0
	call	MapWindowPoints
	lea	rax, -80[rbp]
	add	rax, 8
	mov	eax, DWORD PTR [rax]
	movsx	rdx, eax
	lea	rax, -80[rbp]
	mov	eax, DWORD PTR [rax]
	cdqe
	sub	rdx, rax
	mov	rax, rdx
	cvtsi2ss	xmm0, rax
	call	UNSCALEX
	movd	eax, xmm0
	mov	DWORD PTR -52[rbp], eax
	mov	eax, DWORD PTR -52[rbp]
	movd	xmm0, eax
	call	nearbyintf
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 96[rax]
	cvttss2si	rax, xmm0
	mov	QWORD PTR [rdx], rax
	jmp	.L1943
.L1942:
.L1946:
	nop
.L1943:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 96[rax]
	mov	QWORD PTR -64[rbp], rax
	nop
.L1944:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -64[rbp]
	leave
	ret
	.def	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12WIDTH__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12WIDTH__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L1948:
	lea	rcx, .LC28[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC191[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR 24[rbp], rax
	jge	.L1954
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 112[rax]
	mov	QWORD PTR -8[rbp], rax
	jmp	.L1951
.L1954:
	nop
.L1950:
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -8[rbp], rax
.L1951:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 96[rax]
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HEIGHT__get__Ev
	mov	QWORD PTR -48[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT10TOP__get__Ev
	mov	QWORD PTR -56[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT11LEFT__get__Ev
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 24
	mov	r10, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 96
	mov	r8, QWORD PTR [rax]
	mov	rcx, QWORD PTR -56[rbp]
	mov	rax, QWORD PTR -64[rbp]
	mov	rdx, QWORD PTR -48[rbp]
	mov	QWORD PTR 32[rsp], rdx
	mov	r9, r8
	mov	r8, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	r10
.L1952:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC192:
	.ascii "HEIGHT\0"
	.text
	.def	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HEIGHT__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HEIGHT__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -64[rbp], 0
	lea	rcx, .LC28[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC192[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1956:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L1962
	lea	rax, -80[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -40[rbp], rax
	lea	rdx, -80[rbp]
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	GetWindowRect
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	GetParent
	mov	QWORD PTR -48[rbp], rax
	lea	rdx, -80[rbp]
	mov	rax, QWORD PTR -48[rbp]
	mov	r9d, 2
	mov	r8, rdx
	mov	rdx, rax
	mov	ecx, 0
	call	MapWindowPoints
	lea	rax, -80[rbp]
	add	rax, 12
	mov	eax, DWORD PTR [rax]
	movsx	rdx, eax
	lea	rax, -80[rbp]
	add	rax, 4
	mov	eax, DWORD PTR [rax]
	cdqe
	sub	rdx, rax
	mov	rax, rdx
	cvtsi2ss	xmm0, rax
	call	UNSCALEY
	movd	eax, xmm0
	mov	DWORD PTR -52[rbp], eax
	mov	eax, DWORD PTR -52[rbp]
	movd	xmm0, eax
	call	nearbyintf
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 104[rax]
	cvttss2si	rax, xmm0
	mov	QWORD PTR [rdx], rax
	jmp	.L1959
.L1958:
.L1962:
	nop
.L1959:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 104[rax]
	mov	QWORD PTR -64[rbp], rax
	nop
.L1960:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -64[rbp]
	leave
	ret
	.def	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HEIGHT__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HEIGHT__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L1964:
	lea	rcx, .LC28[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC192[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 120
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR 24[rbp], rax
	jge	.L1970
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 120[rax]
	mov	QWORD PTR -8[rbp], rax
	jmp	.L1967
.L1970:
	nop
.L1966:
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -8[rbp], rax
.L1967:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 104[rax]
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12WIDTH__get__Ev
	mov	QWORD PTR -48[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT10TOP__get__Ev
	mov	QWORD PTR -56[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT11LEFT__get__Ev
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 24
	mov	r10, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rdx, QWORD PTR [rax]
	mov	r8, QWORD PTR -48[rbp]
	mov	rcx, QWORD PTR -56[rbp]
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR 32[rsp], rdx
	mov	r9, r8
	mov	r8, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	r10
.L1968:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT8TOSTRINGEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS14COMPONENTMODEL9COMPONENT8TOSTRINGEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -48[rbp], 0
	lea	rcx, .LC28[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC155[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1972:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT11NAME__get__Ev
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	nop
.L1973:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -48[rbp]
	leave
	ret
	.def	_ZN2MY3SYS14COMPONENTMODEL9COMPONENTD1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS14COMPONENTMODEL9COMPONENTD1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	lea	rdx, _ZTVN2MY3SYS14COMPONENTMODEL9COMPONENTE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rcx, .LC28[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1976:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	rcx, rax
	call	_Z11WDEALLOCATERPw
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rcx, rax
	call	_Z11WDEALLOCATERPw
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L1981
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DestroyWindow
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	QWORD PTR [rax], 0
	jmp	.L1980
.L1978:
.L1979:
.L1981:
	nop
.L1980:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 256
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL11MARGINSTYPED1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 176
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL11MARGINSTYPED1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 136
	mov	rcx, rax
	call	fb_StrDelete
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTD1Ev
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC193:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Pen.bi\0"
	.text
	.def	_ZN2MY3SYS7DRAWING3PENaSERKS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING3PENaSERKS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L1983:
	lea	rcx, .LC193[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTaSERKS1_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 48[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 56[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 56[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 64[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 64[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 72[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 72[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 80[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 80[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 88[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 88[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 96[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 96[rax]
	mov	QWORD PTR [rdx], rax
.L1984:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC194:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Pen.bas\0"
	.align 2
.LC195:
	.ascii "c\0o\0l\0o\0r\0\0\0"
	.align 2
.LC196:
	.ascii "s\0t\0y\0l\0e\0\0\0"
	.align 2
.LC197:
	.ascii "m\0o\0d\0e\0\0\0"
	.align 2
.LC198:
	.ascii "s\0i\0z\0e\0\0\0"
	.text
	.def	_ZN2MY3SYS7DRAWING3PEN12READPROPERTYER8FBSTRING;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING3PEN12READPROPERTYER8FBSTRING:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 224
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -152[rbp], 0
	lea	rcx, .LC194[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC152[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L1986:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -176[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -176[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC195[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L2006
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1989:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	QWORD PTR -152[rbp], rax
	lea	rax, -176[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L2000
.L2006:
	nop
.L1988:
	lea	rax, -176[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	rdx, .LC196[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -84[rbp], eax
	cmp	DWORD PTR -84[rbp], 0
	jne	.L2007
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1993:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	QWORD PTR -152[rbp], rax
	lea	rax, -176[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L2000
.L2007:
	nop
.L1992:
	lea	rax, -176[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	lea	rdx, .LC197[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -108[rbp], eax
	cmp	DWORD PTR -108[rbp], 0
	jne	.L2008
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1996:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	QWORD PTR -152[rbp], rax
	lea	rax, -176[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L2000
.L2008:
	nop
.L1995:
	lea	rax, -176[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	rdx, .LC198[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -132[rbp], eax
	cmp	DWORD PTR -132[rbp], 0
	jne	.L2009
	mov	rax, QWORD PTR -128[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L1999:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	QWORD PTR -152[rbp], rax
	lea	rax, -176[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L2000
.L2009:
	nop
.L1998:
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT12READPROPERTYER8FBSTRING
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	mov	QWORD PTR -152[rbp], rax
	lea	rax, -176[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	nop
.L2000:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -152[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING3PEN13WRITEPROPERTYER8FBSTRINGPv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING3PEN13WRITEPROPERTYER8FBSTRINGPv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 288
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	BYTE PTR -202[rbp], 0
	lea	rcx, .LC194[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC154[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L2011:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -240[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -240[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC195[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L2044
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L2014:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	r8, .LC194[rip]
	mov	edx, 29
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L2045
	jmp	[QWORD PTR -80[rbp]]
.L2045:
	nop
.L2016:
	mov	rax, QWORD PTR -72[rbp]
	mov	rax, QWORD PTR [rax]
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING3PEN12COLOR__set__Ej
	jmp	.L2034
.L2044:
	nop
.L2013:
	lea	rax, -240[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	lea	rdx, .LC196[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -100[rbp], eax
	cmp	DWORD PTR -100[rbp], 0
	jne	.L2046
	mov	rax, QWORD PTR -96[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L2020:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	lea	r8, .LC194[rip]
	mov	edx, 30
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -120[rbp], rax
	cmp	QWORD PTR -120[rbp], 0
	je	.L2047
	jmp	[QWORD PTR -120[rbp]]
.L2047:
	nop
.L2022:
	mov	rax, QWORD PTR -112[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING3PEN12STYLE__set__Eu7INTEGER
	jmp	.L2034
.L2046:
	nop
.L2019:
	lea	rax, -240[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	lea	rdx, .LC197[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -140[rbp], eax
	cmp	DWORD PTR -140[rbp], 0
	jne	.L2048
	mov	rax, QWORD PTR -136[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L2025:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	lea	r8, .LC194[rip]
	mov	edx, 31
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -160[rbp], rax
	cmp	QWORD PTR -160[rbp], 0
	je	.L2049
	jmp	[QWORD PTR -160[rbp]]
.L2049:
	nop
.L2027:
	mov	rax, QWORD PTR -152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING3PEN11MODE__set__Eu7INTEGER
	jmp	.L2034
.L2048:
	nop
.L2024:
	lea	rax, -240[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	lea	rdx, .LC198[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -180[rbp], eax
	cmp	DWORD PTR -180[rbp], 0
	jne	.L2050
	mov	rax, QWORD PTR -176[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L2030:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -192[rbp]
	lea	r8, .LC194[rip]
	mov	edx, 32
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -200[rbp], rax
	cmp	QWORD PTR -200[rbp], 0
	je	.L2051
	jmp	[QWORD PTR -200[rbp]]
.L2051:
	nop
.L2032:
	mov	rax, QWORD PTR -192[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING3PEN11SIZE__set__Eu7INTEGER
	jmp	.L2034
.L2050:
	nop
.L2029:
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT13WRITEPROPERTYER8FBSTRINGPv
	mov	BYTE PTR -201[rbp], al
	movzx	eax, BYTE PTR -201[rbp]
	mov	BYTE PTR -202[rbp], al
	lea	rax, -240[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L2033
.L2017:
.L2034:
	lea	rax, -240[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	mov	BYTE PTR -202[rbp], 1
	nop
.L2033:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -202[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC199:
	.ascii "COLOR\0"
	.text
	.def	_ZN2MY3SYS7DRAWING3PEN12COLOR__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING3PEN12COLOR__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	DWORD PTR -36[rbp], 0
	lea	rcx, .LC194[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC199[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L2053:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR -36[rbp], eax
	nop
.L2054:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	eax, DWORD PTR -36[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING3PEN12COLOR__set__Ej;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING3PEN12COLOR__set__Ej:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	DWORD PTR 24[rbp], edx
.L2057:
	lea	rcx, .LC194[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC199[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	mov	eax, DWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING3PEN6CREATEEv
.L2058:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC200:
	.ascii "STYLE\0"
	.text
	.def	_ZN2MY3SYS7DRAWING3PEN12STYLE__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING3PEN12STYLE__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L2060:
	lea	rcx, .LC194[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC200[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 56[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING3PEN6CREATEEv
.L2061:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC201:
	.ascii "MODE\0"
	.text
	.def	_ZN2MY3SYS7DRAWING3PEN11MODE__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING3PEN11MODE__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC194[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC201[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L2063:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 64[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L2064:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING3PEN11MODE__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING3PEN11MODE__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L2067:
	lea	rcx, .LC194[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC201[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 64[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING3PEN6CREATEEv
.L2068:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC202:
	.ascii "SIZE\0"
	.text
	.def	_ZN2MY3SYS7DRAWING3PEN11SIZE__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING3PEN11SIZE__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L2070:
	lea	rcx, .LC194[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC202[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 72[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING3PEN6CREATEEv
.L2071:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC203:
	.ascii "CREATE\0"
	.text
	.def	_ZN2MY3SYS7DRAWING3PEN6CREATEEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING3PEN6CREATEEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
.L2073:
	lea	rcx, .LC194[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC203[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2084
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DeleteObject
	jmp	.L2075
.L2084:
	nop
.L2075:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rax, QWORD PTR [rax]
	mov	ecx, eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	edx, eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	rax, QWORD PTR [rax]
	mov	r8d, ecx
	mov	ecx, eax
	call	CreatePen
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 80[rax]
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2085
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 96
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2086
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 96[rax]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	r8, .LC194[rip]
	mov	edx, 78
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L2087
	jmp	[QWORD PTR -56[rbp]]
.L2087:
	nop
.L2080:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L2082
.L2077:
.L2081:
.L2085:
	nop
	jmp	.L2082
.L2086:
	nop
.L2082:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 2
.LC204:
	.ascii "P\0e\0n\0\0\0"
	.text
	.def	_ZN2MY3SYS7DRAWING3PENC1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING3PENC1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L2089:
	lea	rcx, .LC194[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 96
	mov	QWORD PTR [rax], 0
	lea	rdx, _ZTVN2MY3SYS7DRAWING3PENE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	QWORD PTR [rax], 1
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	QWORD PTR [rax], 13
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 32
	lea	rdx, .LC204[rip]
	mov	rcx, rax
	call	WLET
.L2090:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING3PEND1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING3PEND1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	lea	rdx, _ZTVN2MY3SYS7DRAWING3PENE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rcx, .LC194[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L2092:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2096
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DeleteObject
	jmp	.L2095
.L2094:
.L2096:
	nop
.L2095:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTD1Ev
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC205:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Brush.bi\0"
	.text
	.def	_ZN2MY3SYS7DRAWING5BRUSHaSERKS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING5BRUSHaSERKS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L2098:
	lea	rcx, .LC205[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTaSERKS1_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 48[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 56[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 56[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 64[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 64[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 72[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 72[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 80[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 80[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 88[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 88[rax]
	mov	QWORD PTR [rdx], rax
.L2099:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC206:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Brush.bas\0"
	.align 2
.LC207:
	.ascii "h\0a\0t\0c\0h\0s\0t\0y\0l\0e\0\0\0"
	.text
	.def	_ZN2MY3SYS7DRAWING5BRUSH12READPROPERTYER8FBSTRING;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING5BRUSH12READPROPERTYER8FBSTRING:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 208
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -128[rbp], 0
	lea	rcx, .LC206[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC152[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L2101:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -160[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -160[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC195[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L2117
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L2104:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	QWORD PTR -128[rbp], rax
	lea	rax, -160[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L2112
.L2117:
	nop
.L2103:
	lea	rax, -160[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	rdx, .LC196[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -84[rbp], eax
	cmp	DWORD PTR -84[rbp], 0
	jne	.L2118
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L2108:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	QWORD PTR -128[rbp], rax
	lea	rax, -160[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L2112
.L2118:
	nop
.L2107:
	lea	rax, -160[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	lea	rdx, .LC207[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -108[rbp], eax
	cmp	DWORD PTR -108[rbp], 0
	jne	.L2119
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L2111:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	QWORD PTR -128[rbp], rax
	lea	rax, -160[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L2112
.L2119:
	nop
.L2110:
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT12READPROPERTYER8FBSTRING
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	QWORD PTR -128[rbp], rax
	lea	rax, -160[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	nop
.L2112:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -128[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING5BRUSH13WRITEPROPERTYER8FBSTRINGPv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING5BRUSH13WRITEPROPERTYER8FBSTRINGPv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 240
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	BYTE PTR -162[rbp], 0
	lea	rcx, .LC206[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC154[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L2121:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -192[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -192[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC195[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L2147
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L2124:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	r8, .LC206[rip]
	mov	edx, 47
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L2148
	jmp	[QWORD PTR -80[rbp]]
.L2148:
	nop
.L2126:
	mov	rax, QWORD PTR -72[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING5BRUSH12COLOR__set__Eu7INTEGER
	jmp	.L2139
.L2147:
	nop
.L2123:
	lea	rax, -192[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	lea	rdx, .LC196[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -100[rbp], eax
	cmp	DWORD PTR -100[rbp], 0
	jne	.L2149
	mov	rax, QWORD PTR -96[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L2130:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	lea	r8, .LC206[rip]
	mov	edx, 48
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -120[rbp], rax
	cmp	QWORD PTR -120[rbp], 0
	je	.L2150
	jmp	[QWORD PTR -120[rbp]]
.L2150:
	nop
.L2132:
	mov	rax, QWORD PTR -112[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING5BRUSH12STYLE__set__ENS1_11BRUSHSTYLESE
	jmp	.L2139
.L2149:
	nop
.L2129:
	lea	rax, -192[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	lea	rdx, .LC207[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -140[rbp], eax
	cmp	DWORD PTR -140[rbp], 0
	jne	.L2151
	mov	rax, QWORD PTR -136[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L2135:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	lea	r8, .LC206[rip]
	mov	edx, 49
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -160[rbp], rax
	cmp	QWORD PTR -160[rbp], 0
	je	.L2152
	jmp	[QWORD PTR -160[rbp]]
.L2152:
	nop
.L2137:
	mov	rax, QWORD PTR -152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING5BRUSH17HATCHSTYLE__set__ENS1_11HATCHSTYLESE
	jmp	.L2139
.L2151:
	nop
.L2134:
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT13WRITEPROPERTYER8FBSTRINGPv
	mov	BYTE PTR -161[rbp], al
	movzx	eax, BYTE PTR -161[rbp]
	mov	BYTE PTR -162[rbp], al
	lea	rax, -192[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L2138
.L2127:
.L2139:
	lea	rax, -192[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	mov	BYTE PTR -162[rbp], 1
	nop
.L2138:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -162[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING5BRUSH12COLOR__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING5BRUSH12COLOR__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC206[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC199[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L2154:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 48[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L2155:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING5BRUSH12COLOR__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING5BRUSH12COLOR__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L2158:
	lea	rcx, .LC206[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC199[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING5BRUSH6CREATEEv
.L2159:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING5BRUSH12STYLE__set__ENS1_11BRUSHSTYLESE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING5BRUSH12STYLE__set__ENS1_11BRUSHSTYLESE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L2161:
	lea	rcx, .LC206[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC200[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 56[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING5BRUSH6CREATEEv
.L2162:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC208:
	.ascii "HATCHSTYLE\0"
	.text
	.def	_ZN2MY3SYS7DRAWING5BRUSH17HATCHSTYLE__set__ENS1_11HATCHSTYLESE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING5BRUSH17HATCHSTYLE__set__ENS1_11HATCHSTYLESE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L2164:
	lea	rcx, .LC206[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC208[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 64[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING5BRUSH6CREATEEv
.L2165:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING5BRUSH6CREATEEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING5BRUSH6CREATEEv:
	push	rbp
	mov	rbp, rsp
	add	rsp, -128
	mov	QWORD PTR 16[rbp], rcx
.L2167:
	lea	rcx, .LC206[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC203[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	lea	rax, -96[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rdx, QWORD PTR [rax]
	lea	rax, -96[rbp]
	add	rax, 4
	mov	DWORD PTR [rax], edx
	lea	rax, -96[rbp]
	add	rax, 8
	mov	rdx, QWORD PTR 16[rbp]
	mov	rdx, QWORD PTR 64[rdx]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 56[rax]
	mov	QWORD PTR -48[rbp], rax
	cmp	QWORD PTR -48[rbp], 1
	jne	.L2191
	nop
.L2168:
	lea	rax, -96[rbp]
	mov	DWORD PTR [rax], 1
	jmp	.L2174
.L2191:
	nop
.L2169:
	cmp	QWORD PTR -48[rbp], 0
	jne	.L2192
	nop
.L2171:
	lea	rax, -96[rbp]
	mov	DWORD PTR [rax], 0
	jmp	.L2174
.L2192:
	nop
.L2172:
	cmp	QWORD PTR -48[rbp], 2
	jne	.L2193
	nop
.L2173:
	lea	rax, -96[rbp]
	mov	DWORD PTR [rax], 2
	lea	rax, -96[rbp]
	add	rax, 8
	mov	rdx, QWORD PTR 16[rbp]
	mov	rdx, QWORD PTR 64[rdx]
	mov	QWORD PTR [rax], rdx
	jmp	.L2174
.L2170:
.L2193:
	nop
.L2174:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2194
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR HBRBKGND$[rip]
	cmp	rdx, rax
	setne	al
	movzx	eax, al
	neg	eax
	test	eax, eax
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L2177
.L2194:
	nop
.L2176:
	mov	QWORD PTR -8[rbp], 0
.L2177:
	cmp	QWORD PTR -8[rbp], 0
	je	.L2195
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DeleteObject
	jmp	.L2179
.L2195:
	nop
.L2179:
	lea	rax, -96[rbp]
	mov	rcx, rax
	call	CreateBrushIndirect
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 72[rax]
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2196
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2197
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 88[rax]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	lea	r8, .LC206[rip]
	mov	edx, 98
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	je	.L2198
	jmp	[QWORD PTR -72[rbp]]
.L2198:
	nop
.L2184:
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L2186
.L2181:
.L2185:
.L2196:
	nop
	jmp	.L2186
.L2197:
	nop
.L2186:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 2
.LC209:
	.ascii "B\0r\0u\0s\0h\0\0\0"
	.text
	.def	_ZN2MY3SYS7DRAWING5BRUSHC1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING5BRUSHC1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L2200:
	lea	rcx, .LC206[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	QWORD PTR [rax], 0
	lea	rdx, _ZTVN2MY3SYS7DRAWING5BRUSHE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	QWORD PTR [rax], 16777215
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 32
	lea	rdx, .LC209[rip]
	mov	rcx, rax
	call	WLET
.L2201:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING5BRUSHD1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING5BRUSHD1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	lea	rdx, _ZTVN2MY3SYS7DRAWING5BRUSHE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rcx, .LC206[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L2203:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2211
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR HBRBKGND$[rip]
	cmp	rdx, rax
	setne	al
	movzx	eax, al
	neg	eax
	test	eax, eax
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L2206
.L2211:
	nop
.L2205:
	mov	QWORD PTR -8[rbp], 0
.L2206:
	cmp	QWORD PTR -8[rbp], 0
	je	.L2212
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DeleteObject
	jmp	.L2209
.L2208:
.L2212:
	nop
.L2209:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTD1Ev
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC210:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Bitmap.bi\0"
	.text
	.def	_ZN2MY3SYS7DRAWING10BITMAPTYPEaSERKS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING10BITMAPTYPEaSERKS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L2214:
	lea	rcx, .LC210[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTaSERKS1_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	eax, DWORD PTR 48[rax]
	mov	DWORD PTR [rdx], eax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 52[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	eax, DWORD PTR 52[rax]
	mov	DWORD PTR [rdx], eax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 56[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 56[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 64[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 64[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 72
	mov	QWORD PTR -24[rbp], rax
	mov	QWORD PTR -8[rbp], 0
.L2215:
	mov	rax, QWORD PTR -24[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR [rax], rdx
	add	QWORD PTR -16[rbp], 8
	add	QWORD PTR -24[rbp], 8
	add	QWORD PTR -8[rbp], 1
	cmp	QWORD PTR -8[rbp], 3
	je	.L2216
	jmp	.L2215
.L2216:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 96[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 96[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 104[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 104[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 112[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 112[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 120[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 120
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING5BRUSHaSERKS2_
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 216[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 216
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING3PENaSERKS2_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 320[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 320[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 328[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 328[rax]
	mov	QWORD PTR [rdx], rax
.L2217:
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING10BITMAPTYPEC1ERKS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING10BITMAPTYPEC1ERKS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L2219:
	lea	rcx, .LC210[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 52
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 96
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 120
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING5BRUSHC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 216
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING3PENC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 320
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 328
	mov	QWORD PTR [rax], 0
	lea	rdx, _ZTVN2MY3SYS7DRAWING10BITMAPTYPEE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPEaSERKS2_
.L2220:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC211:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Bitmap.bas\0"
	.text
	.def	_ZN2MY3SYS7DRAWING10BITMAPTYPE12READPROPERTYER8FBSTRING;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING10BITMAPTYPE12READPROPERTYER8FBSTRING:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 160
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -80[rbp], 0
	lea	rcx, .LC211[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC152[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L2222:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -112[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -112[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC163[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L2230
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L2225:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	mov	QWORD PTR -80[rbp], rax
	lea	rax, -112[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L2227
.L2230:
	nop
.L2224:
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT12READPROPERTYER8FBSTRING
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	lea	rax, -112[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	nop
.L2227:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -80[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING10BITMAPTYPE13WRITEPROPERTYER8FBSTRINGPv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING10BITMAPTYPE13WRITEPROPERTYER8FBSTRINGPv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 176
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	BYTE PTR -58[rbp], 0
	lea	rcx, .LC211[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC154[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L2232:
	cmp	QWORD PTR 32[rbp], 0
	jne	.L2238
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -96[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT13WRITEPROPERTYER8FBSTRINGPv
	mov	BYTE PTR -41[rbp], al
	movzx	eax, BYTE PTR -41[rbp]
	mov	BYTE PTR -58[rbp], al
	lea	rax, -96[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L2235
.L2238:
	nop
.L2234:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -56[rbp], rax
	mov	rdx, QWORD PTR -56[rbp]
	lea	rax, -128[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT13WRITEPROPERTYER8FBSTRINGPv
	mov	BYTE PTR -57[rbp], al
	movzx	eax, BYTE PTR -57[rbp]
	mov	BYTE PTR -58[rbp], al
	lea	rax, -128[rbp]
	mov	rcx, rax
	call	fb_StrDelete
.L2235:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -58[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING10BITMAPTYPE12WIDTH__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING10BITMAPTYPE12WIDTH__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC211[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC191[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L2240:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	eax, DWORD PTR [rax]
	mov	eax, eax
	mov	QWORD PTR -40[rbp], rax
	nop
.L2241:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING10BITMAPTYPE12WIDTH__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING10BITMAPTYPE12WIDTH__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L2244:
	lea	rcx, .LC211[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC191[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rdx, QWORD PTR 24[rbp]
	mov	DWORD PTR [rax], edx
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 328
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2251
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 328[rax]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	lea	r8, .LC211[rip]
	mov	edx, 48
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -48[rbp], rax
	cmp	QWORD PTR -48[rbp], 0
	je	.L2252
	jmp	[QWORD PTR -48[rbp]]
.L2252:
	nop
.L2248:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L2249
.L2246:
.L2251:
	nop
.L2249:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING10BITMAPTYPE13HEIGHT__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING10BITMAPTYPE13HEIGHT__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC211[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC192[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L2254:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 52
	mov	eax, DWORD PTR [rax]
	mov	eax, eax
	mov	QWORD PTR -40[rbp], rax
	nop
.L2255:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING10BITMAPTYPE13HEIGHT__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING10BITMAPTYPE13HEIGHT__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L2258:
	lea	rcx, .LC211[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC192[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 52
	mov	rdx, QWORD PTR 24[rbp]
	mov	DWORD PTR [rax], edx
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 328
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2265
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 328[rax]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	lea	r8, .LC211[rip]
	mov	edx, 57
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -48[rbp], rax
	cmp	QWORD PTR -48[rbp], 0
	je	.L2266
	jmp	[QWORD PTR -48[rbp]]
.L2266:
	nop
.L2262:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L2263
.L2260:
.L2265:
	nop
.L2263:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 2
.LC212:
	.ascii ".\0\0\0"
	.align 2
.LC213:
	.ascii "b\0m\0p\0\0\0"
	.text
	.def	_ZN2MY3SYS7DRAWING10BITMAPTYPE12LOADFROMFILEERwu7INTEGERS4_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING10BITMAPTYPE12LOADFROMFILEERwu7INTEGERS4_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 304
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
	mov	BYTE PTR -161[rbp], 0
	lea	rcx, .LC211[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC68[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L2268:
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, -1
	lea	rdx, .LC212[rip]
	mov	rcx, rax
	call	fb_WstrInstrRev
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	rdx, 1[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, -1
	mov	rcx, rax
	call	fb_WstrMid
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrLen
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	rcx, rax
	call	fb_WstrAlloc
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rdx, QWORD PTR -80[rbp]
	mov	rax, QWORD PTR -104[rbp]
	mov	r8, rdx
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrAssign
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -104[rbp]
	lea	rdx, .LC213[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -116[rbp], eax
	cmp	DWORD PTR -116[rbp], 0
	jne	.L2298
	nop
.L2269:
	lea	rax, -256[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	QWORD PTR -176[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2299
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DeleteObject
	jmp	.L2272
.L2299:
	nop
.L2272:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	neg	eax
	mov	edx, eax
	mov	eax, edx
	sar	eax, 31
	xor	edx, eax
	mov	DWORD PTR -120[rbp], edx
	sub	DWORD PTR -120[rbp], eax
	mov	eax, DWORD PTR -120[rbp]
	cdqe
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	r9, .LC211[rip]
	mov	r8d, 85
	mov	edx, 2
	mov	rcx, rax
	call	fb_ArraySngBoundChk
	mov	QWORD PTR -136[rbp], rax
	cmp	QWORD PTR -136[rbp], 0
	je	.L2300
	jmp	[QWORD PTR -136[rbp]]
.L2300:
	nop
.L2274:
	mov	rax, QWORD PTR -128[rbp]
	sal	rax, 3
	lea	rdx, 72[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	or	eax, 4112
	mov	ecx, eax
	mov	rax, QWORD PTR 40[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR 32[rbp]
	mov	r8d, eax
	mov	rax, QWORD PTR 24[rbp]
	mov	DWORD PTR 40[rsp], ecx
	mov	DWORD PTR 32[rsp], edx
	mov	r9d, r8d
	mov	r8d, 0
	mov	rdx, rax
	mov	ecx, 0
	call	LoadImageW
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 112[rax]
	mov	rax, QWORD PTR -144[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jne	.L2301
	mov	BYTE PTR -161[rbp], 0
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L2277
.L2301:
	nop
.L2276:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	mov	rax, QWORD PTR [rax]
	lea	rdx, -256[rbp]
	mov	r8, rdx
	mov	edx, 32
	mov	rcx, rax
	call	GetObjectW
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	mov	eax, DWORD PTR -252[rbp]
	mov	DWORD PTR [rdx], eax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 52[rax]
	mov	eax, DWORD PTR -248[rbp]
	mov	DWORD PTR [rdx], eax
	jmp	.L2286
.L2298:
	nop
.L2270:
	mov	QWORD PTR -184[rbp], 0
	mov	QWORD PTR -192[rbp], 0
	lea	rax, -224[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	lea	rax, -224[rbp]
	mov	DWORD PTR [rax], 1
	lea	rdx, -224[rbp]
	lea	rax, -192[rbp]
	mov	r8d, 0
	mov	rcx, rax
	call	GdiplusStartup
	mov	rax, QWORD PTR -192[rbp]
	test	rax, rax
	jne	.L2302
	mov	BYTE PTR -161[rbp], 0
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L2277
.L2302:
	nop
.L2280:
	lea	rdx, -184[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	GdipLoadImageFromFile
	mov	rax, QWORD PTR -184[rbp]
	test	rax, rax
	jne	.L2303
	mov	BYTE PTR -161[rbp], 0
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L2277
.L2303:
	nop
.L2283:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	mov	rax, QWORD PTR -184[rbp]
	mov	rcx, rax
	call	GdipGetImageWidth
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 52[rax]
	mov	rax, QWORD PTR -184[rbp]
	mov	rcx, rax
	call	GdipGetImageHeight
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 112[rax]
	mov	rax, QWORD PTR -184[rbp]
	mov	r8d, 0
	mov	rcx, rax
	call	GdipCreateHBITMAPFromBitmap
	mov	rax, QWORD PTR -184[rbp]
	test	rax, rax
	je	.L2304
	mov	rax, QWORD PTR -184[rbp]
	mov	rcx, rax
	call	GdipDisposeImage
	jmp	.L2285
.L2304:
	nop
.L2285:
	mov	rax, QWORD PTR -192[rbp]
	mov	rcx, rax
	call	GdiplusShutdown
.L2278:
.L2286:
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 328
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2305
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 328[rax]
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	lea	r8, .LC211[rip]
	mov	edx, 113
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -160[rbp], rax
	cmp	QWORD PTR -160[rbp], 0
	je	.L2306
	jmp	[QWORD PTR -160[rbp]]
.L2306:
	nop
.L2290:
	mov	rax, QWORD PTR -152[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L2288
.L2305:
	nop
.L2288:
	mov	BYTE PTR -161[rbp], 1
	nop
.L2277:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -161[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING10BITMAPTYPE10SAVETOFILEERw;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING10BITMAPTYPE10SAVETOFILEERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 416
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	BYTE PTR -241[rbp], 0
	lea	rcx, .LC211[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC78[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L2308:
	mov	QWORD PTR -256[rbp], 0
	mov	QWORD PTR -264[rbp], 0
	mov	QWORD PTR -272[rbp], 0
	mov	QWORD PTR -280[rbp], 0
	mov	QWORD PTR -8[rbp], 0
	call	fb_FileFree
	mov	DWORD PTR -44[rbp], eax
	mov	eax, DWORD PTR -44[rbp]
	cdqe
	mov	QWORD PTR -256[rbp], rax
	lea	rax, -352[rbp]
	mov	QWORD PTR [rax], 0
	lea	rax, -352[rbp]
	add	rax, 8
	mov	QWORD PTR [rax], 0
	lea	rax, -352[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], 0
	lea	rax, -352[rbp]
	add	rax, 24
	mov	QWORD PTR [rax], 3
	lea	rax, -352[rbp]
	add	rax, 32
	mov	QWORD PTR [rax], 1
	lea	rax, -352[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], 17
	lea	rax, -352[rbp]
	add	rax, 48
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
.L2309:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	eax, DWORD PTR [rax]
	mov	edx, eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 52
	mov	eax, DWORD PTR [rax]
	mov	eax, eax
	imul	rax, rdx
	lea	rdx, -1[rax]
	lea	rax, -352[rbp]
	mov	QWORD PTR 48[rsp], rdx
	mov	QWORD PTR 40[rsp], 0
	mov	QWORD PTR 32[rsp], 1
	mov	r9d, 0
	mov	r8d, -1
	mov	edx, 3
	mov	rcx, rax
	call	fb_ArrayRedimEx
	mov	DWORD PTR -48[rbp], eax
	cmp	DWORD PTR -48[rbp], 0
	je	.L2348
	jmp	.L2342
.L2313:
	jmp	rax
.L2342:
	lea	r9, .L2312[rip]
	lea	r8, .L2309[rip]
	lea	rdx, .LC211[rip]
	mov	ecx, 144
	call	fb_ErrorThrowAt
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	jmp	.L2313
.L2348:
	nop
.L2312:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 52
	mov	eax, DWORD PTR [rax]
	mov	eax, eax
	sub	rax, 1
	mov	QWORD PTR -272[rbp], rax
	jmp	.L2314
.L2353:
	nop
.L2315:
	mov	QWORD PTR -264[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	eax, DWORD PTR [rax]
	mov	eax, eax
	sub	rax, 1
	mov	QWORD PTR -64[rbp], rax
	jmp	.L2316
.L2352:
	nop
.L2317:
	mov	rax, QWORD PTR -272[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR -264[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	rax, QWORD PTR [rax]
	mov	r8d, ecx
	mov	rcx, rax
	call	GetPixel
	mov	DWORD PTR -68[rbp], eax
	mov	eax, DWORD PTR -68[rbp]
	mov	QWORD PTR -280[rbp], rax
	mov	rax, QWORD PTR -280[rbp]
	mov	ecx, eax
	call	GETGREEN
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -88[rbp], rax
	lea	rax, -352[rbp]
	add	rax, 64
	mov	r8, QWORD PTR [rax]
	lea	rax, -352[rbp]
	add	rax, 56
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -88[rbp]
	lea	rcx, .LC211[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 148
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -96[rbp], rax
	cmp	QWORD PTR -96[rbp], 0
	je	.L2349
	mov	rax, QWORD PTR -96[rbp]
	jmp	.L2313
.L2349:
	nop
.L2319:
	mov	rdx, QWORD PTR -88[rbp]
	mov	rax, rdx
	add	rax, rax
	add	rdx, rax
	lea	rax, -352[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	mov	rdx, QWORD PTR -80[rbp]
	mov	BYTE PTR [rax], dl
	mov	rax, QWORD PTR -280[rbp]
	mov	ecx, eax
	call	GETRED
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -112[rbp], rax
	lea	rax, -352[rbp]
	add	rax, 64
	mov	r8, QWORD PTR [rax]
	lea	rax, -352[rbp]
	add	rax, 56
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -112[rbp]
	lea	rcx, .LC211[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 149
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -120[rbp], rax
	cmp	QWORD PTR -120[rbp], 0
	je	.L2350
	mov	rax, QWORD PTR -120[rbp]
	jmp	.L2313
.L2350:
	nop
.L2321:
	mov	rdx, QWORD PTR -112[rbp]
	mov	rax, rdx
	add	rax, rax
	add	rdx, rax
	lea	rax, -352[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	add	rax, 2
	mov	rdx, QWORD PTR -104[rbp]
	mov	BYTE PTR [rax], dl
	mov	rax, QWORD PTR -280[rbp]
	mov	ecx, eax
	call	GETBLUE
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -136[rbp], rax
	lea	rax, -352[rbp]
	add	rax, 64
	mov	r8, QWORD PTR [rax]
	lea	rax, -352[rbp]
	add	rax, 56
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -136[rbp]
	lea	rcx, .LC211[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 150
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -144[rbp], rax
	cmp	QWORD PTR -144[rbp], 0
	je	.L2351
	mov	rax, QWORD PTR -144[rbp]
	jmp	.L2313
.L2351:
	nop
.L2323:
	mov	rdx, QWORD PTR -136[rbp]
	mov	rax, rdx
	add	rax, rax
	add	rdx, rax
	lea	rax, -352[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	add	rax, 1
	mov	rdx, QWORD PTR -128[rbp]
	mov	BYTE PTR [rax], dl
	add	QWORD PTR -8[rbp], 1
.L2324:
	mov	rax, QWORD PTR -264[rbp]
	add	rax, 1
	mov	QWORD PTR -264[rbp], rax
.L2316:
	mov	rax, QWORD PTR -264[rbp]
	cmp	QWORD PTR -64[rbp], rax
	jge	.L2352
.L2325:
	nop
.L2326:
	mov	rax, QWORD PTR -272[rbp]
	sub	rax, 1
	mov	QWORD PTR -272[rbp], rax
.L2314:
	mov	rax, QWORD PTR -272[rbp]
	test	rax, rax
	jns	.L2353
	nop
.L2327:
	lea	rax, BM$1.9489[rip]
	mov	WORD PTR [rax], 19778
	lea	rax, BM$1.9489[rip+6]
	mov	DWORD PTR [rax], 0
	lea	rax, BM$1.9489[rip+10]
	mov	DWORD PTR [rax], 54
	lea	rax, BM$1.9489[rip+14]
	mov	DWORD PTR [rax], 40
	lea	rax, BM$1.9489[rip+26]
	mov	WORD PTR [rax], 1
	lea	rax, BM$1.9489[rip+28]
	mov	WORD PTR [rax], 24
	lea	rax, BM$1.9489[rip+30]
	mov	DWORD PTR [rax], 0
	lea	rax, BM$1.9489[rip+38]
	mov	DWORD PTR [rax], 0
	lea	rax, BM$1.9489[rip+42]
	mov	DWORD PTR [rax], 0
	lea	rax, BM$1.9489[rip+46]
	mov	DWORD PTR [rax], 0
	lea	rax, BM$1.9489[rip+50]
	mov	DWORD PTR [rax], 0
	lea	rdx, BM$1.9489[rip+18]
	mov	rax, QWORD PTR 16[rbp]
	mov	eax, DWORD PTR 48[rax]
	mov	DWORD PTR [rdx], eax
	lea	rdx, BM$1.9489[rip+22]
	mov	rax, QWORD PTR 16[rbp]
	mov	eax, DWORD PTR 52[rax]
	mov	DWORD PTR [rdx], eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	edx, DWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 52
	mov	eax, DWORD PTR [rax]
	imul	edx, eax
	lea	rcx, BM$1.9489[rip+34]
	mov	eax, edx
	add	eax, eax
	add	eax, edx
	mov	DWORD PTR [rcx], eax
	lea	rax, BM$1.9489[rip+10]
	mov	ecx, DWORD PTR [rax]
	lea	rax, BM$1.9489[rip+34]
	mov	edx, DWORD PTR [rax]
	lea	rax, BM$1.9489[rip+2]
	add	edx, ecx
	mov	DWORD PTR [rax], edx
.L2328:
	lea	rax, -240[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	rdx, QWORD PTR 24[rbp]
	lea	rax, -240[rbp]
	mov	r9d, 0
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA
	mov	rax, QWORD PTR -256[rbp]
	mov	edx, eax
	lea	rax, -240[rbp]
	mov	DWORD PTR 40[rsp], 0
	mov	DWORD PTR 32[rsp], edx
	mov	r9d, 0
	mov	r8d, 2
	mov	edx, 0
	mov	rcx, rax
	call	fb_FileOpen
	mov	DWORD PTR -148[rbp], eax
	cmp	DWORD PTR -148[rbp], 0
	je	.L2354
	lea	r9, .L2330[rip]
	lea	r8, .L2328[rip]
	lea	rdx, .LC211[rip]
	mov	ecx, 169
	call	fb_ErrorThrowAt
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	jmp	.L2313
.L2354:
	nop
.L2330:
	lea	rax, -240[rbp]
	mov	rcx, rax
	call	fb_StrDelete
.L2331:
	mov	rax, QWORD PTR -256[rbp]
	mov	r9d, 54
	lea	r8, BM$1.9489[rip]
	mov	edx, 0
	mov	ecx, eax
	call	fb_FilePutLarge
	mov	DWORD PTR -164[rbp], eax
	cmp	DWORD PTR -164[rbp], 0
	je	.L2355
	lea	r9, .L2333[rip]
	lea	r8, .L2331[rip]
	lea	rdx, .LC211[rip]
	mov	ecx, 170
	call	fb_ErrorThrowAt
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	jmp	.L2313
.L2333:
	jmp	.L2334
.L2355:
	nop
.L2334:
	mov	rax, QWORD PTR -256[rbp]
	mov	ecx, eax
	lea	rax, -352[rbp]
	mov	r8, rax
	mov	edx, 0
	call	fb_FilePutArrayLarge
	mov	DWORD PTR -180[rbp], eax
	cmp	DWORD PTR -180[rbp], 0
	je	.L2356
	lea	r9, .L2336[rip]
	lea	r8, .L2334[rip]
	lea	rdx, .LC211[rip]
	mov	ecx, 171
	call	fb_ErrorThrowAt
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -192[rbp]
	jmp	.L2313
.L2336:
	jmp	.L2337
.L2356:
	nop
.L2337:
	mov	rax, QWORD PTR -256[rbp]
	mov	ecx, eax
	call	fb_FileClose
	mov	DWORD PTR -196[rbp], eax
	cmp	DWORD PTR -196[rbp], 0
	je	.L2357
	lea	r9, .L2339[rip]
	lea	r8, .L2337[rip]
	lea	rdx, .LC211[rip]
	mov	ecx, 172
	call	fb_ErrorThrowAt
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR -208[rbp]
	jmp	.L2313
.L2357:
	nop
.L2339:
	mov	BYTE PTR -241[rbp], 1
	lea	rax, -352[rbp]
	mov	rcx, rax
	call	fb_ArrayErase
	nop
.L2340:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -241[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC214:
	.ascii "LOADFROMHICON\0"
	.text
	.def	_ZN2MY3SYS7DRAWING10BITMAPTYPE13LOADFROMHICONEP7HICON__;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING10BITMAPTYPE13LOADFROMHICONEP7HICON__:
	push	rbp
	mov	rbp, rsp
	push	rdi
	sub	rsp, 952
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	BYTE PTR -421[rbp], 0
	lea	rcx, .LC211[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rcx, .LC214[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
.L2359:
	mov	QWORD PTR -432[rbp], 0
	lea	rax, -464[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	lea	rax, -464[rbp]
	mov	DWORD PTR [rax], 1
	lea	rdx, -464[rbp]
	lea	rax, -432[rbp]
	mov	r8d, 0
	mov	rcx, rax
	call	GdiplusStartup
	lea	rax, -512[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	QWORD PTR 32[rax], 0
	lea	rax, -544[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	lea	rax, -576[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	lea	rax, -592[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	lea	rax, -624[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	QWORD PTR -632[rbp], 0
	lea	rax, -880[rbp]
	mov	QWORD PTR [rax], 0
	lea	rax, -880[rbp]
	add	rax, 8
	mov	QWORD PTR [rax], 0
	lea	rax, -880[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], 0
	lea	rax, -880[rbp]
	add	rax, 24
	mov	QWORD PTR [rax], 4
	lea	rax, -880[rbp]
	add	rax, 32
	mov	QWORD PTR [rax], 0
	lea	rax, -880[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], 8
	lea	rax, -880[rbp]
	add	rax, 48
	mov	ecx, 192
	mov	r8d, 0
	mov	QWORD PTR [rax], r8
	mov	edx, ecx
	add	rdx, rax
	add	rdx, 8
	mov	QWORD PTR -16[rdx], r8
	lea	rdx, 8[rax]
	and	rdx, -8
	sub	rax, rdx
	add	ecx, eax
	and	ecx, -8
	mov	eax, ecx
	shr	eax, 3
	mov	ecx, eax
	mov	rdi, rdx
	mov	rax, r8
	rep stosq
	mov	DWORD PTR -884[rbp], 0
	mov	DWORD PTR -888[rbp], 0
	lea	rdx, -576[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	GetIconInfo
	lea	rax, -576[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2472
	lea	rax, -576[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jne	.L2473
	lea	rax, -880[rbp]
	mov	rcx, rax
	call	fb_ArrayErase
	jmp	.L2364
.L2473:
	nop
.L2363:
	lea	rax, -576[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	lea	rdx, -544[rbp]
	mov	r8, rdx
	mov	edx, 32
	mov	rcx, rax
	call	GetObjectW
	lea	rax, -544[rbp]
	add	rax, 8
	mov	eax, DWORD PTR [rax]
	cdqe
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE13HEIGHT__set__Eu7INTEGER
	jmp	.L2365
.L2472:
	nop
.L2361:
	lea	rax, -576[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jne	.L2474
	lea	rax, -880[rbp]
	mov	rcx, rax
	call	fb_ArrayErase
	jmp	.L2364
.L2474:
	nop
.L2367:
	lea	rax, -576[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	lea	rdx, -544[rbp]
	mov	r8, rdx
	mov	edx, 32
	mov	rcx, rax
	call	GetObjectW
	lea	rax, -544[rbp]
	add	rax, 8
	mov	eax, DWORD PTR [rax]
	mov	edx, eax
	shr	edx, 31
	add	eax, edx
	sar	eax
	cdqe
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE13HEIGHT__set__Eu7INTEGER
.L2365:
	lea	rax, -544[rbp]
	add	rax, 4
	mov	eax, DWORD PTR [rax]
	cdqe
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE12WIDTH__set__Eu7INTEGER
	lea	rax, -576[rbp]
	mov	eax, DWORD PTR [rax]
	test	eax, eax
	jne	.L2368
	mov	eax, 1
	jmp	.L2369
.L2368:
	mov	eax, 0
.L2369:
	mov	BYTE PTR -49[rbp], al
	lea	rax, -576[rbp]
	add	rax, 4
	mov	eax, DWORD PTR [rax]
	mov	eax, eax
	mov	QWORD PTR -64[rbp], rax
	lea	rax, -576[rbp]
	add	rax, 8
	mov	eax, DWORD PTR [rax]
	mov	eax, eax
	mov	QWORD PTR -72[rbp], rax
	mov	ecx, 0
	call	CreateCompatibleDC
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	QWORD PTR -632[rbp], rax
	mov	QWORD PTR -896[rbp], 0
	mov	rax, QWORD PTR -632[rbp]
	test	rax, rax
	jne	.L2475
	lea	rax, -576[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2476
	lea	rax, -576[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DeleteObject
	jmp	.L2373
.L2476:
	nop
.L2373:
	lea	rax, -576[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DeleteObject
	lea	rdx, -896[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	GdipCreateBitmapFromHICON
	lea	rax, -880[rbp]
	mov	rcx, rax
	call	fb_ArrayErase
	jmp	.L2364
.L2371:
.L2475:
	nop
.L2374:
	lea	rax, -512[rbp]
	add	rax, 14
	mov	WORD PTR [rax], 32
	lea	rax, -512[rbp]
	add	rax, 12
	mov	WORD PTR [rax], 1
	lea	rax, -512[rbp]
	mov	DWORD PTR [rax], 40
	lea	rax, -512[rbp]
	add	rax, 4
	mov	edx, DWORD PTR -540[rbp]
	mov	DWORD PTR [rax], edx
	lea	rax, -544[rbp]
	add	rax, 8
	mov	eax, DWORD PTR [rax]
	neg	eax
	mov	edx, eax
	lea	rax, -512[rbp]
	add	rax, 8
	mov	DWORD PTR [rax], edx
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE13HEIGHT__get__Ev
	mov	QWORD PTR -88[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE12WIDTH__get__Ev
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR -96[rbp]
	imul	eax, edx
	mov	DWORD PTR -888[rbp], eax
.L2375:
	mov	eax, DWORD PTR -888[rbp]
	cdqe
	add	rax, rax
	lea	rdx, -1[rax]
	lea	rax, -880[rbp]
	mov	QWORD PTR 48[rsp], rdx
	mov	QWORD PTR 40[rsp], 0
	mov	QWORD PTR 32[rsp], 1
	mov	r9d, 0
	mov	r8d, -1
	mov	edx, 4
	mov	rcx, rax
	call	fb_ArrayRedimEx
	mov	DWORD PTR -100[rbp], eax
	cmp	DWORD PTR -100[rbp], 0
	je	.L2477
	jmp	.L2453
.L2379:
	jmp	rax
.L2453:
	lea	r9, .L2378[rip]
	lea	r8, .L2375[rip]
	lea	rdx, .LC211[rip]
	mov	ecx, 223
	call	fb_ErrorThrowAt
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	jmp	.L2379
.L2477:
	nop
.L2378:
	lea	rax, -576[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2478
	mov	QWORD PTR -120[rbp], 0
	lea	rax, -880[rbp]
	add	rax, 64
	mov	r8, QWORD PTR [rax]
	lea	rax, -880[rbp]
	add	rax, 56
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -120[rbp]
	lea	rcx, .LC211[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 225
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -128[rbp], rax
	cmp	QWORD PTR -128[rbp], 0
	je	.L2479
	mov	rax, QWORD PTR -128[rbp]
	jmp	.L2379
.L2479:
	nop
.L2383:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE13HEIGHT__get__Ev
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	lea	rdx, 0[0+rax*4]
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	mov	r8, rax
	mov	rax, QWORD PTR -136[rbp]
	mov	r9d, eax
	lea	rax, -576[rbp]
	add	rax, 24
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -632[rbp]
	mov	DWORD PTR 48[rsp], 0
	lea	rcx, -512[rbp]
	mov	QWORD PTR 40[rsp], rcx
	mov	QWORD PTR 32[rsp], r8
	mov	r8d, 0
	mov	rcx, rax
	call	GetDIBits
	lea	rax, -576[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DeleteObject
	jmp	.L2384
.L2478:
	nop
.L2381:
	mov	QWORD PTR -144[rbp], 0
	lea	rax, -880[rbp]
	add	rax, 64
	mov	r8, QWORD PTR [rax]
	lea	rax, -880[rbp]
	add	rax, 56
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -144[rbp]
	lea	rcx, .LC211[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 228
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -152[rbp], rax
	cmp	QWORD PTR -152[rbp], 0
	je	.L2480
	mov	rax, QWORD PTR -152[rbp]
	jmp	.L2379
.L2480:
	nop
.L2386:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE13HEIGHT__get__Ev
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	lea	rdx, 0[0+rax*4]
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	mov	r8, rax
	mov	rax, QWORD PTR -160[rbp]
	mov	r9d, eax
	lea	rax, -576[rbp]
	add	rax, 16
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -632[rbp]
	mov	DWORD PTR 48[rsp], 0
	lea	rcx, -512[rbp]
	mov	QWORD PTR 40[rsp], rcx
	mov	QWORD PTR 32[rsp], r8
	mov	r8d, 0
	mov	rcx, rax
	call	GetDIBits
	mov	eax, DWORD PTR -888[rbp]
	cdqe
	mov	QWORD PTR -168[rbp], rax
	lea	rax, -880[rbp]
	add	rax, 64
	mov	r8, QWORD PTR [rax]
	lea	rax, -880[rbp]
	add	rax, 56
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -168[rbp]
	lea	rcx, .LC211[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 229
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -176[rbp], rax
	cmp	QWORD PTR -176[rbp], 0
	je	.L2481
	mov	rax, QWORD PTR -176[rbp]
	jmp	.L2379
.L2481:
	nop
.L2388:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE13HEIGHT__get__Ev
	mov	QWORD PTR -184[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE13HEIGHT__get__Ev
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	lea	rdx, 0[0+rax*4]
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	mov	r8, rax
	mov	rax, QWORD PTR -184[rbp]
	mov	r9d, eax
	mov	rax, QWORD PTR -192[rbp]
	mov	r10d, eax
	lea	rax, -576[rbp]
	add	rax, 16
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -632[rbp]
	mov	DWORD PTR 48[rsp], 0
	lea	rcx, -512[rbp]
	mov	QWORD PTR 40[rsp], rcx
	mov	QWORD PTR 32[rsp], r8
	mov	r8d, r10d
	mov	rcx, rax
	call	GetDIBits
	lea	rax, -576[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DeleteObject
	lea	rax, -576[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR -632[rbp]
	mov	rcx, rax
	call	DeleteDC
.L2384:
	lea	rax, -544[rbp]
	add	rax, 18
	movzx	eax, WORD PTR [rax]
	cmp	ax, 32
	jne	.L2482
	mov	DWORD PTR -884[rbp], 0
	mov	eax, DWORD PTR -888[rbp]
	sub	eax, 1
	mov	DWORD PTR -196[rbp], eax
	jmp	.L2391
.L2485:
	nop
.L2392:
	mov	eax, DWORD PTR -884[rbp]
	cdqe
	mov	QWORD PTR -208[rbp], rax
	lea	rax, -880[rbp]
	add	rax, 64
	mov	r8, QWORD PTR [rax]
	lea	rax, -880[rbp]
	add	rax, 56
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -208[rbp]
	lea	rcx, .LC211[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 236
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -216[rbp], rax
	cmp	QWORD PTR -216[rbp], 0
	je	.L2483
	mov	rax, QWORD PTR -216[rbp]
	jmp	.L2379
.L2483:
	nop
.L2394:
	mov	rax, QWORD PTR -208[rbp]
	lea	rdx, 0[0+rax*4]
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	mov	eax, DWORD PTR [rax]
	cdqe
	and	eax, 4278190080
	test	rax, rax
	je	.L2484
	lea	rax, -624[rbp]
	add	rax, 12
	mov	DWORD PTR [rax], 2498570
	jmp	.L2400
.L2396:
.L2397:
.L2484:
	nop
.L2398:
	mov	eax, DWORD PTR -884[rbp]
	add	eax, 1
	mov	DWORD PTR -884[rbp], eax
.L2391:
	mov	eax, DWORD PTR -884[rbp]
	cmp	DWORD PTR -196[rbp], eax
	jge	.L2485
	jmp	.L2400
.L2390:
.L2399:
.L2482:
	nop
.L2400:
	lea	rax, -624[rbp]
	add	rax, 12
	mov	eax, DWORD PTR [rax]
	test	eax, eax
	jne	.L2486
	lea	rax, -576[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2487
	mov	eax, DWORD PTR -888[rbp]
	cdqe
	mov	QWORD PTR -224[rbp], rax
	lea	rax, -880[rbp]
	add	rax, 64
	mov	r8, QWORD PTR [rax]
	lea	rax, -880[rbp]
	add	rax, 56
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -224[rbp]
	lea	rcx, .LC211[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 244
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -232[rbp], rax
	cmp	QWORD PTR -232[rbp], 0
	je	.L2488
	mov	rax, QWORD PTR -232[rbp]
	jmp	.L2379
.L2488:
	nop
.L2406:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE13HEIGHT__get__Ev
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -224[rbp]
	lea	rdx, 0[0+rax*4]
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	mov	r8, rax
	mov	rax, QWORD PTR -240[rbp]
	mov	r9d, eax
	lea	rax, -576[rbp]
	add	rax, 16
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -632[rbp]
	mov	DWORD PTR 48[rsp], 0
	lea	rcx, -512[rbp]
	mov	QWORD PTR 40[rsp], rcx
	mov	QWORD PTR 32[rsp], r8
	mov	r8d, 0
	mov	rcx, rax
	call	GetDIBits
	jmp	.L2407
.L2404:
.L2487:
	nop
.L2407:
	mov	DWORD PTR -884[rbp], 0
	mov	eax, DWORD PTR -888[rbp]
	sub	eax, 1
	mov	DWORD PTR -244[rbp], eax
	jmp	.L2408
.L2497:
	nop
.L2409:
	mov	eax, DWORD PTR -884[rbp]
	movsx	rdx, eax
	mov	eax, DWORD PTR -888[rbp]
	cdqe
	add	rax, rdx
	mov	QWORD PTR -256[rbp], rax
	lea	rax, -880[rbp]
	add	rax, 64
	mov	r8, QWORD PTR [rax]
	lea	rax, -880[rbp]
	add	rax, 56
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -256[rbp]
	lea	rcx, .LC211[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 247
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -264[rbp], rax
	cmp	QWORD PTR -264[rbp], 0
	je	.L2489
	mov	rax, QWORD PTR -264[rbp]
	jmp	.L2379
.L2489:
	nop
.L2411:
	mov	rax, QWORD PTR -256[rbp]
	lea	rdx, 0[0+rax*4]
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	mov	eax, DWORD PTR [rax]
	test	eax, eax
	jne	.L2490
	mov	eax, DWORD PTR -884[rbp]
	cdqe
	mov	QWORD PTR -272[rbp], rax
	lea	rax, -880[rbp]
	add	rax, 64
	mov	r8, QWORD PTR [rax]
	lea	rax, -880[rbp]
	add	rax, 56
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -272[rbp]
	lea	rcx, .LC211[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 248
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -280[rbp], rax
	cmp	QWORD PTR -280[rbp], 0
	je	.L2491
	mov	rax, QWORD PTR -280[rbp]
	jmp	.L2379
.L2491:
	nop
.L2415:
	mov	eax, DWORD PTR -884[rbp]
	cdqe
	mov	QWORD PTR -288[rbp], rax
	lea	rax, -880[rbp]
	add	rax, 64
	mov	r8, QWORD PTR [rax]
	lea	rax, -880[rbp]
	add	rax, 56
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -288[rbp]
	lea	rcx, .LC211[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 248
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -296[rbp], rax
	cmp	QWORD PTR -296[rbp], 0
	je	.L2492
	mov	rax, QWORD PTR -296[rbp]
	jmp	.L2379
.L2492:
	nop
.L2417:
	mov	rax, QWORD PTR -272[rbp]
	lea	rdx, 0[0+rax*4]
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	mov	edx, DWORD PTR [rax]
	mov	rax, QWORD PTR -288[rbp]
	lea	rcx, 0[0+rax*4]
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, rcx
	mov	rcx, rax
	mov	eax, edx
	or	eax, -16777216
	mov	DWORD PTR [rcx], eax
	jmp	.L2427
.L2490:
	nop
.L2413:
	mov	eax, DWORD PTR -884[rbp]
	cdqe
	mov	QWORD PTR -304[rbp], rax
	lea	rax, -880[rbp]
	add	rax, 64
	mov	r8, QWORD PTR [rax]
	lea	rax, -880[rbp]
	add	rax, 56
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -304[rbp]
	lea	rcx, .LC211[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 249
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -312[rbp], rax
	cmp	QWORD PTR -312[rbp], 0
	je	.L2493
	mov	rax, QWORD PTR -312[rbp]
	jmp	.L2379
.L2493:
	nop
.L2420:
	mov	rax, QWORD PTR -304[rbp]
	lea	rdx, 0[0+rax*4]
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	mov	eax, DWORD PTR [rax]
	test	eax, eax
	je	.L2494
	mov	eax, DWORD PTR -884[rbp]
	cdqe
	mov	QWORD PTR -320[rbp], rax
	lea	rax, -880[rbp]
	add	rax, 64
	mov	r8, QWORD PTR [rax]
	lea	rax, -880[rbp]
	add	rax, 56
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -320[rbp]
	lea	rcx, .LC211[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 250
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -328[rbp], rax
	cmp	QWORD PTR -328[rbp], 0
	je	.L2495
	mov	rax, QWORD PTR -328[rbp]
	jmp	.L2379
.L2495:
	nop
.L2423:
	mov	eax, DWORD PTR -884[rbp]
	cdqe
	mov	QWORD PTR -336[rbp], rax
	lea	rax, -880[rbp]
	add	rax, 64
	mov	r8, QWORD PTR [rax]
	lea	rax, -880[rbp]
	add	rax, 56
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -336[rbp]
	lea	rcx, .LC211[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 250
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -344[rbp], rax
	cmp	QWORD PTR -344[rbp], 0
	je	.L2496
	mov	rax, QWORD PTR -344[rbp]
	jmp	.L2379
.L2496:
	nop
.L2425:
	mov	rax, QWORD PTR -320[rbp]
	lea	rdx, 0[0+rax*4]
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	mov	edx, DWORD PTR [rax]
	mov	rax, QWORD PTR -336[rbp]
	lea	rcx, 0[0+rax*4]
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, rcx
	mov	rcx, rax
	mov	eax, edx
	or	eax, -16777216
	mov	DWORD PTR [rcx], eax
	jmp	.L2427
.L2418:
.L2426:
.L2494:
	nop
.L2427:
	mov	eax, DWORD PTR -884[rbp]
	add	eax, 1
	mov	DWORD PTR -884[rbp], eax
.L2408:
	mov	eax, DWORD PTR -884[rbp]
	cmp	DWORD PTR -244[rbp], eax
	jge	.L2497
	nop
.L2428:
	lea	rax, -624[rbp]
	add	rax, 12
	mov	DWORD PTR [rax], 925707
	jmp	.L2429
.L2402:
.L2486:
	nop
.L2429:
	lea	rax, -576[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2498
	lea	rax, -576[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DeleteObject
	mov	rax, QWORD PTR -632[rbp]
	mov	rcx, rax
	call	DeleteDC
	jmp	.L2432
.L2431:
.L2498:
	nop
.L2432:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE13HEIGHT__get__Ev
	mov	QWORD PTR -352[rbp], rax
	lea	rax, -592[rbp]
	add	rax, 12
	mov	rdx, QWORD PTR -352[rbp]
	mov	DWORD PTR [rax], edx
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE12WIDTH__get__Ev
	mov	QWORD PTR -360[rbp], rax
	lea	rax, -592[rbp]
	add	rax, 8
	mov	rdx, QWORD PTR -360[rbp]
	mov	DWORD PTR [rax], edx
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE13HEIGHT__get__Ev
	mov	QWORD PTR -368[rbp], rax
	lea	rax, -624[rbp]
	add	rax, 4
	mov	rdx, QWORD PTR -368[rbp]
	mov	DWORD PTR [rax], edx
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE12WIDTH__get__Ev
	mov	QWORD PTR -376[rbp], rax
	lea	rax, -624[rbp]
	mov	rdx, QWORD PTR -376[rbp]
	mov	DWORD PTR [rax], edx
	mov	QWORD PTR -384[rbp], 0
	lea	rax, -880[rbp]
	add	rax, 64
	mov	r8, QWORD PTR [rax]
	lea	rax, -880[rbp]
	add	rax, 56
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -384[rbp]
	lea	rcx, .LC211[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 263
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -392[rbp], rax
	cmp	QWORD PTR -392[rbp], 0
	je	.L2499
	mov	rax, QWORD PTR -392[rbp]
	jmp	.L2379
.L2499:
	nop
.L2434:
	mov	rax, QWORD PTR -384[rbp]
	lea	rdx, 0[0+rax*4]
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	add	rdx, rax
	lea	rax, -624[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], rdx
	lea	rax, -624[rbp]
	mov	eax, DWORD PTR [rax]
	mov	eax, eax
	lea	rdx, 0[0+rax*4]
	lea	rax, -624[rbp]
	add	rax, 8
	mov	DWORD PTR [rax], edx
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE13HEIGHT__get__Ev
	mov	QWORD PTR -400[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE12WIDTH__get__Ev
	mov	QWORD PTR -408[rbp], rax
	lea	rax, -624[rbp]
	add	rax, 12
	mov	edx, DWORD PTR [rax]
	mov	rax, QWORD PTR -400[rbp]
	mov	r10d, eax
	mov	rax, QWORD PTR -408[rbp]
	mov	ecx, eax
	lea	rax, -896[rbp]
	mov	QWORD PTR 40[rsp], rax
	mov	QWORD PTR 32[rsp], 0
	mov	r9d, edx
	mov	r8d, 0
	mov	edx, r10d
	call	GdipCreateBitmapFromScan0
	mov	DWORD PTR -412[rbp], eax
	cmp	DWORD PTR -412[rbp], 0
	jne	.L2500
	lea	rax, -624[rbp]
	add	rax, 12
	mov	r8d, DWORD PTR [rax]
	mov	rax, QWORD PTR -896[rbp]
	lea	rdx, -592[rbp]
	lea	rcx, -624[rbp]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, r8d
	mov	r8d, 6
	mov	rcx, rax
	call	GdipBitmapLockBits
	mov	DWORD PTR -416[rbp], eax
	cmp	DWORD PTR -416[rbp], 0
	je	.L2501
	lea	rax, -624[rbp]
	add	rax, 12
	mov	r8d, DWORD PTR [rax]
	mov	rax, QWORD PTR -896[rbp]
	lea	rdx, -592[rbp]
	lea	rcx, -624[rbp]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, r8d
	mov	r8d, 6
	mov	rcx, rax
	call	GdipBitmapLockBits
	mov	DWORD PTR -420[rbp], eax
	cmp	DWORD PTR -420[rbp], 0
	je	.L2502
	lea	rax, -624[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], 0
	jmp	.L2441
.L2438:
.L2440:
.L2501:
	nop
	jmp	.L2441
.L2502:
	nop
.L2441:
	lea	rax, -624[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2503
	mov	rax, QWORD PTR -896[rbp]
	lea	rdx, -624[rbp]
	mov	rcx, rax
	call	GdipBitmapUnlockBits
	jmp	.L2445
.L2503:
	nop
.L2443:
	mov	rax, QWORD PTR -896[rbp]
	mov	rcx, rax
	call	GdipDisposeImage
	mov	QWORD PTR -896[rbp], 0
	jmp	.L2445
.L2436:
.L2444:
.L2500:
	nop
.L2445:
	lea	rax, -880[rbp]
	mov	rcx, rax
	call	fb_ArrayErase
	mov	rax, QWORD PTR -896[rbp]
	test	rax, rax
	jne	.L2504
	lea	rdx, -896[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	GdipCreateBitmapFromHICON
	jmp	.L2447
.L2504:
	nop
.L2447:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 112[rax]
	mov	rax, QWORD PTR -896[rbp]
	mov	r8d, 0
	mov	rcx, rax
	call	GdipCreateHBITMAPFromBitmap
	mov	rax, QWORD PTR -432[rbp]
	mov	rcx, rax
	call	GdiplusShutdown
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	setne	al
	movzx	eax, al
	neg	eax
	test	eax, eax
	setne	al
	mov	BYTE PTR -421[rbp], al
	lea	rax, -880[rbp]
	mov	rcx, rax
	call	fb_ArrayErase
	nop
.L2364:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -421[rbp]
	add	rsp, 952
	pop	rdi
	pop	rbp
	ret
	.section .rdata,"dr"
.LC215:
	.ascii "LOADFROMRESOURCENAME\0"
	.align 2
.LC216:
	.ascii ".\0/\0R\0e\0s\0o\0u\0r\0c\0e\0s\0/\0\0\0"
	.align 2
.LC217:
	.ascii ".\0p\0n\0g\0\0\0"
	.align 2
.LC218:
	.ascii ".\0i\0c\0o\0\0\0"
	.align 2
.LC219:
	.ascii "P\0N\0G\0\0\0"
	.text
	.def	_ZN2MY3SYS7DRAWING10BITMAPTYPE20LOADFROMRESOURCENAMEER8FBSTRINGPvu7INTEGERS6_S6_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING10BITMAPTYPE20LOADFROMRESOURCENAMEER8FBSTRINGPvu7INTEGERS6_S6_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 880
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
	mov	BYTE PTR -705[rbp], 0
	lea	rcx, .LC211[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	lea	rcx, .LC215[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
.L2506:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -24[rbp], rax
	cmp	QWORD PTR 32[rbp], 0
	jne	.L2581
	mov	ecx, 0
	call	GetModuleHandleW
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -24[rbp], rax
	jmp	.L2508
.L2581:
	nop
.L2508:
	lea	rax, -752[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	cmp	QWORD PTR 32[rbp], 0
	jne	.L2582
	call	fb_ExePath
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	r8, .LC216[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrConcatAW
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	QWORD PTR -96[rbp], rax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -96[rbp]
	mov	r8, -1
	mov	rcx, rax
	call	fb_WstrConcatWA
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	lea	rdx, .LC217[rip]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	mov	rcx, rax
	call	_Z10FILEEXISTSRw
	mov	BYTE PTR -129[rbp], al
	movsx	eax, BYTE PTR -129[rbp]
	neg	eax
	test	eax, eax
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -112[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -96[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L2511
.L2582:
	nop
.L2510:
	mov	QWORD PTR -8[rbp], 0
.L2511:
	cmp	QWORD PTR -8[rbp], 0
	je	.L2583
	call	fb_ExePath
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	lea	r8, .LC216[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrConcatAW
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	mov	QWORD PTR -160[rbp], rax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -160[rbp]
	mov	r8, -1
	mov	rcx, rax
	call	fb_WstrConcatWA
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	lea	rdx, .LC217[rip]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	mov	QWORD PTR -192[rbp], rax
	mov	rcx, QWORD PTR 48[rbp]
	mov	rdx, QWORD PTR 40[rbp]
	mov	rax, QWORD PTR -192[rbp]
	mov	r9, rcx
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE12LOADFROMFILEERwu7INTEGERS4_
	mov	rax, QWORD PTR -192[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -176[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -160[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L2514
.L2583:
	nop
.L2513:
	cmp	QWORD PTR 32[rbp], 0
	jne	.L2584
	call	fb_ExePath
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	lea	r8, .LC216[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrConcatAW
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR -208[rbp]
	mov	QWORD PTR -216[rbp], rax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -216[rbp]
	mov	r8, -1
	mov	rcx, rax
	call	fb_WstrConcatWA
	mov	QWORD PTR -224[rbp], rax
	mov	rax, QWORD PTR -224[rbp]
	mov	QWORD PTR -232[rbp], rax
	mov	rax, QWORD PTR -232[rbp]
	lea	rdx, .LC218[rip]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -240[rbp]
	mov	QWORD PTR -248[rbp], rax
	mov	rax, QWORD PTR -248[rbp]
	mov	rcx, rax
	call	_Z10FILEEXISTSRw
	mov	BYTE PTR -249[rbp], al
	movsx	eax, BYTE PTR -249[rbp]
	neg	eax
	test	eax, eax
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -248[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -232[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -216[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L2517
.L2584:
	nop
.L2516:
	mov	QWORD PTR -16[rbp], 0
.L2517:
	cmp	QWORD PTR -16[rbp], 0
	je	.L2585
	call	fb_ExePath
	mov	QWORD PTR -264[rbp], rax
	mov	rax, QWORD PTR -264[rbp]
	lea	r8, .LC216[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrConcatAW
	mov	QWORD PTR -272[rbp], rax
	mov	rax, QWORD PTR -272[rbp]
	mov	QWORD PTR -280[rbp], rax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -280[rbp]
	mov	r8, -1
	mov	rcx, rax
	call	fb_WstrConcatWA
	mov	QWORD PTR -288[rbp], rax
	mov	rax, QWORD PTR -288[rbp]
	mov	QWORD PTR -296[rbp], rax
	mov	rax, QWORD PTR -296[rbp]
	lea	rdx, .LC218[rip]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -304[rbp], rax
	mov	rax, QWORD PTR -304[rbp]
	mov	QWORD PTR -312[rbp], rax
	mov	rcx, QWORD PTR 48[rbp]
	mov	rdx, QWORD PTR 40[rbp]
	mov	rax, QWORD PTR -312[rbp]
	mov	r9, rcx
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE12LOADFROMFILEERwu7INTEGERS4_
	mov	rax, QWORD PTR -312[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -296[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -280[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L2514
.L2585:
	nop
.L2519:
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -320[rbp], rax
	mov	rax, QWORD PTR -320[rbp]
	mov	QWORD PTR -328[rbp], rax
	mov	rdx, QWORD PTR -328[rbp]
	mov	rax, QWORD PTR -24[rbp]
	mov	r8d, 2
	mov	rcx, rax
	call	FindResourceW
	mov	QWORD PTR -336[rbp], rax
	mov	rax, QWORD PTR -336[rbp]
	mov	QWORD PTR -344[rbp], rax
	mov	rax, QWORD PTR -328[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -344[rbp], 0
	je	.L2586
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	neg	eax
	mov	edx, eax
	mov	eax, edx
	sar	eax, 31
	xor	edx, eax
	mov	DWORD PTR -348[rbp], edx
	sub	DWORD PTR -348[rbp], eax
	mov	eax, DWORD PTR -348[rbp]
	cdqe
	mov	QWORD PTR -360[rbp], rax
	mov	rax, QWORD PTR -360[rbp]
	lea	r9, .LC211[rip]
	mov	r8d, 309
	mov	edx, 2
	mov	rcx, rax
	call	fb_ArraySngBoundChk
	mov	QWORD PTR -368[rbp], rax
	cmp	QWORD PTR -368[rbp], 0
	je	.L2587
	jmp	[QWORD PTR -368[rbp]]
.L2587:
	nop
.L2523:
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -376[rbp], rax
	mov	rax, QWORD PTR -376[rbp]
	mov	QWORD PTR -384[rbp], rax
	mov	rax, QWORD PTR -360[rbp]
	sal	rax, 3
	lea	rdx, 72[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	or	ah, 64
	mov	r8d, eax
	mov	rax, QWORD PTR 48[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR 40[rbp]
	mov	r9d, eax
	mov	rdx, QWORD PTR -384[rbp]
	mov	rax, QWORD PTR 32[rbp]
	mov	DWORD PTR 40[rsp], r8d
	mov	DWORD PTR 32[rsp], ecx
	mov	r8d, 0
	mov	rcx, rax
	call	LoadImageW
	mov	QWORD PTR -392[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 112[rax]
	mov	rax, QWORD PTR -392[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR -384[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L2514
.L2586:
	nop
.L2521:
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -400[rbp], rax
	mov	rax, QWORD PTR -400[rbp]
	mov	QWORD PTR -408[rbp], rax
	mov	rdx, QWORD PTR -408[rbp]
	mov	rax, QWORD PTR -24[rbp]
	mov	r8d, 14
	mov	rcx, rax
	call	FindResourceW
	mov	QWORD PTR -416[rbp], rax
	mov	rax, QWORD PTR -416[rbp]
	mov	QWORD PTR -424[rbp], rax
	mov	rax, QWORD PTR -408[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -424[rbp], 0
	je	.L2588
	mov	QWORD PTR -760[rbp], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -432[rbp], rax
	mov	rax, QWORD PTR -432[rbp]
	mov	QWORD PTR -440[rbp], rax
	mov	rax, QWORD PTR 48[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR 40[rbp]
	mov	r8d, eax
	mov	rdx, QWORD PTR -440[rbp]
	mov	rax, QWORD PTR -24[rbp]
	mov	DWORD PTR 40[rsp], 16384
	mov	DWORD PTR 32[rsp], ecx
	mov	r9d, r8d
	mov	r8d, 1
	mov	rcx, rax
	call	LoadImageW
	mov	QWORD PTR -448[rbp], rax
	mov	rax, QWORD PTR -448[rbp]
	mov	QWORD PTR -760[rbp], rax
	mov	rax, QWORD PTR -440[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -760[rbp]
	test	rax, rax
	jne	.L2589
	mov	BYTE PTR -705[rbp], 0
	jmp	.L2528
.L2589:
	nop
.L2527:
	mov	rax, QWORD PTR -760[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE13LOADFROMHICONEP7HICON__
	jmp	.L2514
.L2588:
	nop
.L2525:
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -456[rbp], rax
	mov	rax, QWORD PTR -456[rbp]
	mov	QWORD PTR -464[rbp], rax
	mov	rdx, QWORD PTR -464[rbp]
	mov	rax, QWORD PTR -24[rbp]
	mov	r8d, 12
	mov	rcx, rax
	call	FindResourceW
	mov	QWORD PTR -472[rbp], rax
	mov	rax, QWORD PTR -472[rbp]
	mov	QWORD PTR -480[rbp], rax
	mov	rax, QWORD PTR -464[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -480[rbp], 0
	je	.L2590
	mov	QWORD PTR -768[rbp], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -488[rbp], rax
	mov	rax, QWORD PTR -488[rbp]
	mov	QWORD PTR -496[rbp], rax
	mov	rax, QWORD PTR 48[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR 40[rbp]
	mov	r8d, eax
	mov	rdx, QWORD PTR -496[rbp]
	mov	rax, QWORD PTR -24[rbp]
	mov	DWORD PTR 40[rsp], 16384
	mov	DWORD PTR 32[rsp], ecx
	mov	r9d, r8d
	mov	r8d, 2
	mov	rcx, rax
	call	LoadImageW
	mov	QWORD PTR -504[rbp], rax
	mov	rax, QWORD PTR -504[rbp]
	mov	QWORD PTR -768[rbp], rax
	mov	rax, QWORD PTR -496[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -768[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE13LOADFROMHICONEP7HICON__
	jmp	.L2514
.L2590:
	nop
.L2530:
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -512[rbp], rax
	mov	rax, QWORD PTR -512[rbp]
	mov	QWORD PTR -520[rbp], rax
	mov	rdx, QWORD PTR -520[rbp]
	mov	rax, QWORD PTR -24[rbp]
	lea	r8, .LC219[rip]
	mov	rcx, rax
	call	FindResourceW
	mov	QWORD PTR -528[rbp], rax
	mov	rax, QWORD PTR -528[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -520[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -32[rbp], 0
	jne	.L2591
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -536[rbp], rax
	mov	rax, QWORD PTR -536[rbp]
	mov	QWORD PTR -544[rbp], rax
	mov	rdx, QWORD PTR -544[rbp]
	mov	rax, QWORD PTR -24[rbp]
	mov	r8d, 14
	mov	rcx, rax
	call	FindResourceW
	mov	QWORD PTR -552[rbp], rax
	mov	rax, QWORD PTR -552[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -544[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L2532
.L2591:
	nop
.L2532:
	cmp	QWORD PTR -32[rbp], 0
	jne	.L2592
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -560[rbp], rax
	mov	rax, QWORD PTR -560[rbp]
	mov	QWORD PTR -568[rbp], rax
	mov	rdx, QWORD PTR -568[rbp]
	mov	rax, QWORD PTR -24[rbp]
	mov	r8d, 10
	mov	rcx, rax
	call	FindResourceW
	mov	QWORD PTR -576[rbp], rax
	mov	rax, QWORD PTR -576[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -568[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L2534
.L2592:
	nop
.L2534:
	mov	QWORD PTR -776[rbp], 0
	mov	rdx, QWORD PTR -32[rbp]
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	SizeofResource
	mov	DWORD PTR -580[rbp], eax
	mov	eax, DWORD PTR -580[rbp]
	mov	DWORD PTR -584[rbp], eax
	mov	QWORD PTR -592[rbp], 0
	cmp	QWORD PTR -32[rbp], 0
	jne	.L2593
	mov	BYTE PTR -705[rbp], 0
	jmp	.L2528
.L2593:
	nop
.L2536:
	mov	rdx, QWORD PTR -32[rbp]
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	LoadResource
	mov	QWORD PTR -600[rbp], rax
	mov	rax, QWORD PTR -600[rbp]
	mov	rcx, rax
	call	LockResource
	mov	QWORD PTR -608[rbp], rax
	mov	rax, QWORD PTR -608[rbp]
	mov	QWORD PTR -776[rbp], rax
	mov	rax, QWORD PTR -776[rbp]
	test	rax, rax
	jne	.L2594
	mov	BYTE PTR -705[rbp], 0
	jmp	.L2528
.L2594:
	nop
.L2539:
	mov	eax, DWORD PTR -584[rbp]
	mov	rdx, rax
	mov	ecx, 2
	call	GlobalAlloc
	mov	QWORD PTR -616[rbp], rax
	mov	rax, QWORD PTR -616[rbp]
	mov	QWORD PTR -592[rbp], rax
	cmp	QWORD PTR -592[rbp], 0
	jne	.L2595
	mov	BYTE PTR -705[rbp], 0
	jmp	.L2528
.L2595:
	nop
.L2541:
	mov	rax, QWORD PTR -592[rbp]
	mov	rcx, rax
	call	GlobalLock
	mov	QWORD PTR -624[rbp], rax
	mov	rax, QWORD PTR -624[rbp]
	mov	QWORD PTR -632[rbp], rax
	cmp	QWORD PTR -632[rbp], 0
	jne	.L2596
	mov	rax, QWORD PTR -592[rbp]
	mov	rcx, rax
	call	GlobalFree
	mov	BYTE PTR -705[rbp], 0
	jmp	.L2528
.L2543:
.L2596:
	nop
.L2544:
	mov	QWORD PTR -784[rbp], 0
	lea	rax, -816[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	lea	rax, -816[rbp]
	mov	DWORD PTR [rax], 1
	lea	rdx, -816[rbp]
	lea	rax, -784[rbp]
	mov	r8d, 0
	mov	rcx, rax
	call	GdiplusStartup
	mov	ecx, DWORD PTR -584[rbp]
	mov	rdx, QWORD PTR -776[rbp]
	mov	rax, QWORD PTR -632[rbp]
	mov	r8, rcx
	mov	rcx, rax
	call	memcpy
	mov	QWORD PTR -824[rbp], 0
	lea	rdx, -824[rbp]
	mov	rax, QWORD PTR -592[rbp]
	mov	r8, rdx
	mov	edx, 0
	mov	rcx, rax
	call	CreateStreamOnHGlobal
	mov	DWORD PTR -636[rbp], eax
	cmp	DWORD PTR -636[rbp], 0
	js	.L2597
	mov	rax, QWORD PTR -824[rbp]
	test	rax, rax
	je	.L2598
	mov	QWORD PTR -832[rbp], 0
	mov	rax, QWORD PTR -824[rbp]
	lea	rdx, -832[rbp]
	mov	rcx, rax
	call	GdipCreateBitmapFromStream
	mov	rax, QWORD PTR 56[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 112[rax]
	mov	rax, QWORD PTR -832[rbp]
	mov	r8d, ecx
	mov	rcx, rax
	call	GdipCreateHBITMAPFromBitmap
	mov	rax, QWORD PTR -832[rbp]
	test	rax, rax
	je	.L2599
	mov	rax, QWORD PTR -832[rbp]
	mov	rcx, rax
	call	GdipDisposeImage
	jmp	.L2549
.L2599:
	nop
.L2549:
	mov	rax, QWORD PTR -824[rbp]
	mov	QWORD PTR -648[rbp], rax
	mov	rax, QWORD PTR -648[rbp]
	lea	r8, .LC211[rip]
	mov	edx, 355
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -656[rbp], rax
	cmp	QWORD PTR -656[rbp], 0
	je	.L2600
	jmp	[QWORD PTR -656[rbp]]
.L2600:
	nop
.L2551:
	mov	rax, QWORD PTR -648[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -664[rbp], rax
	mov	rax, QWORD PTR -664[rbp]
	lea	r8, .LC211[rip]
	mov	edx, 355
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -672[rbp], rax
	cmp	QWORD PTR -672[rbp], 0
	je	.L2601
	jmp	[QWORD PTR -672[rbp]]
.L2601:
	nop
.L2553:
	mov	rax, QWORD PTR -664[rbp]
	mov	rax, QWORD PTR 16[rax]
	mov	QWORD PTR -680[rbp], rax
	mov	rax, QWORD PTR -680[rbp]
	lea	r8, .LC211[rip]
	mov	edx, 355
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -688[rbp], rax
	cmp	QWORD PTR -688[rbp], 0
	je	.L2602
	jmp	[QWORD PTR -688[rbp]]
.L2602:
	nop
.L2555:
	mov	rax, QWORD PTR -824[rbp]
	mov	rdx, QWORD PTR -680[rbp]
	mov	rcx, rax
	call	rdx
	jmp	.L2558
.L2546:
.L2556:
.L2557:
.L2597:
	nop
	jmp	.L2558
.L2598:
	nop
.L2558:
	mov	rax, QWORD PTR -632[rbp]
	mov	rcx, rax
	call	GlobalUnlock
	mov	rax, QWORD PTR -592[rbp]
	mov	rcx, rax
	call	GlobalFree
	mov	rax, QWORD PTR -784[rbp]
	mov	rcx, rax
	call	GdiplusShutdown
.L2514:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	mov	rax, QWORD PTR [rax]
	lea	rdx, -752[rbp]
	mov	r8, rdx
	mov	edx, 32
	mov	rcx, rax
	call	GetObjectW
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	mov	eax, DWORD PTR -748[rbp]
	mov	DWORD PTR [rdx], eax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 52[rax]
	mov	eax, DWORD PTR -744[rbp]
	mov	DWORD PTR [rdx], eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 328
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2603
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 328[rax]
	mov	QWORD PTR -696[rbp], rax
	mov	rax, QWORD PTR -696[rbp]
	lea	r8, .LC211[rip]
	mov	edx, 369
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -704[rbp], rax
	cmp	QWORD PTR -704[rbp], 0
	je	.L2604
	jmp	[QWORD PTR -704[rbp]]
.L2604:
	nop
.L2562:
	mov	rax, QWORD PTR -696[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L2560
.L2603:
	nop
.L2560:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	setne	al
	movzx	eax, al
	neg	eax
	test	eax, eax
	setne	al
	mov	BYTE PTR -705[rbp], al
	nop
.L2528:
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -705[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC220:
	.ascii "LOADFROMRESOURCEID\0"
	.text
	.def	_ZN2MY3SYS7DRAWING10BITMAPTYPE18LOADFROMRESOURCEIDEu7INTEGERPvS3_S3_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING10BITMAPTYPE18LOADFROMRESOURCEIDEu7INTEGERPvS3_S3_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 192
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
	mov	BYTE PTR -97[rbp], 0
	lea	rcx, .LC211[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC220[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L2606:
	lea	rax, -144[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -8[rbp], rax
	cmp	QWORD PTR 32[rbp], 0
	jne	.L2622
	mov	ecx, 0
	call	GetModuleHandleW
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -8[rbp], rax
	jmp	.L2608
.L2622:
	nop
.L2608:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	neg	eax
	mov	edx, eax
	mov	eax, edx
	sar	eax, 31
	xor	edx, eax
	mov	DWORD PTR -52[rbp], edx
	sub	DWORD PTR -52[rbp], eax
	mov	eax, DWORD PTR -52[rbp]
	cdqe
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	lea	r9, .LC211[rip]
	mov	r8d, 379
	mov	edx, 2
	mov	rcx, rax
	call	fb_ArraySngBoundChk
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	je	.L2623
	jmp	[QWORD PTR -72[rbp]]
.L2623:
	nop
.L2610:
	mov	rax, QWORD PTR -64[rbp]
	sal	rax, 3
	lea	rdx, 72[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	or	ah, 64
	mov	r8d, eax
	mov	rax, QWORD PTR 48[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR 40[rbp]
	mov	r9d, eax
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, ax
	mov	rdx, rax
	mov	rax, QWORD PTR -8[rbp]
	mov	DWORD PTR 40[rsp], r8d
	mov	DWORD PTR 32[rsp], ecx
	mov	r8d, 0
	mov	rcx, rax
	call	LoadImageW
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 112[rax]
	mov	rax, QWORD PTR -80[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jne	.L2624
	mov	BYTE PTR -97[rbp], 0
	jmp	.L2613
.L2624:
	nop
.L2612:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	mov	rax, QWORD PTR [rax]
	lea	rdx, -144[rbp]
	mov	r8, rdx
	mov	edx, 32
	mov	rcx, rax
	call	GetObjectW
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	mov	eax, DWORD PTR -140[rbp]
	mov	DWORD PTR [rdx], eax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 52[rax]
	mov	eax, DWORD PTR -136[rbp]
	mov	DWORD PTR [rdx], eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 328
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2625
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 328[rax]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	r8, .LC211[rip]
	mov	edx, 385
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -96[rbp], rax
	cmp	QWORD PTR -96[rbp], 0
	je	.L2626
	jmp	[QWORD PTR -96[rbp]]
.L2626:
	nop
.L2617:
	mov	rax, QWORD PTR -88[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L2615
.L2625:
	nop
.L2615:
	mov	BYTE PTR -97[rbp], 1
	nop
.L2613:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -97[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC221:
	.ascii "FREE\0"
	.text
	.def	_ZN2MY3SYS7DRAWING10BITMAPTYPE4FREEEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING10BITMAPTYPE4FREEEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L2628:
	lea	rcx, .LC211[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC221[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2632
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DeleteObject
	jmp	.L2630
.L2632:
	nop
.L2630:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	mov	QWORD PTR [rax], 0
.L2631:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING10BITMAPTYPEaSERw;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING10BITMAPTYPEaSERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 144
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L2634:
	lea	rcx, .LC211[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 96[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	call	WLET
	lea	rax, -96[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	rdx, QWORD PTR 24[rbp]
	lea	rax, -96[rbp]
	mov	r9d, 0
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA
	lea	rax, -96[rbp]
	mov	QWORD PTR 40[rsp], 0
	mov	QWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8d, 0
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE20LOADFROMRESOURCENAMEER8FBSTRINGPvu7INTEGERS6_S6_
	mov	BYTE PTR -41[rbp], al
	cmp	BYTE PTR -41[rbp], 0
	jne	.L2645
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	fb_WstrVal
	movq	rax, xmm0
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	movq	xmm0, rax
	call	nearbyint
	cvttsd2si	rax, xmm0
	mov	QWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8d, 0
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE18LOADFROMRESOURCEIDEu7INTEGERPvS3_S3_
	mov	BYTE PTR -57[rbp], al
	cmp	BYTE PTR -57[rbp], 0
	jne	.L2637
	mov	eax, 1
	jmp	.L2638
.L2637:
	mov	eax, 0
.L2638:
	mov	BYTE PTR -1[rbp], al
	jmp	.L2639
.L2645:
	nop
.L2636:
	mov	BYTE PTR -1[rbp], 0
.L2639:
	movzx	eax, BYTE PTR -1[rbp]
	mov	BYTE PTR -58[rbp], al
	lea	rax, -96[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	cmp	BYTE PTR -58[rbp], 0
	je	.L2646
	mov	rax, QWORD PTR 24[rbp]
	mov	r9d, 0
	mov	r8d, 0
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE12LOADFROMFILEERwu7INTEGERS4_
	jmp	.L2643
.L2641:
.L2642:
.L2646:
	nop
.L2643:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING10BITMAPTYPEaSEP9HBITMAP__;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING10BITMAPTYPEaSEP9HBITMAP__:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L2648:
	lea	rcx, .LC211[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 112[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
.L2649:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING10BITMAPTYPEaSEP7HICON__;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING10BITMAPTYPEaSEP7HICON__:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L2651:
	lea	rcx, .LC211[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE13LOADFROMHICONEP7HICON__
.L2652:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING10BITMAPTYPE8TOSTRINGEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING10BITMAPTYPE8TOSTRINGEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC211[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC155[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L2654:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 96[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L2655:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.section .rdata,"dr"
	.align 2
.LC222:
	.ascii "B\0i\0t\0m\0a\0p\0T\0y\0p\0e\0\0\0"
	.text
	.def	_ZN2MY3SYS7DRAWING10BITMAPTYPEC1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING10BITMAPTYPEC1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L2658:
	lea	rcx, .LC211[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 52
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 96
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 120
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING5BRUSHC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 216
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING3PENC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 320
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 328
	mov	QWORD PTR [rax], 0
	lea	rdx, _ZTVN2MY3SYS7DRAWING10BITMAPTYPEE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 32
	lea	rdx, .LC222[rip]
	mov	rcx, rax
	call	WLET
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	QWORD PTR [rax], 32
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	DWORD PTR [rax], 16
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 52
	mov	DWORD PTR [rax], 16
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	BYTE PTR [rax], 0
.L2659:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING10BITMAPTYPED1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING10BITMAPTYPED1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	lea	rdx, _ZTVN2MY3SYS7DRAWING10BITMAPTYPEE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rcx, .LC211[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L2661:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 96
	mov	rcx, rax
	call	_Z11WDEALLOCATERPw
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE4FREEEv
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2667
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DeleteObject
	jmp	.L2663
.L2667:
	nop
.L2663:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2668
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DeleteObject
	jmp	.L2666
.L2665:
.L2668:
	nop
.L2666:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 216
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING3PEND1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 120
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING5BRUSHD1Ev
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTD1Ev
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC223:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Icon.bi\0"
	.text
	.def	_ZN2MY3SYS7DRAWING4ICONaSERKS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4ICONaSERKS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L2670:
	lea	rcx, .LC223[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTaSERKS1_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 48[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 56[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 56[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 64[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 64[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 72[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 72[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 80[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 80[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 88[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 88[rax]
	mov	QWORD PTR [rdx], rax
.L2671:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4ICONC1ERS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4ICONC1ERS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L2673:
	lea	rcx, .LC223[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	QWORD PTR [rax], 0
	lea	rdx, _ZTVN2MY3SYS7DRAWING4ICONE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4ICONaSERS2_
.L2674:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 2
.LC224:
	.ascii "r\0e\0s\0n\0a\0m\0e\0\0\0"
	.text
	.def	_ZN2MY3SYS7DRAWING4ICON12READPROPERTYER8FBSTRING;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4ICON12READPROPERTYER8FBSTRING:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 224
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -152[rbp], 0
	lea	rcx, .LC30[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC152[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L2676:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -176[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -176[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC163[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L2696
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L2679:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	QWORD PTR -152[rbp], rax
	lea	rax, -176[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L2690
.L2696:
	nop
.L2678:
	lea	rax, -176[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	rdx, .LC167[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -84[rbp], eax
	cmp	DWORD PTR -84[rbp], 0
	jne	.L2697
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L2683:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	QWORD PTR -152[rbp], rax
	lea	rax, -176[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L2690
.L2697:
	nop
.L2682:
	lea	rax, -176[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	lea	rdx, .LC166[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -108[rbp], eax
	cmp	DWORD PTR -108[rbp], 0
	jne	.L2698
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L2686:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	QWORD PTR -152[rbp], rax
	lea	rax, -176[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L2690
.L2698:
	nop
.L2685:
	lea	rax, -176[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	rdx, .LC224[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -132[rbp], eax
	cmp	DWORD PTR -132[rbp], 0
	jne	.L2699
	mov	rax, QWORD PTR -128[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L2689:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 64[rax]
	mov	QWORD PTR -152[rbp], rax
	lea	rax, -176[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L2690
.L2699:
	nop
.L2688:
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT12READPROPERTYER8FBSTRING
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	mov	QWORD PTR -152[rbp], rax
	lea	rax, -176[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	nop
.L2690:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -152[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4ICON13WRITEPROPERTYER8FBSTRINGPv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4ICON13WRITEPROPERTYER8FBSTRINGPv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 224
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	BYTE PTR -142[rbp], 0
	lea	rcx, .LC30[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC154[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L2701:
	cmp	QWORD PTR 32[rbp], 0
	je	.L2727
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -176[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -176[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC167[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L2728
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L2706:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	r8, .LC30[rip]
	mov	edx, 34
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L2729
	jmp	[QWORD PTR -80[rbp]]
.L2729:
	nop
.L2708:
	mov	rax, QWORD PTR -72[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4ICON13HEIGHT__set__Eu7INTEGER
	jmp	.L2719
.L2728:
	nop
.L2705:
	lea	rax, -176[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	lea	rdx, .LC166[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -100[rbp], eax
	cmp	DWORD PTR -100[rbp], 0
	jne	.L2730
	mov	rax, QWORD PTR -96[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L2712:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	lea	r8, .LC30[rip]
	mov	edx, 35
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -120[rbp], rax
	cmp	QWORD PTR -120[rbp], 0
	je	.L2731
	jmp	[QWORD PTR -120[rbp]]
.L2731:
	nop
.L2714:
	mov	rax, QWORD PTR -112[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4ICON12WIDTH__set__Eu7INTEGER
	jmp	.L2719
.L2730:
	nop
.L2711:
	lea	rax, -176[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	lea	rdx, .LC224[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -140[rbp], eax
	cmp	DWORD PTR -140[rbp], 0
	jne	.L2732
	mov	rax, QWORD PTR -136[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L2717:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4ICON14RESNAME__set__ERw
	jmp	.L2719
.L2732:
	nop
.L2716:
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT13WRITEPROPERTYER8FBSTRINGPv
	mov	BYTE PTR -141[rbp], al
	movzx	eax, BYTE PTR -141[rbp]
	mov	BYTE PTR -142[rbp], al
	lea	rax, -176[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L2718
.L2709:
.L2719:
	lea	rax, -176[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L2720
.L2703:
.L2727:
	nop
.L2720:
	mov	BYTE PTR -142[rbp], 1
	nop
.L2718:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -142[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC225:
	.ascii "RESNAME\0"
	.text
	.def	_ZN2MY3SYS7DRAWING4ICON14RESNAME__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4ICON14RESNAME__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -48[rbp], 0
	lea	rcx, .LC30[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC225[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L2734:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	rcx, rax
	call	WGET
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	nop
.L2735:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -48[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4ICON14RESNAME__set__ERw;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4ICON14RESNAME__set__ERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L2738:
	lea	rcx, .LC30[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC225[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 64[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	call	WLET
.L2739:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4ICON8TOSTRINGEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4ICON8TOSTRINGEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC30[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC155[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L2741:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 64[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L2742:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4ICON12WIDTH__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4ICON12WIDTH__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC30[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC191[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L2745:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 48[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L2746:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4ICON12WIDTH__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4ICON12WIDTH__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L2749:
	lea	rcx, .LC30[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC191[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L2750:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4ICON13HEIGHT__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4ICON13HEIGHT__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC30[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC192[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L2752:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 48[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L2753:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4ICON13HEIGHT__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4ICON13HEIGHT__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L2756:
	lea	rcx, .LC30[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC192[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L2757:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC226:
	.ascii "TOBITMAP\0"
	.text
	.def	_ZN2MY3SYS7DRAWING4ICON8TOBITMAPEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4ICON8TOBITMAPEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 208
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -128[rbp], 0
	lea	rcx, .LC30[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC226[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L2759:
	call	GetDesktopWindow
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	cmp	QWORD PTR -48[rbp], 0
	jne	.L2782
	mov	QWORD PTR -128[rbp], 0
	jmp	.L2762
.L2761:
.L2782:
	nop
.L2763:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	GetDC
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	cmp	QWORD PTR -64[rbp], 0
	jne	.L2783
	mov	QWORD PTR -128[rbp], 0
	jmp	.L2762
.L2765:
.L2783:
	nop
.L2766:
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	CreateCompatibleDC
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	jne	.L2784
	mov	rdx, QWORD PTR -64[rbp]
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	ReleaseDC
	mov	QWORD PTR -128[rbp], 0
	jmp	.L2762
.L2768:
.L2784:
	nop
.L2769:
	mov	rax, QWORD PTR -64[rbp]
	mov	r8d, 16
	mov	edx, 16
	mov	rcx, rax
	call	CreateCompatibleBitmap
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	QWORD PTR -96[rbp], rax
	cmp	QWORD PTR -96[rbp], 0
	jne	.L2785
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	DeleteDC
	mov	rdx, QWORD PTR -64[rbp]
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	ReleaseDC
	mov	QWORD PTR -128[rbp], 0
	jmp	.L2762
.L2771:
.L2785:
	nop
.L2772:
	mov	rdx, QWORD PTR -96[rbp]
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	SelectObject
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	QWORD PTR -112[rbp], rax
	cmp	QWORD PTR -112[rbp], 0
	jne	.L2786
	mov	rax, QWORD PTR -96[rbp]
	mov	rcx, rax
	call	DeleteObject
	mov	QWORD PTR -128[rbp], 0
	jmp	.L2762
.L2774:
.L2786:
	nop
.L2775:
	mov	ecx, 4
	call	GetSysColorBrush
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR -80[rbp]
	mov	DWORD PTR 64[rsp], 3
	mov	rdx, QWORD PTR -120[rbp]
	mov	QWORD PTR 56[rsp], rdx
	mov	DWORD PTR 48[rsp], 0
	mov	DWORD PTR 40[rsp], 16
	mov	DWORD PTR 32[rsp], 16
	mov	r9, rcx
	mov	r8d, 0
	mov	edx, 0
	mov	rcx, rax
	call	DrawIconEx
	mov	rdx, QWORD PTR -112[rbp]
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	SelectObject
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	DeleteDC
	mov	rdx, QWORD PTR -64[rbp]
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	ReleaseDC
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -128[rbp], rax
	nop
.L2762:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -128[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4ICON12LOADFROMFILEERwu7INTEGERS4_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4ICON12LOADFROMFILEERwu7INTEGERS4_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 176
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
	mov	BYTE PTR -57[rbp], 0
	lea	rcx, .LC30[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC68[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L2788:
	lea	rax, -96[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	lea	rax, -128[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2801
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DestroyIcon
	jmp	.L2790
.L2801:
	nop
.L2790:
	mov	rax, QWORD PTR 40[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR 32[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR 24[rbp]
	mov	DWORD PTR 40[rsp], 48
	mov	DWORD PTR 32[rsp], edx
	mov	r9d, ecx
	mov	r8d, 1
	mov	rdx, rax
	mov	ecx, 0
	call	LoadImageW
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 80[rax]
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jne	.L2802
	mov	BYTE PTR -57[rbp], 0
	jmp	.L2793
.L2802:
	nop
.L2792:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	lea	rdx, -96[rbp]
	mov	rcx, rax
	call	GetIconInfo
	lea	rax, -96[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	lea	rdx, -128[rbp]
	mov	r8, rdx
	mov	edx, 32
	mov	rcx, rax
	call	GetObjectW
	lea	rax, -128[rbp]
	add	rax, 4
	mov	eax, DWORD PTR [rax]
	mov	rdx, QWORD PTR 16[rbp]
	add	rdx, 48
	cdqe
	mov	QWORD PTR [rdx], rax
	lea	rax, -128[rbp]
	add	rax, 8
	mov	eax, DWORD PTR [rax]
	mov	rdx, QWORD PTR 16[rbp]
	add	rdx, 56
	cdqe
	mov	QWORD PTR [rdx], rax
	lea	rax, -96[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DeleteObject
	lea	rax, -96[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DeleteObject
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2803
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 88[rax]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	r8, .LC30[rip]
	mov	edx, 142
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L2804
	jmp	[QWORD PTR -56[rbp]]
.L2804:
	nop
.L2797:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L2795
.L2803:
	nop
.L2795:
	mov	BYTE PTR -57[rbp], 1
	nop
.L2793:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -57[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4ICON10SAVETOFILEERw;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4ICON10SAVETOFILEERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	BYTE PTR -33[rbp], 0
	lea	rcx, .LC30[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC78[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L2806:
	mov	BYTE PTR -33[rbp], 0
	nop
.L2807:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -33[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4ICON20LOADFROMRESOURCENAMEERwPvu7INTEGERS5_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4ICON20LOADFROMRESOURCENAMEERwPvu7INTEGERS5_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 208
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
	mov	BYTE PTR -81[rbp], 0
	lea	rcx, .LC30[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC215[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L2810:
	lea	rax, -128[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	lea	rax, -160[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4ICON14RESNAME__set__ERw
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -8[rbp], rax
	cmp	QWORD PTR 32[rbp], 0
	jne	.L2825
	mov	ecx, 0
	call	GetModuleHandleW
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -8[rbp], rax
	jmp	.L2812
.L2825:
	nop
.L2812:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2826
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DestroyIcon
	jmp	.L2814
.L2826:
	nop
.L2814:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4ICON14RESNAME__get__Ev
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR 48[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR 40[rbp]
	mov	r8d, eax
	mov	rdx, QWORD PTR -56[rbp]
	mov	rax, QWORD PTR -8[rbp]
	mov	DWORD PTR 40[rsp], 16384
	mov	DWORD PTR 32[rsp], ecx
	mov	r9d, r8d
	mov	r8d, 1
	mov	rcx, rax
	call	LoadImageW
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 80[rax]
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jne	.L2827
	mov	BYTE PTR -81[rbp], 0
	jmp	.L2817
.L2827:
	nop
.L2816:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	lea	rdx, -128[rbp]
	mov	rcx, rax
	call	GetIconInfo
	lea	rax, -128[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	lea	rdx, -160[rbp]
	mov	r8, rdx
	mov	edx, 32
	mov	rcx, rax
	call	GetObjectW
	lea	rax, -160[rbp]
	add	rax, 4
	mov	eax, DWORD PTR [rax]
	mov	rdx, QWORD PTR 16[rbp]
	add	rdx, 48
	cdqe
	mov	QWORD PTR [rdx], rax
	lea	rax, -160[rbp]
	add	rax, 8
	mov	eax, DWORD PTR [rax]
	mov	rdx, QWORD PTR 16[rbp]
	add	rdx, 56
	cdqe
	mov	QWORD PTR [rdx], rax
	lea	rax, -128[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DeleteObject
	lea	rax, -128[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DeleteObject
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2828
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 88[rax]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	r8, .LC30[rip]
	mov	edx, 176
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L2829
	jmp	[QWORD PTR -80[rbp]]
.L2829:
	nop
.L2821:
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L2819
.L2828:
	nop
.L2819:
	mov	BYTE PTR -81[rbp], 1
	nop
.L2817:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -81[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4ICON18LOADFROMRESOURCEIDEu7INTEGERPvS3_S3_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4ICON18LOADFROMRESOURCEIDEu7INTEGERPvS3_S3_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 208
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
	mov	BYTE PTR -89[rbp], 0
	lea	rcx, .LC30[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC220[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L2831:
	lea	rax, -128[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	lea	rax, -160[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	fb_LongintToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4ICON14RESNAME__set__ERw
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -8[rbp], rax
	cmp	QWORD PTR 32[rbp], 0
	jne	.L2846
	mov	ecx, 0
	call	GetModuleHandleW
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -8[rbp], rax
	jmp	.L2833
.L2846:
	nop
.L2833:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2847
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DestroyIcon
	jmp	.L2835
.L2847:
	nop
.L2835:
	mov	rax, QWORD PTR 48[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR 40[rbp]
	mov	r8d, eax
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, ax
	mov	rdx, rax
	mov	rax, QWORD PTR -8[rbp]
	mov	DWORD PTR 40[rsp], 16384
	mov	DWORD PTR 32[rsp], ecx
	mov	r9d, r8d
	mov	r8d, 1
	mov	rcx, rax
	call	LoadImageW
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 80[rax]
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jne	.L2848
	mov	BYTE PTR -89[rbp], 0
	jmp	.L2838
.L2848:
	nop
.L2837:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	lea	rdx, -128[rbp]
	mov	rcx, rax
	call	GetIconInfo
	lea	rax, -128[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	lea	rdx, -160[rbp]
	mov	r8, rdx
	mov	edx, 32
	mov	rcx, rax
	call	GetObjectW
	lea	rax, -160[rbp]
	add	rax, 4
	mov	eax, DWORD PTR [rax]
	mov	rdx, QWORD PTR 16[rbp]
	add	rdx, 48
	cdqe
	mov	QWORD PTR [rdx], rax
	lea	rax, -160[rbp]
	add	rax, 8
	mov	eax, DWORD PTR [rax]
	mov	rdx, QWORD PTR 16[rbp]
	add	rdx, 56
	cdqe
	mov	QWORD PTR [rdx], rax
	lea	rax, -128[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DeleteObject
	lea	rax, -128[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DeleteObject
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2849
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 88[rax]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	r8, .LC30[rip]
	mov	edx, 196
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -88[rbp], rax
	cmp	QWORD PTR -88[rbp], 0
	je	.L2850
	jmp	[QWORD PTR -88[rbp]]
.L2850:
	nop
.L2842:
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L2840
.L2849:
	nop
.L2840:
	mov	BYTE PTR -89[rbp], 1
	nop
.L2838:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -89[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4ICONaSERw;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4ICONaSERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L2852:
	lea	rcx, .LC30[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8d, 0
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4ICON20LOADFROMRESOURCENAMEERwPvu7INTEGERS5_
	mov	BYTE PTR -41[rbp], al
	cmp	BYTE PTR -41[rbp], 0
	jne	.L2863
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	fb_WstrVal
	movq	rax, xmm0
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	movq	xmm0, rax
	call	nearbyint
	cvttsd2si	rax, xmm0
	mov	QWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8d, 0
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4ICON18LOADFROMRESOURCEIDEu7INTEGERPvS3_S3_
	mov	BYTE PTR -57[rbp], al
	cmp	BYTE PTR -57[rbp], 0
	jne	.L2855
	mov	eax, 1
	jmp	.L2856
.L2855:
	mov	eax, 0
.L2856:
	mov	BYTE PTR -1[rbp], al
	jmp	.L2857
.L2863:
	nop
.L2854:
	mov	BYTE PTR -1[rbp], 0
.L2857:
	cmp	BYTE PTR -1[rbp], 0
	je	.L2864
	mov	rax, QWORD PTR 24[rbp]
	mov	r9d, 0
	mov	r8d, 0
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4ICON12LOADFROMFILEERwu7INTEGERS4_
	jmp	.L2860
.L2859:
.L2864:
	nop
.L2860:
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4ICON14RESNAME__set__ERw
.L2861:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4ICONaSERS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4ICONaSERS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L2866:
	lea	rcx, .LC30[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2870
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DestroyIcon
	jmp	.L2868
.L2870:
	nop
.L2868:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 80[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 80[rax]
	mov	QWORD PTR [rdx], rax
.L2869:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4ICONaSEP7HICON__;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4ICONaSEP7HICON__:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L2872:
	lea	rcx, .LC30[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2876
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DestroyIcon
	jmp	.L2874
.L2876:
	nop
.L2874:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 80[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
.L2875:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 2
.LC227:
	.ascii "I\0c\0o\0n\0\0\0"
	.text
	.def	_ZN2MY3SYS7DRAWING4ICONC1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4ICONC1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L2878:
	lea	rcx, .LC30[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	QWORD PTR [rax], 0
	lea	rdx, _ZTVN2MY3SYS7DRAWING4ICONE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 32
	lea	rdx, .LC227[rip]
	mov	rcx, rax
	call	WLET
.L2879:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4ICOND1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4ICOND1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	lea	rdx, _ZTVN2MY3SYS7DRAWING4ICONE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rcx, .LC30[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L2881:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	rcx, rax
	call	_Z11WDEALLOCATERPw
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2885
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DestroyIcon
	jmp	.L2884
.L2883:
.L2885:
	nop
.L2884:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTD1Ev
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC228:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Cursor.bi\0"
	.text
	.def	_ZN2MY3SYS7DRAWING6CURSORaSERKS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CURSORaSERKS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L2887:
	lea	rcx, .LC228[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTaSERKS1_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 48[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 56[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 56[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 64[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 64[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 72[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 72[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 80[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 80[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 88[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 88[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 96[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 96[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 104[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 104[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 112[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 112[rax]
	mov	QWORD PTR [rdx], rax
.L2888:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING6CURSORC1ERS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CURSORC1ERS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L2890:
	lea	rcx, .LC228[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 96
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	mov	QWORD PTR [rax], 0
	lea	rdx, _ZTVN2MY3SYS7DRAWING6CURSORE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING6CURSORaSERS2_
.L2891:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC229:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Cursor.bas\0"
	.align 2
.LC230:
	.ascii "g\0r\0a\0p\0h\0i\0c\0\0\0"
	.align 2
.LC231:
	.ascii "h\0o\0t\0s\0p\0o\0t\0x\0\0\0"
	.align 2
.LC232:
	.ascii "h\0o\0t\0s\0p\0o\0t\0y\0\0\0"
	.text
	.def	_ZN2MY3SYS7DRAWING6CURSOR12READPROPERTYER8FBSTRING;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CURSOR12READPROPERTYER8FBSTRING:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 256
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -176[rbp], 0
	lea	rcx, .LC229[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC152[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L2893:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -208[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -208[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC230[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L2917
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L2896:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 96
	mov	QWORD PTR -176[rbp], rax
	lea	rax, -208[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L2910
.L2917:
	nop
.L2895:
	lea	rax, -208[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	rdx, .LC167[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -84[rbp], eax
	cmp	DWORD PTR -84[rbp], 0
	jne	.L2918
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L2900:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	QWORD PTR -176[rbp], rax
	lea	rax, -208[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L2910
.L2918:
	nop
.L2899:
	lea	rax, -208[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	lea	rdx, .LC231[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -108[rbp], eax
	cmp	DWORD PTR -108[rbp], 0
	jne	.L2919
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L2903:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	QWORD PTR -176[rbp], rax
	lea	rax, -208[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L2910
.L2919:
	nop
.L2902:
	lea	rax, -208[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	rdx, .LC232[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -132[rbp], eax
	cmp	DWORD PTR -132[rbp], 0
	jne	.L2920
	mov	rax, QWORD PTR -128[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L2906:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	QWORD PTR -176[rbp], rax
	lea	rax, -208[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L2910
.L2920:
	nop
.L2905:
	lea	rax, -208[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	lea	rdx, .LC166[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -156[rbp], eax
	cmp	DWORD PTR -156[rbp], 0
	jne	.L2921
	mov	rax, QWORD PTR -152[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L2909:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	QWORD PTR -176[rbp], rax
	lea	rax, -208[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L2910
.L2921:
	nop
.L2908:
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT12READPROPERTYER8FBSTRING
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -176[rbp], rax
	lea	rax, -208[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	nop
.L2910:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -176[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING6CURSOR13WRITEPROPERTYER8FBSTRINGPv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CURSOR13WRITEPROPERTYER8FBSTRINGPv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 336
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	BYTE PTR -218[rbp], 0
	lea	rcx, .LC229[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC154[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L2923:
	cmp	QWORD PTR 32[rbp], 0
	jne	.L2960
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -256[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT13WRITEPROPERTYER8FBSTRINGPv
	mov	BYTE PTR -41[rbp], al
	movzx	eax, BYTE PTR -41[rbp]
	mov	BYTE PTR -218[rbp], al
	lea	rax, -256[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L2926
.L2960:
	nop
.L2925:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -56[rbp], rax
	mov	rdx, QWORD PTR -56[rbp]
	lea	rax, -288[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -288[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	rdx, .LC167[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -76[rbp], eax
	cmp	DWORD PTR -76[rbp], 0
	jne	.L2961
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L2929:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	r8, .LC229[rip]
	mov	edx, 36
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -96[rbp], rax
	cmp	QWORD PTR -96[rbp], 0
	je	.L2962
	jmp	[QWORD PTR -96[rbp]]
.L2962:
	nop
.L2931:
	mov	rax, QWORD PTR -88[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING6CURSOR13HEIGHT__set__Eu7INTEGER
	jmp	.L2948
.L2961:
	nop
.L2928:
	lea	rax, -288[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	lea	rdx, .LC231[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -116[rbp], eax
	cmp	DWORD PTR -116[rbp], 0
	jne	.L2963
	mov	rax, QWORD PTR -112[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L2935:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	r8, .LC229[rip]
	mov	edx, 37
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -136[rbp], rax
	cmp	QWORD PTR -136[rbp], 0
	je	.L2964
	jmp	[QWORD PTR -136[rbp]]
.L2964:
	nop
.L2937:
	mov	rax, QWORD PTR -128[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING6CURSOR15HOTSPOTX__set__Eu7INTEGER
	jmp	.L2948
.L2963:
	nop
.L2934:
	lea	rax, -288[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	lea	rdx, .LC232[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -156[rbp], eax
	cmp	DWORD PTR -156[rbp], 0
	jne	.L2965
	mov	rax, QWORD PTR -152[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L2940:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	lea	r8, .LC229[rip]
	mov	edx, 38
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -176[rbp], rax
	cmp	QWORD PTR -176[rbp], 0
	je	.L2966
	jmp	[QWORD PTR -176[rbp]]
.L2966:
	nop
.L2942:
	mov	rax, QWORD PTR -168[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING6CURSOR15HOTSPOTY__set__Eu7INTEGER
	jmp	.L2948
.L2965:
	nop
.L2939:
	lea	rax, -288[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -192[rbp]
	lea	rdx, .LC166[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -196[rbp], eax
	cmp	DWORD PTR -196[rbp], 0
	jne	.L2967
	mov	rax, QWORD PTR -192[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L2945:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR -208[rbp]
	lea	r8, .LC229[rip]
	mov	edx, 39
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -216[rbp], rax
	cmp	QWORD PTR -216[rbp], 0
	je	.L2968
	jmp	[QWORD PTR -216[rbp]]
.L2968:
	nop
.L2947:
	mov	rax, QWORD PTR -208[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING6CURSOR12WIDTH__set__Eu7INTEGER
	jmp	.L2948
.L2967:
	nop
.L2944:
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT13WRITEPROPERTYER8FBSTRINGPv
	mov	BYTE PTR -217[rbp], al
	movzx	eax, BYTE PTR -217[rbp]
	mov	BYTE PTR -218[rbp], al
	lea	rax, -288[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L2926
.L2932:
.L2948:
	lea	rax, -288[rbp]
	mov	rcx, rax
	call	fb_StrDelete
.L2949:
	mov	BYTE PTR -218[rbp], 1
	nop
.L2926:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -218[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING6CURSOR12WIDTH__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CURSOR12WIDTH__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L2970:
	lea	rcx, .LC229[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC191[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
.L2971:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING6CURSOR13HEIGHT__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CURSOR13HEIGHT__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L2973:
	lea	rcx, .LC229[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC192[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 56[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
.L2974:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC233:
	.ascii "HOTSPOTX\0"
	.text
	.def	_ZN2MY3SYS7DRAWING6CURSOR15HOTSPOTX__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CURSOR15HOTSPOTX__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L2976:
	lea	rcx, .LC229[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC233[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 64[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
.L2977:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC234:
	.ascii "HOTSPOTY\0"
	.text
	.def	_ZN2MY3SYS7DRAWING6CURSOR15HOTSPOTY__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CURSOR15HOTSPOTY__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L2979:
	lea	rcx, .LC229[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC234[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 72[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
.L2980:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING6CURSOR12LOADFROMFILEERwu7INTEGERS4_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CURSOR12LOADFROMFILEERwu7INTEGERS4_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 176
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
	mov	BYTE PTR -57[rbp], 0
	lea	rcx, .LC229[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC68[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L2982:
	lea	rax, -96[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	lea	rax, -128[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2995
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DestroyCursor
	jmp	.L2984
.L2995:
	nop
.L2984:
	mov	rax, QWORD PTR 40[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR 32[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR 24[rbp]
	mov	DWORD PTR 40[rsp], 16
	mov	DWORD PTR 32[rsp], edx
	mov	r9d, ecx
	mov	r8d, 2
	mov	rdx, rax
	mov	ecx, 0
	call	LoadImageW
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 104[rax]
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jne	.L2996
	mov	BYTE PTR -57[rbp], 0
	jmp	.L2987
.L2996:
	nop
.L2986:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	lea	rdx, -96[rbp]
	mov	rcx, rax
	call	GetIconInfo
	lea	rax, -96[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	lea	rdx, -128[rbp]
	mov	r8, rdx
	mov	edx, 32
	mov	rcx, rax
	call	GetObjectW
	lea	rax, -128[rbp]
	add	rax, 4
	mov	eax, DWORD PTR [rax]
	mov	rdx, QWORD PTR 16[rbp]
	add	rdx, 48
	cdqe
	mov	QWORD PTR [rdx], rax
	lea	rax, -128[rbp]
	add	rax, 8
	mov	eax, DWORD PTR [rax]
	mov	rdx, QWORD PTR 16[rbp]
	add	rdx, 56
	cdqe
	mov	QWORD PTR [rdx], rax
	lea	rax, -96[rbp]
	add	rax, 4
	mov	edx, DWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	edx, edx
	mov	QWORD PTR [rax], rdx
	lea	rax, -96[rbp]
	add	rax, 8
	mov	edx, DWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	edx, edx
	mov	QWORD PTR [rax], rdx
	lea	rax, -96[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DeleteObject
	lea	rax, -96[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DeleteObject
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L2997
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 112[rax]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	r8, .LC229[rip]
	mov	edx, 94
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L2998
	jmp	[QWORD PTR -56[rbp]]
.L2998:
	nop
.L2991:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L2989
.L2997:
	nop
.L2989:
	mov	BYTE PTR -57[rbp], 1
	nop
.L2987:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -57[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING6CURSOR10SAVETOFILEERw;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CURSOR10SAVETOFILEERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	BYTE PTR -33[rbp], 0
	lea	rcx, .LC229[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC78[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L3000:
	mov	BYTE PTR -33[rbp], 0
	nop
.L3001:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -33[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING6CURSOR20LOADFROMRESOURCENAMEERwPvu7INTEGERS5_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CURSOR20LOADFROMRESOURCENAMEERwPvu7INTEGERS5_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 192
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
	mov	BYTE PTR -73[rbp], 0
	lea	rcx, .LC229[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC215[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L3004:
	lea	rax, -112[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	lea	rax, -144[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -8[rbp], rax
	cmp	QWORD PTR 32[rbp], 0
	jne	.L3019
	mov	ecx, 0
	call	GetModuleHandleW
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -8[rbp], rax
	jmp	.L3006
.L3019:
	nop
.L3006:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L3020
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DestroyCursor
	jmp	.L3008
.L3020:
	nop
.L3008:
	mov	rax, QWORD PTR 48[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR 40[rbp]
	mov	r8d, eax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -8[rbp]
	mov	DWORD PTR 40[rsp], 16384
	mov	DWORD PTR 32[rsp], ecx
	mov	r9d, r8d
	mov	r8d, 2
	mov	rcx, rax
	call	LoadImageW
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 104[rax]
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jne	.L3021
	mov	BYTE PTR -73[rbp], 0
	jmp	.L3011
.L3021:
	nop
.L3010:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L3022
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 112[rax]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	lea	r8, .LC229[rip]
	mov	edx, 119
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	je	.L3023
	jmp	[QWORD PTR -72[rbp]]
.L3023:
	nop
.L3015:
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L3013
.L3022:
	nop
.L3013:
	mov	BYTE PTR -73[rbp], 1
	nop
.L3011:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -73[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING6CURSOR18LOADFROMRESOURCEIDEu7INTEGERPvS3_S3_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CURSOR18LOADFROMRESOURCEIDEu7INTEGERPvS3_S3_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 192
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
	mov	BYTE PTR -73[rbp], 0
	lea	rcx, .LC229[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC220[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L3025:
	lea	rax, -112[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	lea	rax, -144[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -8[rbp], rax
	cmp	QWORD PTR 32[rbp], 0
	jne	.L3040
	mov	ecx, 0
	call	GetModuleHandleW
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -8[rbp], rax
	jmp	.L3027
.L3040:
	nop
.L3027:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L3041
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DestroyCursor
	jmp	.L3029
.L3041:
	nop
.L3029:
	mov	rax, QWORD PTR 48[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR 40[rbp]
	mov	r8d, eax
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, ax
	mov	rdx, rax
	mov	rax, QWORD PTR -8[rbp]
	mov	DWORD PTR 40[rsp], 16384
	mov	DWORD PTR 32[rsp], ecx
	mov	r9d, r8d
	mov	r8d, 2
	mov	rcx, rax
	call	LoadImageW
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 104[rax]
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jne	.L3042
	mov	BYTE PTR -73[rbp], 0
	jmp	.L3032
.L3042:
	nop
.L3031:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	lea	rdx, -112[rbp]
	mov	rcx, rax
	call	GetIconInfo
	lea	rax, -112[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	lea	rdx, -144[rbp]
	mov	r8, rdx
	mov	edx, 32
	mov	rcx, rax
	call	GetObjectW
	lea	rax, -144[rbp]
	add	rax, 4
	mov	eax, DWORD PTR [rax]
	mov	rdx, QWORD PTR 16[rbp]
	add	rdx, 48
	cdqe
	mov	QWORD PTR [rdx], rax
	lea	rax, -144[rbp]
	add	rax, 8
	mov	eax, DWORD PTR [rax]
	mov	rdx, QWORD PTR 16[rbp]
	add	rdx, 56
	cdqe
	mov	QWORD PTR [rdx], rax
	lea	rax, -112[rbp]
	add	rax, 4
	mov	edx, DWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	edx, edx
	mov	QWORD PTR [rax], rdx
	lea	rax, -112[rbp]
	add	rax, 8
	mov	edx, DWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	edx, edx
	mov	QWORD PTR [rax], rdx
	lea	rax, -112[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DeleteObject
	lea	rax, -112[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DeleteObject
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L3043
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 112[rax]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	lea	r8, .LC229[rip]
	mov	edx, 140
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	je	.L3044
	jmp	[QWORD PTR -72[rbp]]
.L3044:
	nop
.L3036:
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L3034
.L3043:
	nop
.L3034:
	mov	BYTE PTR -73[rbp], 1
	nop
.L3032:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -73[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING6CURSORaSERw;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CURSORaSERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L3046:
	lea	rcx, .LC229[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 80[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	call	WLET
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8d, 0
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING6CURSOR20LOADFROMRESOURCENAMEERwPvu7INTEGERS5_
	mov	BYTE PTR -41[rbp], al
	cmp	BYTE PTR -41[rbp], 0
	jne	.L3057
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	fb_WstrVal
	movq	rax, xmm0
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	movq	xmm0, rax
	call	nearbyint
	cvttsd2si	rax, xmm0
	mov	QWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8d, 0
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING6CURSOR18LOADFROMRESOURCEIDEu7INTEGERPvS3_S3_
	mov	BYTE PTR -57[rbp], al
	cmp	BYTE PTR -57[rbp], 0
	jne	.L3049
	mov	eax, 1
	jmp	.L3050
.L3049:
	mov	eax, 0
.L3050:
	mov	BYTE PTR -1[rbp], al
	jmp	.L3051
.L3057:
	nop
.L3048:
	mov	BYTE PTR -1[rbp], 0
.L3051:
	cmp	BYTE PTR -1[rbp], 0
	je	.L3058
	mov	rax, QWORD PTR 24[rbp]
	mov	r9d, 0
	mov	r8d, 0
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING6CURSOR12LOADFROMFILEERwu7INTEGERS4_
	jmp	.L3055
.L3053:
.L3054:
.L3058:
	nop
.L3055:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING6CURSOR8TOSTRINGEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CURSOR8TOSTRINGEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC229[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC155[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L3060:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 80[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L3061:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING6CURSORaSEP7HICON__;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CURSORaSEP7HICON__:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L3064:
	lea	rcx, .LC229[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L3068
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DestroyCursor
	jmp	.L3066
.L3068:
	nop
.L3066:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 104[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
.L3067:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING6CURSORaSERS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CURSORaSERS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L3070:
	lea	rcx, .LC229[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L3074
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DestroyCursor
	jmp	.L3072
.L3074:
	nop
.L3072:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 104[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 104[rax]
	mov	QWORD PTR [rdx], rax
.L3073:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 2
.LC235:
	.ascii "C\0u\0r\0s\0o\0r\0\0\0"
	.text
	.def	_ZN2MY3SYS7DRAWING6CURSORC1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CURSORC1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
.L3076:
	lea	rcx, .LC229[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 96
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	mov	QWORD PTR [rax], 0
	lea	rdx, _ZTVN2MY3SYS7DRAWING6CURSORE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 32
	lea	rdx, .LC235[rip]
	mov	rcx, rax
	call	WLET
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L3083
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 112[rax]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	lea	r8, .LC229[rip]
	mov	edx, 220
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -48[rbp], rax
	cmp	QWORD PTR -48[rbp], 0
	je	.L3084
	jmp	[QWORD PTR -48[rbp]]
.L3084:
	nop
.L3080:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L3081
.L3078:
.L3083:
	nop
.L3081:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING6CURSORD1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CURSORD1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	lea	rdx, _ZTVN2MY3SYS7DRAWING6CURSORE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rcx, .LC229[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L3086:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L3091
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DestroyCursor
	jmp	.L3089
.L3088:
.L3091:
	nop
.L3089:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rcx, rax
	call	_Z11WDEALLOCATERPw
.L3090:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTD1Ev
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC236:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Font.bi\0"
	.text
	.def	_ZN2MY3SYS7DRAWING4FONTaSERKS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4FONTaSERKS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L3093:
	lea	rcx, .LC236[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTaSERKS1_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 48[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 49[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 49[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 50[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 50[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 51[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 51[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 56[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 56[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 64[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 64[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 72[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 72[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 80[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 80[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 88[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 88[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 96
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 96
	mov	QWORD PTR -24[rbp], rax
	mov	QWORD PTR -8[rbp], 0
.L3094:
	mov	rax, QWORD PTR -24[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR [rax], rdx
	add	QWORD PTR -16[rbp], 8
	add	QWORD PTR -24[rbp], 8
	add	QWORD PTR -8[rbp], 1
	cmp	QWORD PTR -8[rbp], 3
	je	.L3095
	jmp	.L3094
.L3095:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 120[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 120[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 128[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 128[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 136[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 136[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 144[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 144[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 152[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 152[rax]
	mov	QWORD PTR [rdx], rax
.L3096:
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC237:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Font.bas\0"
	.align 2
.LC238:
	.ascii "c\0h\0a\0r\0s\0e\0t\0\0\0"
	.align 2
.LC239:
	.ascii "b\0o\0l\0d\0\0\0"
	.align 2
.LC240:
	.ascii "i\0t\0a\0l\0i\0c\0\0\0"
	.align 2
.LC241:
	.ascii "u\0n\0d\0e\0r\0l\0i\0n\0e\0\0\0"
	.align 2
.LC242:
	.ascii "s\0t\0r\0i\0k\0e\0o\0u\0t\0\0\0"
	.align 2
.LC243:
	.ascii "o\0r\0i\0e\0n\0t\0a\0t\0i\0o\0n\0\0\0"
	.text
	.def	_ZN2MY3SYS7DRAWING4FONT12READPROPERTYER8FBSTRING;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4FONT12READPROPERTYER8FBSTRING:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 352
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -272[rbp], 0
	lea	rcx, .LC237[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC152[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L3098:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -304[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -304[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC179[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L3138
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L3101:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 64[rax]
	mov	QWORD PTR -272[rbp], rax
	lea	rax, -304[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L3127
.L3138:
	nop
.L3100:
	lea	rax, -304[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	rdx, .LC195[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -84[rbp], eax
	cmp	DWORD PTR -84[rbp], 0
	jne	.L3139
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L3105:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	QWORD PTR -272[rbp], rax
	lea	rax, -304[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L3127
.L3139:
	nop
.L3104:
	lea	rax, -304[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	lea	rdx, .LC198[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -108[rbp], eax
	cmp	DWORD PTR -108[rbp], 0
	jne	.L3140
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L3108:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	QWORD PTR -272[rbp], rax
	lea	rax, -304[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L3127
.L3140:
	nop
.L3107:
	lea	rax, -304[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	rdx, .LC238[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -132[rbp], eax
	cmp	DWORD PTR -132[rbp], 0
	jne	.L3141
	mov	rax, QWORD PTR -128[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L3111:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	QWORD PTR -272[rbp], rax
	lea	rax, -304[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L3127
.L3141:
	nop
.L3110:
	lea	rax, -304[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	lea	rdx, .LC239[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -156[rbp], eax
	cmp	DWORD PTR -156[rbp], 0
	jne	.L3142
	mov	rax, QWORD PTR -152[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L3114:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	QWORD PTR -272[rbp], rax
	lea	rax, -304[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L3127
.L3142:
	nop
.L3113:
	lea	rax, -304[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	lea	rdx, .LC240[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -180[rbp], eax
	cmp	DWORD PTR -180[rbp], 0
	jne	.L3143
	mov	rax, QWORD PTR -176[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L3117:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 49
	mov	QWORD PTR -272[rbp], rax
	lea	rax, -304[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L3127
.L3143:
	nop
.L3116:
	lea	rax, -304[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -192[rbp]
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	lea	rdx, .LC241[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -204[rbp], eax
	cmp	DWORD PTR -204[rbp], 0
	jne	.L3144
	mov	rax, QWORD PTR -200[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L3120:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 50
	mov	QWORD PTR -272[rbp], rax
	lea	rax, -304[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L3127
.L3144:
	nop
.L3119:
	lea	rax, -304[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR -216[rbp]
	mov	QWORD PTR -224[rbp], rax
	mov	rax, QWORD PTR -224[rbp]
	lea	rdx, .LC242[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -228[rbp], eax
	cmp	DWORD PTR -228[rbp], 0
	jne	.L3145
	mov	rax, QWORD PTR -224[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L3123:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 51
	mov	QWORD PTR -272[rbp], rax
	lea	rax, -304[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L3127
.L3145:
	nop
.L3122:
	lea	rax, -304[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -240[rbp]
	mov	QWORD PTR -248[rbp], rax
	mov	rax, QWORD PTR -248[rbp]
	lea	rdx, .LC243[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -252[rbp], eax
	cmp	DWORD PTR -252[rbp], 0
	jne	.L3146
	mov	rax, QWORD PTR -248[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L3126:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 136
	mov	QWORD PTR -272[rbp], rax
	lea	rax, -304[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L3127
.L3146:
	nop
.L3125:
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT12READPROPERTYER8FBSTRING
	mov	QWORD PTR -264[rbp], rax
	mov	rax, QWORD PTR -264[rbp]
	mov	QWORD PTR -272[rbp], rax
	lea	rax, -304[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	nop
.L3127:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -272[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4FONT13WRITEPROPERTYER8FBSTRINGPv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4FONT13WRITEPROPERTYER8FBSTRINGPv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 464
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	BYTE PTR -386[rbp], 0
	lea	rcx, .LC237[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC154[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L3148:
	cmp	QWORD PTR 32[rbp], 0
	je	.L3216
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -416[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -416[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC179[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L3217
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L3153:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4FONT11NAME__set__ERw
	jmp	.L3196
.L3217:
	nop
.L3152:
	lea	rax, -416[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	rdx, .LC195[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -84[rbp], eax
	cmp	DWORD PTR -84[rbp], 0
	jne	.L3218
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L3157:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	lea	r8, .LC237[rip]
	mov	edx, 40
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -104[rbp], rax
	cmp	QWORD PTR -104[rbp], 0
	je	.L3219
	jmp	[QWORD PTR -104[rbp]]
.L3219:
	nop
.L3159:
	mov	rax, QWORD PTR -96[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4FONT12COLOR__set__Eu7INTEGER
	jmp	.L3196
.L3218:
	nop
.L3156:
	lea	rax, -416[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	lea	rdx, .LC198[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -124[rbp], eax
	cmp	DWORD PTR -124[rbp], 0
	jne	.L3220
	mov	rax, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L3162:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	lea	r8, .LC237[rip]
	mov	edx, 41
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -144[rbp], rax
	cmp	QWORD PTR -144[rbp], 0
	je	.L3221
	jmp	[QWORD PTR -144[rbp]]
.L3221:
	nop
.L3164:
	mov	rax, QWORD PTR -136[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4FONT11SIZE__set__Eu7INTEGER
	jmp	.L3196
.L3220:
	nop
.L3161:
	lea	rax, -416[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	lea	rdx, .LC238[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -164[rbp], eax
	cmp	DWORD PTR -164[rbp], 0
	jne	.L3222
	mov	rax, QWORD PTR -160[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L3167:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	lea	r8, .LC237[rip]
	mov	edx, 42
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -184[rbp], rax
	cmp	QWORD PTR -184[rbp], 0
	je	.L3223
	jmp	[QWORD PTR -184[rbp]]
.L3223:
	nop
.L3169:
	mov	rax, QWORD PTR -176[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4FONT14CHARSET__set__Eu7INTEGER
	jmp	.L3196
.L3222:
	nop
.L3166:
	lea	rax, -416[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -192[rbp]
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	lea	rdx, .LC239[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -204[rbp], eax
	cmp	DWORD PTR -204[rbp], 0
	jne	.L3224
	mov	rax, QWORD PTR -200[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L3172:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR -216[rbp]
	lea	r8, .LC237[rip]
	mov	edx, 43
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -224[rbp], rax
	cmp	QWORD PTR -224[rbp], 0
	je	.L3225
	jmp	[QWORD PTR -224[rbp]]
.L3225:
	nop
.L3174:
	mov	rax, QWORD PTR -216[rbp]
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4FONT11BOLD__set__Eb
	jmp	.L3196
.L3224:
	nop
.L3171:
	lea	rax, -416[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -232[rbp], rax
	mov	rax, QWORD PTR -232[rbp]
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -240[rbp]
	lea	rdx, .LC240[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -244[rbp], eax
	cmp	DWORD PTR -244[rbp], 0
	jne	.L3226
	mov	rax, QWORD PTR -240[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L3177:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -256[rbp], rax
	mov	rax, QWORD PTR -256[rbp]
	lea	r8, .LC237[rip]
	mov	edx, 44
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -264[rbp], rax
	cmp	QWORD PTR -264[rbp], 0
	je	.L3227
	jmp	[QWORD PTR -264[rbp]]
.L3227:
	nop
.L3179:
	mov	rax, QWORD PTR -256[rbp]
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4FONT13ITALIC__set__Eb
	jmp	.L3196
.L3226:
	nop
.L3176:
	lea	rax, -416[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -272[rbp], rax
	mov	rax, QWORD PTR -272[rbp]
	mov	QWORD PTR -280[rbp], rax
	mov	rax, QWORD PTR -280[rbp]
	lea	rdx, .LC241[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -284[rbp], eax
	cmp	DWORD PTR -284[rbp], 0
	jne	.L3228
	mov	rax, QWORD PTR -280[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L3182:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -296[rbp], rax
	mov	rax, QWORD PTR -296[rbp]
	lea	r8, .LC237[rip]
	mov	edx, 45
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -304[rbp], rax
	cmp	QWORD PTR -304[rbp], 0
	je	.L3229
	jmp	[QWORD PTR -304[rbp]]
.L3229:
	nop
.L3184:
	mov	rax, QWORD PTR -296[rbp]
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4FONT16UNDERLINE__set__Eb
	jmp	.L3196
.L3228:
	nop
.L3181:
	lea	rax, -416[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -312[rbp], rax
	mov	rax, QWORD PTR -312[rbp]
	mov	QWORD PTR -320[rbp], rax
	mov	rax, QWORD PTR -320[rbp]
	lea	rdx, .LC242[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -324[rbp], eax
	cmp	DWORD PTR -324[rbp], 0
	jne	.L3230
	mov	rax, QWORD PTR -320[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L3187:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -336[rbp], rax
	mov	rax, QWORD PTR -336[rbp]
	lea	r8, .LC237[rip]
	mov	edx, 46
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -344[rbp], rax
	cmp	QWORD PTR -344[rbp], 0
	je	.L3231
	jmp	[QWORD PTR -344[rbp]]
.L3231:
	nop
.L3189:
	mov	rax, QWORD PTR -336[rbp]
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4FONT16STRIKEOUT__set__Eb
	jmp	.L3196
.L3230:
	nop
.L3186:
	lea	rax, -416[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -352[rbp], rax
	mov	rax, QWORD PTR -352[rbp]
	mov	QWORD PTR -360[rbp], rax
	mov	rax, QWORD PTR -360[rbp]
	lea	rdx, .LC243[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -364[rbp], eax
	cmp	DWORD PTR -364[rbp], 0
	jne	.L3232
	mov	rax, QWORD PTR -360[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L3192:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -376[rbp], rax
	mov	rax, QWORD PTR -376[rbp]
	lea	r8, .LC237[rip]
	mov	edx, 47
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -384[rbp], rax
	cmp	QWORD PTR -384[rbp], 0
	je	.L3233
	jmp	[QWORD PTR -384[rbp]]
.L3233:
	nop
.L3194:
	mov	rax, QWORD PTR -376[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4FONT18ORIENTATION__set__Eu7INTEGER
	jmp	.L3196
.L3232:
	nop
.L3191:
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT13WRITEPROPERTYER8FBSTRINGPv
	mov	BYTE PTR -385[rbp], al
	movzx	eax, BYTE PTR -385[rbp]
	mov	BYTE PTR -386[rbp], al
	lea	rax, -416[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L3195
.L3154:
.L3196:
	lea	rax, -416[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L3197
.L3150:
.L3216:
	nop
.L3197:
	mov	BYTE PTR -386[rbp], 1
	nop
.L3195:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -386[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4FONT6CREATEEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4FONT6CREATEEv:
	push	rbp
	mov	rbp, rsp
	push	rdi
	push	rsi
	push	rbx
	sub	rsp, 280
	mov	QWORD PTR 16[rbp], rcx
.L3235:
	lea	rcx, .LC237[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	lea	rcx, .LC203[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	rcx, rax
	call	WGET
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	rdx, .LC77[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -84[rbp], eax
	cmp	DWORD PTR -84[rbp], 0
	jne	.L3266
	lea	rcx, DEFAULTFONT$[rip]
	call	_ZN2MY3SYS7DRAWING4FONT11NAME__get__Ev
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 64[rax]
	mov	rax, QWORD PTR -96[rbp]
	mov	rdx, rax
	call	WLET
	jmp	.L3238
.L3237:
.L3266:
	nop
.L3238:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jne	.L3267
	lea	rcx, DEFAULTFONT$[rip]
	call	_ZN2MY3SYS7DRAWING4FONT11SIZE__get__Ev
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 56[rax]
	mov	rax, QWORD PTR -104[rbp]
	mov	QWORD PTR [rdx], rax
	jmp	.L3241
.L3240:
.L3267:
	nop
.L3241:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 144
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L3268
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 144
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DeleteObject
	jmp	.L3243
.L3268:
	nop
.L3243:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	neg	eax
	mov	edx, eax
	mov	eax, edx
	sar	eax, 31
	xor	edx, eax
	mov	DWORD PTR -108[rbp], edx
	sub	DWORD PTR -108[rbp], eax
	mov	eax, DWORD PTR -108[rbp]
	cdqe
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	lea	r9, .LC237[rip]
	mov	r8d, 66
	mov	edx, 2
	mov	rcx, rax
	call	fb_ArraySngBoundChk
	mov	QWORD PTR -128[rbp], rax
	cmp	QWORD PTR -128[rbp], 0
	je	.L3269
	jmp	[QWORD PTR -128[rbp]]
.L3269:
	nop
.L3245:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 120
	mov	rax, QWORD PTR [rax]
	mov	edx, eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	rax, QWORD PTR [rax]
	mov	r8d, 72
	mov	ecx, eax
	call	MulDiv
	mov	DWORD PTR -132[rbp], eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 16[rbp]
	add	rdx, 80
	mov	rdx, QWORD PTR [rdx]
	mov	edi, edx
	mov	rdx, QWORD PTR 16[rbp]
	add	rdx, 51
	movzx	edx, BYTE PTR [rdx]
	movsx	edx, dl
	neg	edx
	mov	esi, edx
	mov	rdx, QWORD PTR 16[rbp]
	add	rdx, 50
	movzx	edx, BYTE PTR [rdx]
	movsx	edx, dl
	neg	edx
	mov	ebx, edx
	mov	rdx, QWORD PTR 16[rbp]
	add	rdx, 49
	movzx	edx, BYTE PTR [rdx]
	movsx	edx, dl
	neg	edx
	mov	r11d, edx
	mov	rdx, QWORD PTR -120[rbp]
	sal	rdx, 3
	lea	rcx, 96[rdx]
	mov	rdx, QWORD PTR 16[rbp]
	add	rdx, rcx
	mov	rdx, QWORD PTR [rdx]
	mov	r9d, edx
	mov	rdx, QWORD PTR 16[rbp]
	add	rdx, 136
	mov	rdx, QWORD PTR [rdx]
	mov	ecx, edx
	mov	rdx, QWORD PTR 16[rbp]
	add	rdx, 56
	mov	rdx, QWORD PTR [rdx]
	imul	ecx, edx
	mov	r8d, ecx
	mov	rdx, QWORD PTR 16[rbp]
	add	rdx, 136
	mov	rdx, QWORD PTR [rdx]
	mov	ecx, edx
	mov	rdx, QWORD PTR 16[rbp]
	add	rdx, 56
	mov	rdx, QWORD PTR [rdx]
	imul	ecx, edx
	mov	edx, DWORD PTR -132[rbp]
	neg	edx
	mov	r10d, edx
	mov	QWORD PTR 104[rsp], rax
	mov	DWORD PTR 96[rsp], 0
	mov	DWORD PTR 88[rsp], 0
	mov	DWORD PTR 80[rsp], 0
	mov	DWORD PTR 72[rsp], 4
	mov	DWORD PTR 64[rsp], edi
	mov	DWORD PTR 56[rsp], esi
	mov	DWORD PTR 48[rsp], ebx
	mov	DWORD PTR 40[rsp], r11d
	mov	DWORD PTR 32[rsp], r9d
	mov	r9d, r8d
	mov	r8d, ecx
	mov	edx, 0
	mov	ecx, r10d
	call	CreateFontW
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 144[rax]
	mov	rax, QWORD PTR -144[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 144
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L3270
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L3271
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	rax, QWORD PTR [rax]
	lea	rdx, _ZTSN2MY3SYS14COMPONENTMODEL9COMPONENTE[rip]
	mov	rcx, rax
	call	fb_IsTypeOf
	mov	DWORD PTR -148[rbp], eax
	cmp	DWORD PTR -148[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -40[rbp], rax
	jmp	.L3250
.L3271:
	nop
.L3249:
	mov	QWORD PTR -40[rbp], 0
.L3250:
	cmp	QWORD PTR -40[rbp], 0
	je	.L3272
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -160[rbp], rax
	cmp	QWORD PTR -160[rbp], 0
	je	.L3273
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 144
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -168[rbp]
	mov	r9, -1
	mov	r8, rdx
	mov	edx, 48
	mov	rcx, rax
	call	SendMessageW
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	mov	r8d, -1
	mov	edx, 0
	mov	rcx, rax
	call	InvalidateRect
	jmp	.L3256
.L3252:
.L3254:
.L3255:
.L3272:
	nop
	jmp	.L3256
.L3273:
	nop
.L3256:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 152
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L3274
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 152[rax]
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	lea	r8, .LC237[rip]
	mov	edx, 87
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -192[rbp], rax
	cmp	QWORD PTR -192[rbp], 0
	je	.L3275
	jmp	[QWORD PTR -192[rbp]]
.L3275:
	nop
.L3259:
	mov	rax, QWORD PTR -184[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L3262
.L3247:
.L3260:
.L3261:
.L3270:
	nop
	jmp	.L3262
.L3274:
	nop
.L3262:
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	add	rsp, 280
	pop	rbx
	pop	rsi
	pop	rdi
	pop	rbp
	ret
	.def	_ZN2MY3SYS7DRAWING4FONT13PARENT__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4FONT13PARENT__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC237[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC181[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L3277:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 88[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L3278:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4FONT13PARENT__set__EPNS0_6OBJECTE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4FONT13PARENT__set__EPNS0_6OBJECTE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L3281:
	lea	rcx, .LC237[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC181[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 88[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4FONT6CREATEEv
.L3282:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4FONT11NAME__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4FONT11NAME__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -48[rbp], 0
	lea	rcx, .LC237[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC183[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L3284:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	rcx, rax
	call	WGET
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	nop
.L3285:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -48[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4FONT11NAME__set__ERw;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4FONT11NAME__set__ERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L3288:
	lea	rcx, .LC237[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC183[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 64[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	call	WLET
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4FONT6CREATEEv
.L3289:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4FONT12COLOR__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4FONT12COLOR__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC237[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC199[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L3291:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 72[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L3292:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4FONT12COLOR__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4FONT12COLOR__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L3295:
	lea	rcx, .LC237[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC199[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 72[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
.L3296:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC244:
	.ascii "CHARSET\0"
	.text
	.def	_ZN2MY3SYS7DRAWING4FONT14CHARSET__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4FONT14CHARSET__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC237[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC244[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L3298:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 80[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L3299:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4FONT14CHARSET__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4FONT14CHARSET__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L3302:
	lea	rcx, .LC237[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC244[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 80[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4FONT6CREATEEv
.L3303:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4FONT11SIZE__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4FONT11SIZE__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC237[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC202[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L3305:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 56[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L3306:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4FONT11SIZE__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4FONT11SIZE__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L3309:
	lea	rcx, .LC237[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC202[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 56[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4FONT6CREATEEv
.L3310:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC245:
	.ascii "ORIENTATION\0"
	.text
	.def	_ZN2MY3SYS7DRAWING4FONT18ORIENTATION__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4FONT18ORIENTATION__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC237[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC245[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L3312:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 136[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L3313:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4FONT18ORIENTATION__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4FONT18ORIENTATION__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L3316:
	lea	rcx, .LC237[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC245[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 136[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4FONT6CREATEEv
.L3317:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC246:
	.ascii "BOLD\0"
	.text
	.def	_ZN2MY3SYS7DRAWING4FONT11BOLD__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4FONT11BOLD__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	BYTE PTR -33[rbp], 0
	lea	rcx, .LC237[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC246[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L3319:
	mov	rax, QWORD PTR 16[rbp]
	movzx	eax, BYTE PTR 48[rax]
	mov	BYTE PTR -33[rbp], al
	nop
.L3320:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -33[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4FONT11BOLD__set__Eb;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4FONT11BOLD__set__Eb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	BYTE PTR 24[rbp], al
.L3323:
	lea	rcx, .LC237[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC246[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	movzx	eax, BYTE PTR 24[rbp]
	mov	BYTE PTR [rdx], al
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4FONT6CREATEEv
.L3324:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC247:
	.ascii "ITALIC\0"
	.text
	.def	_ZN2MY3SYS7DRAWING4FONT13ITALIC__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4FONT13ITALIC__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	BYTE PTR -33[rbp], 0
	lea	rcx, .LC237[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC247[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L3326:
	mov	rax, QWORD PTR 16[rbp]
	movzx	eax, BYTE PTR 49[rax]
	mov	BYTE PTR -33[rbp], al
	nop
.L3327:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -33[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4FONT13ITALIC__set__Eb;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4FONT13ITALIC__set__Eb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	BYTE PTR 24[rbp], al
.L3330:
	lea	rcx, .LC237[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC247[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 49[rax]
	movzx	eax, BYTE PTR 24[rbp]
	mov	BYTE PTR [rdx], al
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4FONT6CREATEEv
.L3331:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC248:
	.ascii "UNDERLINE\0"
	.text
	.def	_ZN2MY3SYS7DRAWING4FONT16UNDERLINE__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4FONT16UNDERLINE__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	BYTE PTR -33[rbp], 0
	lea	rcx, .LC237[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC248[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L3333:
	mov	rax, QWORD PTR 16[rbp]
	movzx	eax, BYTE PTR 50[rax]
	mov	BYTE PTR -33[rbp], al
	nop
.L3334:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -33[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4FONT16UNDERLINE__set__Eb;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4FONT16UNDERLINE__set__Eb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	BYTE PTR 24[rbp], al
.L3337:
	lea	rcx, .LC237[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC248[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 50[rax]
	movzx	eax, BYTE PTR 24[rbp]
	mov	BYTE PTR [rdx], al
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4FONT6CREATEEv
.L3338:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC249:
	.ascii "STRIKEOUT\0"
	.text
	.def	_ZN2MY3SYS7DRAWING4FONT16STRIKEOUT__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4FONT16STRIKEOUT__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	BYTE PTR -33[rbp], 0
	lea	rcx, .LC237[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC249[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L3340:
	mov	rax, QWORD PTR 16[rbp]
	movzx	eax, BYTE PTR 51[rax]
	mov	BYTE PTR -33[rbp], al
	nop
.L3341:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -33[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4FONT16STRIKEOUT__set__Eb;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4FONT16STRIKEOUT__set__Eb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	BYTE PTR 24[rbp], al
.L3344:
	lea	rcx, .LC237[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC249[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 51[rax]
	movzx	eax, BYTE PTR 24[rbp]
	mov	BYTE PTR [rdx], al
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4FONT6CREATEEv
.L3345:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 2
.LC250:
	.ascii ",\0 \0\0\0"
	.text
	.def	_ZN2MY3SYS7DRAWING4FONT8TOSTRINGEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4FONT8TOSTRINGEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 144
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -104[rbp], 0
	lea	rcx, .LC237[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC155[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L3347:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4FONT11SIZE__get__Ev
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_LongintToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4FONT11NAME__get__Ev
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	lea	rdx, .LC250[rip]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rdx, QWORD PTR -56[rbp]
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 24[rax]
	mov	rax, QWORD PTR -96[rbp]
	mov	rdx, rax
	call	WLET
	mov	rax, QWORD PTR -96[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -104[rbp], rax
	nop
.L3348:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -104[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4FONTaSERS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4FONTaSERS2_:
	push	rbp
	mov	rbp, rsp
	add	rsp, -128
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L3351:
	lea	rcx, .LC237[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4FONT11NAME__get__Ev
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 64[rax]
	mov	rax, QWORD PTR -48[rbp]
	mov	rdx, rax
	call	WLET
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4FONT11BOLD__get__Ev
	mov	BYTE PTR -49[rbp], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	movzx	eax, BYTE PTR -49[rbp]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4FONT13ITALIC__get__Ev
	mov	BYTE PTR -50[rbp], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 49[rax]
	movzx	eax, BYTE PTR -50[rbp]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4FONT16UNDERLINE__get__Ev
	mov	BYTE PTR -51[rbp], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 50[rax]
	movzx	eax, BYTE PTR -51[rbp]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4FONT16STRIKEOUT__get__Ev
	mov	BYTE PTR -52[rbp], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 51[rax]
	movzx	eax, BYTE PTR -52[rbp]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4FONT11SIZE__get__Ev
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 56[rax]
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4FONT12COLOR__get__Ev
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 72[rax]
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4FONT14CHARSET__get__Ev
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 80[rax]
	mov	rax, QWORD PTR -80[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4FONT18ORIENTATION__get__Ev
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 136[rax]
	mov	rax, QWORD PTR -88[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4FONT6CREATEEv
.L3352:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 2
.LC251:
	.ascii "F\0o\0n\0t\0\0\0"
	.text
	.def	_ZN2MY3SYS7DRAWING4FONTC1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4FONTC1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
.L3354:
	lea	rcx, .LC237[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 49
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 50
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 51
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 96
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 120
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 136
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 144
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 152
	mov	QWORD PTR [rax], 0
	lea	rdx, _ZTVN2MY3SYS7DRAWING4FONTE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 32
	lea	rdx, .LC251[rip]
	mov	rcx, rax
	call	WLET
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	QWORD PTR [rax], 1
	lea	rcx, DEFAULTFONT$[rip]
	call	_ZN2MY3SYS7DRAWING4FONT11NAME__get__Ev
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 64[rax]
	mov	rax, QWORD PTR -40[rbp]
	mov	rdx, rax
	call	WLET
	lea	rcx, DEFAULTFONT$[rip]
	call	_ZN2MY3SYS7DRAWING4FONT11SIZE__get__Ev
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 56[rax]
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR [rdx], rax
	mov	QWORD PTR -72[rbp], 0
	mov	ecx, 0
	call	GetDC
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	edx, 90
	mov	rcx, rax
	call	GetDeviceCaps
	mov	DWORD PTR -60[rbp], eax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 120[rax]
	mov	eax, DWORD PTR -60[rbp]
	cdqe
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	rdx, rax
	mov	ecx, 0
	call	ReleaseDC
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 96
	mov	QWORD PTR [rax], 400
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	QWORD PTR [rax], 700
.L3355:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING4FONTD1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING4FONTD1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	lea	rdx, _ZTVN2MY3SYS7DRAWING4FONTE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rcx, .LC237[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L3357:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	rcx, rax
	call	_Z11WDEALLOCATERPw
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 144
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L3361
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 144
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DeleteObject
	jmp	.L3360
.L3359:
.L3361:
	nop
.L3360:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTD1Ev
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC252:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Graphics.bas\0"
.LC253:
	.ascii "GETRED\0"
	.text
	.def	GETRED;	.scl	3;	.type	32;	.endef
GETRED:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	DWORD PTR 16[rbp], ecx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC252[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC253[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L3363:
	mov	eax, DWORD PTR 16[rbp]
	cdqe
	movzx	eax, al
	mov	QWORD PTR -40[rbp], rax
	nop
.L3364:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC254:
	.ascii "GETGREEN\0"
	.text
	.def	GETGREEN;	.scl	3;	.type	32;	.endef
GETGREEN:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	DWORD PTR 16[rbp], ecx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC252[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC254[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L3367:
	mov	eax, DWORD PTR 16[rbp]
	cdqe
	shr	rax, 8
	movzx	eax, al
	mov	QWORD PTR -40[rbp], rax
	nop
.L3368:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC255:
	.ascii "GETBLUE\0"
	.text
	.def	GETBLUE;	.scl	3;	.type	32;	.endef
GETBLUE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	DWORD PTR 16[rbp], ecx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC252[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC255[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L3371:
	mov	eax, DWORD PTR 16[rbp]
	cdqe
	shr	rax, 16
	movzx	eax, al
	mov	QWORD PTR -40[rbp], rax
	nop
.L3372:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC256:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\List.bas\0"
.LC257:
	.ascii "ITEM\0"
	.text
	.def	_ZN4LIST11ITEM__get__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN4LIST11ITEM__get__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -56[rbp], 0
	lea	rcx, .LC256[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC257[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L3375:
	mov	rax, QWORD PTR 24[rbp]
	not	rax
	shr	rax, 63
	movzx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	cmp	QWORD PTR 24[rbp], rax
	setle	al
	movzx	eax, al
	neg	eax
	and	eax, edx
	test	eax, eax
	je	.L3385
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 8[rax]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	lea	r8, .LC256[rip]
	mov	edx, 23
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -48[rbp], rax
	cmp	QWORD PTR -48[rbp], 0
	je	.L3386
	jmp	[QWORD PTR -48[rbp]]
.L3386:
	nop
.L3379:
	mov	rax, QWORD PTR 24[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -40[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -56[rbp], rax
	jmp	.L3381
.L3385:
	nop
.L3377:
	mov	QWORD PTR -56[rbp], 0
.L3380:
	nop
.L3381:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -56[rbp]
	leave
	ret
	.def	_ZN4LIST11ITEM__set__Eu7INTEGERPv;	.scl	3;	.type	32;	.endef
_ZN4LIST11ITEM__set__Eu7INTEGERPv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
.L3388:
	lea	rcx, .LC256[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC257[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	not	rax
	shr	rax, 63
	movzx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	cmp	QWORD PTR 24[rbp], rax
	setle	al
	movzx	eax, al
	neg	eax
	and	eax, edx
	test	eax, eax
	je	.L3396
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 8[rax]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	lea	r8, .LC256[rip]
	mov	edx, 31
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -48[rbp], rax
	cmp	QWORD PTR -48[rbp], 0
	je	.L3397
	jmp	[QWORD PTR -48[rbp]]
.L3397:
	nop
.L3392:
	mov	rax, QWORD PTR 24[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -40[rbp]
	add	rdx, rax
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR [rdx], rax
	jmp	.L3394
.L3390:
.L3393:
.L3396:
	nop
.L3394:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC258:
	.ascii "ADD\0"
	.text
	.def	_ZN4LIST3ADDEPv;	.scl	3;	.type	32;	.endef
_ZN4LIST3ADDEPv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L3399:
	lea	rcx, .LC256[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC258[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	sal	rax, 3
	add	rax, 8
	mov	rdx, rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	realloc
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 8[rax]
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 8[rax]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	r8, .LC256[rip]
	mov	edx, 37
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L3404
	jmp	[QWORD PTR -56[rbp]]
.L3404:
	nop
.L3401:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -48[rbp]
	add	rdx, rax
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, 1[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
.L3402:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC259:
	.ascii "INSERT\0"
	.text
	.def	_ZN4LIST6INSERTEu7INTEGERPv;	.scl	3;	.type	32;	.endef
_ZN4LIST6INSERTEu7INTEGERPv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 144
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
.L3406:
	lea	rcx, .LC256[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC259[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	QWORD PTR -104[rbp], 0
	mov	rax, QWORD PTR 24[rbp]
	not	rax
	shr	rax, 63
	movzx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	cmp	QWORD PTR 24[rbp], rax
	setle	al
	movzx	eax, al
	neg	eax
	and	eax, edx
	test	eax, eax
	je	.L3428
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, 1[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	realloc
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 8[rax]
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 1
	mov	QWORD PTR -48[rbp], rax
	jmp	.L3409
.L3431:
	nop
.L3410:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 8[rax]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	r8, .LC256[rip]
	mov	edx, 48
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L3429
	jmp	[QWORD PTR -80[rbp]]
.L3429:
	nop
.L3412:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 8[rax]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	r8, .LC256[rip]
	mov	edx, 48
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -96[rbp], rax
	cmp	QWORD PTR -96[rbp], 0
	je	.L3430
	jmp	[QWORD PTR -96[rbp]]
.L3430:
	nop
.L3414:
	mov	rax, QWORD PTR -104[rbp]
	sal	rax, 3
	lea	rdx, -8[rax]
	mov	rax, QWORD PTR -72[rbp]
	add	rax, rdx
	mov	rdx, QWORD PTR -104[rbp]
	sal	rdx, 3
	mov	rcx, rdx
	mov	rdx, QWORD PTR -88[rbp]
	add	rdx, rcx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
.L3415:
	mov	rax, QWORD PTR -104[rbp]
	sub	rax, 1
	mov	QWORD PTR -104[rbp], rax
.L3409:
	mov	rax, QWORD PTR -104[rbp]
	cmp	QWORD PTR -48[rbp], rax
	jle	.L3431
	nop
.L3416:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 8[rax]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	r8, .LC256[rip]
	mov	edx, 50
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -64[rbp], rax
	cmp	QWORD PTR -64[rbp], 0
	je	.L3432
	jmp	[QWORD PTR -64[rbp]]
.L3432:
	nop
.L3418:
	mov	rax, QWORD PTR 24[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -56[rbp]
	add	rdx, rax
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR [rdx], rax
	jmp	.L3422
.L3428:
	nop
.L3408:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	cmp	QWORD PTR 24[rbp], rax
	jle	.L3433
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN4LIST3ADDEPv
	jmp	.L3422
.L3419:
.L3421:
.L3433:
	nop
.L3422:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC260:
	.ascii "EXCHANGE\0"
	.text
	.def	_ZN4LIST8EXCHANGEEu7INTEGERS0_;	.scl	3;	.type	32;	.endef
_ZN4LIST8EXCHANGEEu7INTEGERS0_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 144
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
.L3435:
	lea	rcx, .LC256[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC260[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	QWORD PTR -104[rbp], 0
	mov	rax, QWORD PTR 24[rbp]
	not	rax
	shr	rax, 63
	movzx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	cmp	QWORD PTR 24[rbp], rax
	setle	al
	movzx	eax, al
	neg	eax
	and	edx, eax
	mov	rax, QWORD PTR 32[rbp]
	not	rax
	shr	rax, 63
	movzx	eax, al
	neg	eax
	mov	ecx, eax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	cmp	QWORD PTR 32[rbp], rax
	setle	al
	movzx	eax, al
	neg	eax
	and	eax, ecx
	and	eax, edx
	test	eax, eax
	je	.L3452
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 8[rax]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	lea	r8, .LC256[rip]
	mov	edx, 59
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -48[rbp], rax
	cmp	QWORD PTR -48[rbp], 0
	je	.L3453
	jmp	[QWORD PTR -48[rbp]]
.L3453:
	nop
.L3439:
	mov	rax, QWORD PTR 24[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -40[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 8[rax]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	r8, .LC256[rip]
	mov	edx, 60
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -64[rbp], rax
	cmp	QWORD PTR -64[rbp], 0
	je	.L3454
	jmp	[QWORD PTR -64[rbp]]
.L3454:
	nop
.L3441:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 8[rax]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	r8, .LC256[rip]
	mov	edx, 60
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L3455
	jmp	[QWORD PTR -80[rbp]]
.L3455:
	nop
.L3443:
	mov	rax, QWORD PTR 32[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -56[rbp]
	add	rax, rdx
	mov	rdx, QWORD PTR 24[rbp]
	sal	rdx, 3
	mov	rcx, rdx
	mov	rdx, QWORD PTR -72[rbp]
	add	rdx, rcx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 8[rax]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	r8, .LC256[rip]
	mov	edx, 61
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -96[rbp], rax
	cmp	QWORD PTR -96[rbp], 0
	je	.L3456
	jmp	[QWORD PTR -96[rbp]]
.L3456:
	nop
.L3445:
	mov	rax, QWORD PTR 32[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -88[rbp]
	add	rdx, rax
	mov	rax, QWORD PTR -104[rbp]
	mov	QWORD PTR [rdx], rax
	jmp	.L3447
.L3437:
.L3446:
.L3452:
	nop
.L3447:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC261:
	.ascii "REMOVE\0"
	.text
	.def	_ZN4LIST6REMOVEEu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN4LIST6REMOVEEu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 144
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L3458:
	lea	rcx, .LC256[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rcx, .LC261[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	mov	QWORD PTR -104[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jle	.L3486
	mov	rax, QWORD PTR 24[rbp]
	not	rax
	shr	rax, 63
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L3461
.L3486:
	nop
.L3460:
	mov	QWORD PTR -8[rbp], 0
.L3461:
	cmp	QWORD PTR -8[rbp], 0
	je	.L3487
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	cmp	QWORD PTR 24[rbp], rax
	setle	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -16[rbp], rax
	jmp	.L3464
.L3487:
	nop
.L3463:
	mov	QWORD PTR -16[rbp], 0
.L3464:
	cmp	QWORD PTR -16[rbp], 0
	je	.L3488
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, -1[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jne	.L3489
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	free
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	QWORD PTR [rax], 0
	jmp	.L3479
.L3489:
	nop
.L3468:
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -56[rbp], rax
	jmp	.L3469
.L3492:
	nop
.L3470:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 8[rax]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	r8, .LC256[rip]
	mov	edx, 92
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L3490
	jmp	[QWORD PTR -80[rbp]]
.L3490:
	nop
.L3472:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 8[rax]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	r8, .LC256[rip]
	mov	edx, 92
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -96[rbp], rax
	cmp	QWORD PTR -96[rbp], 0
	je	.L3491
	jmp	[QWORD PTR -96[rbp]]
.L3491:
	nop
.L3474:
	mov	rax, QWORD PTR -104[rbp]
	sal	rax, 3
	lea	rdx, 8[rax]
	mov	rax, QWORD PTR -72[rbp]
	add	rax, rdx
	mov	rdx, QWORD PTR -104[rbp]
	sal	rdx, 3
	mov	rcx, rdx
	mov	rdx, QWORD PTR -88[rbp]
	add	rdx, rcx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
.L3475:
	mov	rax, QWORD PTR -104[rbp]
	add	rax, 1
	mov	QWORD PTR -104[rbp], rax
.L3469:
	mov	rax, QWORD PTR -104[rbp]
	cmp	QWORD PTR -56[rbp], rax
	jge	.L3492
	nop
.L3476:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	realloc
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 8[rax]
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR [rdx], rax
	jmp	.L3479
.L3466:
.L3477:
.L3478:
.L3488:
	nop
.L3479:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC262:
	.ascii "CLEAR\0"
	.text
	.def	_ZN4LIST5CLEAREv;	.scl	3;	.type	32;	.endef
_ZN4LIST5CLEAREv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L3494:
	lea	rcx, .LC256[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC262[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L3498
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	free
	jmp	.L3496
.L3498:
	nop
.L3496:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	QWORD PTR [rax], 0
.L3497:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC263:
	.ascii "INDEXOF\0"
	.text
	.def	_ZN4LIST7INDEXOFEPv;	.scl	3;	.type	32;	.endef
_ZN4LIST7INDEXOFEPv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -64[rbp], 0
	lea	rcx, .LC256[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC263[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L3500:
	mov	QWORD PTR -72[rbp], 0
	mov	QWORD PTR -72[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -40[rbp], rax
	jmp	.L3501
.L3516:
	nop
.L3502:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 8[rax]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	r8, .LC256[rip]
	mov	edx, 109
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L3514
	jmp	[QWORD PTR -56[rbp]]
.L3514:
	nop
.L3504:
	mov	rax, QWORD PTR -72[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -48[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR 24[rbp], rax
	jne	.L3515
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -64[rbp], rax
	jmp	.L3507
.L3506:
.L3515:
	nop
.L3508:
	mov	rax, QWORD PTR -72[rbp]
	add	rax, 1
	mov	QWORD PTR -72[rbp], rax
.L3501:
	mov	rax, QWORD PTR -72[rbp]
	cmp	QWORD PTR -40[rbp], rax
	jge	.L3516
	nop
.L3509:
	mov	QWORD PTR -64[rbp], -1
	nop
.L3507:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -64[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC264:
	.ascii "CONTAINS\0"
	.text
	.def	_ZN4LIST8CONTAINSEPvRu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN4LIST8CONTAINSEPvRu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	BYTE PTR -41[rbp], 0
	lea	rcx, .LC256[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC264[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L3518:
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN4LIST7INDEXOFEPv
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, QWORD PTR -40[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR [rax]
	cmp	rax, -1
	setne	al
	mov	BYTE PTR -41[rbp], al
	nop
.L3519:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -41[rbp]
	leave
	ret
	.def	_ZN4LISTC1Ev;	.scl	3;	.type	32;	.endef
_ZN4LISTC1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L3522:
	lea	rcx, .LC256[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], 0
.L3523:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN4LISTD1Ev;	.scl	3;	.type	32;	.endef
_ZN4LISTD1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L3525:
	lea	rcx, .LC256[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L3529
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	free
	jmp	.L3527
.L3529:
	nop
.L3527:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	QWORD PTR [rax], 0
.L3528:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC265:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Dictionary.bi\0"
	.text
	.def	_ZN10DICTIONARYaSERKS_;	.scl	3;	.type	32;	.endef
_ZN10DICTIONARYaSERKS_:
	push	rbp
	mov	rbp, rsp
	and	rsp, -16
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L3531:
	lea	rcx, .LC265[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR 56[rsp], rax
	mov	rax, QWORD PTR 56[rsp]
	mov	QWORD PTR 48[rsp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR 40[rsp], rax
	mov	rax, QWORD PTR 40[rsp]
	mov	QWORD PTR 32[rsp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 8[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 8[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 16
	mov	rdx, QWORD PTR 16[rbp]
	lea	rcx, 16[rdx]
	mov	rdx, QWORD PTR 8[rax]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR 8[rcx], rdx
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 32[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 32[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 33[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 33[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 40[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 40[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 48[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 49[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 49[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 56[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 56[rax]
	mov	QWORD PTR [rdx], rax
.L3532:
	mov	rax, QWORD PTR 32[rsp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR 48[rsp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC266:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Dictionary.bas\0"
.LC267:
	.ascii "KEY\0"
	.text
	.def	_ZN14DICTIONARYITEM10KEY__get__Ev;	.scl	3;	.type	32;	.endef
_ZN14DICTIONARYITEM10KEY__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC266[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC267[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L3534:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L3541
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -40[rbp], rax
	jmp	.L3538
.L3541:
	nop
.L3536:
	lea	rax, .LC77[rip]
	mov	QWORD PTR -40[rbp], rax
.L3537:
	nop
.L3538:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN14DICTIONARYITEM10KEY__set__ERw;	.scl	3;	.type	32;	.endef
_ZN14DICTIONARYITEM10KEY__set__ERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L3543:
	lea	rcx, .LC266[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC267[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	WLET
.L3544:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC268:
	.ascii "TEXT\0"
	.text
	.def	_ZN14DICTIONARYITEM11TEXT__get__Ev;	.scl	3;	.type	32;	.endef
_ZN14DICTIONARYITEM11TEXT__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC266[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC268[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L3546:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L3553
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 8[rax]
	mov	QWORD PTR -40[rbp], rax
	jmp	.L3550
.L3553:
	nop
.L3548:
	lea	rax, .LC77[rip]
	mov	QWORD PTR -40[rbp], rax
.L3549:
	nop
.L3550:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN14DICTIONARYITEM11TEXT__set__ERw;	.scl	3;	.type	32;	.endef
_ZN14DICTIONARYITEM11TEXT__set__ERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L3555:
	lea	rcx, .LC266[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC268[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 8[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	call	WLET
.L3556:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN14DICTIONARYITEMC1Ev;	.scl	3;	.type	32;	.endef
_ZN14DICTIONARYITEMC1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L3558:
	lea	rcx, .LC266[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], 0
	lea	rdx, .LC77[rip]
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN14DICTIONARYITEM10KEY__set__ERw
	lea	rdx, .LC77[rip]
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN14DICTIONARYITEM11TEXT__set__ERw
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], 0
.L3559:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN14DICTIONARYITEMD1Ev;	.scl	3;	.type	32;	.endef
_ZN14DICTIONARYITEMD1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L3561:
	lea	rcx, .LC266[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L3567
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	free
	jmp	.L3563
.L3567:
	nop
.L3563:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L3568
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	free
	jmp	.L3566
.L3565:
.L3568:
	nop
.L3566:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC269:
	.ascii "COUNT\0"
	.text
	.def	_ZN10DICTIONARY12COUNT__get__Ev;	.scl	3;	.type	32;	.endef
_ZN10DICTIONARY12COUNT__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC266[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC269[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L3570:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 16[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L3571:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN10DICTIONARY11ITEM__get__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN10DICTIONARY11ITEM__get__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -64[rbp], 0
	lea	rcx, .LC266[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC257[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L3574:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY12COUNT__get__Ev
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	not	rax
	shr	rax, 63
	movzx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR -40[rbp]
	sub	rax, 1
	cmp	QWORD PTR 24[rbp], rax
	setle	al
	movzx	eax, al
	neg	eax
	and	eax, edx
	test	eax, eax
	je	.L3584
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 55
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L3585
	jmp	[QWORD PTR -56[rbp]]
.L3585:
	nop
.L3578:
	mov	rax, QWORD PTR 24[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -48[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -64[rbp], rax
	jmp	.L3580
.L3584:
	nop
.L3576:
	mov	QWORD PTR -64[rbp], 0
.L3579:
	nop
.L3580:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -64[rbp]
	leave
	ret
	.def	_ZN10DICTIONARY3ADDERwS0_Pv;	.scl	3;	.type	32;	.endef
_ZN10DICTIONARY3ADDERwS0_Pv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
.L3587:
	lea	rcx, .LC266[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC258[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	ecx, 24
	call	malloc
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	cmp	QWORD PTR -48[rbp], 0
	je	.L3596
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEMC1Ev
	jmp	.L3589
.L3596:
	nop
.L3589:
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM10KEY__set__ERw
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM11TEXT__set__ERw
	mov	rax, QWORD PTR -64[rbp]
	lea	rdx, 16[rax]
	mov	rax, QWORD PTR 40[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 16[rax]
	mov	rax, QWORD PTR -56[rbp]
	mov	rdx, rax
	call	_ZN4LIST3ADDEPv
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 49
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L3597
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 56[rax]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 88
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L3598
	jmp	[QWORD PTR -80[rbp]]
.L3598:
	nop
.L3593:
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L3594
.L3591:
.L3597:
	nop
.L3594:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN10DICTIONARY8EXCHANGEEu7INTEGERS0_;	.scl	3;	.type	32;	.endef
_ZN10DICTIONARY8EXCHANGEEu7INTEGERS0_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
.L3600:
	lea	rcx, .LC266[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC260[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 16[rax]
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	call	_ZN4LIST8EXCHANGEEu7INTEGERS0_
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L3607
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 56[rax]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 134
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -48[rbp], rax
	cmp	QWORD PTR -48[rbp], 0
	je	.L3608
	jmp	[QWORD PTR -48[rbp]]
.L3608:
	nop
.L3604:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L3605
.L3602:
.L3607:
	nop
.L3605:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN10DICTIONARY6REMOVEEu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN10DICTIONARY6REMOVEEu7INTEGER:
	push	rbp
	mov	rbp, rsp
	add	rsp, -128
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L3610:
	lea	rcx, .LC266[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC261[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY12COUNT__get__Ev
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	not	rax
	shr	rax, 63
	movzx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR -40[rbp]
	sub	rax, 1
	cmp	QWORD PTR 24[rbp], rax
	setle	al
	movzx	eax, al
	neg	eax
	and	eax, edx
	test	eax, eax
	je	.L3631
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 139
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L3632
	jmp	[QWORD PTR -56[rbp]]
.L3632:
	nop
.L3614:
	mov	rax, QWORD PTR 24[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -48[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L3633
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 139
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -64[rbp], rax
	cmp	QWORD PTR -64[rbp], 0
	je	.L3634
	jmp	[QWORD PTR -64[rbp]]
.L3634:
	nop
.L3618:
	mov	rax, QWORD PTR 24[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -48[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEMD1Ev
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 139
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	je	.L3635
	jmp	[QWORD PTR -72[rbp]]
.L3635:
	nop
.L3620:
	mov	rax, QWORD PTR 24[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -48[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	free
	jmp	.L3616
.L3633:
	nop
.L3616:
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 16[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	call	_ZN4LIST6REMOVEEu7INTEGER
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L3636
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 56[rax]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 141
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -88[rbp], rax
	cmp	QWORD PTR -88[rbp], 0
	je	.L3637
	jmp	[QWORD PTR -88[rbp]]
.L3637:
	nop
.L3623:
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L3626
.L3612:
.L3624:
.L3625:
.L3631:
	nop
	jmp	.L3626
.L3636:
	nop
.L3626:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC270:
	.ascii "SORT\0"
	.text
	.def	_ZN10DICTIONARY4SORTEbu7INTEGERS0_;	.scl	3;	.type	32;	.endef
_ZN10DICTIONARY4SORTEbu7INTEGERS0_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 368
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
	mov	BYTE PTR 24[rbp], al
.L3639:
	lea	rcx, .LC266[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -72[rbp], rax
	lea	rcx, .LC270[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	cmp	rax, 1
	jle	.L3711
	nop
.L3641:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	BYTE PTR [rax], 1
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 49
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 33[rax]
	movzx	eax, BYTE PTR 24[rbp]
	mov	BYTE PTR [rdx], al
	cmp	QWORD PTR 40[rbp], 0
	jne	.L3712
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR 40[rbp], rax
	jmp	.L3644
.L3712:
	nop
.L3644:
	cmp	QWORD PTR 32[rbp], 0
	jns	.L3713
	mov	QWORD PTR 32[rbp], 0
	jmp	.L3646
.L3713:
	nop
.L3646:
	cmp	QWORD PTR 40[rbp], 0
	je	.L3714
	mov	rax, QWORD PTR 32[rbp]
	cmp	rax, QWORD PTR 40[rbp]
	setge	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L3649
.L3714:
	nop
.L3648:
	mov	QWORD PTR -8[rbp], 0
.L3649:
	cmp	QWORD PTR -8[rbp], 0
	jne	.L3715
	nop
.L3651:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR 40[rbp]
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	cmp	BYTE PTR 24[rbp], 0
	jne	.L3716
	jmp	.L3653
.L3716:
	nop
.L3652:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	jg	.L3717
	nop
.L3654:
	mov	rax, QWORD PTR -24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM11TEXT__get__Ev
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM11TEXT__get__Ev
	mov	QWORD PTR -128[rbp], rax
	mov	rdx, QWORD PTR -120[rbp]
	mov	rax, QWORD PTR -128[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -132[rbp], eax
	cmp	DWORD PTR -132[rbp], 0
	jns	.L3718
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	setl	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -32[rbp], rax
	jmp	.L3658
.L3718:
	nop
.L3657:
	mov	QWORD PTR -32[rbp], 0
.L3658:
	cmp	QWORD PTR -32[rbp], 0
	je	.L3719
	sub	QWORD PTR -24[rbp], 1
	jmp	.L3654
.L3719:
	nop
.L3660:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	jg	.L3720
	mov	rdx, QWORD PTR -24[rbp]
	mov	rax, QWORD PTR -16[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY8EXCHANGEEu7INTEGERS0_
	add	QWORD PTR -16[rbp], 1
	jmp	.L3669
.L3662:
.L3720:
	nop
.L3663:
.L3669:
	mov	rax, QWORD PTR -16[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM11TEXT__get__Ev
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM11TEXT__get__Ev
	mov	QWORD PTR -160[rbp], rax
	mov	rdx, QWORD PTR -152[rbp]
	mov	rax, QWORD PTR -160[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -164[rbp], eax
	cmp	DWORD PTR -164[rbp], 0
	js	.L3721
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	setl	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -40[rbp], rax
	jmp	.L3666
.L3721:
	nop
.L3665:
	mov	QWORD PTR -40[rbp], 0
.L3666:
	cmp	QWORD PTR -40[rbp], 0
	je	.L3722
	add	QWORD PTR -16[rbp], 1
	jmp	.L3669
.L3722:
	nop
.L3668:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	jg	.L3723
	mov	rdx, QWORD PTR -24[rbp]
	mov	rax, QWORD PTR -16[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY8EXCHANGEEu7INTEGERS0_
	sub	QWORD PTR -24[rbp], 1
	jmp	.L3652
.L3723:
	nop
.L3671:
	jmp	.L3652
.L3717:
	nop
.L3655:
	jmp	.L3691
.L3653:
.L3673:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	jg	.L3724
	nop
.L3674:
	mov	rax, QWORD PTR -24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM11TEXT__get__Ev
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -192[rbp]
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM11TEXT__get__Ev
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR -208[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR -216[rbp]
	mov	QWORD PTR -224[rbp], rax
	mov	rdx, QWORD PTR -200[rbp]
	mov	rax, QWORD PTR -224[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -228[rbp], eax
	cmp	DWORD PTR -228[rbp], 0
	jns	.L3725
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	setl	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -48[rbp], rax
	jmp	.L3677
.L3725:
	nop
.L3676:
	mov	QWORD PTR -48[rbp], 0
.L3677:
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -224[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -240[rbp], 0
	je	.L3726
	sub	QWORD PTR -24[rbp], 1
	jmp	.L3674
.L3726:
	nop
.L3679:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	jg	.L3727
	mov	rdx, QWORD PTR -24[rbp]
	mov	rax, QWORD PTR -16[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY8EXCHANGEEu7INTEGERS0_
	add	QWORD PTR -16[rbp], 1
	jmp	.L3688
.L3681:
.L3727:
	nop
.L3682:
.L3688:
	mov	rax, QWORD PTR -16[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -248[rbp], rax
	mov	rax, QWORD PTR -248[rbp]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM11TEXT__get__Ev
	mov	QWORD PTR -256[rbp], rax
	mov	rax, QWORD PTR -256[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -264[rbp], rax
	mov	rax, QWORD PTR -264[rbp]
	mov	QWORD PTR -272[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM11TEXT__get__Ev
	mov	QWORD PTR -280[rbp], rax
	mov	rax, QWORD PTR -280[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -288[rbp], rax
	mov	rax, QWORD PTR -288[rbp]
	mov	QWORD PTR -296[rbp], rax
	mov	rdx, QWORD PTR -272[rbp]
	mov	rax, QWORD PTR -296[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -300[rbp], eax
	cmp	DWORD PTR -300[rbp], 0
	js	.L3728
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	setl	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -56[rbp], rax
	jmp	.L3685
.L3728:
	nop
.L3684:
	mov	QWORD PTR -56[rbp], 0
.L3685:
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -312[rbp], rax
	mov	rax, QWORD PTR -272[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -296[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -312[rbp], 0
	je	.L3729
	add	QWORD PTR -16[rbp], 1
	jmp	.L3688
.L3729:
	nop
.L3687:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	jg	.L3730
	mov	rdx, QWORD PTR -24[rbp]
	mov	rax, QWORD PTR -16[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY8EXCHANGEEu7INTEGERS0_
	sub	QWORD PTR -24[rbp], 1
	jmp	.L3653
.L3730:
	nop
.L3690:
	jmp	.L3653
.L3672:
.L3724:
	nop
.L3691:
	mov	rax, QWORD PTR -24[rbp]
	cmp	rax, QWORD PTR 32[rbp]
	jle	.L3731
	movsx	eax, BYTE PTR 24[rbp]
	mov	rcx, QWORD PTR -24[rbp]
	mov	rdx, QWORD PTR 32[rbp]
	mov	r9, rcx
	mov	r8, rdx
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY4SORTEbu7INTEGERS0_
	jmp	.L3693
.L3731:
	nop
.L3693:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR 40[rbp]
	jge	.L3732
	movsx	eax, BYTE PTR 24[rbp]
	mov	rcx, QWORD PTR 40[rbp]
	mov	rdx, QWORD PTR -16[rbp]
	mov	r9, rcx
	mov	r8, rdx
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY4SORTEbu7INTEGERS0_
	jmp	.L3695
.L3732:
	nop
.L3695:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L3733
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 56[rax]
	mov	QWORD PTR -320[rbp], rax
	mov	rax, QWORD PTR -320[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 199
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -328[rbp], rax
	cmp	QWORD PTR -328[rbp], 0
	je	.L3734
	jmp	[QWORD PTR -328[rbp]]
.L3734:
	nop
.L3698:
	mov	rax, QWORD PTR -320[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L3699
.L3642:
.L3711:
	nop
	jmp	.L3699
.L3715:
	nop
	jmp	.L3699
.L3733:
	nop
.L3699:
	mov	rax, QWORD PTR -88[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC271:
	.ascii "SORTKEYS\0"
	.text
	.def	_ZN10DICTIONARY8SORTKEYSEbu7INTEGERS0_;	.scl	3;	.type	32;	.endef
_ZN10DICTIONARY8SORTKEYSEbu7INTEGERS0_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 368
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
	mov	BYTE PTR 24[rbp], al
.L3736:
	lea	rcx, .LC266[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -72[rbp], rax
	lea	rcx, .LC271[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	cmp	rax, 1
	jle	.L3808
	nop
.L3738:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 32[rax]
	movzx	eax, BYTE PTR 24[rbp]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 49
	mov	BYTE PTR [rax], 1
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	BYTE PTR [rax], 0
	cmp	QWORD PTR 40[rbp], 0
	jne	.L3809
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR 40[rbp], rax
	jmp	.L3741
.L3809:
	nop
.L3741:
	cmp	QWORD PTR 32[rbp], 0
	jns	.L3810
	mov	QWORD PTR 32[rbp], 0
	jmp	.L3743
.L3810:
	nop
.L3743:
	cmp	QWORD PTR 40[rbp], 0
	je	.L3811
	mov	rax, QWORD PTR 32[rbp]
	cmp	rax, QWORD PTR 40[rbp]
	setge	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L3746
.L3811:
	nop
.L3745:
	mov	QWORD PTR -8[rbp], 0
.L3746:
	cmp	QWORD PTR -8[rbp], 0
	jne	.L3812
	nop
.L3748:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR 40[rbp]
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	cmp	BYTE PTR 24[rbp], 0
	jne	.L3813
	jmp	.L3750
.L3813:
	nop
.L3749:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	jg	.L3814
	nop
.L3751:
	mov	rax, QWORD PTR -24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM10KEY__get__Ev
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM10KEY__get__Ev
	mov	QWORD PTR -128[rbp], rax
	mov	rdx, QWORD PTR -120[rbp]
	mov	rax, QWORD PTR -128[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -132[rbp], eax
	cmp	DWORD PTR -132[rbp], 0
	jns	.L3815
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	setl	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -32[rbp], rax
	jmp	.L3755
.L3815:
	nop
.L3754:
	mov	QWORD PTR -32[rbp], 0
.L3755:
	cmp	QWORD PTR -32[rbp], 0
	je	.L3816
	sub	QWORD PTR -24[rbp], 1
	jmp	.L3751
.L3816:
	nop
.L3757:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	jg	.L3817
	mov	rdx, QWORD PTR -24[rbp]
	mov	rax, QWORD PTR -16[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY8EXCHANGEEu7INTEGERS0_
	add	QWORD PTR -16[rbp], 1
	jmp	.L3766
.L3759:
.L3817:
	nop
.L3760:
.L3766:
	mov	rax, QWORD PTR -16[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM10KEY__get__Ev
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM10KEY__get__Ev
	mov	QWORD PTR -160[rbp], rax
	mov	rdx, QWORD PTR -152[rbp]
	mov	rax, QWORD PTR -160[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -164[rbp], eax
	cmp	DWORD PTR -164[rbp], 0
	js	.L3818
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	setl	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -40[rbp], rax
	jmp	.L3763
.L3818:
	nop
.L3762:
	mov	QWORD PTR -40[rbp], 0
.L3763:
	cmp	QWORD PTR -40[rbp], 0
	je	.L3819
	add	QWORD PTR -16[rbp], 1
	jmp	.L3766
.L3819:
	nop
.L3765:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	jg	.L3820
	mov	rdx, QWORD PTR -24[rbp]
	mov	rax, QWORD PTR -16[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY8EXCHANGEEu7INTEGERS0_
	sub	QWORD PTR -24[rbp], 1
	jmp	.L3749
.L3820:
	nop
.L3768:
	jmp	.L3749
.L3814:
	nop
.L3752:
	jmp	.L3788
.L3750:
.L3770:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	jg	.L3821
	nop
.L3771:
	mov	rax, QWORD PTR -24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM10KEY__get__Ev
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -192[rbp]
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM10KEY__get__Ev
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR -208[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR -216[rbp]
	mov	QWORD PTR -224[rbp], rax
	mov	rdx, QWORD PTR -200[rbp]
	mov	rax, QWORD PTR -224[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -228[rbp], eax
	cmp	DWORD PTR -228[rbp], 0
	jns	.L3822
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	setl	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -48[rbp], rax
	jmp	.L3774
.L3822:
	nop
.L3773:
	mov	QWORD PTR -48[rbp], 0
.L3774:
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -224[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -240[rbp], 0
	je	.L3823
	sub	QWORD PTR -24[rbp], 1
	jmp	.L3771
.L3823:
	nop
.L3776:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	jg	.L3824
	mov	rdx, QWORD PTR -24[rbp]
	mov	rax, QWORD PTR -16[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY8EXCHANGEEu7INTEGERS0_
	add	QWORD PTR -16[rbp], 1
	jmp	.L3785
.L3778:
.L3824:
	nop
.L3779:
.L3785:
	mov	rax, QWORD PTR -16[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -248[rbp], rax
	mov	rax, QWORD PTR -248[rbp]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM10KEY__get__Ev
	mov	QWORD PTR -256[rbp], rax
	mov	rax, QWORD PTR -256[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -264[rbp], rax
	mov	rax, QWORD PTR -264[rbp]
	mov	QWORD PTR -272[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM10KEY__get__Ev
	mov	QWORD PTR -280[rbp], rax
	mov	rax, QWORD PTR -280[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -288[rbp], rax
	mov	rax, QWORD PTR -288[rbp]
	mov	QWORD PTR -296[rbp], rax
	mov	rdx, QWORD PTR -272[rbp]
	mov	rax, QWORD PTR -296[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -300[rbp], eax
	cmp	DWORD PTR -300[rbp], 0
	js	.L3825
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	setl	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -56[rbp], rax
	jmp	.L3782
.L3825:
	nop
.L3781:
	mov	QWORD PTR -56[rbp], 0
.L3782:
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -312[rbp], rax
	mov	rax, QWORD PTR -272[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -296[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -312[rbp], 0
	je	.L3826
	add	QWORD PTR -16[rbp], 1
	jmp	.L3785
.L3826:
	nop
.L3784:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	jg	.L3827
	mov	rdx, QWORD PTR -24[rbp]
	mov	rax, QWORD PTR -16[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY8EXCHANGEEu7INTEGERS0_
	sub	QWORD PTR -24[rbp], 1
	jmp	.L3750
.L3827:
	nop
.L3787:
	jmp	.L3750
.L3769:
.L3821:
	nop
.L3788:
	mov	rax, QWORD PTR -24[rbp]
	cmp	rax, QWORD PTR 32[rbp]
	jle	.L3828
	movsx	eax, BYTE PTR 24[rbp]
	mov	rcx, QWORD PTR -24[rbp]
	mov	rdx, QWORD PTR 32[rbp]
	mov	r9, rcx
	mov	r8, rdx
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY8SORTKEYSEbu7INTEGERS0_
	jmp	.L3790
.L3828:
	nop
.L3790:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR 40[rbp]
	jge	.L3829
	movsx	eax, BYTE PTR 24[rbp]
	mov	rcx, QWORD PTR 40[rbp]
	mov	rdx, QWORD PTR -16[rbp]
	mov	r9, rcx
	mov	r8, rdx
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY8SORTKEYSEbu7INTEGERS0_
	jmp	.L3792
.L3829:
	nop
.L3792:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L3830
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 56[rax]
	mov	QWORD PTR -320[rbp], rax
	mov	rax, QWORD PTR -320[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 255
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -328[rbp], rax
	cmp	QWORD PTR -328[rbp], 0
	je	.L3831
	jmp	[QWORD PTR -328[rbp]]
.L3831:
	nop
.L3795:
	mov	rax, QWORD PTR -320[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L3796
.L3739:
.L3808:
	nop
	jmp	.L3796
.L3812:
	nop
	jmp	.L3796
.L3830:
	nop
.L3796:
	mov	rax, QWORD PTR -88[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN10DICTIONARY5CLEAREv;	.scl	3;	.type	32;	.endef
_ZN10DICTIONARY5CLEAREv:
	push	rbp
	mov	rbp, rsp
	add	rsp, -128
	mov	QWORD PTR 16[rbp], rcx
.L3833:
	lea	rcx, .LC266[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC262[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jle	.L3858
	nop
.L3835:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -8[rbp], rax
	jmp	.L3837
.L3863:
	nop
.L3838:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 261
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	je	.L3859
	jmp	[QWORD PTR -72[rbp]]
.L3859:
	nop
.L3840:
	mov	rax, QWORD PTR -8[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -64[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L3860
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 261
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L3861
	jmp	[QWORD PTR -80[rbp]]
.L3861:
	nop
.L3844:
	mov	rax, QWORD PTR -8[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -64[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEMD1Ev
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 261
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -88[rbp], rax
	cmp	QWORD PTR -88[rbp], 0
	je	.L3862
	jmp	[QWORD PTR -88[rbp]]
.L3862:
	nop
.L3846:
	mov	rax, QWORD PTR -8[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -64[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	free
	jmp	.L3847
.L3842:
.L3860:
	nop
.L3847:
	sub	QWORD PTR -8[rbp], 1
.L3837:
	cmp	QWORD PTR -8[rbp], 0
	jns	.L3863
	nop
.L3848:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rcx, rax
	call	_ZN4LIST5CLEAREv
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L3864
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 56[rax]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 264
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L3865
	jmp	[QWORD PTR -56[rbp]]
.L3865:
	nop
.L3851:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L3852
.L3836:
.L3858:
	nop
	jmp	.L3852
.L3864:
	nop
.L3852:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN10DICTIONARY7INDEXOFERKwbbu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN10DICTIONARY7INDEXOFERKwbbu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 624
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	eax, r8d
	mov	edx, r9d
	mov	BYTE PTR 32[rbp], al
	mov	eax, edx
	mov	BYTE PTR 40[rbp], al
	mov	QWORD PTR -592[rbp], 0
	lea	rcx, .LC266[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	lea	rcx, .LC263[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	QWORD PTR -96[rbp], rax
.L3867:
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	fb_WstrTrim
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	lea	rdx, .LC77[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -116[rbp], eax
	cmp	DWORD PTR -116[rbp], 0
	je	.L3976
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	setle	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L3870
.L3976:
	nop
.L3869:
	mov	QWORD PTR -8[rbp], -1
.L3870:
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -128[rbp], 0
	je	.L3977
	mov	QWORD PTR -592[rbp], -1
	jmp	.L3873
.L3977:
	nop
.L3872:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L3978
	cmp	BYTE PTR 40[rbp], 0
	sete	al
	mov	BYTE PTR -9[rbp], al
	jmp	.L3876
.L3978:
	nop
.L3875:
	mov	BYTE PTR -9[rbp], 0
.L3876:
	cmp	BYTE PTR -9[rbp], 0
	je	.L3979
	mov	rax, QWORD PTR 48[rbp]
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 48[rbp]
	add	rax, rdx
	sub	rax, 1
	mov	rdx, rax
	shr	rdx, 63
	add	rax, rdx
	sar	rax
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 33
	movzx	eax, BYTE PTR [rax]
	test	al, al
	jne	.L3980
	jmp	.L3880
.L3980:
	nop
.L3879:
	mov	rax, QWORD PTR -24[rbp]
	cmp	rax, QWORD PTR -32[rbp]
	setle	al
	movzx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR -24[rbp], rax
	setl	al
	movzx	eax, al
	neg	eax
	and	edx, eax
	mov	rax, QWORD PTR -32[rbp]
	not	rax
	shr	rax, 63
	movzx	eax, al
	neg	eax
	and	eax, edx
	test	eax, eax
	je	.L3981
	mov	rdx, QWORD PTR -32[rbp]
	mov	rax, QWORD PTR -24[rbp]
	add	rax, rdx
	sar	rax
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 321
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -152[rbp], rax
	cmp	QWORD PTR -152[rbp], 0
	je	.L3982
	jmp	[QWORD PTR -152[rbp]]
.L3982:
	nop
.L3884:
	mov	rax, QWORD PTR -136[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -144[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM11TEXT__get__Ev
	mov	QWORD PTR -160[rbp], rax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -160[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -164[rbp], eax
	cmp	DWORD PTR -164[rbp], 0
	jne	.L3983
	mov	rax, QWORD PTR -136[rbp]
	mov	QWORD PTR -592[rbp], rax
	jmp	.L3873
.L3983:
	nop
.L3886:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 323
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -184[rbp], rax
	cmp	QWORD PTR -184[rbp], 0
	je	.L3984
	jmp	[QWORD PTR -184[rbp]]
.L3984:
	nop
.L3888:
	mov	rax, QWORD PTR -136[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -176[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM11TEXT__get__Ev
	mov	QWORD PTR -192[rbp], rax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -192[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -196[rbp], eax
	cmp	DWORD PTR -196[rbp], 0
	jns	.L3985
	mov	rax, QWORD PTR -136[rbp]
	add	rax, 1
	mov	QWORD PTR -24[rbp], rax
	jmp	.L3891
.L3985:
	nop
.L3890:
	mov	rax, QWORD PTR -136[rbp]
	sub	rax, 1
	mov	QWORD PTR -32[rbp], rax
.L3891:
	jmp	.L3879
.L3981:
	nop
.L3882:
	mov	QWORD PTR -592[rbp], -1
	jmp	.L3873
.L3880:
.L3892:
	mov	rax, QWORD PTR -24[rbp]
	cmp	rax, QWORD PTR -32[rbp]
	setle	al
	movzx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR -24[rbp], rax
	setl	al
	movzx	eax, al
	neg	eax
	and	edx, eax
	mov	rax, QWORD PTR -32[rbp]
	not	rax
	shr	rax, 63
	movzx	eax, al
	neg	eax
	and	eax, edx
	test	eax, eax
	je	.L3986
	mov	rdx, QWORD PTR -32[rbp]
	mov	rax, QWORD PTR -24[rbp]
	add	rax, rdx
	sar	rax
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR -208[rbp]
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -224[rbp], rax
	mov	rax, QWORD PTR -224[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 333
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -232[rbp], rax
	cmp	QWORD PTR -232[rbp], 0
	je	.L3987
	jmp	[QWORD PTR -232[rbp]]
.L3987:
	nop
.L3896:
	mov	rax, QWORD PTR -136[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -224[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM11TEXT__get__Ev
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -240[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -248[rbp], rax
	mov	rax, QWORD PTR -248[rbp]
	mov	QWORD PTR -256[rbp], rax
	mov	rdx, QWORD PTR -216[rbp]
	mov	rax, QWORD PTR -256[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -260[rbp], eax
	cmp	DWORD PTR -260[rbp], 0
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -272[rbp], rax
	mov	rax, QWORD PTR -216[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -256[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -272[rbp], 0
	je	.L3988
	mov	rax, QWORD PTR -136[rbp]
	mov	QWORD PTR -592[rbp], rax
	jmp	.L3873
.L3988:
	nop
.L3898:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -280[rbp], rax
	mov	rax, QWORD PTR -280[rbp]
	mov	QWORD PTR -288[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -296[rbp], rax
	mov	rax, QWORD PTR -296[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 335
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -304[rbp], rax
	cmp	QWORD PTR -304[rbp], 0
	je	.L3989
	jmp	[QWORD PTR -304[rbp]]
.L3989:
	nop
.L3900:
	mov	rax, QWORD PTR -136[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -296[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM11TEXT__get__Ev
	mov	QWORD PTR -312[rbp], rax
	mov	rax, QWORD PTR -312[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -320[rbp], rax
	mov	rax, QWORD PTR -320[rbp]
	mov	QWORD PTR -328[rbp], rax
	mov	rdx, QWORD PTR -288[rbp]
	mov	rax, QWORD PTR -328[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -332[rbp], eax
	mov	eax, DWORD PTR -332[rbp]
	shr	eax, 31
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -344[rbp], rax
	mov	rax, QWORD PTR -288[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -328[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -344[rbp], 0
	je	.L3990
	mov	rax, QWORD PTR -136[rbp]
	add	rax, 1
	mov	QWORD PTR -24[rbp], rax
	jmp	.L3903
.L3990:
	nop
.L3902:
	mov	rax, QWORD PTR -136[rbp]
	sub	rax, 1
	mov	QWORD PTR -32[rbp], rax
.L3903:
	jmp	.L3880
.L3986:
	nop
.L3894:
	mov	QWORD PTR -592[rbp], -1
	jmp	.L3873
.L3979:
	nop
.L3878:
	cmp	BYTE PTR 40[rbp], 0
	je	.L3991
	cmp	BYTE PTR 32[rbp], 0
	je	.L3992
	mov	rax, QWORD PTR 48[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -352[rbp], rax
	jmp	.L3908
.L3995:
	nop
.L3909:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -360[rbp], rax
	mov	rax, QWORD PTR -360[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 347
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -368[rbp], rax
	cmp	QWORD PTR -368[rbp], 0
	je	.L3993
	jmp	[QWORD PTR -368[rbp]]
.L3993:
	nop
.L3911:
	mov	rax, QWORD PTR -40[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -360[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM11TEXT__get__Ev
	mov	QWORD PTR -376[rbp], rax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -376[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -380[rbp], eax
	cmp	DWORD PTR -380[rbp], 0
	jne	.L3994
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -592[rbp], rax
	jmp	.L3873
.L3913:
.L3994:
	nop
.L3914:
	add	QWORD PTR -40[rbp], 1
.L3908:
	mov	rax, QWORD PTR -40[rbp]
	cmp	rax, QWORD PTR -352[rbp]
	jle	.L3995
	nop
.L3915:
	jmp	.L3924
.L3992:
	nop
.L3907:
	mov	rax, QWORD PTR 48[rbp]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -392[rbp], rax
	jmp	.L3917
.L3998:
	nop
.L3918:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -400[rbp], rax
	mov	rax, QWORD PTR -400[rbp]
	mov	QWORD PTR -408[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -416[rbp], rax
	mov	rax, QWORD PTR -416[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 351
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -424[rbp], rax
	cmp	QWORD PTR -424[rbp], 0
	je	.L3996
	jmp	[QWORD PTR -424[rbp]]
.L3996:
	nop
.L3920:
	mov	rax, QWORD PTR -48[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -416[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM11TEXT__get__Ev
	mov	QWORD PTR -432[rbp], rax
	mov	rax, QWORD PTR -432[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -440[rbp], rax
	mov	rax, QWORD PTR -440[rbp]
	mov	QWORD PTR -448[rbp], rax
	mov	rdx, QWORD PTR -408[rbp]
	mov	rax, QWORD PTR -448[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -452[rbp], eax
	cmp	DWORD PTR -452[rbp], 0
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -464[rbp], rax
	mov	rax, QWORD PTR -408[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -448[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -464[rbp], 0
	je	.L3997
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -592[rbp], rax
	jmp	.L3873
.L3922:
.L3997:
	nop
.L3923:
	add	QWORD PTR -48[rbp], 1
.L3917:
	mov	rax, QWORD PTR -48[rbp]
	cmp	rax, QWORD PTR -392[rbp]
	jle	.L3998
.L3916:
	nop
.L3924:
	jmp	.L3945
.L3991:
	nop
.L3905:
	cmp	BYTE PTR 32[rbp], 0
	je	.L3999
	mov	rax, QWORD PTR 48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -472[rbp], rax
	jmp	.L3928
.L4002:
	nop
.L3929:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -480[rbp], rax
	mov	rax, QWORD PTR -480[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 357
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -488[rbp], rax
	cmp	QWORD PTR -488[rbp], 0
	je	.L4000
	jmp	[QWORD PTR -488[rbp]]
.L4000:
	nop
.L3931:
	mov	rax, QWORD PTR -56[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -480[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM11TEXT__get__Ev
	mov	QWORD PTR -496[rbp], rax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -496[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	ecx, 1
	call	fb_WstrInstr
	mov	QWORD PTR -504[rbp], rax
	cmp	QWORD PTR -504[rbp], 0
	je	.L4001
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -592[rbp], rax
	jmp	.L3873
.L3933:
.L4001:
	nop
.L3934:
	add	QWORD PTR -56[rbp], 1
.L3928:
	mov	rax, QWORD PTR -56[rbp]
	cmp	rax, QWORD PTR -472[rbp]
	jle	.L4002
	nop
.L3935:
	jmp	.L3945
.L3999:
	nop
.L3927:
	mov	rax, QWORD PTR 48[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -512[rbp], rax
	jmp	.L3936
.L4005:
	nop
.L3937:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -520[rbp], rax
	mov	rax, QWORD PTR -520[rbp]
	mov	QWORD PTR -528[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -536[rbp], rax
	mov	rax, QWORD PTR -536[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 361
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -544[rbp], rax
	cmp	QWORD PTR -544[rbp], 0
	je	.L4003
	jmp	[QWORD PTR -544[rbp]]
.L4003:
	nop
.L3939:
	mov	rax, QWORD PTR -64[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -536[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM11TEXT__get__Ev
	mov	QWORD PTR -552[rbp], rax
	mov	rax, QWORD PTR -552[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -560[rbp], rax
	mov	rax, QWORD PTR -560[rbp]
	mov	QWORD PTR -568[rbp], rax
	mov	rdx, QWORD PTR -528[rbp]
	mov	rax, QWORD PTR -568[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	ecx, 1
	call	fb_WstrInstr
	mov	QWORD PTR -576[rbp], rax
	mov	rax, QWORD PTR -576[rbp]
	mov	QWORD PTR -584[rbp], rax
	mov	rax, QWORD PTR -528[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -568[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -584[rbp], 0
	je	.L4004
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -592[rbp], rax
	jmp	.L3873
.L3941:
.L4004:
	nop
.L3942:
	add	QWORD PTR -64[rbp], 1
.L3936:
	mov	rax, QWORD PTR -64[rbp]
	cmp	rax, QWORD PTR -512[rbp]
	jle	.L4005
.L3925:
.L3943:
.L3944:
	nop
.L3945:
	mov	QWORD PTR -592[rbp], -1
	nop
.L3873:
	mov	rax, QWORD PTR -96[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -592[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC272:
	.ascii "INDEXOFKEY\0"
	.text
	.def	_ZN10DICTIONARY10INDEXOFKEYERKwPvb;	.scl	3;	.type	32;	.endef
_ZN10DICTIONARY10INDEXOFKEYERKwPvb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 608
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	eax, r9d
	mov	BYTE PTR 40[rbp], al
	mov	QWORD PTR -576[rbp], 0
	lea	rcx, .LC266[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	mov	QWORD PTR -120[rbp], rax
	lea	rcx, .LC272[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	mov	QWORD PTR -136[rbp], rax
.L4007:
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	fb_WstrTrim
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	lea	rdx, .LC77[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -156[rbp], eax
	cmp	DWORD PTR -156[rbp], 0
	je	.L4128
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	setle	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L4010
.L4128:
	nop
.L4009:
	mov	QWORD PTR -8[rbp], -1
.L4010:
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -168[rbp], 0
	je	.L4129
	mov	QWORD PTR -576[rbp], -1
	jmp	.L4094
.L4129:
	nop
.L4012:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 49
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L4130
	mov	QWORD PTR -16[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	sar	rax
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 32
	movzx	eax, BYTE PTR [rax]
	test	al, al
	jne	.L4131
	jmp	.L4017
.L4131:
	nop
.L4016:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	jg	.L4132
	mov	rdx, QWORD PTR -24[rbp]
	mov	rax, QWORD PTR -16[rbp]
	add	rax, rdx
	sar	rax
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 376
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -192[rbp], rax
	cmp	QWORD PTR -192[rbp], 0
	je	.L4133
	jmp	[QWORD PTR -192[rbp]]
.L4133:
	nop
.L4021:
	mov	rax, QWORD PTR -176[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -184[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM10KEY__get__Ev
	mov	QWORD PTR -200[rbp], rax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -200[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -204[rbp], eax
	cmp	DWORD PTR -204[rbp], 0
	jne	.L4134
	cmp	QWORD PTR 32[rbp], 0
	je	.L4135
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR -216[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 376
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -224[rbp], rax
	cmp	QWORD PTR -224[rbp], 0
	je	.L4136
	jmp	[QWORD PTR -224[rbp]]
.L4136:
	nop
.L4027:
	mov	rax, QWORD PTR -176[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -216[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR 32[rbp], rax
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -32[rbp], rax
	jmp	.L4028
.L4135:
	nop
.L4025:
	mov	QWORD PTR -32[rbp], -1
.L4028:
	cmp	QWORD PTR -32[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -40[rbp], rax
	jmp	.L4029
.L4134:
	nop
.L4023:
	mov	QWORD PTR -40[rbp], 0
.L4029:
	cmp	QWORD PTR -40[rbp], 0
	je	.L4137
	mov	rax, QWORD PTR -176[rbp]
	mov	QWORD PTR -576[rbp], rax
	jmp	.L4094
.L4137:
	nop
.L4031:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -232[rbp], rax
	mov	rax, QWORD PTR -232[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 378
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -240[rbp], rax
	cmp	QWORD PTR -240[rbp], 0
	je	.L4138
	jmp	[QWORD PTR -240[rbp]]
.L4138:
	nop
.L4033:
	mov	rax, QWORD PTR -176[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -232[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM10KEY__get__Ev
	mov	QWORD PTR -248[rbp], rax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -248[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -252[rbp], eax
	cmp	DWORD PTR -252[rbp], 0
	jns	.L4139
	mov	rax, QWORD PTR -176[rbp]
	add	rax, 1
	mov	QWORD PTR -16[rbp], rax
	jmp	.L4036
.L4139:
	nop
.L4035:
	mov	rax, QWORD PTR -176[rbp]
	sub	rax, 1
	mov	QWORD PTR -24[rbp], rax
.L4036:
	jmp	.L4016
.L4132:
	nop
.L4019:
	mov	QWORD PTR -576[rbp], -1
	jmp	.L4094
.L4017:
.L4037:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	jg	.L4140
	mov	rdx, QWORD PTR -24[rbp]
	mov	rax, QWORD PTR -16[rbp]
	add	rax, rdx
	sar	rax
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -264[rbp], rax
	mov	rax, QWORD PTR -264[rbp]
	mov	QWORD PTR -272[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -280[rbp], rax
	mov	rax, QWORD PTR -280[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 388
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -288[rbp], rax
	cmp	QWORD PTR -288[rbp], 0
	je	.L4141
	jmp	[QWORD PTR -288[rbp]]
.L4141:
	nop
.L4041:
	mov	rax, QWORD PTR -176[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -280[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM10KEY__get__Ev
	mov	QWORD PTR -296[rbp], rax
	mov	rax, QWORD PTR -296[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -304[rbp], rax
	mov	rax, QWORD PTR -304[rbp]
	mov	QWORD PTR -312[rbp], rax
	mov	rdx, QWORD PTR -272[rbp]
	mov	rax, QWORD PTR -312[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -316[rbp], eax
	cmp	DWORD PTR -316[rbp], 0
	jne	.L4142
	cmp	QWORD PTR 32[rbp], 0
	je	.L4143
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -328[rbp], rax
	mov	rax, QWORD PTR -328[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 388
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -336[rbp], rax
	cmp	QWORD PTR -336[rbp], 0
	je	.L4144
	jmp	[QWORD PTR -336[rbp]]
.L4144:
	nop
.L4047:
	mov	rax, QWORD PTR -176[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -328[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR 32[rbp], rax
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -48[rbp], rax
	jmp	.L4048
.L4143:
	nop
.L4045:
	mov	QWORD PTR -48[rbp], -1
.L4048:
	cmp	QWORD PTR -48[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -56[rbp], rax
	jmp	.L4049
.L4142:
	nop
.L4043:
	mov	QWORD PTR -56[rbp], 0
.L4049:
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -344[rbp], rax
	mov	rax, QWORD PTR -272[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -312[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -344[rbp], 0
	je	.L4145
	mov	rax, QWORD PTR -176[rbp]
	mov	QWORD PTR -576[rbp], rax
	jmp	.L4094
.L4145:
	nop
.L4051:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -352[rbp], rax
	mov	rax, QWORD PTR -352[rbp]
	mov	QWORD PTR -360[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -368[rbp], rax
	mov	rax, QWORD PTR -368[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 390
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -376[rbp], rax
	cmp	QWORD PTR -376[rbp], 0
	je	.L4146
	jmp	[QWORD PTR -376[rbp]]
.L4146:
	nop
.L4053:
	mov	rax, QWORD PTR -176[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -368[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM10KEY__get__Ev
	mov	QWORD PTR -384[rbp], rax
	mov	rax, QWORD PTR -384[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -392[rbp], rax
	mov	rax, QWORD PTR -392[rbp]
	mov	QWORD PTR -400[rbp], rax
	mov	rdx, QWORD PTR -360[rbp]
	mov	rax, QWORD PTR -400[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -404[rbp], eax
	mov	eax, DWORD PTR -404[rbp]
	shr	eax, 31
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -416[rbp], rax
	mov	rax, QWORD PTR -360[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -400[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -416[rbp], 0
	je	.L4147
	mov	rax, QWORD PTR -176[rbp]
	add	rax, 1
	mov	QWORD PTR -16[rbp], rax
	jmp	.L4056
.L4147:
	nop
.L4055:
	mov	rax, QWORD PTR -176[rbp]
	sub	rax, 1
	mov	QWORD PTR -24[rbp], rax
.L4056:
	jmp	.L4017
.L4140:
	nop
.L4039:
	mov	QWORD PTR -576[rbp], -1
	jmp	.L4094
.L4130:
	nop
.L4015:
	cmp	BYTE PTR 40[rbp], 0
	je	.L4148
	mov	QWORD PTR -64[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -424[rbp], rax
	jmp	.L4059
.L4154:
	nop
.L4060:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -432[rbp], rax
	mov	rax, QWORD PTR -432[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 401
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -440[rbp], rax
	cmp	QWORD PTR -440[rbp], 0
	je	.L4149
	jmp	[QWORD PTR -440[rbp]]
.L4149:
	nop
.L4062:
	mov	rax, QWORD PTR -64[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -432[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM10KEY__get__Ev
	mov	QWORD PTR -448[rbp], rax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -448[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -452[rbp], eax
	cmp	DWORD PTR -452[rbp], 0
	jne	.L4150
	cmp	QWORD PTR 32[rbp], 0
	je	.L4151
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -464[rbp], rax
	mov	rax, QWORD PTR -464[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 401
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -472[rbp], rax
	cmp	QWORD PTR -472[rbp], 0
	je	.L4152
	jmp	[QWORD PTR -472[rbp]]
.L4152:
	nop
.L4068:
	mov	rax, QWORD PTR -64[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -464[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR 32[rbp], rax
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -72[rbp], rax
	jmp	.L4069
.L4151:
	nop
.L4066:
	mov	QWORD PTR -72[rbp], -1
.L4069:
	cmp	QWORD PTR -72[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -80[rbp], rax
	jmp	.L4070
.L4150:
	nop
.L4064:
	mov	QWORD PTR -80[rbp], 0
.L4070:
	cmp	QWORD PTR -80[rbp], 0
	je	.L4153
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -576[rbp], rax
	jmp	.L4094
.L4072:
.L4073:
.L4153:
	nop
.L4074:
	add	QWORD PTR -64[rbp], 1
.L4059:
	mov	rax, QWORD PTR -64[rbp]
	cmp	rax, QWORD PTR -424[rbp]
	jle	.L4154
	nop
.L4075:
	jmp	.L4093
.L4148:
	nop
.L4058:
	mov	QWORD PTR -88[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -480[rbp], rax
	jmp	.L4077
.L4160:
	nop
.L4078:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -488[rbp], rax
	mov	rax, QWORD PTR -488[rbp]
	mov	QWORD PTR -496[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -504[rbp], rax
	mov	rax, QWORD PTR -504[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 407
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -512[rbp], rax
	cmp	QWORD PTR -512[rbp], 0
	je	.L4155
	jmp	[QWORD PTR -512[rbp]]
.L4155:
	nop
.L4080:
	mov	rax, QWORD PTR -88[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -504[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM10KEY__get__Ev
	mov	QWORD PTR -520[rbp], rax
	mov	rax, QWORD PTR -520[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -528[rbp], rax
	mov	rax, QWORD PTR -528[rbp]
	mov	QWORD PTR -536[rbp], rax
	mov	rdx, QWORD PTR -496[rbp]
	mov	rax, QWORD PTR -536[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -540[rbp], eax
	cmp	DWORD PTR -540[rbp], 0
	jne	.L4156
	cmp	QWORD PTR 32[rbp], 0
	je	.L4157
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -552[rbp], rax
	mov	rax, QWORD PTR -552[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 407
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -560[rbp], rax
	cmp	QWORD PTR -560[rbp], 0
	je	.L4158
	jmp	[QWORD PTR -560[rbp]]
.L4158:
	nop
.L4086:
	mov	rax, QWORD PTR -88[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -552[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR 32[rbp], rax
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -96[rbp], rax
	jmp	.L4087
.L4157:
	nop
.L4084:
	mov	QWORD PTR -96[rbp], -1
.L4087:
	cmp	QWORD PTR -96[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -104[rbp], rax
	jmp	.L4088
.L4156:
	nop
.L4082:
	mov	QWORD PTR -104[rbp], 0
.L4088:
	mov	rax, QWORD PTR -104[rbp]
	mov	QWORD PTR -568[rbp], rax
	mov	rax, QWORD PTR -496[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -536[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -568[rbp], 0
	je	.L4159
	mov	rax, QWORD PTR -88[rbp]
	mov	QWORD PTR -576[rbp], rax
	jmp	.L4094
.L4090:
.L4091:
.L4159:
	nop
.L4092:
	add	QWORD PTR -88[rbp], 1
.L4077:
	mov	rax, QWORD PTR -88[rbp]
	cmp	rax, QWORD PTR -480[rbp]
	jle	.L4160
.L4076:
	nop
.L4093:
	mov	QWORD PTR -576[rbp], -1
.L4013:
	nop
.L4094:
	mov	rax, QWORD PTR -136[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -576[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC273:
	.ascii "INDEXOFOBJECT\0"
	.text
	.def	_ZN10DICTIONARY13INDEXOFOBJECTEPv;	.scl	3;	.type	32;	.endef
_ZN10DICTIONARY13INDEXOFOBJECTEPv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -80[rbp], 0
	lea	rcx, .LC266[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rcx, .LC273[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
.L4162:
	cmp	QWORD PTR 24[rbp], 0
	je	.L4183
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	setle	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L4165
.L4183:
	nop
.L4164:
	mov	QWORD PTR -8[rbp], -1
.L4165:
	cmp	QWORD PTR -8[rbp], 0
	je	.L4184
	mov	QWORD PTR -80[rbp], -1
	jmp	.L4168
.L4184:
	nop
.L4167:
	mov	QWORD PTR -16[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -56[rbp], rax
	jmp	.L4169
.L4187:
	nop
.L4170:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 419
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	je	.L4185
	jmp	[QWORD PTR -72[rbp]]
.L4185:
	nop
.L4172:
	mov	rax, QWORD PTR -16[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -64[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR 24[rbp], rax
	jne	.L4186
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -80[rbp], rax
	jmp	.L4168
.L4174:
.L4186:
	nop
.L4175:
	add	QWORD PTR -16[rbp], 1
.L4169:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -56[rbp]
	jle	.L4187
	nop
.L4176:
	mov	QWORD PTR -80[rbp], -1
	nop
.L4168:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -80[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC274:
	.ascii "\11\0"
	.align 2
.LC275:
	.ascii " \0\0\0"
	.text
	.def	_ZN10DICTIONARY11TEXT__get__Ev;	.scl	3;	.type	32;	.endef
_ZN10DICTIONARY11TEXT__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 320
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -280[rbp], 0
	lea	rcx, .LC266[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC268[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L4189:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jg	.L4208
	lea	rax, .LC77[rip]
	mov	QWORD PTR -280[rbp], rax
	jmp	.L4202
.L4208:
	nop
.L4191:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	lea	rdx, .LC77[rip]
	mov	rcx, rax
	call	WLET
	mov	QWORD PTR -8[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -48[rbp], rax
	jmp	.L4193
.L4210:
	nop
.L4194:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	cmp	QWORD PTR -8[rbp], rax
	je	.L4209
	mov	rax, QWORD PTR -8[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM11TEXT__get__Ev
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM10KEY__get__Ev
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	r8d, 2
	lea	rdx, .LC274[rip]
	mov	rcx, rax
	call	fb_WstrConcatWA
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	lea	rdx, .LC275[rip]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	QWORD PTR -128[rbp], rax
	mov	rdx, QWORD PTR -64[rbp]
	mov	rax, QWORD PTR -128[rbp]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	mov	r8d, 2
	lea	rdx, .LC75[rip]
	mov	rcx, rax
	call	fb_WstrConcatWA
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	mov	r8d, 2
	lea	rdx, .LC74[rip]
	mov	rcx, rax
	call	fb_WstrConcatWA
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 8[rax]
	mov	rax, QWORD PTR -176[rbp]
	mov	rdx, rax
	call	WLET
	mov	rax, QWORD PTR -176[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -160[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -144[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -128[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -112[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -96[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L4198
.L4209:
	nop
.L4196:
	mov	rax, QWORD PTR -8[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM11TEXT__get__Ev
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM10KEY__get__Ev
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR -208[rbp]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR -216[rbp]
	mov	QWORD PTR -224[rbp], rax
	mov	rax, QWORD PTR -224[rbp]
	mov	r8d, 2
	lea	rdx, .LC274[rip]
	mov	rcx, rax
	call	fb_WstrConcatWA
	mov	QWORD PTR -232[rbp], rax
	mov	rax, QWORD PTR -232[rbp]
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -240[rbp]
	lea	rdx, .LC275[rip]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -248[rbp], rax
	mov	rax, QWORD PTR -248[rbp]
	mov	QWORD PTR -256[rbp], rax
	mov	rdx, QWORD PTR -192[rbp]
	mov	rax, QWORD PTR -256[rbp]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -264[rbp], rax
	mov	rax, QWORD PTR -264[rbp]
	mov	QWORD PTR -272[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 8[rax]
	mov	rax, QWORD PTR -272[rbp]
	mov	rdx, rax
	call	WLET
	mov	rax, QWORD PTR -272[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -256[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -240[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -224[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4197:
.L4198:
	add	QWORD PTR -8[rbp], 1
.L4193:
	mov	rax, QWORD PTR -8[rbp]
	cmp	rax, QWORD PTR -48[rbp]
	jle	.L4210
	nop
.L4199:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L4211
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 8[rax]
	mov	QWORD PTR -280[rbp], rax
	jmp	.L4202
.L4211:
	nop
.L4201:
	lea	rax, .LC77[rip]
	mov	QWORD PTR -280[rbp], rax
.L4192:
	nop
.L4202:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -280[rbp]
	leave
	ret
	.section .rdata,"dr"
	.align 2
.LC276:
	.ascii "\11\0 \0\0\0"
	.text
	.def	_ZN10DICTIONARY11TEXT__set__ERw;	.scl	3;	.type	32;	.endef
_ZN10DICTIONARY11TEXT__set__ERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 288
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L4213:
	lea	rcx, .LC266[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC268[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	lea	rdx, .LC77[rip]
	mov	rcx, rax
	call	WLET
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY5CLEAREv
	mov	QWORD PTR -256[rbp], 0
	mov	QWORD PTR -8[rbp], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	fb_WstrLen
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	jmp	.L4214
.L4250:
	nop
.L4215:
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 478
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -88[rbp], rax
	cmp	QWORD PTR -88[rbp], 0
	je	.L4244
	jmp	[QWORD PTR -88[rbp]]
.L4244:
	nop
.L4217:
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 478
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -104[rbp], rax
	cmp	QWORD PTR -104[rbp], 0
	je	.L4245
	jmp	[QWORD PTR -104[rbp]]
.L4245:
	nop
.L4219:
	mov	rax, QWORD PTR -8[rbp]
	add	rax, rax
	mov	rdx, rax
	mov	rax, QWORD PTR -80[rbp]
	add	rax, rdx
	movzx	eax, WORD PTR [rax]
	cmp	ax, 10
	sete	al
	movzx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR -8[rbp]
	add	rax, rax
	mov	rcx, rax
	mov	rax, QWORD PTR -96[rbp]
	add	rax, rcx
	movzx	eax, WORD PTR [rax]
	test	ax, ax
	sete	al
	movzx	eax, al
	neg	eax
	or	eax, edx
	test	eax, eax
	je	.L4246
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_WstrLen
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR -112[rbp]
	mov	r8, rdx
	mov	edx, 1
	mov	rcx, rax
	call	fb_WstrMid
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	rdx, .LC79[rip]
	mov	rcx, rax
	call	fb_WstrTrimAny
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 8[rax]
	mov	rax, QWORD PTR -144[rbp]
	mov	rdx, rax
	call	WLET
	mov	rax, QWORD PTR -144[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -128[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	lea	r8, .LC276[rip]
	mov	rdx, rax
	mov	ecx, 1
	call	fb_WstrInstr
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	mov	QWORD PTR -256[rbp], rax
	mov	ecx, 24
	call	malloc
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	mov	QWORD PTR -168[rbp], rax
	cmp	QWORD PTR -168[rbp], 0
	je	.L4247
	mov	rax, QWORD PTR -168[rbp]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEMC1Ev
	jmp	.L4223
.L4247:
	nop
.L4223:
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -256[rbp]
	test	rax, rax
	jle	.L4248
	mov	rax, QWORD PTR -256[rbp]
	lea	rdx, -1[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_WstrLeft
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -192[rbp]
	mov	QWORD PTR -200[rbp], rax
	mov	rdx, QWORD PTR -200[rbp]
	mov	rax, QWORD PTR -184[rbp]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM10KEY__set__ERw
	mov	rax, QWORD PTR -200[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -256[rbp]
	lea	rdx, 2[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	r8, -1
	mov	rcx, rax
	call	fb_WstrMid
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR -208[rbp]
	mov	QWORD PTR -216[rbp], rax
	mov	rdx, QWORD PTR -216[rbp]
	mov	rax, QWORD PTR -184[rbp]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM11TEXT__set__ERw
	mov	rax, QWORD PTR -216[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L4226
.L4248:
	nop
.L4225:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -184[rbp]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEM10KEY__set__ERw
.L4226:
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 16[rax]
	mov	rax, QWORD PTR -176[rbp]
	mov	rdx, rax
	call	_ZN4LIST3ADDEPv
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	lea	rdx, .LC77[rip]
	mov	rcx, rax
	call	WLET
	jmp	.L4230
.L4246:
	nop
.L4221:
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -224[rbp], rax
	mov	rax, QWORD PTR -224[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 493
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -232[rbp], rax
	cmp	QWORD PTR -232[rbp], 0
	je	.L4249
	jmp	[QWORD PTR -232[rbp]]
.L4249:
	nop
.L4229:
	mov	rax, QWORD PTR -8[rbp]
	add	rax, rax
	mov	rdx, rax
	mov	rax, QWORD PTR -224[rbp]
	add	rax, rdx
	movzx	eax, WORD PTR [rax]
	movzx	eax, ax
	mov	rdx, rax
	mov	ecx, 1
	call	fb_WstrChr
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -240[rbp]
	mov	QWORD PTR -248[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 8[rax]
	mov	rax, QWORD PTR -248[rbp]
	mov	r8d, 0
	mov	rdx, rax
	call	WADD
	mov	rax, QWORD PTR -248[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4227:
.L4230:
	add	QWORD PTR -8[rbp], 1
.L4214:
	mov	rax, QWORD PTR -8[rbp]
	cmp	rax, QWORD PTR -56[rbp]
	jle	.L4250
	nop
.L4231:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L4251
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 56[rax]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 496
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	je	.L4252
	jmp	[QWORD PTR -72[rbp]]
.L4252:
	nop
.L4235:
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L4236
.L4233:
.L4251:
	nop
.L4236:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN10DICTIONARYaSERw;	.scl	3;	.type	32;	.endef
_ZN10DICTIONARYaSERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L4254:
	lea	rcx, .LC266[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY11TEXT__set__ERw
.L4255:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN10DICTIONARYC1Ev;	.scl	3;	.type	32;	.endef
_ZN10DICTIONARYC1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L4257:
	lea	rcx, .LC266[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rcx, rax
	call	_ZN4LISTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 32
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 33
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 49
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rcx, rax
	call	_ZN4LIST5CLEAREv
.L4258:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN10DICTIONARYD1Ev;	.scl	3;	.type	32;	.endef
_ZN10DICTIONARYD1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
.L4260:
	lea	rcx, .LC266[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jle	.L4283
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -8[rbp], rax
	jmp	.L4263
.L4288:
	nop
.L4264:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 522
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L4284
	jmp	[QWORD PTR -56[rbp]]
.L4284:
	nop
.L4266:
	mov	rax, QWORD PTR -8[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -48[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L4285
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 522
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -64[rbp], rax
	cmp	QWORD PTR -64[rbp], 0
	je	.L4286
	jmp	[QWORD PTR -64[rbp]]
.L4286:
	nop
.L4270:
	mov	rax, QWORD PTR -8[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -48[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN14DICTIONARYITEMD1Ev
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	r8, .LC266[rip]
	mov	edx, 522
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	je	.L4287
	jmp	[QWORD PTR -72[rbp]]
.L4287:
	nop
.L4272:
	mov	rax, QWORD PTR -8[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -48[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	free
	jmp	.L4273
.L4268:
.L4285:
	nop
.L4273:
	sub	QWORD PTR -8[rbp], 1
.L4263:
	cmp	QWORD PTR -8[rbp], 0
	jns	.L4288
	nop
.L4274:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rcx, rax
	call	_ZN4LIST5CLEAREv
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10DICTIONARY5CLEAREv
	jmp	.L4275
.L4262:
.L4283:
	nop
.L4275:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L4289
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	free
	jmp	.L4278
.L4277:
.L4289:
	nop
.L4278:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rcx, rax
	call	_ZN4LISTD1Ev
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC277:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Canvas.bi\0"
	.text
	.def	_ZN2MY3SYS7DRAWING6CANVASaSERKS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CANVASaSERKS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L4291:
	lea	rcx, .LC277[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTaSERKS1_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 48[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 56[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 56[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 64[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 64[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 72[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 72[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 80[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 80[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 88[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 88[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 96[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	eax, DWORD PTR 96[rax]
	mov	DWORD PTR [rdx], eax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 100[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	eax, DWORD PTR 100[rax]
	mov	DWORD PTR [rdx], eax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 104[rax]
	mov	rax, QWORD PTR 24[rbp]
	movsd	xmm0, QWORD PTR 104[rax]
	movsd	QWORD PTR [rdx], xmm0
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 112[rax]
	mov	rax, QWORD PTR 24[rbp]
	movsd	xmm0, QWORD PTR 112[rax]
	movsd	QWORD PTR [rdx], xmm0
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 120[rax]
	mov	rax, QWORD PTR 24[rbp]
	movsd	xmm0, QWORD PTR 120[rax]
	movsd	QWORD PTR [rdx], xmm0
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 128[rax]
	mov	rax, QWORD PTR 24[rbp]
	movsd	xmm0, QWORD PTR 128[rax]
	movsd	QWORD PTR [rdx], xmm0
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 136[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 136[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 144[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 144[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 152[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 152[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 160[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 160[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 168[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 168[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 176[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 176
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING3PENaSERKS2_
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 280[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 280
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING5BRUSHaSERKS2_
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 376[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 376
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4FONTaSERS2_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 536[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 536[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 544[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 544[rax]
	mov	QWORD PTR [rdx], rax
.L4292:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC278:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Canvas.bas\0"
	.align 2
.LC279:
	.ascii "p\0e\0n\0\0\0"
	.align 2
.LC280:
	.ascii "b\0r\0u\0s\0h\0\0\0"
	.align 2
.LC281:
	.ascii "f\0o\0n\0t\0\0\0"
	.align 2
.LC282:
	.ascii "c\0l\0i\0p\0\0\0"
	.align 2
.LC283:
	.ascii "c\0o\0p\0y\0m\0o\0d\0e\0\0\0"
	.text
	.def	_ZN2MY3SYS7DRAWING6CANVAS12READPROPERTYER8FBSTRING;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CANVAS12READPROPERTYER8FBSTRING:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 336
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -264[rbp], 0
	lea	rcx, .LC278[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC152[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L4294:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -288[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -288[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC279[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L4330
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4297:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 176
	mov	QWORD PTR -264[rbp], rax
	lea	rax, -288[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4320
.L4330:
	nop
.L4296:
	lea	rax, -288[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	rdx, .LC280[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -84[rbp], eax
	cmp	DWORD PTR -84[rbp], 0
	jne	.L4331
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4301:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 280
	mov	QWORD PTR -264[rbp], rax
	lea	rax, -288[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4320
.L4331:
	nop
.L4300:
	lea	rax, -288[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	lea	rdx, .LC281[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -108[rbp], eax
	cmp	DWORD PTR -108[rbp], 0
	jne	.L4332
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4304:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 376
	mov	QWORD PTR -264[rbp], rax
	lea	rax, -288[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4320
.L4332:
	nop
.L4303:
	lea	rax, -288[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	rdx, .LC282[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -132[rbp], eax
	cmp	DWORD PTR -132[rbp], 0
	jne	.L4333
	mov	rax, QWORD PTR -128[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4307:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 536
	mov	QWORD PTR -264[rbp], rax
	lea	rax, -288[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4320
.L4333:
	nop
.L4306:
	lea	rax, -288[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	lea	rdx, .LC283[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -156[rbp], eax
	cmp	DWORD PTR -156[rbp], 0
	jne	.L4334
	mov	rax, QWORD PTR -152[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4310:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 544
	mov	QWORD PTR -264[rbp], rax
	lea	rax, -288[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4320
.L4334:
	nop
.L4309:
	lea	rax, -288[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	lea	rdx, .LC163[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -180[rbp], eax
	cmp	DWORD PTR -180[rbp], 0
	jne	.L4335
	mov	rax, QWORD PTR -176[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4313:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 168
	mov	QWORD PTR -264[rbp], rax
	lea	rax, -288[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4320
.L4335:
	nop
.L4312:
	lea	rax, -288[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -192[rbp]
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	lea	rdx, .LC167[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -204[rbp], eax
	cmp	DWORD PTR -204[rbp], 0
	jne	.L4336
	mov	rax, QWORD PTR -200[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4316:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING6CANVAS13HEIGHT__get__Ev
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 56[rax]
	mov	rax, QWORD PTR -216[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	QWORD PTR -264[rbp], rax
	lea	rax, -288[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4320
.L4336:
	nop
.L4315:
	lea	rax, -288[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -224[rbp], rax
	mov	rax, QWORD PTR -224[rbp]
	mov	QWORD PTR -232[rbp], rax
	mov	rax, QWORD PTR -232[rbp]
	lea	rdx, .LC166[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -236[rbp], eax
	cmp	DWORD PTR -236[rbp], 0
	jne	.L4337
	mov	rax, QWORD PTR -232[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4319:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING6CANVAS12WIDTH__get__Ev
	mov	QWORD PTR -248[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 56[rax]
	mov	rax, QWORD PTR -248[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	QWORD PTR -264[rbp], rax
	lea	rax, -288[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4320
.L4337:
	nop
.L4318:
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT12READPROPERTYER8FBSTRING
	mov	QWORD PTR -256[rbp], rax
	mov	rax, QWORD PTR -256[rbp]
	mov	QWORD PTR -264[rbp], rax
	lea	rax, -288[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	nop
.L4320:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -264[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING6CANVAS13WRITEPROPERTYER8FBSTRINGPv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CANVAS13WRITEPROPERTYER8FBSTRINGPv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 208
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	BYTE PTR -122[rbp], 0
	lea	rcx, .LC278[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC154[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L4339:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -160[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -160[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC282[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L4358
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4342:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	r8, .LC278[rip]
	mov	edx, 36
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L4359
	jmp	[QWORD PTR -80[rbp]]
.L4359:
	nop
.L4344:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 536[rax]
	mov	rax, QWORD PTR -72[rbp]
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR [rdx], al
	jmp	.L4352
.L4358:
	nop
.L4341:
	lea	rax, -160[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	lea	rdx, .LC283[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -100[rbp], eax
	cmp	DWORD PTR -100[rbp], 0
	jne	.L4360
	mov	rax, QWORD PTR -96[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4348:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	lea	r8, .LC278[rip]
	mov	edx, 37
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -120[rbp], rax
	cmp	QWORD PTR -120[rbp], 0
	je	.L4361
	jmp	[QWORD PTR -120[rbp]]
.L4361:
	nop
.L4350:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 544[rax]
	mov	rax, QWORD PTR -112[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L4352
.L4360:
	nop
.L4347:
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT13WRITEPROPERTYER8FBSTRINGPv
	mov	BYTE PTR -121[rbp], al
	movzx	eax, BYTE PTR -121[rbp]
	mov	BYTE PTR -122[rbp], al
	lea	rax, -160[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4351
.L4345:
.L4352:
	lea	rax, -160[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	mov	BYTE PTR -122[rbp], 1
	nop
.L4351:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -122[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC284:
	.ascii "BACKCOLOR\0"
	.text
	.def	_ZN2MY3SYS7DRAWING6CANVAS16BACKCOLOR__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CANVAS16BACKCOLOR__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L4363:
	lea	rcx, .LC278[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC284[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 64[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING6CANVAS16FILLCOLOR__set__Eu7INTEGER
.L4364:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC285:
	.ascii "FILLCOLOR\0"
	.text
	.def	_ZN2MY3SYS7DRAWING6CANVAS16FILLCOLOR__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CANVAS16FILLCOLOR__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L4366:
	lea	rcx, .LC278[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC285[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 72[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	edx, eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 168
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	SetBkColor
.L4367:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING6CANVAS12WIDTH__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CANVAS12WIDTH__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -48[rbp], 0
	lea	rcx, .LC278[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC191[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L4369:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L4375
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12WIDTH__get__Ev
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	jmp	.L4373
.L4371:
.L4372:
.L4375:
	nop
.L4373:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -48[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING6CANVAS13HEIGHT__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CANVAS13HEIGHT__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -48[rbp], 0
	lea	rcx, .LC278[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC192[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L4377:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L4383
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HEIGHT__get__Ev
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	jmp	.L4381
.L4379:
.L4380:
.L4383:
	nop
.L4381:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -48[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC286:
	.ascii "CTRL\0"
	.text
	.def	_ZN2MY3SYS7DRAWING6CANVAS11CTRL__set__EPNS0_14COMPONENTMODEL9COMPONENTE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CANVAS11CTRL__set__EPNS0_14COMPONENTMODEL9COMPONENTE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L4385:
	lea	rcx, .LC278[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC286[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	nop
.L4386:
.L4387:
.L4388:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC287:
	.ascii "GETDEVICE\0"
	.text
	.def	_ZN2MY3SYS7DRAWING6CANVAS9GETDEVICEEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CANVAS9GETDEVICEEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
.L4390:
	lea	rcx, .LC278[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC287[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	movzx	eax, BYTE PTR [rax]
	test	al, al
	jne	.L4405
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L4406
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -40[rbp], rax
	cmp	QWORD PTR -40[rbp], 0
	je	.L4407
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 536
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L4408
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	r8d, 34
	mov	edx, 0
	mov	rcx, rax
	call	GetDCEx
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 168[rax]
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR [rdx], rax
	jmp	.L4397
.L4408:
	nop
.L4396:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	GetDC
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 168[rax]
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR [rdx], rax
.L4397:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 520
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 168
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	SelectObject
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 256
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 168
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	SelectObject
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 352
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 168
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	SelectObject
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 176
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING3PEN11MODE__get__Ev
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 168
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	SetROP2
	jmp	.L4403
.L4392:
.L4398:
.L4399:
.L4400:
.L4401:
.L4402:
.L4405:
	nop
	jmp	.L4403
.L4406:
	nop
	jmp	.L4403
.L4407:
	nop
.L4403:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC288:
	.ascii "RELEASEDEVICE\0"
	.text
	.def	_ZN2MY3SYS7DRAWING6CANVAS13RELEASEDEVICEEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CANVAS13RELEASEDEVICEEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
.L4410:
	lea	rcx, .LC278[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC288[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	movzx	eax, BYTE PTR [rax]
	test	al, al
	jne	.L4418
	nop
.L4412:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L4419
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 168
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L4420
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 168
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	ReleaseDC
	jmp	.L4417
.L4413:
.L4416:
.L4418:
	nop
	jmp	.L4417
.L4419:
	nop
	jmp	.L4417
.L4420:
	nop
.L4417:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC289:
	.ascii "TRANSFERDOUBLEBUFFER\0"
	.text
	.def	_ZN2MY3SYS7DRAWING6CANVAS20TRANSFERDOUBLEBUFFEREv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CANVAS20TRANSFERDOUBLEBUFFEREv:
	push	rbp
	mov	rbp, rsp
	add	rsp, -128
	mov	QWORD PTR 16[rbp], rcx
.L4422:
	lea	rcx, .LC278[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC289[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING6CANVAS13HEIGHT__get__Ev
	mov	QWORD PTR -40[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING6CANVAS12WIDTH__get__Ev
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 144
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -40[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR -48[rbp]
	mov	r8d, eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 136
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR 64[rsp], 13369376
	mov	DWORD PTR 56[rsp], 0
	mov	DWORD PTR 48[rsp], 0
	mov	QWORD PTR 40[rsp], rdx
	mov	DWORD PTR 32[rsp], ecx
	mov	r9d, r8d
	mov	r8d, 0
	mov	edx, 0
	mov	rcx, rax
	call	BitBlt
.L4423:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC290:
	.ascii "RECTANGLE\0"
	.text
	.def	_ZN2MY3SYS7DRAWING6CANVAS9RECTANGLEEdddd;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CANVAS9RECTANGLEEdddd:
	push	rbp
	mov	rbp, rsp
	push	rdi
	push	rsi
	push	rbx
	sub	rsp, 104
	mov	QWORD PTR 16[rbp], rcx
	movsd	QWORD PTR 24[rbp], xmm1
	movsd	QWORD PTR 32[rbp], xmm2
	movsd	QWORD PTR 40[rbp], xmm3
.L4425:
	lea	rcx, .LC278[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	lea	rcx, .LC290[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	movzx	eax, BYTE PTR [rax]
	test	al, al
	jne	.L4431
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING6CANVAS9GETDEVICEEv
	jmp	.L4427
.L4431:
	nop
.L4427:
	cvtsd2ss	xmm0, QWORD PTR 48[rbp]
	call	SCALEY
	movd	eax, xmm0
	mov	DWORD PTR -68[rbp], eax
	cvtsd2ss	xmm0, QWORD PTR 40[rbp]
	call	SCALEX
	movd	eax, xmm0
	mov	DWORD PTR -72[rbp], eax
	cvtsd2ss	xmm0, QWORD PTR 32[rbp]
	call	SCALEY
	movd	eax, xmm0
	mov	DWORD PTR -76[rbp], eax
	cvtsd2ss	xmm0, QWORD PTR 24[rbp]
	call	SCALEX
	movd	eax, xmm0
	mov	DWORD PTR -80[rbp], eax
	cvtss2sd	xmm1, DWORD PTR -68[rbp]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	movsd	xmm0, QWORD PTR [rax]
	mulsd	xmm1, xmm0
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	movsd	xmm0, QWORD PTR [rax]
	addsd	xmm0, xmm1
	call	nearbyint
	cvttsd2si	ebx, xmm0
	cvtss2sd	xmm1, DWORD PTR -72[rbp]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	movsd	xmm0, QWORD PTR [rax]
	mulsd	xmm1, xmm0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 120
	movsd	xmm0, QWORD PTR [rax]
	addsd	xmm0, xmm1
	call	nearbyint
	cvttsd2si	edi, xmm0
	cvtss2sd	xmm1, DWORD PTR -76[rbp]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	movsd	xmm0, QWORD PTR [rax]
	mulsd	xmm1, xmm0
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	movsd	xmm0, QWORD PTR [rax]
	addsd	xmm0, xmm1
	call	nearbyint
	cvttsd2si	esi, xmm0
	cvtss2sd	xmm1, DWORD PTR -80[rbp]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	movsd	xmm0, QWORD PTR [rax]
	mulsd	xmm1, xmm0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 120
	movsd	xmm0, QWORD PTR [rax]
	addsd	xmm0, xmm1
	call	nearbyint
	cvttsd2si	edx, xmm0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 168
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR 32[rsp], ebx
	mov	r9d, edi
	mov	r8d, esi
	mov	rcx, rax
	call	Rectangle
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	movzx	eax, BYTE PTR [rax]
	test	al, al
	jne	.L4432
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING6CANVAS13RELEASEDEVICEEv
	jmp	.L4430
.L4429:
.L4432:
	nop
.L4430:
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	add	rsp, 104
	pop	rbx
	pop	rsi
	pop	rdi
	pop	rbp
	ret
	.section .rdata,"dr"
.LC291:
	.ascii "DRAW\0"
	.text
	.def	_ZN2MY3SYS7DRAWING6CANVAS4DRAWEddPv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CANVAS4DRAWEddPv:
	push	rbp
	mov	rbp, rsp
	push	r12
	push	rdi
	push	rsi
	push	rbx
	sub	rsp, 192
	mov	QWORD PTR 16[rbp], rcx
	movsd	QWORD PTR 24[rbp], xmm1
	movsd	QWORD PTR 32[rbp], xmm2
	mov	QWORD PTR 40[rbp], r9
.L4434:
	lea	rcx, .LC278[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	lea	rcx, .LC291[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	movzx	eax, BYTE PTR [rax]
	test	al, al
	jne	.L4440
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING6CANVAS9GETDEVICEEv
	jmp	.L4436
.L4440:
	nop
.L4436:
	mov	QWORD PTR -96[rbp], 0
	mov	QWORD PTR -104[rbp], 0
	lea	rax, -144[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 168
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	CreateCompatibleDC
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	rdx, QWORD PTR 40[rbp]
	mov	rcx, rax
	call	SelectObject
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	QWORD PTR -104[rbp], rax
	lea	rdx, -144[rbp]
	mov	rax, QWORD PTR 40[rbp]
	mov	r8, rdx
	mov	edx, 32
	mov	rcx, rax
	call	GetObjectW
	cvtsd2ss	xmm0, QWORD PTR 32[rbp]
	call	SCALEY
	movd	eax, xmm0
	mov	DWORD PTR -84[rbp], eax
	cvtsd2ss	xmm0, QWORD PTR 24[rbp]
	call	SCALEX
	movd	eax, xmm0
	mov	DWORD PTR -88[rbp], eax
	mov	rsi, QWORD PTR -96[rbp]
	lea	rax, -144[rbp]
	add	rax, 8
	mov	ebx, DWORD PTR [rax]
	lea	rax, -144[rbp]
	add	rax, 4
	mov	r12d, DWORD PTR [rax]
	mov	eax, DWORD PTR -84[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	edi, xmm0
	mov	eax, DWORD PTR -88[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	edx, xmm0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 168
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR 64[rsp], 13369376
	mov	DWORD PTR 56[rsp], 0
	mov	DWORD PTR 48[rsp], 0
	mov	QWORD PTR 40[rsp], rsi
	mov	DWORD PTR 32[rsp], ebx
	mov	r9d, r12d
	mov	r8d, edi
	mov	rcx, rax
	call	BitBlt
	mov	rdx, QWORD PTR -104[rbp]
	mov	rax, QWORD PTR -96[rbp]
	mov	rcx, rax
	call	SelectObject
	mov	rax, QWORD PTR -96[rbp]
	mov	rcx, rax
	call	DeleteDC
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	movzx	eax, BYTE PTR [rax]
	test	al, al
	jne	.L4441
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING6CANVAS13RELEASEDEVICEEv
	jmp	.L4439
.L4438:
.L4441:
	nop
.L4439:
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	add	rsp, 192
	pop	rbx
	pop	rsi
	pop	rdi
	pop	r12
	pop	rbp
	ret
	.section .rdata,"dr"
.LC292:
	.ascii "DRAWTRANSPARENT\0"
	.text
	.def	_ZN2MY3SYS7DRAWING6CANVAS15DRAWTRANSPARENTEddPvu8UINTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CANVAS15DRAWTRANSPARENTEddPvu8UINTEGER:
	push	rbp
	mov	rbp, rsp
	push	r12
	push	rdi
	push	rsi
	push	rbx
	sub	rsp, 416
	mov	QWORD PTR 16[rbp], rcx
	movsd	QWORD PTR 24[rbp], xmm1
	movsd	QWORD PTR 32[rbp], xmm2
	mov	QWORD PTR 40[rbp], r9
.L4443:
	lea	rcx, .LC278[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	lea	rcx, .LC292[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	movzx	eax, BYTE PTR [rax]
	test	al, al
	jne	.L4449
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING6CANVAS9GETDEVICEEv
	jmp	.L4445
.L4449:
	nop
.L4445:
	lea	rax, -240[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	DWORD PTR -244[rbp], 0
	mov	QWORD PTR -256[rbp], 0
	mov	QWORD PTR -264[rbp], 0
	mov	QWORD PTR -272[rbp], 0
	mov	QWORD PTR -280[rbp], 0
	mov	QWORD PTR -288[rbp], 0
	mov	QWORD PTR -296[rbp], 0
	mov	QWORD PTR -304[rbp], 0
	mov	QWORD PTR -312[rbp], 0
	mov	QWORD PTR -320[rbp], 0
	mov	QWORD PTR -328[rbp], 0
	mov	QWORD PTR -336[rbp], 0
	mov	QWORD PTR -344[rbp], 0
	mov	QWORD PTR -352[rbp], 0
	lea	rax, -360[rbp]
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 168
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	CreateCompatibleDC
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -344[rbp], rax
	mov	rax, QWORD PTR -344[rbp]
	mov	rdx, QWORD PTR 40[rbp]
	mov	rcx, rax
	call	SelectObject
	lea	rdx, -240[rbp]
	mov	rax, QWORD PTR 40[rbp]
	mov	r8, rdx
	mov	edx, 32
	mov	rcx, rax
	call	GetObjectW
	lea	rax, -360[rbp]
	mov	edx, DWORD PTR -236[rbp]
	mov	DWORD PTR [rax], edx
	lea	rax, -360[rbp]
	add	rax, 4
	mov	edx, DWORD PTR -232[rbp]
	mov	DWORD PTR [rax], edx
	mov	rax, QWORD PTR -344[rbp]
	lea	rdx, -360[rbp]
	mov	r8d, 1
	mov	rcx, rax
	call	DPtoLP
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 168
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	CreateCompatibleDC
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	QWORD PTR -328[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 168
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	CreateCompatibleDC
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	QWORD PTR -336[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 168
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	CreateCompatibleDC
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -320[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 168
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	CreateCompatibleDC
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	QWORD PTR -352[rbp], rax
	lea	rax, -360[rbp]
	add	rax, 4
	mov	edx, DWORD PTR [rax]
	lea	rax, -360[rbp]
	mov	eax, DWORD PTR [rax]
	mov	QWORD PTR 32[rsp], 0
	mov	r9d, 1
	mov	r8d, 1
	mov	ecx, eax
	call	CreateBitmap
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	mov	QWORD PTR -256[rbp], rax
	lea	rax, -360[rbp]
	add	rax, 4
	mov	edx, DWORD PTR [rax]
	lea	rax, -360[rbp]
	mov	eax, DWORD PTR [rax]
	mov	QWORD PTR 32[rsp], 0
	mov	r9d, 1
	mov	r8d, 1
	mov	ecx, eax
	call	CreateBitmap
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	QWORD PTR -264[rbp], rax
	lea	rax, -360[rbp]
	add	rax, 4
	mov	ecx, DWORD PTR [rax]
	lea	rax, -360[rbp]
	mov	edx, DWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 168
	mov	rax, QWORD PTR [rax]
	mov	r8d, ecx
	mov	rcx, rax
	call	CreateCompatibleBitmap
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	mov	QWORD PTR -272[rbp], rax
	lea	rax, -360[rbp]
	add	rax, 4
	mov	ecx, DWORD PTR [rax]
	lea	rax, -360[rbp]
	mov	edx, DWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 168
	mov	rax, QWORD PTR [rax]
	mov	r8d, ecx
	mov	rcx, rax
	call	CreateCompatibleBitmap
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	mov	QWORD PTR -280[rbp], rax
	mov	rdx, QWORD PTR -256[rbp]
	mov	rax, QWORD PTR -328[rbp]
	mov	rcx, rax
	call	SelectObject
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	mov	QWORD PTR -288[rbp], rax
	mov	rdx, QWORD PTR -264[rbp]
	mov	rax, QWORD PTR -336[rbp]
	mov	rcx, rax
	call	SelectObject
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	mov	QWORD PTR -296[rbp], rax
	mov	rdx, QWORD PTR -272[rbp]
	mov	rax, QWORD PTR -320[rbp]
	mov	rcx, rax
	call	SelectObject
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	mov	QWORD PTR -304[rbp], rax
	mov	rdx, QWORD PTR -280[rbp]
	mov	rax, QWORD PTR -352[rbp]
	mov	rcx, rax
	call	SelectObject
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -312[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 168
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	GetMapMode
	mov	DWORD PTR -172[rbp], eax
	mov	rax, QWORD PTR -344[rbp]
	mov	edx, DWORD PTR -172[rbp]
	mov	rcx, rax
	call	SetMapMode
	mov	rcx, QWORD PTR -344[rbp]
	lea	rax, -360[rbp]
	add	rax, 4
	mov	edx, DWORD PTR [rax]
	lea	rax, -360[rbp]
	mov	r8d, DWORD PTR [rax]
	mov	rax, QWORD PTR -352[rbp]
	mov	DWORD PTR 64[rsp], 13369376
	mov	DWORD PTR 56[rsp], 0
	mov	DWORD PTR 48[rsp], 0
	mov	QWORD PTR 40[rsp], rcx
	mov	DWORD PTR 32[rsp], edx
	mov	r9d, r8d
	mov	r8d, 0
	mov	edx, 0
	mov	rcx, rax
	call	BitBlt
	mov	rax, QWORD PTR 48[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR -344[rbp]
	mov	rcx, rax
	call	SetBkColor
	mov	DWORD PTR -176[rbp], eax
	mov	eax, DWORD PTR -176[rbp]
	mov	DWORD PTR -244[rbp], eax
	mov	rcx, QWORD PTR -344[rbp]
	lea	rax, -360[rbp]
	add	rax, 4
	mov	edx, DWORD PTR [rax]
	lea	rax, -360[rbp]
	mov	r8d, DWORD PTR [rax]
	mov	rax, QWORD PTR -336[rbp]
	mov	DWORD PTR 64[rsp], 13369376
	mov	DWORD PTR 56[rsp], 0
	mov	DWORD PTR 48[rsp], 0
	mov	QWORD PTR 40[rsp], rcx
	mov	DWORD PTR 32[rsp], edx
	mov	r9d, r8d
	mov	r8d, 0
	mov	edx, 0
	mov	rcx, rax
	call	BitBlt
	mov	edx, DWORD PTR -244[rbp]
	mov	rax, QWORD PTR -344[rbp]
	mov	rcx, rax
	call	SetBkColor
	mov	rcx, QWORD PTR -336[rbp]
	lea	rax, -360[rbp]
	add	rax, 4
	mov	edx, DWORD PTR [rax]
	lea	rax, -360[rbp]
	mov	r8d, DWORD PTR [rax]
	mov	rax, QWORD PTR -328[rbp]
	mov	DWORD PTR 64[rsp], 3342344
	mov	DWORD PTR 56[rsp], 0
	mov	DWORD PTR 48[rsp], 0
	mov	QWORD PTR 40[rsp], rcx
	mov	DWORD PTR 32[rsp], edx
	mov	r9d, r8d
	mov	r8d, 0
	mov	edx, 0
	mov	rcx, rax
	call	BitBlt
	mov	rax, QWORD PTR 32[rbp]
	movq	xmm0, rax
	call	nearbyint
	cvttsd2si	ebx, xmm0
	mov	rax, QWORD PTR 24[rbp]
	movq	xmm0, rax
	call	nearbyint
	cvttsd2si	r8d, xmm0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 168
	mov	rcx, QWORD PTR [rax]
	lea	rax, -360[rbp]
	add	rax, 4
	mov	edx, DWORD PTR [rax]
	lea	rax, -360[rbp]
	mov	r9d, DWORD PTR [rax]
	mov	rax, QWORD PTR -320[rbp]
	mov	DWORD PTR 64[rsp], 13369376
	mov	DWORD PTR 56[rsp], ebx
	mov	DWORD PTR 48[rsp], r8d
	mov	QWORD PTR 40[rsp], rcx
	mov	DWORD PTR 32[rsp], edx
	mov	r8d, 0
	mov	edx, 0
	mov	rcx, rax
	call	BitBlt
	mov	rcx, QWORD PTR -336[rbp]
	lea	rax, -360[rbp]
	add	rax, 4
	mov	edx, DWORD PTR [rax]
	lea	rax, -360[rbp]
	mov	r8d, DWORD PTR [rax]
	mov	rax, QWORD PTR -320[rbp]
	mov	DWORD PTR 64[rsp], 8913094
	mov	DWORD PTR 56[rsp], 0
	mov	DWORD PTR 48[rsp], 0
	mov	QWORD PTR 40[rsp], rcx
	mov	DWORD PTR 32[rsp], edx
	mov	r9d, r8d
	mov	r8d, 0
	mov	edx, 0
	mov	rcx, rax
	call	BitBlt
	mov	rcx, QWORD PTR -328[rbp]
	lea	rax, -360[rbp]
	add	rax, 4
	mov	edx, DWORD PTR [rax]
	lea	rax, -360[rbp]
	mov	r8d, DWORD PTR [rax]
	mov	rax, QWORD PTR -344[rbp]
	mov	DWORD PTR 64[rsp], 8913094
	mov	DWORD PTR 56[rsp], 0
	mov	DWORD PTR 48[rsp], 0
	mov	QWORD PTR 40[rsp], rcx
	mov	DWORD PTR 32[rsp], edx
	mov	r9d, r8d
	mov	r8d, 0
	mov	edx, 0
	mov	rcx, rax
	call	BitBlt
	mov	rcx, QWORD PTR -344[rbp]
	lea	rax, -360[rbp]
	add	rax, 4
	mov	edx, DWORD PTR [rax]
	lea	rax, -360[rbp]
	mov	r8d, DWORD PTR [rax]
	mov	rax, QWORD PTR -320[rbp]
	mov	DWORD PTR 64[rsp], 15597702
	mov	DWORD PTR 56[rsp], 0
	mov	DWORD PTR 48[rsp], 0
	mov	QWORD PTR 40[rsp], rcx
	mov	DWORD PTR 32[rsp], edx
	mov	r9d, r8d
	mov	r8d, 0
	mov	edx, 0
	mov	rcx, rax
	call	BitBlt
	mov	rsi, QWORD PTR -320[rbp]
	lea	rax, -360[rbp]
	add	rax, 4
	mov	ebx, DWORD PTR [rax]
	lea	rax, -360[rbp]
	mov	r12d, DWORD PTR [rax]
	mov	rax, QWORD PTR 32[rbp]
	movq	xmm0, rax
	call	nearbyint
	cvttsd2si	edi, xmm0
	mov	rax, QWORD PTR 24[rbp]
	movq	xmm0, rax
	call	nearbyint
	cvttsd2si	edx, xmm0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 168
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR 64[rsp], 13369376
	mov	DWORD PTR 56[rsp], 0
	mov	DWORD PTR 48[rsp], 0
	mov	QWORD PTR 40[rsp], rsi
	mov	DWORD PTR 32[rsp], ebx
	mov	r9d, r12d
	mov	r8d, edi
	mov	rcx, rax
	call	BitBlt
	mov	rcx, QWORD PTR -352[rbp]
	lea	rax, -360[rbp]
	add	rax, 4
	mov	edx, DWORD PTR [rax]
	lea	rax, -360[rbp]
	mov	r8d, DWORD PTR [rax]
	mov	rax, QWORD PTR -344[rbp]
	mov	DWORD PTR 64[rsp], 13369376
	mov	DWORD PTR 56[rsp], 0
	mov	DWORD PTR 48[rsp], 0
	mov	QWORD PTR 40[rsp], rcx
	mov	DWORD PTR 32[rsp], edx
	mov	r9d, r8d
	mov	r8d, 0
	mov	edx, 0
	mov	rcx, rax
	call	BitBlt
	mov	rdx, QWORD PTR -288[rbp]
	mov	rax, QWORD PTR -328[rbp]
	mov	rcx, rax
	call	SelectObject
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	mov	rcx, rax
	call	DeleteObject
	mov	rdx, QWORD PTR -296[rbp]
	mov	rax, QWORD PTR -336[rbp]
	mov	rcx, rax
	call	SelectObject
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -192[rbp]
	mov	rcx, rax
	call	DeleteObject
	mov	rdx, QWORD PTR -304[rbp]
	mov	rax, QWORD PTR -320[rbp]
	mov	rcx, rax
	call	SelectObject
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	mov	rcx, rax
	call	DeleteObject
	mov	rdx, QWORD PTR -312[rbp]
	mov	rax, QWORD PTR -352[rbp]
	mov	rcx, rax
	call	SelectObject
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR -208[rbp]
	mov	rcx, rax
	call	DeleteObject
	mov	rax, QWORD PTR -320[rbp]
	mov	rcx, rax
	call	DeleteDC
	mov	rax, QWORD PTR -328[rbp]
	mov	rcx, rax
	call	DeleteDC
	mov	rax, QWORD PTR -336[rbp]
	mov	rcx, rax
	call	DeleteDC
	mov	rax, QWORD PTR -352[rbp]
	mov	rcx, rax
	call	DeleteDC
	mov	rax, QWORD PTR -344[rbp]
	mov	rcx, rax
	call	DeleteDC
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	movzx	eax, BYTE PTR [rax]
	test	al, al
	jne	.L4450
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING6CANVAS13RELEASEDEVICEEv
	jmp	.L4448
.L4447:
.L4450:
	nop
.L4448:
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	add	rsp, 416
	pop	rbx
	pop	rsi
	pop	rdi
	pop	r12
	pop	rbp
	ret
	.section .rdata,"dr"
.LC293:
	.ascii "FONT_CREATE\0"
	.text
	.def	_ZN2MY3SYS7DRAWING6CANVAS11FONT_CREATEERNS1_4FONTE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CANVAS11FONT_CREATEERNS1_4FONTE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
.L4452:
	lea	rcx, .LC278[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC293[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4FONT13PARENT__get__Ev
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	add	rax, 168
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L4456
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 144
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -48[rbp]
	add	rax, 168
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	SelectObject
	jmp	.L4455
.L4454:
.L4456:
	nop
.L4455:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC294:
	.ascii "PEN_CREATE\0"
	.text
	.def	_ZN2MY3SYS7DRAWING6CANVAS10PEN_CREATEERNS1_3PENE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CANVAS10PEN_CREATEERNS1_3PENE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
.L4458:
	lea	rcx, .LC278[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC294[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 88[rax]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 168
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L4463
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 168
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	SelectObject
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING3PEN11MODE__get__Ev
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 168
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	SetROP2
	jmp	.L4462
.L4460:
.L4461:
.L4463:
	nop
.L4462:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC295:
	.ascii "BRUSH_CREATE\0"
	.text
	.def	_ZN2MY3SYS7DRAWING6CANVAS12BRUSH_CREATEERNS1_5BRUSHE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CANVAS12BRUSH_CREATEERNS1_5BRUSHE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
.L4465:
	lea	rcx, .LC278[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC295[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 80[rax]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 168
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L4469
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 168
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	SelectObject
	jmp	.L4468
.L4467:
.L4469:
	nop
.L4468:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 2
.LC296:
	.ascii "C\0a\0n\0v\0a\0s\0\0\0"
	.text
	.def	_ZN2MY3SYS7DRAWING6CANVASC1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CANVASC1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
.L4471:
	lea	rcx, .LC278[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 96
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 100
	mov	DWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 120
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 136
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 144
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 152
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 168
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 176
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING3PENC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 280
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING5BRUSHC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 376
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4FONTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 536
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 544
	mov	QWORD PTR [rax], 0
	lea	rdx, _ZTVN2MY3SYS7DRAWING6CANVASE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 536
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 32
	lea	rdx, .LC296[rip]
	mov	rcx, rax
	call	WLET
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 376
	mov	rdx, QWORD PTR 16[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4FONT13PARENT__set__EPNS0_6OBJECTE
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 528
	lea	rdx, _ZN2MY3SYS7DRAWING6CANVAS11FONT_CREATEERNS1_4FONTE[rip]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 264[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 272
	lea	rdx, _ZN2MY3SYS7DRAWING6CANVAS10PEN_CREATEERNS1_3PENE[rip]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 360[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 368
	lea	rdx, _ZN2MY3SYS7DRAWING6CANVAS12BRUSH_CREATEERNS1_5BRUSHE[rip]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 280
	mov	edx, 0
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING5BRUSH12STYLE__set__ENS1_11BRUSHSTYLESE
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	movsd	xmm0, QWORD PTR .LC297[rip]
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	movsd	xmm0, QWORD PTR .LC297[rip]
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	QWORD PTR [rax], 1
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING6CANVAS12WIDTH__get__Ev
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 96
	mov	rdx, QWORD PTR -40[rbp]
	mov	DWORD PTR [rax], edx
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING6CANVAS13HEIGHT__get__Ev
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 100
	mov	rdx, QWORD PTR -48[rbp]
	mov	DWORD PTR [rax], edx
.L4472:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING6CANVASD1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING6CANVASD1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	lea	rdx, _ZTVN2MY3SYS7DRAWING6CANVASE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rcx, .LC278[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L4474:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 168
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L4478
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING6CANVAS13RELEASEDEVICEEv
	jmp	.L4477
.L4476:
.L4478:
	nop
.L4477:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 376
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4FONTD1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 280
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING5BRUSHD1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 176
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING3PEND1Ev
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTD1Ev
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC298:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\ImageList.bi\0"
	.text
	.def	_ZN2MY3SYS5FORMS9IMAGELISTaSERKS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9IMAGELISTaSERKS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L4480:
	lea	rcx, .LC298[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENTaSERKS2_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 336[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 336[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 344[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 344[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 352[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 352[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 360[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 360[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 368[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 368[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 376[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 376[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 384[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 384[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 385[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 385[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 392[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 392
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPEaSERKS2_
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 728[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 728
	mov	rcx, rax
	call	_ZN10DICTIONARYaSERKS_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 792[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 792[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 800[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 800[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 808[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 808[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 816[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 816[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 824[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 824[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 832[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 832[rax]
	mov	QWORD PTR [rdx], rax
.L4481:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC299:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\ImageList.bas\0"
	.align 2
.LC300:
	.ascii "b\0a\0c\0k\0c\0o\0l\0o\0r\0\0\0"
	.align 2
.LC301:
	.ascii "c\0o\0u\0n\0t\0\0\0"
	.align 2
.LC302:
	.ascii "d\0r\0a\0w\0i\0n\0g\0s\0t\0y\0l\0e\0\0\0"
	.align 2
.LC303:
	.ascii "g\0r\0o\0w\0c\0o\0u\0n\0t\0\0\0"
	.align 8
.LC304:
	.ascii "i\0m\0a\0g\0e\0l\0i\0s\0t\0h\0a\0n\0d\0l\0e\0\0\0"
	.align 2
.LC305:
	.ascii "i\0m\0a\0g\0e\0w\0i\0d\0t\0h\0\0\0"
	.align 2
.LC306:
	.ascii "i\0m\0a\0g\0e\0h\0e\0i\0g\0h\0t\0\0\0"
	.align 2
.LC307:
	.ascii "i\0m\0a\0g\0e\0t\0y\0p\0e\0\0\0"
	.align 2
.LC308:
	.ascii "i\0n\0i\0t\0i\0a\0l\0c\0o\0u\0n\0t\0\0\0"
	.align 2
.LC309:
	.ascii "i\0t\0e\0m\0s\0\0\0"
	.align 2
.LC310:
	.ascii "m\0a\0s\0k\0c\0o\0l\0o\0r\0\0\0"
	.align 2
.LC311:
	.ascii "p\0a\0r\0e\0n\0t\0w\0i\0n\0d\0o\0w\0\0\0"
	.text
	.def	_ZN2MY3SYS5FORMS9IMAGELIST12READPROPERTYER8FBSTRING;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9IMAGELIST12READPROPERTYER8FBSTRING:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 432
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -360[rbp], 0
	lea	rcx, .LC299[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC152[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L4483:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -384[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -384[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC300[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L4535
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4486:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 360
	mov	QWORD PTR -360[rbp], rax
	lea	rax, -384[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4521
.L4535:
	nop
.L4485:
	lea	rax, -384[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	rdx, .LC301[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -84[rbp], eax
	cmp	DWORD PTR -84[rbp], 0
	jne	.L4536
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4490:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS9IMAGELIST12COUNT__get__Ev
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 376[rax]
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 376
	mov	QWORD PTR -360[rbp], rax
	lea	rax, -384[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4521
.L4536:
	nop
.L4489:
	lea	rax, -384[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	lea	rdx, .LC302[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -116[rbp], eax
	cmp	DWORD PTR -116[rbp], 0
	jne	.L4537
	mov	rax, QWORD PTR -112[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4493:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 824
	mov	QWORD PTR -360[rbp], rax
	lea	rax, -384[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4521
.L4537:
	nop
.L4492:
	lea	rax, -384[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	lea	rdx, .LC303[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -140[rbp], eax
	cmp	DWORD PTR -140[rbp], 0
	jne	.L4538
	mov	rax, QWORD PTR -136[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4496:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 808
	mov	QWORD PTR -360[rbp], rax
	lea	rax, -384[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4521
.L4538:
	nop
.L4495:
	lea	rax, -384[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	lea	rdx, .LC304[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -164[rbp], eax
	cmp	DWORD PTR -164[rbp], 0
	jne	.L4539
	mov	rax, QWORD PTR -160[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4499:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 792[rax]
	mov	QWORD PTR -360[rbp], rax
	lea	rax, -384[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4521
.L4539:
	nop
.L4498:
	lea	rax, -384[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	lea	rdx, .LC305[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -188[rbp], eax
	cmp	DWORD PTR -188[rbp], 0
	jne	.L4540
	mov	rax, QWORD PTR -184[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4502:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 344
	mov	QWORD PTR -360[rbp], rax
	lea	rax, -384[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4521
.L4540:
	nop
.L4501:
	lea	rax, -384[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR -208[rbp]
	lea	rdx, .LC306[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -212[rbp], eax
	cmp	DWORD PTR -212[rbp], 0
	jne	.L4541
	mov	rax, QWORD PTR -208[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4505:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 352
	mov	QWORD PTR -360[rbp], rax
	lea	rax, -384[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4521
.L4541:
	nop
.L4504:
	lea	rax, -384[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -224[rbp], rax
	mov	rax, QWORD PTR -224[rbp]
	mov	QWORD PTR -232[rbp], rax
	mov	rax, QWORD PTR -232[rbp]
	lea	rdx, .LC307[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -236[rbp], eax
	cmp	DWORD PTR -236[rbp], 0
	jne	.L4542
	mov	rax, QWORD PTR -232[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4508:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 816
	mov	QWORD PTR -360[rbp], rax
	lea	rax, -384[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4521
.L4542:
	nop
.L4507:
	lea	rax, -384[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -248[rbp], rax
	mov	rax, QWORD PTR -248[rbp]
	mov	QWORD PTR -256[rbp], rax
	mov	rax, QWORD PTR -256[rbp]
	lea	rdx, .LC308[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -260[rbp], eax
	cmp	DWORD PTR -260[rbp], 0
	jne	.L4543
	mov	rax, QWORD PTR -256[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4511:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 800
	mov	QWORD PTR -360[rbp], rax
	lea	rax, -384[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4521
.L4543:
	nop
.L4510:
	lea	rax, -384[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -272[rbp], rax
	mov	rax, QWORD PTR -272[rbp]
	mov	QWORD PTR -280[rbp], rax
	mov	rax, QWORD PTR -280[rbp]
	lea	rdx, .LC309[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -284[rbp], eax
	cmp	DWORD PTR -284[rbp], 0
	jne	.L4544
	mov	rax, QWORD PTR -280[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4514:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 728
	mov	rcx, rax
	call	_ZN10DICTIONARY11TEXT__get__Ev
	mov	QWORD PTR -296[rbp], rax
	mov	rax, QWORD PTR -296[rbp]
	mov	QWORD PTR -360[rbp], rax
	lea	rax, -384[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4521
.L4544:
	nop
.L4513:
	lea	rax, -384[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -304[rbp], rax
	mov	rax, QWORD PTR -304[rbp]
	mov	QWORD PTR -312[rbp], rax
	mov	rax, QWORD PTR -312[rbp]
	lea	rdx, .LC310[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -316[rbp], eax
	cmp	DWORD PTR -316[rbp], 0
	jne	.L4545
	mov	rax, QWORD PTR -312[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4517:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 368
	mov	QWORD PTR -360[rbp], rax
	lea	rax, -384[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4521
.L4545:
	nop
.L4516:
	lea	rax, -384[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -328[rbp], rax
	mov	rax, QWORD PTR -328[rbp]
	mov	QWORD PTR -336[rbp], rax
	mov	rax, QWORD PTR -336[rbp]
	lea	rdx, .LC311[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -340[rbp], eax
	cmp	DWORD PTR -340[rbp], 0
	jne	.L4546
	mov	rax, QWORD PTR -336[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4520:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 336[rax]
	mov	QWORD PTR -360[rbp], rax
	lea	rax, -384[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4521
.L4546:
	nop
.L4519:
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12READPROPERTYER8FBSTRING
	mov	QWORD PTR -352[rbp], rax
	mov	rax, QWORD PTR -352[rbp]
	mov	QWORD PTR -360[rbp], rax
	lea	rax, -384[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	nop
.L4521:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -360[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS9IMAGELIST13WRITEPROPERTYER8FBSTRINGPv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9IMAGELIST13WRITEPROPERTYER8FBSTRINGPv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 544
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	BYTE PTR -470[rbp], 0
	lea	rcx, .LC299[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC154[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L4548:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -496[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -496[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC300[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L4628
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4551:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	r8, .LC299[rip]
	mov	edx, 38
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L4629
	jmp	[QWORD PTR -80[rbp]]
.L4629:
	nop
.L4553:
	mov	rax, QWORD PTR -72[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS9IMAGELIST16BACKCOLOR__set__Eu7INTEGER
	jmp	.L4605
.L4628:
	nop
.L4550:
	lea	rax, -496[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	lea	rdx, .LC301[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -100[rbp], eax
	cmp	DWORD PTR -100[rbp], 0
	jne	.L4630
	mov	rax, QWORD PTR -96[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4557:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	lea	r8, .LC299[rip]
	mov	edx, 39
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -120[rbp], rax
	cmp	QWORD PTR -120[rbp], 0
	je	.L4631
	jmp	[QWORD PTR -120[rbp]]
.L4631:
	nop
.L4559:
	mov	rax, QWORD PTR -112[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS9IMAGELIST12COUNT__set__Eu7INTEGER
	jmp	.L4605
.L4630:
	nop
.L4556:
	lea	rax, -496[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	lea	rdx, .LC302[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -140[rbp], eax
	cmp	DWORD PTR -140[rbp], 0
	jne	.L4632
	mov	rax, QWORD PTR -136[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4562:
	lea	rax, 32[rbp]
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	lea	r8, .LC299[rip]
	mov	edx, 40
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -160[rbp], rax
	cmp	QWORD PTR -160[rbp], 0
	je	.L4633
	jmp	[QWORD PTR -160[rbp]]
.L4633:
	nop
.L4564:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 824[rax]
	mov	rax, QWORD PTR -152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L4605
.L4632:
	nop
.L4561:
	lea	rax, -496[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	lea	rdx, .LC303[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -180[rbp], eax
	cmp	DWORD PTR -180[rbp], 0
	jne	.L4634
	mov	rax, QWORD PTR -176[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4567:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -192[rbp]
	lea	r8, .LC299[rip]
	mov	edx, 41
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -200[rbp], rax
	cmp	QWORD PTR -200[rbp], 0
	je	.L4635
	jmp	[QWORD PTR -200[rbp]]
.L4635:
	nop
.L4569:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 808[rax]
	mov	rax, QWORD PTR -192[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L4605
.L4634:
	nop
.L4566:
	lea	rax, -496[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR -208[rbp]
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR -216[rbp]
	lea	rdx, .LC304[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -220[rbp], eax
	cmp	DWORD PTR -220[rbp], 0
	jne	.L4636
	mov	rax, QWORD PTR -216[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4572:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 792[rax]
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR [rdx], rax
	jmp	.L4605
.L4636:
	nop
.L4571:
	lea	rax, -496[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -232[rbp], rax
	mov	rax, QWORD PTR -232[rbp]
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -240[rbp]
	lea	rdx, .LC305[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -244[rbp], eax
	cmp	DWORD PTR -244[rbp], 0
	jne	.L4637
	mov	rax, QWORD PTR -240[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4575:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -256[rbp], rax
	mov	rax, QWORD PTR -256[rbp]
	lea	r8, .LC299[rip]
	mov	edx, 43
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -264[rbp], rax
	cmp	QWORD PTR -264[rbp], 0
	je	.L4638
	jmp	[QWORD PTR -264[rbp]]
.L4638:
	nop
.L4577:
	mov	rax, QWORD PTR -256[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS9IMAGELIST17IMAGEWIDTH__set__Eu7INTEGER
	jmp	.L4605
.L4637:
	nop
.L4574:
	lea	rax, -496[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -272[rbp], rax
	mov	rax, QWORD PTR -272[rbp]
	mov	QWORD PTR -280[rbp], rax
	mov	rax, QWORD PTR -280[rbp]
	lea	rdx, .LC306[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -284[rbp], eax
	cmp	DWORD PTR -284[rbp], 0
	jne	.L4639
	mov	rax, QWORD PTR -280[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4580:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -296[rbp], rax
	mov	rax, QWORD PTR -296[rbp]
	lea	r8, .LC299[rip]
	mov	edx, 44
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -304[rbp], rax
	cmp	QWORD PTR -304[rbp], 0
	je	.L4640
	jmp	[QWORD PTR -304[rbp]]
.L4640:
	nop
.L4582:
	mov	rax, QWORD PTR -296[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS9IMAGELIST18IMAGEHEIGHT__set__Eu7INTEGER
	jmp	.L4605
.L4639:
	nop
.L4579:
	lea	rax, -496[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -312[rbp], rax
	mov	rax, QWORD PTR -312[rbp]
	mov	QWORD PTR -320[rbp], rax
	mov	rax, QWORD PTR -320[rbp]
	lea	rdx, .LC307[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -324[rbp], eax
	cmp	DWORD PTR -324[rbp], 0
	jne	.L4641
	mov	rax, QWORD PTR -320[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4585:
	lea	rax, 32[rbp]
	mov	QWORD PTR -336[rbp], rax
	mov	rax, QWORD PTR -336[rbp]
	lea	r8, .LC299[rip]
	mov	edx, 45
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -344[rbp], rax
	cmp	QWORD PTR -344[rbp], 0
	je	.L4642
	jmp	[QWORD PTR -344[rbp]]
.L4642:
	nop
.L4587:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 816[rax]
	mov	rax, QWORD PTR -336[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L4605
.L4641:
	nop
.L4584:
	lea	rax, -496[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -352[rbp], rax
	mov	rax, QWORD PTR -352[rbp]
	mov	QWORD PTR -360[rbp], rax
	mov	rax, QWORD PTR -360[rbp]
	lea	rdx, .LC308[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -364[rbp], eax
	cmp	DWORD PTR -364[rbp], 0
	jne	.L4643
	mov	rax, QWORD PTR -360[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4590:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -376[rbp], rax
	mov	rax, QWORD PTR -376[rbp]
	lea	r8, .LC299[rip]
	mov	edx, 46
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -384[rbp], rax
	cmp	QWORD PTR -384[rbp], 0
	je	.L4644
	jmp	[QWORD PTR -384[rbp]]
.L4644:
	nop
.L4592:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 800[rax]
	mov	rax, QWORD PTR -376[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L4605
.L4643:
	nop
.L4589:
	lea	rax, -496[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -392[rbp], rax
	mov	rax, QWORD PTR -392[rbp]
	mov	QWORD PTR -400[rbp], rax
	mov	rax, QWORD PTR -400[rbp]
	lea	rdx, .LC309[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -404[rbp], eax
	cmp	DWORD PTR -404[rbp], 0
	jne	.L4645
	mov	rax, QWORD PTR -400[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4595:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, QWORD PTR 16[rbp]
	lea	rcx, 728[rdx]
	mov	rdx, rax
	call	_ZN10DICTIONARYaSERw
	jmp	.L4605
.L4645:
	nop
.L4594:
	lea	rax, -496[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -416[rbp], rax
	mov	rax, QWORD PTR -416[rbp]
	mov	QWORD PTR -424[rbp], rax
	mov	rax, QWORD PTR -424[rbp]
	lea	rdx, .LC310[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -428[rbp], eax
	cmp	DWORD PTR -428[rbp], 0
	jne	.L4646
	mov	rax, QWORD PTR -424[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4598:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -440[rbp], rax
	mov	rax, QWORD PTR -440[rbp]
	lea	r8, .LC299[rip]
	mov	edx, 48
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -448[rbp], rax
	cmp	QWORD PTR -448[rbp], 0
	je	.L4647
	jmp	[QWORD PTR -448[rbp]]
.L4647:
	nop
.L4600:
	mov	rax, QWORD PTR -440[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS9IMAGELIST16MASKCOLOR__set__Eu7INTEGER
	jmp	.L4605
.L4646:
	nop
.L4597:
	lea	rax, -496[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -456[rbp], rax
	mov	rax, QWORD PTR -456[rbp]
	mov	QWORD PTR -464[rbp], rax
	mov	rax, QWORD PTR -464[rbp]
	lea	rdx, .LC311[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -468[rbp], eax
	cmp	DWORD PTR -468[rbp], 0
	jne	.L4648
	mov	rax, QWORD PTR -464[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4603:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS9IMAGELIST19PARENTWINDOW__set__EPNS0_14COMPONENTMODEL9COMPONENTE
	jmp	.L4605
.L4648:
	nop
.L4602:
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13WRITEPROPERTYER8FBSTRINGPv
	mov	BYTE PTR -469[rbp], al
	movzx	eax, BYTE PTR -469[rbp]
	mov	BYTE PTR -470[rbp], al
	lea	rax, -496[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4604
.L4554:
.L4605:
	lea	rax, -496[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	mov	BYTE PTR -470[rbp], 1
	nop
.L4604:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -470[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC312:
	.ascii "PARENTWINDOW\0"
	.text
	.def	_ZN2MY3SYS5FORMS9IMAGELIST19PARENTWINDOW__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9IMAGELIST19PARENTWINDOW__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC299[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC312[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L4650:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 336[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L4651:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS9IMAGELIST19PARENTWINDOW__set__EPNS0_14COMPONENTMODEL9COMPONENTE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9IMAGELIST19PARENTWINDOW__set__EPNS0_14COMPONENTMODEL9COMPONENTE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L4654:
	lea	rcx, .LC299[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC312[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 336[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS9IMAGELIST12NOTIFYWINDOWEv
.L4655:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC313:
	.ascii "IMAGEWIDTH\0"
	.text
	.def	_ZN2MY3SYS5FORMS9IMAGELIST17IMAGEWIDTH__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9IMAGELIST17IMAGEWIDTH__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	push	rbx
	sub	rsp, 88
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L4657:
	lea	rcx, .LC299[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rcx, .LC313[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 344[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 352
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	SCALEY
	movd	eax, xmm0
	mov	DWORD PTR -52[rbp], eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 344
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	SCALEX
	movd	eax, xmm0
	mov	DWORD PTR -56[rbp], eax
	mov	eax, DWORD PTR -52[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	ebx, xmm0
	mov	eax, DWORD PTR -56[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	edx, xmm0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 792
	mov	rax, QWORD PTR [rax]
	mov	r8d, ebx
	mov	rcx, rax
	call	ImageList_SetIconSize
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS9IMAGELIST12NOTIFYWINDOWEv
.L4658:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	add	rsp, 88
	pop	rbx
	pop	rbp
	ret
	.section .rdata,"dr"
.LC314:
	.ascii "IMAGEHEIGHT\0"
	.text
	.def	_ZN2MY3SYS5FORMS9IMAGELIST18IMAGEHEIGHT__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9IMAGELIST18IMAGEHEIGHT__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	push	rbx
	sub	rsp, 88
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L4660:
	lea	rcx, .LC299[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rcx, .LC314[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 352[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 352
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	SCALEY
	movd	eax, xmm0
	mov	DWORD PTR -52[rbp], eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 344
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	SCALEX
	movd	eax, xmm0
	mov	DWORD PTR -56[rbp], eax
	mov	eax, DWORD PTR -52[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	ebx, xmm0
	mov	eax, DWORD PTR -56[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	edx, xmm0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 792
	mov	rax, QWORD PTR [rax]
	mov	r8d, ebx
	mov	rcx, rax
	call	ImageList_SetIconSize
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS9IMAGELIST12NOTIFYWINDOWEv
.L4661:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	add	rsp, 88
	pop	rbx
	pop	rbp
	ret
	.def	_ZN2MY3SYS5FORMS9IMAGELIST16BACKCOLOR__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9IMAGELIST16BACKCOLOR__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L4663:
	lea	rcx, .LC299[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC284[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 360[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 360
	mov	rax, QWORD PTR [rax]
	mov	edx, eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 792
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	ImageList_SetBkColor
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS9IMAGELIST12NOTIFYWINDOWEv
.L4664:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC315:
	.ascii "MASKCOLOR\0"
	.text
	.def	_ZN2MY3SYS5FORMS9IMAGELIST16MASKCOLOR__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9IMAGELIST16MASKCOLOR__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L4666:
	lea	rcx, .LC299[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC315[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 368[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS9IMAGELIST12NOTIFYWINDOWEv
.L4667:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS9IMAGELIST12COUNT__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9IMAGELIST12COUNT__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -48[rbp], 0
	lea	rcx, .LC299[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC269[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L4669:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 792
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	ImageList_GetImageCount
	mov	DWORD PTR -36[rbp], eax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 376[rax]
	mov	eax, DWORD PTR -36[rbp]
	cdqe
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 376[rax]
	mov	QWORD PTR -48[rbp], rax
	nop
.L4670:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -48[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS9IMAGELIST12COUNT__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9IMAGELIST12COUNT__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L4673:
	lea	rcx, .LC299[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC269[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 376[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 792
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	ImageList_SetImageCount
	mov	DWORD PTR -36[rbp], eax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 376[rax]
	mov	eax, DWORD PTR -36[rbp]
	cdqe
	mov	QWORD PTR [rdx], rax
.L4674:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS9IMAGELIST7INDEXOFERw;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9IMAGELIST7INDEXOFERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -48[rbp], 0
	lea	rcx, .LC299[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC263[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L4676:
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 728[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	r9d, 0
	mov	r8d, 0
	mov	rdx, rax
	call	_ZN10DICTIONARY10INDEXOFKEYERKwPvb
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	nop
.L4677:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -48[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC316:
	.ascii "NOTIFYWINDOW\0"
	.text
	.def	_ZN2MY3SYS5FORMS9IMAGELIST12NOTIFYWINDOWEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9IMAGELIST12NOTIFYWINDOWEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
.L4680:
	lea	rcx, .LC299[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC316[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS9IMAGELIST19PARENTWINDOW__get__Ev
	mov	QWORD PTR -40[rbp], rax
	cmp	QWORD PTR -40[rbp], 0
	je	.L4687
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS9IMAGELIST19PARENTWINDOW__get__Ev
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L4688
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS9IMAGELIST19PARENTWINDOW__get__Ev
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	r9d, 5
	mov	r8d, 0
	mov	edx, 0
	mov	rcx, rax
	call	RedrawWindow
	jmp	.L4686
.L4682:
.L4684:
.L4685:
.L4687:
	nop
	jmp	.L4686
.L4688:
	nop
.L4686:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS9IMAGELIST3ADDERNS0_7DRAWING10BITMAPTYPEES5_Rw;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9IMAGELIST3ADDERNS0_7DRAWING10BITMAPTYPEES5_Rw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
.L4690:
	lea	rcx, .LC299[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC258[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 32[rbp]
	add	rax, 112
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 112
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 792
	mov	rax, QWORD PTR [rax]
	mov	r8, rcx
	mov	rcx, rax
	call	ImageList_Add
	mov	DWORD PTR -36[rbp], eax
	cmp	DWORD PTR -36[rbp], -1
	je	.L4697
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 384
	mov	BYTE PTR [rax], 1
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 385
	movzx	eax, BYTE PTR [rax]
	test	al, al
	jne	.L4698
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 728[rax]
	mov	rax, QWORD PTR 40[rbp]
	mov	r9d, 0
	lea	r8, .LC77[rip]
	mov	rdx, rax
	call	_ZN10DICTIONARY3ADDERwS0_Pv
	jmp	.L4694
.L4698:
	nop
.L4694:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 384
	mov	BYTE PTR [rax], 0
	jmp	.L4696
.L4692:
.L4695:
.L4697:
	nop
.L4696:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS9IMAGELIST3ADDERNS0_7DRAWING4ICONERw;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9IMAGELIST3ADDERNS0_7DRAWING4ICONERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
.L4700:
	lea	rcx, .LC299[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC258[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 384
	mov	BYTE PTR [rax], 1
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 385
	movzx	eax, BYTE PTR [rax]
	test	al, al
	jne	.L4704
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 728[rax]
	mov	rax, QWORD PTR 32[rbp]
	mov	r9d, 0
	lea	r8, .LC77[rip]
	mov	rdx, rax
	call	_ZN10DICTIONARY3ADDERwS0_Pv
	jmp	.L4702
.L4704:
	nop
.L4702:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 384
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 80
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 792
	mov	rax, QWORD PTR [rax]
	mov	r8, rdx
	mov	edx, -1
	mov	rcx, rax
	call	ImageList_ReplaceIcon
.L4703:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS9IMAGELIST3ADDERNS0_7DRAWING6CURSORERw;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9IMAGELIST3ADDERNS0_7DRAWING6CURSORERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
.L4706:
	lea	rcx, .LC299[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC258[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 384
	mov	BYTE PTR [rax], 1
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 385
	movzx	eax, BYTE PTR [rax]
	test	al, al
	jne	.L4710
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 728[rax]
	mov	rax, QWORD PTR 32[rbp]
	mov	r9d, 0
	lea	r8, .LC77[rip]
	mov	rdx, rax
	call	_ZN10DICTIONARY3ADDERwS0_Pv
	jmp	.L4708
.L4710:
	nop
.L4708:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 384
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 104
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 792
	mov	rax, QWORD PTR [rax]
	mov	r8, rdx
	mov	edx, -1
	mov	rcx, rax
	call	ImageList_ReplaceIcon
.L4709:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS9IMAGELIST3ADDERwS3_Pv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9IMAGELIST3ADDERwS3_Pv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 608
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
.L4712:
	lea	rcx, .LC299[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	lea	rcx, .LC258[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 384
	mov	BYTE PTR [rax], 1
	mov	rax, QWORD PTR 40[rbp]
	mov	QWORD PTR -32[rbp], rax
	cmp	QWORD PTR 40[rbp], 0
	jne	.L4748
	mov	ecx, 0
	call	GetModuleHandleW
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -32[rbp], rax
	jmp	.L4714
.L4748:
	nop
.L4714:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 385
	mov	BYTE PTR [rax], 1
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -32[rbp]
	mov	r8d, 2
	mov	rcx, rax
	call	FindResourceW
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L4749
	lea	rax, -560[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPEC1Ev
	lea	rax, -160[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	rdx, QWORD PTR 24[rbp]
	lea	rax, -160[rbp]
	mov	r9d, 0
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA
	mov	rcx, QWORD PTR -32[rbp]
	lea	rdx, -160[rbp]
	lea	rax, -560[rbp]
	mov	QWORD PTR 40[rsp], 0
	mov	QWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8, rcx
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE20LOADFROMRESOURCENAMEER8FBSTRINGPvu7INTEGERS6_S6_
	lea	rax, -160[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 728[rax]
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 32[rbp]
	mov	r9d, 0
	mov	r8, rdx
	mov	rdx, rax
	call	_ZN10DICTIONARY3ADDERwS0_Pv
	mov	rcx, QWORD PTR 32[rbp]
	lea	rdx, -560[rbp]
	lea	rax, -560[rbp]
	mov	r9, rcx
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS9IMAGELIST3ADDERNS0_7DRAWING10BITMAPTYPEES5_Rw
	lea	rax, -560[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPED1Ev
	jmp	.L4717
.L4749:
	nop
.L4716:
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -32[rbp]
	lea	r8, .LC219[rip]
	mov	rcx, rax
	call	FindResourceW
	mov	QWORD PTR -88[rbp], rax
	cmp	QWORD PTR -88[rbp], 0
	jne	.L4750
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -32[rbp]
	mov	r8d, 10
	mov	rcx, rax
	call	FindResourceW
	mov	QWORD PTR -96[rbp], rax
	cmp	QWORD PTR -96[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L4720
.L4750:
	nop
.L4719:
	mov	QWORD PTR -8[rbp], -1
.L4720:
	cmp	QWORD PTR -8[rbp], 0
	je	.L4751
	lea	rax, -560[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPEC1Ev
	lea	rax, -192[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	rdx, QWORD PTR 24[rbp]
	lea	rax, -192[rbp]
	mov	r9d, 0
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA
	mov	rcx, QWORD PTR -32[rbp]
	lea	rdx, -192[rbp]
	lea	rax, -560[rbp]
	mov	QWORD PTR 40[rsp], 16777215
	mov	QWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8, rcx
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE20LOADFROMRESOURCENAMEER8FBSTRINGPvu7INTEGERS6_S6_
	lea	rax, -192[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 728[rax]
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 32[rbp]
	mov	r9d, 0
	mov	r8, rdx
	mov	rdx, rax
	call	_ZN10DICTIONARY3ADDERwS0_Pv
	mov	rdx, QWORD PTR 32[rbp]
	lea	rax, -560[rbp]
	mov	r9, rdx
	mov	r8d, 16777215
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS9IMAGELIST9ADDMASKEDERNS0_7DRAWING10BITMAPTYPEEu7INTEGERRw
	lea	rax, -560[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPED1Ev
	jmp	.L4717
.L4751:
	nop
.L4722:
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -32[rbp]
	mov	r8d, 3
	mov	rcx, rax
	call	FindResourceW
	mov	QWORD PTR -104[rbp], rax
	cmp	QWORD PTR -104[rbp], 0
	jne	.L4752
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -32[rbp]
	mov	r8d, 14
	mov	rcx, rax
	call	FindResourceW
	mov	QWORD PTR -112[rbp], rax
	cmp	QWORD PTR -112[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -16[rbp], rax
	jmp	.L4725
.L4752:
	nop
.L4724:
	mov	QWORD PTR -16[rbp], -1
.L4725:
	cmp	QWORD PTR -16[rbp], 0
	je	.L4753
	lea	rax, -560[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4ICONC1Ev
	mov	rcx, QWORD PTR -32[rbp]
	mov	rdx, QWORD PTR 24[rbp]
	lea	rax, -560[rbp]
	mov	QWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8, rcx
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4ICON20LOADFROMRESOURCENAMEERwPvu7INTEGERS5_
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 728[rax]
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 32[rbp]
	mov	r9d, 0
	mov	r8, rdx
	mov	rdx, rax
	call	_ZN10DICTIONARY3ADDERwS0_Pv
	mov	rdx, QWORD PTR 32[rbp]
	lea	rax, -560[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS9IMAGELIST3ADDERNS0_7DRAWING4ICONERw
	lea	rax, -560[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4ICOND1Ev
	jmp	.L4717
.L4753:
	nop
.L4727:
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -32[rbp]
	mov	r8d, 1
	mov	rcx, rax
	call	FindResourceW
	mov	QWORD PTR -120[rbp], rax
	cmp	QWORD PTR -120[rbp], 0
	jne	.L4754
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -32[rbp]
	mov	r8d, 12
	mov	rcx, rax
	call	FindResourceW
	mov	QWORD PTR -128[rbp], rax
	cmp	QWORD PTR -128[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -24[rbp], rax
	jmp	.L4730
.L4754:
	nop
.L4729:
	mov	QWORD PTR -24[rbp], -1
.L4730:
	cmp	QWORD PTR -24[rbp], 0
	je	.L4755
	lea	rax, -560[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING6CURSORC1Ev
	mov	rcx, QWORD PTR -32[rbp]
	mov	rdx, QWORD PTR 24[rbp]
	lea	rax, -560[rbp]
	mov	QWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8, rcx
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING6CURSOR20LOADFROMRESOURCENAMEERwPvu7INTEGERS5_
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 728[rax]
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 32[rbp]
	mov	r9d, 0
	mov	r8, rdx
	mov	rdx, rax
	call	_ZN10DICTIONARY3ADDERwS0_Pv
	mov	rdx, QWORD PTR 32[rbp]
	lea	rax, -560[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS9IMAGELIST3ADDERNS0_7DRAWING6CURSORERw
	lea	rax, -560[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING6CURSORD1Ev
	jmp	.L4717
.L4755:
	nop
.L4732:
	lea	rax, -560[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPEC1Ev
	lea	rax, -224[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	rdx, QWORD PTR 24[rbp]
	lea	rax, -224[rbp]
	mov	r9d, 0
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA
	mov	rcx, QWORD PTR 40[rbp]
	lea	rdx, -224[rbp]
	lea	rax, -560[rbp]
	mov	QWORD PTR 40[rsp], 0
	mov	QWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8, rcx
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE20LOADFROMRESOURCENAMEER8FBSTRINGPvu7INTEGERS6_S6_
	mov	BYTE PTR -129[rbp], al
	movzx	eax, BYTE PTR -129[rbp]
	mov	BYTE PTR -130[rbp], al
	lea	rax, -224[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	cmp	BYTE PTR -130[rbp], 0
	je	.L4756
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 728[rax]
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 32[rbp]
	mov	r9d, 0
	mov	r8, rdx
	mov	rdx, rax
	call	_ZN10DICTIONARY3ADDERwS0_Pv
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 344
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	SCALEX
	movd	eax, xmm0
	mov	DWORD PTR -136[rbp], eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 344
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	ucomiss	xmm0, DWORD PTR -136[rbp]
	jp	.L4735
	ucomiss	xmm0, DWORD PTR -136[rbp]
	je	.L4757
.L4735:
	mov	rdx, QWORD PTR 32[rbp]
	lea	rax, -560[rbp]
	mov	r9, rdx
	mov	r8d, 0
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS9IMAGELIST9ADDMASKEDERNS0_7DRAWING10BITMAPTYPEEu7INTEGERRw
	jmp	.L4739
.L4757:
	nop
.L4737:
	lea	rax, -560[rbp]
	add	rax, 112
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 792
	mov	rax, QWORD PTR [rax]
	mov	r8d, 0
	mov	rcx, rax
	call	ImageList_Add
	jmp	.L4739
.L4734:
.L4738:
.L4756:
	nop
.L4739:
	lea	rax, -560[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPED1Ev
.L4717:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 385
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 384
	mov	BYTE PTR [rax], 0
.L4740:
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC317:
	.ascii "ADDFROMFILE\0"
	.align 2
.LC318:
	.ascii "p\0n\0g\0\0\0"
	.align 2
.LC319:
	.ascii "i\0c\0o\0\0\0"
	.align 2
.LC320:
	.ascii "c\0u\0r\0\0\0"
	.text
	.def	_ZN2MY3SYS5FORMS9IMAGELIST11ADDFROMFILEERwS3_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9IMAGELIST11ADDFROMFILEERwS3_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 496
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
.L4759:
	lea	rcx, .LC299[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC317[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 384
	mov	BYTE PTR [rax], 1
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, -1
	lea	rdx, .LC212[rip]
	mov	rcx, rax
	call	fb_WstrInstrRev
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	rdx, 1[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, -1
	mov	rcx, rax
	call	fb_WstrMid
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrLen
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	rcx, rax
	call	fb_WstrAlloc
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rdx, QWORD PTR -80[rbp]
	mov	rax, QWORD PTR -104[rbp]
	mov	r8, rdx
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrAssign
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -104[rbp]
	lea	rdx, .LC213[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -116[rbp], eax
	cmp	DWORD PTR -116[rbp], 0
	jne	.L4775
	nop
.L4760:
	lea	rax, -464[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPEC1Ev
	mov	rdx, QWORD PTR 24[rbp]
	lea	rax, -464[rbp]
	mov	r9d, 0
	mov	r8d, 0
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE12LOADFROMFILEERwu7INTEGERS4_
	mov	rcx, QWORD PTR 32[rbp]
	lea	rdx, -464[rbp]
	lea	rax, -464[rbp]
	mov	r9, rcx
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS9IMAGELIST3ADDERNS0_7DRAWING10BITMAPTYPEES5_Rw
	lea	rax, -464[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPED1Ev
	jmp	.L4769
.L4775:
	nop
.L4761:
	mov	rax, QWORD PTR -104[rbp]
	lea	rdx, .LC318[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -120[rbp], eax
	cmp	DWORD PTR -120[rbp], 0
	jne	.L4776
	nop
.L4763:
	lea	rax, -464[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPEC1Ev
	mov	rdx, QWORD PTR 24[rbp]
	lea	rax, -464[rbp]
	mov	r9d, 0
	mov	r8d, 0
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE12LOADFROMFILEERwu7INTEGERS4_
	mov	rdx, QWORD PTR 32[rbp]
	lea	rax, -464[rbp]
	mov	r9, rdx
	mov	r8d, 0
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS9IMAGELIST9ADDMASKEDERNS0_7DRAWING10BITMAPTYPEEu7INTEGERRw
	lea	rax, -464[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPED1Ev
	jmp	.L4769
.L4776:
	nop
.L4764:
	mov	rax, QWORD PTR -104[rbp]
	lea	rdx, .LC319[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -124[rbp], eax
	cmp	DWORD PTR -124[rbp], 0
	jne	.L4777
	nop
.L4765:
	lea	rax, -464[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4ICONC1Ev
	mov	rdx, QWORD PTR 24[rbp]
	lea	rax, -464[rbp]
	mov	r9d, 0
	mov	r8d, 0
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4ICON12LOADFROMFILEERwu7INTEGERS4_
	mov	rdx, QWORD PTR 32[rbp]
	lea	rax, -464[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS9IMAGELIST3ADDERNS0_7DRAWING4ICONERw
	lea	rax, -464[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4ICOND1Ev
	jmp	.L4769
.L4777:
	nop
.L4766:
	mov	rax, QWORD PTR -104[rbp]
	lea	rdx, .LC320[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -128[rbp], eax
	cmp	DWORD PTR -128[rbp], 0
	jne	.L4778
	nop
.L4767:
	lea	rax, -464[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING6CURSORC1Ev
	mov	rdx, QWORD PTR 24[rbp]
	lea	rax, -464[rbp]
	mov	r9d, 0
	mov	r8d, 0
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING6CURSOR12LOADFROMFILEERwu7INTEGERS4_
	mov	rdx, QWORD PTR 32[rbp]
	lea	rax, -464[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS9IMAGELIST3ADDERNS0_7DRAWING6CURSORERw
	lea	rax, -464[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING6CURSORD1Ev
	jmp	.L4769
.L4778:
	nop
.L4768:
	lea	rax, -464[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPEC1Ev
	mov	rdx, QWORD PTR 24[rbp]
	lea	rax, -464[rbp]
	mov	r9d, 0
	mov	r8d, 0
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE12LOADFROMFILEERwu7INTEGERS4_
	mov	rcx, QWORD PTR 32[rbp]
	lea	rdx, -464[rbp]
	lea	rax, -464[rbp]
	mov	r9, rcx
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS9IMAGELIST3ADDERNS0_7DRAWING10BITMAPTYPEES5_Rw
	lea	rax, -464[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPED1Ev
.L4762:
.L4769:
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 384
	mov	BYTE PTR [rax], 0
.L4770:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC321:
	.ascii "ADDMASKED\0"
	.text
	.def	_ZN2MY3SYS5FORMS9IMAGELIST9ADDMASKEDERNS0_7DRAWING10BITMAPTYPEEu7INTEGERRw;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9IMAGELIST9ADDMASKEDERNS0_7DRAWING10BITMAPTYPEEu7INTEGERRw:
	push	rbp
	mov	rbp, rsp
	push	r12
	push	rdi
	push	rsi
	push	rbx
	sub	rsp, 336
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
.L4780:
	lea	rcx, .LC299[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	lea	rcx, .LC321[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 384
	mov	BYTE PTR [rax], 1
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 385
	movzx	eax, BYTE PTR [rax]
	test	al, al
	jne	.L4809
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 728[rax]
	mov	rax, QWORD PTR 40[rbp]
	mov	r9d, 0
	lea	r8, .LC77[rip]
	mov	rdx, rax
	call	_ZN10DICTIONARY3ADDERwS0_Pv
	jmp	.L4782
.L4809:
	nop
.L4782:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 384
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE12WIDTH__get__Ev
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 344
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	SCALEX
	movd	eax, xmm0
	mov	DWORD PTR -84[rbp], eax
	cvtsi2ss	xmm0, QWORD PTR -80[rbp]
	ucomiss	xmm0, DWORD PTR -84[rbp]
	jp	.L4810
	ucomiss	xmm0, DWORD PTR -84[rbp]
	jne	.L4810
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE13HEIGHT__get__Ev
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 352
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	SCALEY
	movd	eax, xmm0
	mov	DWORD PTR -100[rbp], eax
	cvtsi2ss	xmm0, QWORD PTR -96[rbp]
	ucomiss	xmm0, DWORD PTR -100[rbp]
	setp	al
	mov	edx, 1
	ucomiss	xmm0, DWORD PTR -100[rbp]
	cmovne	eax, edx
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -40[rbp], rax
	jmp	.L4786
.L4810:
	nop
.L4785:
	mov	QWORD PTR -40[rbp], -1
.L4786:
	cmp	QWORD PTR -40[rbp], 0
	je	.L4811
	mov	QWORD PTR -216[rbp], 0
	call	GetDesktopWindow
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	mov	QWORD PTR -120[rbp], rax
	cmp	QWORD PTR -120[rbp], 0
	je	.L4812
	mov	rax, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	GetDC
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	mov	QWORD PTR -136[rbp], rax
	cmp	QWORD PTR -136[rbp], 0
	je	.L4813
	mov	rax, QWORD PTR -136[rbp]
	mov	rcx, rax
	call	CreateCompatibleDC
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	mov	QWORD PTR -152[rbp], rax
	cmp	QWORD PTR -152[rbp], 0
	jne	.L4814
	mov	rdx, QWORD PTR -136[rbp]
	mov	rax, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	ReleaseDC
	jmp	.L4803
.L4814:
	nop
.L4793:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 352
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	SCALEY
	movd	eax, xmm0
	mov	DWORD PTR -156[rbp], eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 344
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	SCALEX
	movd	eax, xmm0
	mov	DWORD PTR -160[rbp], eax
	mov	eax, DWORD PTR -156[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	ebx, xmm0
	mov	eax, DWORD PTR -160[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	edx, xmm0
	mov	rax, QWORD PTR -136[rbp]
	mov	r8d, ebx
	mov	rcx, rax
	call	CreateCompatibleBitmap
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR -216[rbp]
	test	rax, rax
	jne	.L4815
	mov	rax, QWORD PTR -152[rbp]
	mov	rcx, rax
	call	DeleteDC
	mov	rdx, QWORD PTR -136[rbp]
	mov	rax, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	ReleaseDC
	jmp	.L4803
.L4815:
	nop
.L4795:
	mov	rdx, QWORD PTR -216[rbp]
	mov	rax, QWORD PTR -152[rbp]
	mov	rcx, rax
	call	SelectObject
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	mov	QWORD PTR -184[rbp], rax
	cmp	QWORD PTR -184[rbp], 0
	je	.L4816
	mov	QWORD PTR -224[rbp], 0
	mov	QWORD PTR -232[rbp], 0
	lea	rax, -272[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	rax, QWORD PTR -136[rbp]
	mov	rcx, rax
	call	CreateCompatibleDC
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -192[rbp]
	mov	QWORD PTR -224[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 112
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -224[rbp]
	mov	rcx, rax
	call	SelectObject
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	mov	QWORD PTR -232[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 112
	mov	rax, QWORD PTR [rax]
	lea	rdx, -272[rbp]
	mov	r8, rdx
	mov	edx, 32
	mov	rcx, rax
	call	GetObjectW
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 352
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	SCALEY
	movd	eax, xmm0
	mov	DWORD PTR -204[rbp], eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 344
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	SCALEX
	movd	eax, xmm0
	mov	DWORD PTR -208[rbp], eax
	lea	rax, -272[rbp]
	add	rax, 8
	mov	r12d, DWORD PTR [rax]
	lea	rax, -272[rbp]
	add	rax, 4
	mov	edi, DWORD PTR [rax]
	mov	rsi, QWORD PTR -224[rbp]
	mov	eax, DWORD PTR -204[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	ebx, xmm0
	mov	eax, DWORD PTR -208[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	edx, xmm0
	mov	rax, QWORD PTR -152[rbp]
	mov	DWORD PTR 80[rsp], 13369376
	mov	DWORD PTR 72[rsp], r12d
	mov	DWORD PTR 64[rsp], edi
	mov	DWORD PTR 56[rsp], 0
	mov	DWORD PTR 48[rsp], 0
	mov	QWORD PTR 40[rsp], rsi
	mov	DWORD PTR 32[rsp], ebx
	mov	r9d, edx
	mov	r8d, 0
	mov	edx, 0
	mov	rcx, rax
	call	StretchBlt
	mov	rdx, QWORD PTR -232[rbp]
	mov	rax, QWORD PTR -224[rbp]
	mov	rcx, rax
	call	SelectObject
	mov	rdx, QWORD PTR -184[rbp]
	mov	rax, QWORD PTR -152[rbp]
	mov	rcx, rax
	call	SelectObject
	mov	rax, QWORD PTR -224[rbp]
	mov	rcx, rax
	call	DeleteDC
	mov	rax, QWORD PTR -152[rbp]
	mov	rcx, rax
	call	DeleteDC
	mov	rdx, QWORD PTR -136[rbp]
	mov	rax, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	ReleaseDC
	jmp	.L4803
.L4790:
.L4797:
.L4798:
.L4799:
.L4800:
.L4801:
.L4802:
.L4812:
	nop
	jmp	.L4803
.L4813:
	nop
	jmp	.L4803
.L4816:
	nop
.L4803:
	mov	rax, QWORD PTR 32[rbp]
	mov	ecx, eax
	mov	rdx, QWORD PTR -216[rbp]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 792
	mov	rax, QWORD PTR [rax]
	mov	r8d, ecx
	mov	rcx, rax
	call	ImageList_AddMasked
	jmp	.L4804
.L4811:
	nop
.L4788:
	mov	rax, QWORD PTR 32[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 112
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 792
	mov	rax, QWORD PTR [rax]
	mov	r8d, ecx
	mov	rcx, rax
	call	ImageList_AddMasked
.L4804:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS9IMAGELIST12NOTIFYWINDOWEv
.L4805:
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	add	rsp, 336
	pop	rbx
	pop	rsi
	pop	rdi
	pop	r12
	pop	rbp
	ret
	.def	_ZN2MY3SYS5FORMS9IMAGELIST6REMOVEEu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9IMAGELIST6REMOVEEu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L4818:
	lea	rcx, .LC299[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC261[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 384
	mov	BYTE PTR [rax], 1
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 728[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	call	_ZN10DICTIONARY6REMOVEEu7INTEGER
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 384
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 792
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	ImageList_Remove
.L4819:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC322:
	.ascii "GETBITMAP\0"
	.text
	.def	_ZN2MY3SYS5FORMS9IMAGELIST9GETBITMAPEu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9IMAGELIST9GETBITMAPEu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
.L4821:
	lea	rcx, .LC299[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC322[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rax, -80[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	QWORD PTR 32[rax], 0
	mov	rax, QWORD PTR 32[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 792
	mov	rax, QWORD PTR [rax]
	lea	rdx, -80[rbp]
	mov	r8, rdx
	mov	edx, ecx
	mov	rcx, rax
	call	ImageList_GetImageInfo
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPEC1Ev
	lea	rax, -80[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPEaSEP9HBITMAP__
	nop
.L4822:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR 16[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC323:
	.ascii "GETMASK\0"
	.text
	.def	_ZN2MY3SYS5FORMS9IMAGELIST7GETMASKEu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9IMAGELIST7GETMASKEu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
.L4825:
	lea	rcx, .LC299[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC323[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rax, -80[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	QWORD PTR 32[rax], 0
	mov	rax, QWORD PTR 32[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 792
	mov	rax, QWORD PTR [rax]
	lea	rdx, -80[rbp]
	mov	r8, rdx
	mov	edx, ecx
	mov	rcx, rax
	call	ImageList_GetImageInfo
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPEC1Ev
	lea	rax, -80[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPEaSEP9HBITMAP__
	nop
.L4826:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR 16[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC324:
	.ascii "GETICON\0"
	.text
	.def	_ZN2MY3SYS5FORMS9IMAGELIST7GETICONEu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9IMAGELIST7GETICONEu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
.L4829:
	lea	rcx, .LC299[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC324[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4ICONC1Ev
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 824
	mov	rax, QWORD PTR [rax]
	mov	edx, eax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 816
	mov	rax, QWORD PTR [rax]
	or	eax, edx
	mov	ecx, eax
	mov	rax, QWORD PTR 32[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 792
	mov	rax, QWORD PTR [rax]
	mov	r8d, ecx
	mov	rcx, rax
	call	ImageList_GetIcon
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING4ICONaSEP7HICON__
	nop
.L4830:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR 16[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC325:
	.ascii "GETCURSOR\0"
	.text
	.def	_ZN2MY3SYS5FORMS9IMAGELIST9GETCURSOREu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9IMAGELIST9GETCURSOREu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
.L4833:
	lea	rcx, .LC299[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC325[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING6CURSORC1Ev
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 824
	mov	rax, QWORD PTR [rax]
	mov	edx, eax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 816
	mov	rax, QWORD PTR [rax]
	or	eax, edx
	mov	ecx, eax
	mov	rax, QWORD PTR 32[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 792
	mov	rax, QWORD PTR [rax]
	mov	r8d, ecx
	mov	rcx, rax
	call	ImageList_GetIcon
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING6CURSORaSEP7HICON__
	nop
.L4834:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR 16[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS9IMAGELIST5CLEAREv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9IMAGELIST5CLEAREv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L4837:
	lea	rcx, .LC299[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC262[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 384
	mov	BYTE PTR [rax], 1
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 728
	mov	rcx, rax
	call	_ZN10DICTIONARY5CLEAREv
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 384
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 792
	mov	rax, QWORD PTR [rax]
	mov	edx, -1
	mov	rcx, rax
	call	ImageList_Remove
.L4838:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC326:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Menus.bi\0"
	.text
	.def	_ZN2MY3SYS5FORMS8MENUITEMaSERKS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEMaSERKS2_:
	push	rbp
	mov	rbp, rsp
	push	rbx
	and	rsp, -16
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L4840:
	lea	rcx, .LC326[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR 56[rsp], rax
	mov	rax, QWORD PTR 56[rsp]
	mov	QWORD PTR 48[rsp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR 40[rsp], rax
	mov	rax, QWORD PTR 40[rsp]
	mov	QWORD PTR 32[rsp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTaSERKS1_
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 48[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rcx, QWORD PTR [rdx]
	mov	rbx, QWORD PTR 8[rdx]
	mov	QWORD PTR [rax], rcx
	mov	QWORD PTR 8[rax], rbx
	mov	rcx, QWORD PTR 16[rdx]
	mov	rbx, QWORD PTR 24[rdx]
	mov	QWORD PTR 16[rax], rcx
	mov	QWORD PTR 24[rax], rbx
	mov	rcx, QWORD PTR 32[rdx]
	mov	rbx, QWORD PTR 40[rdx]
	mov	QWORD PTR 32[rax], rcx
	mov	QWORD PTR 40[rax], rbx
	mov	rcx, QWORD PTR 48[rdx]
	mov	rbx, QWORD PTR 56[rdx]
	mov	QWORD PTR 48[rax], rcx
	mov	QWORD PTR 56[rax], rbx
	mov	rcx, QWORD PTR 64[rdx]
	mov	rbx, QWORD PTR 72[rdx]
	mov	QWORD PTR 64[rax], rcx
	mov	QWORD PTR 72[rax], rbx
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 128[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 128[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 136[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 136[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 144[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 144[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 152[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 152[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 160[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 160[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 168[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 168[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 176[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 176[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 177[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 177[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 184[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 184[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 192[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 192[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 193[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 193[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 200[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 200[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 208[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 208[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 216[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 216
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPEaSERKS2_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 552[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 552[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 560[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 560[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 568[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 568[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 576[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 576[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 584[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 584[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 592[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 592[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 600[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 600[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 608[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 608[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 616[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 616[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 624[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 624[rax]
	mov	QWORD PTR [rdx], rax
.L4841:
	mov	rax, QWORD PTR 32[rsp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR 48[rsp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	mov	rbx, QWORD PTR -8[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4MENUaSERKS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4MENUaSERKS2_:
	push	rbp
	mov	rbp, rsp
	push	rbx
	and	rsp, -16
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L4843:
	lea	rcx, .LC326[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR 56[rsp], rax
	mov	rax, QWORD PTR 56[rsp]
	mov	QWORD PTR 48[rsp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR 40[rsp], rax
	mov	rax, QWORD PTR 40[rsp]
	mov	QWORD PTR 32[rsp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENTaSERKS2_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 336[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 336[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 344[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 344[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 352[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 352
	mov	rcx, QWORD PTR [rdx]
	mov	rbx, QWORD PTR 8[rdx]
	mov	QWORD PTR [rax], rcx
	mov	QWORD PTR 8[rax], rbx
	mov	rcx, QWORD PTR 16[rdx]
	mov	rbx, QWORD PTR 24[rdx]
	mov	QWORD PTR 16[rax], rcx
	mov	QWORD PTR 24[rax], rbx
	mov	rdx, QWORD PTR 32[rdx]
	mov	QWORD PTR 32[rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 392[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 392[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 400[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 400[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 408[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 408[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 416[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 416[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 424
	mov	rdx, QWORD PTR 16[rbp]
	lea	rcx, 424[rdx]
	mov	rdx, QWORD PTR 8[rax]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR 8[rcx], rdx
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 440[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 440[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 448[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 448[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 456[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 456[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 464[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 464[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 472[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 472[rax]
	mov	QWORD PTR [rdx], rax
.L4844:
	mov	rax, QWORD PTR 32[rsp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR 48[rsp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	mov	rbx, QWORD PTR -8[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MAINMENUaSERKS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MAINMENUaSERKS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L4846:
	lea	rcx, .LC326[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENUaSERKS2_
.L4847:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS9POPUPMENUaSERKS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9POPUPMENUaSERKS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L4849:
	lea	rcx, .LC326[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENUaSERKS2_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 480[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 480[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 488[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 488[rax]
	mov	QWORD PTR [rdx], rax
.L4850:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC327:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Menus.bas\0"
.LC328:
	.ascii "ALLOCATECOMMAND\0"
	.text
	.def	_ZN2MY3SYS5FORMS15ALLOCATECOMMANDEPNS1_8MENUITEME;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS15ALLOCATECOMMANDEPNS1_8MENUITEME:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
.L4852:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC328[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR UNIQUEID$1.13124[rip]
	test	rax, rax
	jne	.L4862
	mov	QWORD PTR UNIQUEID$1.13124[rip], 999
	jmp	.L4854
.L4862:
	nop
.L4854:
	cmp	QWORD PTR 16[rbp], 0
	je	.L4863
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM14COMMAND__get__Ev
	mov	QWORD PTR -40[rbp], rax
	cmp	QWORD PTR -40[rbp], 0
	jg	.L4864
	mov	rax, QWORD PTR UNIQUEID$1.13124[rip]
	add	rax, 1
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM14COMMAND__set__Eu7INTEGER
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM14COMMAND__get__Ev
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR UNIQUEID$1.13124[rip], rax
	jmp	.L4861
.L4856:
.L4858:
.L4859:
.L4860:
.L4863:
	nop
	jmp	.L4861
.L4864:
	nop
.L4861:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 2
.LC329:
	.ascii "c\0a\0p\0t\0i\0o\0n\0\0\0"
	.align 2
.LC330:
	.ascii "c\0h\0e\0c\0k\0e\0d\0\0\0"
	.align 2
.LC331:
	.ascii "c\0o\0m\0m\0a\0n\0d\0\0\0"
	.align 2
.LC332:
	.ascii "e\0n\0a\0b\0l\0e\0d\0\0\0"
	.align 2
.LC333:
	.ascii "i\0m\0a\0g\0e\0\0\0"
	.align 2
.LC334:
	.ascii "i\0m\0a\0g\0e\0i\0n\0d\0e\0x\0\0\0"
	.align 2
.LC335:
	.ascii "i\0m\0a\0g\0e\0k\0e\0y\0\0\0"
	.align 2
.LC336:
	.ascii "m\0e\0n\0u\0i\0n\0d\0e\0x\0\0\0"
	.align 2
.LC337:
	.ascii "o\0w\0n\0e\0r\0\0\0"
	.align 2
.LC338:
	.ascii "p\0a\0r\0e\0n\0t\0m\0e\0n\0u\0\0\0"
	.align 2
.LC339:
	.ascii "p\0a\0r\0e\0n\0t\0m\0e\0n\0u\0i\0t\0e\0m\0\0\0"
	.align 2
.LC340:
	.ascii "r\0a\0d\0i\0o\0i\0t\0e\0m\0\0\0"
	.align 2
.LC341:
	.ascii "v\0i\0s\0i\0b\0l\0e\0\0\0"
	.text
	.def	_ZN2MY3SYS5FORMS8MENUITEM12READPROPERTYER8FBSTRING;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM12READPROPERTYER8FBSTRING:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 576
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -496[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC152[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L4866:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -528[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC329[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L4942
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4869:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 144[rax]
	mov	QWORD PTR -496[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4922
.L4942:
	nop
.L4868:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	rdx, .LC330[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -84[rbp], eax
	cmp	DWORD PTR -84[rbp], 0
	jne	.L4943
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4873:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 176
	mov	QWORD PTR -496[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4922
.L4943:
	nop
.L4872:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	lea	rdx, .LC331[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -108[rbp], eax
	cmp	DWORD PTR -108[rbp], 0
	jne	.L4944
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4876:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 200
	mov	QWORD PTR -496[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4922
.L4944:
	nop
.L4875:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	rdx, .LC301[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -132[rbp], eax
	cmp	DWORD PTR -132[rbp], 0
	jne	.L4945
	mov	rax, QWORD PTR -128[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4879:
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	QWORD PTR -496[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4922
.L4945:
	nop
.L4878:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	lea	rdx, .LC332[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -156[rbp], eax
	cmp	DWORD PTR -156[rbp], 0
	jne	.L4946
	mov	rax, QWORD PTR -152[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4882:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 192
	mov	QWORD PTR -496[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4922
.L4946:
	nop
.L4881:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	lea	rdx, .LC333[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -180[rbp], eax
	cmp	DWORD PTR -180[rbp], 0
	jne	.L4947
	mov	rax, QWORD PTR -176[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4885:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 216
	mov	QWORD PTR -496[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4922
.L4947:
	nop
.L4884:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -192[rbp]
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	lea	rdx, .LC334[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -204[rbp], eax
	cmp	DWORD PTR -204[rbp], 0
	jne	.L4948
	mov	rax, QWORD PTR -200[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4888:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 552
	mov	QWORD PTR -496[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4922
.L4948:
	nop
.L4887:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR -216[rbp]
	mov	QWORD PTR -224[rbp], rax
	mov	rax, QWORD PTR -224[rbp]
	lea	rdx, .LC335[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -228[rbp], eax
	cmp	DWORD PTR -228[rbp], 0
	jne	.L4949
	mov	rax, QWORD PTR -224[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4891:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 560[rax]
	mov	QWORD PTR -496[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4922
.L4949:
	nop
.L4890:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -240[rbp]
	mov	QWORD PTR -248[rbp], rax
	mov	rax, QWORD PTR -248[rbp]
	lea	rdx, .LC336[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -252[rbp], eax
	cmp	DWORD PTR -252[rbp], 0
	jne	.L4950
	mov	rax, QWORD PTR -248[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4894:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 208
	mov	QWORD PTR -496[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4922
.L4950:
	nop
.L4893:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -264[rbp], rax
	mov	rax, QWORD PTR -264[rbp]
	mov	QWORD PTR -272[rbp], rax
	mov	rax, QWORD PTR -272[rbp]
	lea	rdx, .LC179[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -276[rbp], eax
	cmp	DWORD PTR -276[rbp], 0
	jne	.L4951
	mov	rax, QWORD PTR -272[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4897:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 584[rax]
	mov	QWORD PTR -496[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4922
.L4951:
	nop
.L4896:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -288[rbp], rax
	mov	rax, QWORD PTR -288[rbp]
	mov	QWORD PTR -296[rbp], rax
	mov	rax, QWORD PTR -296[rbp]
	lea	rdx, .LC337[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -300[rbp], eax
	cmp	DWORD PTR -300[rbp], 0
	jne	.L4952
	mov	rax, QWORD PTR -296[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4900:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 592[rax]
	mov	QWORD PTR -496[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4922
.L4952:
	nop
.L4899:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -312[rbp], rax
	mov	rax, QWORD PTR -312[rbp]
	mov	QWORD PTR -320[rbp], rax
	mov	rax, QWORD PTR -320[rbp]
	lea	rdx, .LC168[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -324[rbp], eax
	cmp	DWORD PTR -324[rbp], 0
	jne	.L4953
	mov	rax, QWORD PTR -320[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4903:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM13PARENT__get__Ev
	mov	QWORD PTR -336[rbp], rax
	mov	rax, QWORD PTR -336[rbp]
	mov	QWORD PTR -496[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4922
.L4953:
	nop
.L4902:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -344[rbp], rax
	mov	rax, QWORD PTR -344[rbp]
	mov	QWORD PTR -352[rbp], rax
	mov	rax, QWORD PTR -352[rbp]
	lea	rdx, .LC338[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -356[rbp], eax
	cmp	DWORD PTR -356[rbp], 0
	jne	.L4954
	mov	rax, QWORD PTR -352[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4906:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 592[rax]
	mov	QWORD PTR -496[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4922
.L4954:
	nop
.L4905:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -368[rbp], rax
	mov	rax, QWORD PTR -368[rbp]
	mov	QWORD PTR -376[rbp], rax
	mov	rax, QWORD PTR -376[rbp]
	lea	rdx, .LC339[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -380[rbp], eax
	cmp	DWORD PTR -380[rbp], 0
	jne	.L4955
	mov	rax, QWORD PTR -376[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4909:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 184[rax]
	mov	QWORD PTR -496[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4922
.L4955:
	nop
.L4908:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -392[rbp], rax
	mov	rax, QWORD PTR -392[rbp]
	mov	QWORD PTR -400[rbp], rax
	mov	rax, QWORD PTR -400[rbp]
	lea	rdx, .LC340[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -404[rbp], eax
	cmp	DWORD PTR -404[rbp], 0
	jne	.L4956
	mov	rax, QWORD PTR -400[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4912:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 177
	mov	QWORD PTR -496[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4922
.L4956:
	nop
.L4911:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -416[rbp], rax
	mov	rax, QWORD PTR -416[rbp]
	mov	QWORD PTR -424[rbp], rax
	mov	rax, QWORD PTR -424[rbp]
	lea	rdx, .LC162[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -428[rbp], eax
	cmp	DWORD PTR -428[rbp], 0
	jne	.L4957
	mov	rax, QWORD PTR -424[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4915:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 608[rax]
	mov	QWORD PTR -496[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4922
.L4957:
	nop
.L4914:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -440[rbp], rax
	mov	rax, QWORD PTR -440[rbp]
	mov	QWORD PTR -448[rbp], rax
	mov	rax, QWORD PTR -448[rbp]
	lea	rdx, .LC163[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -452[rbp], eax
	cmp	DWORD PTR -452[rbp], 0
	jne	.L4958
	mov	rax, QWORD PTR -448[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4918:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 576
	mov	QWORD PTR -496[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4922
.L4958:
	nop
.L4917:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -464[rbp], rax
	mov	rax, QWORD PTR -464[rbp]
	mov	QWORD PTR -472[rbp], rax
	mov	rax, QWORD PTR -472[rbp]
	lea	rdx, .LC341[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -476[rbp], eax
	cmp	DWORD PTR -476[rbp], 0
	jne	.L4959
	mov	rax, QWORD PTR -472[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4921:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 193
	mov	QWORD PTR -496[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4922
.L4959:
	nop
.L4920:
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT12READPROPERTYER8FBSTRING
	mov	QWORD PTR -488[rbp], rax
	mov	rax, QWORD PTR -488[rbp]
	mov	QWORD PTR -496[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	nop
.L4922:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -496[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MENUITEM13WRITEPROPERTYER8FBSTRINGPv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM13WRITEPROPERTYER8FBSTRINGPv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 704
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	BYTE PTR -594[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC154[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L4961:
	cmp	QWORD PTR 32[rbp], 0
	jne	.L5065
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -624[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -624[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC337[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L5066
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4966:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__set__EPNS1_4MENUE
	jmp	.L4975
.L5066:
	nop
.L4965:
	lea	rax, -624[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	rdx, .LC168[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -84[rbp], eax
	cmp	DWORD PTR -84[rbp], 0
	jne	.L5067
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4970:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM13PARENT__set__EPNS0_6OBJECTE
	jmp	.L4975
.L5067:
	nop
.L4969:
	lea	rax, -624[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	lea	rdx, .LC338[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -108[rbp], eax
	cmp	DWORD PTR -108[rbp], 0
	jne	.L5068
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4973:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM17PARENTMENU__set__EPNS1_4MENUE
	jmp	.L4975
.L5068:
	nop
.L4972:
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT13WRITEPROPERTYER8FBSTRINGPv
	mov	BYTE PTR -109[rbp], al
	movzx	eax, BYTE PTR -109[rbp]
	mov	BYTE PTR -594[rbp], al
	lea	rax, -624[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4974
.L4967:
.L4975:
	lea	rax, -624[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4976
.L5065:
	nop
.L4963:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -120[rbp], rax
	mov	rdx, QWORD PTR -120[rbp]
	lea	rax, -656[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -656[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	lea	rdx, .LC329[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -140[rbp], eax
	cmp	DWORD PTR -140[rbp], 0
	jne	.L5069
	mov	rax, QWORD PTR -136[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4979:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM14CAPTION__set__ERw
	jmp	.L5037
.L5069:
	nop
.L4978:
	lea	rax, -656[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	lea	rdx, .LC330[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -164[rbp], eax
	cmp	DWORD PTR -164[rbp], 0
	jne	.L5070
	mov	rax, QWORD PTR -160[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4983:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 71
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -184[rbp], rax
	cmp	QWORD PTR -184[rbp], 0
	je	.L5071
	jmp	[QWORD PTR -184[rbp]]
.L5071:
	nop
.L4985:
	mov	rax, QWORD PTR -176[rbp]
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM14CHECKED__set__Eb
	jmp	.L5037
.L5070:
	nop
.L4982:
	lea	rax, -656[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -192[rbp]
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	lea	rdx, .LC331[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -204[rbp], eax
	cmp	DWORD PTR -204[rbp], 0
	jne	.L5072
	mov	rax, QWORD PTR -200[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4988:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR -216[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 72
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -224[rbp], rax
	cmp	QWORD PTR -224[rbp], 0
	je	.L5073
	jmp	[QWORD PTR -224[rbp]]
.L5073:
	nop
.L4990:
	mov	rax, QWORD PTR -216[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM14COMMAND__set__Eu7INTEGER
	jmp	.L5037
.L5072:
	nop
.L4987:
	lea	rax, -656[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -232[rbp], rax
	mov	rax, QWORD PTR -232[rbp]
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -240[rbp]
	lea	rdx, .LC332[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -244[rbp], eax
	cmp	DWORD PTR -244[rbp], 0
	jne	.L5074
	mov	rax, QWORD PTR -240[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4993:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -256[rbp], rax
	mov	rax, QWORD PTR -256[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 73
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -264[rbp], rax
	cmp	QWORD PTR -264[rbp], 0
	je	.L5075
	jmp	[QWORD PTR -264[rbp]]
.L5075:
	nop
.L4995:
	mov	rax, QWORD PTR -256[rbp]
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM14ENABLED__set__Eb
	jmp	.L5037
.L5074:
	nop
.L4992:
	lea	rax, -656[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -272[rbp], rax
	mov	rax, QWORD PTR -272[rbp]
	mov	QWORD PTR -280[rbp], rax
	mov	rax, QWORD PTR -280[rbp]
	lea	rdx, .LC333[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -284[rbp], eax
	cmp	DWORD PTR -284[rbp], 0
	jne	.L5076
	mov	rax, QWORD PTR -280[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L4998:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12IMAGE__set__ERw
	jmp	.L5037
.L5076:
	nop
.L4997:
	lea	rax, -656[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -296[rbp], rax
	mov	rax, QWORD PTR -296[rbp]
	mov	QWORD PTR -304[rbp], rax
	mov	rax, QWORD PTR -304[rbp]
	lea	rdx, .LC334[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -308[rbp], eax
	cmp	DWORD PTR -308[rbp], 0
	jne	.L5077
	mov	rax, QWORD PTR -304[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L5001:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -320[rbp], rax
	mov	rax, QWORD PTR -320[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 75
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -328[rbp], rax
	cmp	QWORD PTR -328[rbp], 0
	je	.L5078
	jmp	[QWORD PTR -328[rbp]]
.L5078:
	nop
.L5003:
	mov	rax, QWORD PTR -320[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM17IMAGEINDEX__set__Eu7INTEGER
	jmp	.L5037
.L5077:
	nop
.L5000:
	lea	rax, -656[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -336[rbp], rax
	mov	rax, QWORD PTR -336[rbp]
	mov	QWORD PTR -344[rbp], rax
	mov	rax, QWORD PTR -344[rbp]
	lea	rdx, .LC335[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -348[rbp], eax
	cmp	DWORD PTR -348[rbp], 0
	jne	.L5079
	mov	rax, QWORD PTR -344[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L5006:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM15IMAGEKEY__set__ERw
	jmp	.L5037
.L5079:
	nop
.L5005:
	lea	rax, -656[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -360[rbp], rax
	mov	rax, QWORD PTR -360[rbp]
	mov	QWORD PTR -368[rbp], rax
	mov	rax, QWORD PTR -368[rbp]
	lea	rdx, .LC336[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -372[rbp], eax
	cmp	DWORD PTR -372[rbp], 0
	jne	.L5080
	mov	rax, QWORD PTR -368[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L5009:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -384[rbp], rax
	mov	rax, QWORD PTR -384[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 77
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -392[rbp], rax
	cmp	QWORD PTR -392[rbp], 0
	je	.L5081
	jmp	[QWORD PTR -392[rbp]]
.L5081:
	nop
.L5011:
	mov	rax, QWORD PTR -384[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM16MENUINDEX__set__Eu7INTEGER
	jmp	.L5037
.L5080:
	nop
.L5008:
	lea	rax, -656[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -400[rbp], rax
	mov	rax, QWORD PTR -400[rbp]
	mov	QWORD PTR -408[rbp], rax
	mov	rax, QWORD PTR -408[rbp]
	lea	rdx, .LC179[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -412[rbp], eax
	cmp	DWORD PTR -412[rbp], 0
	jne	.L5082
	mov	rax, QWORD PTR -408[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L5014:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM11NAME__set__ERw
	jmp	.L5037
.L5082:
	nop
.L5013:
	lea	rax, -656[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -424[rbp], rax
	mov	rax, QWORD PTR -424[rbp]
	mov	QWORD PTR -432[rbp], rax
	mov	rax, QWORD PTR -432[rbp]
	lea	rdx, .LC337[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -436[rbp], eax
	cmp	DWORD PTR -436[rbp], 0
	jne	.L5083
	mov	rax, QWORD PTR -432[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L5017:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__set__EPNS1_4MENUE
	jmp	.L5037
.L5083:
	nop
.L5016:
	lea	rax, -656[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -448[rbp], rax
	mov	rax, QWORD PTR -448[rbp]
	mov	QWORD PTR -456[rbp], rax
	mov	rax, QWORD PTR -456[rbp]
	lea	rdx, .LC168[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -460[rbp], eax
	cmp	DWORD PTR -460[rbp], 0
	jne	.L5084
	mov	rax, QWORD PTR -456[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L5020:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM13PARENT__set__EPNS0_6OBJECTE
	jmp	.L5037
.L5084:
	nop
.L5019:
	lea	rax, -656[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -472[rbp], rax
	mov	rax, QWORD PTR -472[rbp]
	mov	QWORD PTR -480[rbp], rax
	mov	rax, QWORD PTR -480[rbp]
	lea	rdx, .LC338[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -484[rbp], eax
	cmp	DWORD PTR -484[rbp], 0
	jne	.L5085
	mov	rax, QWORD PTR -480[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L5023:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM17PARENTMENU__set__EPNS1_4MENUE
	jmp	.L5037
.L5085:
	nop
.L5022:
	lea	rax, -656[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -496[rbp], rax
	mov	rax, QWORD PTR -496[rbp]
	mov	QWORD PTR -504[rbp], rax
	mov	rax, QWORD PTR -504[rbp]
	lea	rdx, .LC340[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -508[rbp], eax
	cmp	DWORD PTR -508[rbp], 0
	jne	.L5086
	mov	rax, QWORD PTR -504[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L5026:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -520[rbp], rax
	mov	rax, QWORD PTR -520[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 82
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -528[rbp], rax
	cmp	QWORD PTR -528[rbp], 0
	je	.L5087
	jmp	[QWORD PTR -528[rbp]]
.L5087:
	nop
.L5028:
	mov	rax, QWORD PTR -520[rbp]
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM16RADIOITEM__set__Eb
	jmp	.L5037
.L5086:
	nop
.L5025:
	lea	rax, -656[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -536[rbp], rax
	mov	rax, QWORD PTR -536[rbp]
	mov	QWORD PTR -544[rbp], rax
	mov	rax, QWORD PTR -544[rbp]
	lea	rdx, .LC162[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -548[rbp], eax
	cmp	DWORD PTR -548[rbp], 0
	jne	.L5088
	mov	rax, QWORD PTR -544[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L5031:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 608[rax]
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR [rdx], rax
	jmp	.L5037
.L5088:
	nop
.L5030:
	lea	rax, -656[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -560[rbp], rax
	mov	rax, QWORD PTR -560[rbp]
	mov	QWORD PTR -568[rbp], rax
	mov	rax, QWORD PTR -568[rbp]
	lea	rdx, .LC341[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -572[rbp], eax
	cmp	DWORD PTR -572[rbp], 0
	jne	.L5089
	mov	rax, QWORD PTR -568[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L5034:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -584[rbp], rax
	mov	rax, QWORD PTR -584[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 84
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -592[rbp], rax
	cmp	QWORD PTR -592[rbp], 0
	je	.L5090
	jmp	[QWORD PTR -592[rbp]]
.L5090:
	nop
.L5036:
	mov	rax, QWORD PTR -584[rbp]
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM14VISIBLE__set__Eb
	jmp	.L5037
.L5089:
	nop
.L5033:
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT13WRITEPROPERTYER8FBSTRINGPv
	mov	BYTE PTR -593[rbp], al
	movzx	eax, BYTE PTR -593[rbp]
	mov	BYTE PTR -594[rbp], al
	lea	rax, -656[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L4974
.L4980:
.L5037:
	lea	rax, -656[rbp]
	mov	rcx, rax
	call	fb_StrDelete
.L4976:
	mov	BYTE PTR -594[rbp], 1
	nop
.L4974:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -594[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MENUITEM8TOSTRINGEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM8TOSTRINGEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -48[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC155[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L5092:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM11NAME__get__Ev
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	nop
.L5093:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -48[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC342:
	.ascii "TRAVERSEITEMS\0"
	.text
	.def	_ZN2MY3SYS5FORMS13TRAVERSEITEMSERNS1_8MENUITEME;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS13TRAVERSEITEMSERNS1_8MENUITEME:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 240
	mov	QWORD PTR 16[rbp], rcx
.L5096:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rcx, .LC342[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	lea	rax, -208[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	QWORD PTR 32[rax], 0
	mov	QWORD PTR 40[rax], 0
	mov	QWORD PTR 48[rax], 0
	mov	QWORD PTR 56[rax], 0
	mov	QWORD PTR 64[rax], 0
	mov	QWORD PTR 72[rax], 0
	lea	rax, -208[rbp]
	mov	DWORD PTR [rax], 80
	lea	rax, -208[rbp]
	add	rax, 4
	mov	DWORD PTR [rax], 16
	mov	QWORD PTR -8[rbp], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12COUNT__get__Ev
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	sub	rax, 1
	mov	QWORD PTR -64[rbp], rax
	jmp	.L5097
.L5108:
	nop
.L5098:
	mov	rax, QWORD PTR -8[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM16MENUINDEX__get__Ev
	mov	QWORD PTR -80[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	ecx, eax
	lea	rdx, -208[rbp]
	mov	rax, QWORD PTR -88[rbp]
	mov	r9, rdx
	mov	r8d, -1
	mov	edx, ecx
	mov	rcx, rax
	call	GetMenuItemInfoW
	lea	rax, -208[rbp]
	add	rax, 8
	mov	eax, DWORD PTR [rax]
	mov	eax, eax
	and	eax, 2048
	test	rax, rax
	je	.L5107
	mov	QWORD PTR -16[rbp], 2048
	jmp	.L5101
.L5107:
	nop
.L5100:
	mov	QWORD PTR -16[rbp], 256
.L5101:
	lea	rax, -208[rbp]
	add	rax, 8
	mov	rdx, QWORD PTR -16[rbp]
	mov	DWORD PTR [rax], edx
	mov	rax, QWORD PTR -8[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM16MENUINDEX__get__Ev
	mov	QWORD PTR -104[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	ecx, eax
	lea	rdx, -208[rbp]
	mov	rax, QWORD PTR -112[rbp]
	mov	r9, rdx
	mov	r8d, -1
	mov	edx, ecx
	mov	rcx, rax
	call	SetMenuItemInfoW
	mov	rax, QWORD PTR -8[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS13TRAVERSEITEMSERNS1_8MENUITEME
.L5102:
	add	QWORD PTR -8[rbp], 1
.L5097:
	mov	rax, QWORD PTR -8[rbp]
	cmp	rax, QWORD PTR -64[rbp]
	jle	.L5108
.L5103:
	nop
.L5104:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC343:
	.ascii "SETINFO\0"
	.align 2
.LC344:
	.ascii "-\0\0\0"
	.align 2
.LC345:
	.ascii "|\0\0\0"
	.text
	.def	_ZN2MY3SYS5FORMS8MENUITEM7SETINFOER16tagMENUITEMINFOW;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM7SETINFOER16tagMENUITEMINFOW:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 432
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L5110:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	QWORD PTR -88[rbp], rax
	lea	rcx, .LC343[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 144
	mov	rax, QWORD PTR [rax]
	lea	rdx, .LC77[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -108[rbp], eax
	cmp	DWORD PTR -108[rbp], 0
	jne	.L5171
	mov	edx, 0
	mov	ecx, 1
	call	fb_CHR
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 144
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR -120[rbp]
	mov	r9, -1
	mov	r8, rdx
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrAssignFromA
	jmp	.L5113
.L5112:
.L5171:
	nop
.L5113:
	mov	rax, QWORD PTR 24[rbp]
	mov	DWORD PTR [rax], 80
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev
	mov	QWORD PTR -128[rbp], rax
	cmp	QWORD PTR -128[rbp], 0
	je	.L5172
	mov	QWORD PTR -8[rbp], 4
	jmp	.L5116
.L5172:
	nop
.L5115:
	mov	QWORD PTR -8[rbp], 2
.L5116:
	mov	rax, QWORD PTR -8[rbp]
	or	eax, 481
	mov	edx, eax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 4
	mov	DWORD PTR [rax], edx
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 24[rax]
	mov	rax, QWORD PTR -136[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 144
	mov	rax, QWORD PTR [rax]
	lea	rdx, .LC344[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -140[rbp], eax
	cmp	DWORD PTR -140[rbp], 0
	jne	.L5173
	mov	QWORD PTR -16[rbp], 2048
	jmp	.L5119
.L5173:
	nop
.L5118:
	mov	QWORD PTR -16[rbp], 0
.L5119:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 8
	mov	rdx, QWORD PTR -16[rbp]
	mov	DWORD PTR [rax], edx
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 192
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L5174
	mov	QWORD PTR -24[rbp], 0
	jmp	.L5122
.L5174:
	nop
.L5121:
	mov	QWORD PTR -24[rbp], 3
.L5122:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 176
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L5175
	mov	QWORD PTR -32[rbp], 8
	jmp	.L5125
.L5175:
	nop
.L5124:
	mov	QWORD PTR -32[rbp], 0
.L5125:
	mov	rax, QWORD PTR -24[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR -32[rbp]
	or	edx, eax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 12
	mov	DWORD PTR [rax], edx
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev
	mov	QWORD PTR -152[rbp], rax
	cmp	QWORD PTR -152[rbp], 0
	je	.L5176
	mov	QWORD PTR -40[rbp], -1
	jmp	.L5128
.L5176:
	nop
.L5127:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM14COMMAND__get__Ev
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	mov	QWORD PTR -40[rbp], rax
.L5128:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 16
	mov	rdx, QWORD PTR -40[rbp]
	mov	DWORD PTR [rax], edx
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 552
	mov	rax, QWORD PTR [rax]
	cmp	rax, -1
	je	.L5177
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -168[rbp], rax
	cmp	QWORD PTR -168[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -48[rbp], rax
	jmp	.L5131
.L5177:
	nop
.L5130:
	mov	QWORD PTR -48[rbp], 0
.L5131:
	cmp	QWORD PTR -48[rbp], 0
	je	.L5178
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 121
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -192[rbp], rax
	cmp	QWORD PTR -192[rbp], 0
	je	.L5179
	jmp	[QWORD PTR -192[rbp]]
.L5179:
	nop
.L5135:
	mov	rax, QWORD PTR -184[rbp]
	add	rax, 464
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -56[rbp], rax
	jmp	.L5136
.L5178:
	nop
.L5133:
	mov	QWORD PTR -56[rbp], 0
.L5136:
	cmp	QWORD PTR -56[rbp], 0
	je	.L5180
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR -208[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 122
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -216[rbp], rax
	cmp	QWORD PTR -216[rbp], 0
	je	.L5181
	jmp	[QWORD PTR -216[rbp]]
.L5181:
	nop
.L5140:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 552
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR -208[rbp]
	add	rax, 464
	mov	rdx, QWORD PTR [rax]
	lea	rax, -384[rbp]
	mov	r8, rcx
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS9IMAGELIST7GETICONEu7INTEGER
	lea	rax, -384[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 16[rbp]
	lea	rcx, 216[rdx]
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE13LOADFROMHICONEP7HICON__
	lea	rax, -384[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4ICOND1Ev
	jmp	.L5146
.L5180:
	nop
.L5138:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 560
	mov	rcx, rax
	call	WGET
	mov	QWORD PTR -224[rbp], rax
	mov	rax, QWORD PTR -224[rbp]
	lea	rdx, .LC77[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -228[rbp], eax
	cmp	DWORD PTR -228[rbp], 0
	je	.L5182
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 328
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -64[rbp], rax
	jmp	.L5144
.L5182:
	nop
.L5143:
	mov	QWORD PTR -64[rbp], 0
.L5144:
	cmp	QWORD PTR -64[rbp], 0
	je	.L5183
	lea	rax, -288[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 560
	mov	rdx, QWORD PTR [rax]
	lea	rax, -288[rbp]
	mov	r9d, 0
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 216[rax]
	lea	rax, -288[rbp]
	mov	QWORD PTR 40[rsp], 0
	mov	QWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8d, 0
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE20LOADFROMRESOURCENAMEER8FBSTRINGPvu7INTEGERS6_S6_
	lea	rax, -288[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L5146
.L5141:
.L5183:
	nop
.L5146:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -240[rbp], rax
	cmp	QWORD PTR -240[rbp], 0
	je	.L5184
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -248[rbp], rax
	mov	rax, QWORD PTR -248[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU19DISPLAYICONS__get__Ev
	mov	BYTE PTR -249[rbp], al
	cmp	BYTE PTR -249[rbp], 0
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -72[rbp], rax
	jmp	.L5149
.L5184:
	nop
.L5148:
	mov	QWORD PTR -72[rbp], 0
.L5149:
	cmp	QWORD PTR -72[rbp], 0
	je	.L5185
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 72
	mov	QWORD PTR [rax], 0
	jmp	.L5152
.L5185:
	nop
.L5151:
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 72[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 328[rax]
	mov	QWORD PTR [rdx], rax
.L5152:
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 48[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 144
	mov	rax, QWORD PTR [rax]
	lea	rdx, .LC344[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -256[rbp], eax
	cmp	DWORD PTR -256[rbp], 0
	jne	.L5186
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 152
	lea	rdx, .LC345[rip]
	mov	rcx, rax
	call	WLET
	jmp	.L5155
.L5186:
	nop
.L5154:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 144
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 16[rbp]
	lea	rcx, 152[rdx]
	mov	rdx, rax
	call	WLET
.L5155:
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 56[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 152[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 152
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_WstrLen
	mov	QWORD PTR -264[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 64
	mov	rdx, QWORD PTR -264[rbp]
	mov	DWORD PTR [rax], edx
.L5156:
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -88[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC346:
	.ascii "SETITEMINFO\0"
	.text
	.def	_ZN2MY3SYS5FORMS8MENUITEM11SETITEMINFOER16tagMENUITEMINFOW;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM11SETITEMINFOER16tagMENUITEMINFOW:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 160
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L5188:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rcx, .LC346[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM21PARENTMENUITEM__get__Ev
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L5204
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM21PARENTMENUITEM__get__Ev
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L5191
.L5204:
	nop
.L5190:
	mov	QWORD PTR -8[rbp], 0
.L5191:
	cmp	QWORD PTR -8[rbp], 0
	je	.L5205
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM21PARENTMENUITEM__get__Ev
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 208
	mov	rax, QWORD PTR [rax]
	mov	ecx, eax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -88[rbp]
	mov	r9, rdx
	mov	r8d, -1
	mov	edx, ecx
	mov	rcx, rax
	call	SetMenuItemInfoW
	jmp	.L5200
.L5205:
	nop
.L5193:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -96[rbp], rax
	cmp	QWORD PTR -96[rbp], 0
	je	.L5206
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU13HANDLE__get__Ev
	mov	QWORD PTR -112[rbp], rax
	cmp	QWORD PTR -112[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -16[rbp], rax
	jmp	.L5197
.L5206:
	nop
.L5196:
	mov	QWORD PTR -16[rbp], 0
.L5197:
	cmp	QWORD PTR -16[rbp], 0
	je	.L5207
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU13HANDLE__get__Ev
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 208
	mov	rax, QWORD PTR [rax]
	mov	ecx, eax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -128[rbp]
	mov	r9, rdx
	mov	r8d, -1
	mov	edx, ecx
	mov	rcx, rax
	call	SetMenuItemInfoW
	jmp	.L5200
.L5194:
.L5199:
.L5207:
	nop
.L5200:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC347:
	.ascii "CHANGEINDEX\0"
	.text
	.def	_ZN2MY3SYS5FORMS8MENUITEM11CHANGEINDEXEPS2_u7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM11CHANGEINDEXEPS2_u7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 224
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
.L5209:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	lea	rcx, .LC347[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM7INDEXOFEPS2_
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	js	.L5254
	mov	rax, QWORD PTR -80[rbp]
	cmp	rax, QWORD PTR 32[rbp]
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L5212
.L5254:
	nop
.L5211:
	mov	QWORD PTR -8[rbp], 0
.L5212:
	cmp	QWORD PTR -8[rbp], 0
	je	.L5255
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	cmp	QWORD PTR 32[rbp], rax
	setle	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -16[rbp], rax
	jmp	.L5215
.L5255:
	nop
.L5214:
	mov	QWORD PTR -16[rbp], 0
.L5215:
	cmp	QWORD PTR -16[rbp], 0
	je	.L5256
	mov	rax, QWORD PTR 32[rbp]
	cmp	rax, QWORD PTR -80[rbp]
	jge	.L5257
	mov	rax, QWORD PTR -80[rbp]
	sub	rax, 1
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -88[rbp], rax
	jmp	.L5220
.L5260:
	nop
.L5221:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 136[rax]
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 155
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -120[rbp], rax
	cmp	QWORD PTR -120[rbp], 0
	je	.L5258
	jmp	[QWORD PTR -120[rbp]]
.L5258:
	nop
.L5223:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 136[rax]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 155
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -136[rbp], rax
	cmp	QWORD PTR -136[rbp], 0
	je	.L5259
	jmp	[QWORD PTR -136[rbp]]
.L5259:
	nop
.L5225:
	mov	rax, QWORD PTR -24[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -112[rbp]
	add	rax, rdx
	mov	rdx, QWORD PTR -24[rbp]
	sal	rdx, 3
	lea	rcx, 8[rdx]
	mov	rdx, QWORD PTR -128[rbp]
	add	rdx, rcx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
.L5226:
	sub	QWORD PTR -24[rbp], 1
.L5220:
	mov	rax, QWORD PTR -24[rbp]
	cmp	rax, QWORD PTR -88[rbp]
	jge	.L5260
	nop
.L5227:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 136[rax]
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 157
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -104[rbp], rax
	cmp	QWORD PTR -104[rbp], 0
	je	.L5261
	jmp	[QWORD PTR -104[rbp]]
.L5261:
	nop
.L5229:
	mov	rax, QWORD PTR 32[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -96[rbp]
	add	rdx, rax
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	jmp	.L5242
.L5257:
	nop
.L5219:
	mov	rax, QWORD PTR -80[rbp]
	add	rax, 1
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -144[rbp], rax
	jmp	.L5230
.L5264:
	nop
.L5231:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 136[rax]
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 160
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -176[rbp], rax
	cmp	QWORD PTR -176[rbp], 0
	je	.L5262
	jmp	[QWORD PTR -176[rbp]]
.L5262:
	nop
.L5233:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 136[rax]
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 160
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -192[rbp], rax
	cmp	QWORD PTR -192[rbp], 0
	je	.L5263
	jmp	[QWORD PTR -192[rbp]]
.L5263:
	nop
.L5235:
	mov	rax, QWORD PTR -32[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -168[rbp]
	add	rax, rdx
	mov	rdx, QWORD PTR -32[rbp]
	sal	rdx, 3
	lea	rcx, -8[rdx]
	mov	rdx, QWORD PTR -184[rbp]
	add	rdx, rcx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
.L5236:
	add	QWORD PTR -32[rbp], 1
.L5230:
	mov	rax, QWORD PTR -32[rbp]
	cmp	rax, QWORD PTR -144[rbp]
	jle	.L5264
	nop
.L5237:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 136[rax]
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 162
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -160[rbp], rax
	cmp	QWORD PTR -160[rbp], 0
	je	.L5265
	jmp	[QWORD PTR -160[rbp]]
.L5265:
	nop
.L5239:
	mov	rax, QWORD PTR 32[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -152[rbp]
	add	rdx, rax
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	jmp	.L5242
.L5217:
.L5240:
.L5241:
.L5256:
	nop
.L5242:
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC348:
	.ascii "MENUINDEX\0"
	.text
	.def	_ZN2MY3SYS5FORMS8MENUITEM16MENUINDEX__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM16MENUINDEX__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC348[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L5267:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 208[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L5268:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MENUITEM16MENUINDEX__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM16MENUINDEX__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L5271:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC348[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 208[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 184
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L5279
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 208
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 184
	mov	rax, QWORD PTR [rax]
	mov	r8, rdx
	mov	rdx, QWORD PTR 16[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM11CHANGEINDEXEPS2_u7INTEGER
	jmp	.L5277
.L5279:
	nop
.L5273:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 592
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L5280
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 208
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 592
	mov	rax, QWORD PTR [rax]
	mov	r8, rdx
	mov	rdx, QWORD PTR 16[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU11CHANGEINDEXEPNS1_8MENUITEMEu7INTEGER
	jmp	.L5277
.L5274:
.L5276:
.L5280:
	nop
.L5277:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MENUITEM11NAME__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM11NAME__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -48[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC183[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L5282:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 584
	mov	rcx, rax
	call	WGET
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	nop
.L5283:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -48[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MENUITEM11NAME__set__ERw;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM11NAME__set__ERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L5286:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC183[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 584[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	call	WLET
.L5287:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC349:
	.ascii "IMAGE\0"
	.text
	.def	_ZN2MY3SYS5FORMS8MENUITEM12IMAGE__set__ERNS0_7DRAWING10BITMAPTYPEE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM12IMAGE__set__ERNS0_7DRAWING10BITMAPTYPEE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 144
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L5289:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC349[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 216[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPEaSERKS2_
	lea	rax, -112[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	QWORD PTR 32[rax], 0
	mov	QWORD PTR 40[rax], 0
	mov	QWORD PTR 48[rax], 0
	mov	QWORD PTR 56[rax], 0
	mov	QWORD PTR 64[rax], 0
	mov	QWORD PTR 72[rax], 0
	lea	rax, -112[rbp]
	mov	DWORD PTR [rax], 80
	lea	rax, -112[rbp]
	add	rax, 4
	mov	DWORD PTR [rax], 128
	lea	rax, -112[rbp]
	add	rax, 72
	mov	rdx, QWORD PTR 24[rbp]
	mov	rdx, QWORD PTR 112[rdx]
	mov	QWORD PTR [rax], rdx
	lea	rax, -112[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM11SETITEMINFOER16tagMENUITEMINFOW
.L5290:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MENUITEM12IMAGE__set__ERw;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM12IMAGE__set__ERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 144
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L5292:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC349[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 216[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPEaSERw
	lea	rax, -112[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	QWORD PTR 32[rax], 0
	mov	QWORD PTR 40[rax], 0
	mov	QWORD PTR 48[rax], 0
	mov	QWORD PTR 56[rax], 0
	mov	QWORD PTR 64[rax], 0
	mov	QWORD PTR 72[rax], 0
	lea	rax, -112[rbp]
	mov	DWORD PTR [rax], 80
	lea	rax, -112[rbp]
	add	rax, 4
	mov	DWORD PTR [rax], 128
	lea	rax, -112[rbp]
	add	rax, 72
	mov	rdx, QWORD PTR 16[rbp]
	mov	rdx, QWORD PTR 328[rdx]
	mov	QWORD PTR [rax], rdx
	lea	rax, -112[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM11SETITEMINFOER16tagMENUITEMINFOW
.L5293:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC350:
	.ascii "IMAGEINDEX\0"
	.text
	.def	_ZN2MY3SYS5FORMS8MENUITEM17IMAGEINDEX__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM17IMAGEINDEX__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 320
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L5295:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rcx, .LC350[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 552[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	cmp	QWORD PTR 24[rbp], -1
	je	.L5314
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L5298
.L5314:
	nop
.L5297:
	mov	QWORD PTR -8[rbp], 0
.L5298:
	cmp	QWORD PTR -8[rbp], 0
	je	.L5315
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 493
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L5316
	jmp	[QWORD PTR -80[rbp]]
.L5316:
	nop
.L5302:
	mov	rax, QWORD PTR -72[rbp]
	add	rax, 464
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -16[rbp], rax
	jmp	.L5303
.L5315:
	nop
.L5300:
	mov	QWORD PTR -16[rbp], 0
.L5303:
	cmp	QWORD PTR -16[rbp], 0
	je	.L5317
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 495
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -104[rbp], rax
	cmp	QWORD PTR -104[rbp], 0
	je	.L5318
	jmp	[QWORD PTR -104[rbp]]
.L5318:
	nop
.L5307:
	mov	rax, QWORD PTR -96[rbp]
	add	rax, 464
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR 24[rbp]
	lea	rax, -208[rbp]
	mov	r8, rcx
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS9IMAGELIST7GETICONEu7INTEGER
	lea	rax, -208[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4ICON8TOBITMAPEv
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 328[rax]
	mov	rax, QWORD PTR -112[rbp]
	mov	QWORD PTR [rdx], rax
	lea	rax, -208[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4ICOND1Ev
	lea	rax, -288[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	QWORD PTR 32[rax], 0
	mov	QWORD PTR 40[rax], 0
	mov	QWORD PTR 48[rax], 0
	mov	QWORD PTR 56[rax], 0
	mov	QWORD PTR 64[rax], 0
	mov	QWORD PTR 72[rax], 0
	lea	rax, -288[rbp]
	mov	DWORD PTR [rax], 80
	lea	rax, -288[rbp]
	add	rax, 4
	mov	DWORD PTR [rax], 128
	lea	rax, -288[rbp]
	add	rax, 72
	mov	rdx, QWORD PTR 16[rbp]
	mov	rdx, QWORD PTR 328[rdx]
	mov	QWORD PTR [rax], rdx
	lea	rax, -288[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM11SETITEMINFOER16tagMENUITEMINFOW
	jmp	.L5309
.L5305:
.L5308:
.L5317:
	nop
.L5309:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC351:
	.ascii "IMAGEKEY\0"
	.text
	.def	_ZN2MY3SYS5FORMS8MENUITEM15IMAGEKEY__set__ERw;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM15IMAGEKEY__set__ERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 160
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L5320:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rcx, .LC351[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 560[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	call	WLET
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, .LC77[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -52[rbp], eax
	cmp	DWORD PTR -52[rbp], 0
	je	.L5339
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -64[rbp], rax
	cmp	QWORD PTR -64[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L5323
.L5339:
	nop
.L5322:
	mov	QWORD PTR -8[rbp], 0
.L5323:
	cmp	QWORD PTR -8[rbp], 0
	je	.L5340
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 542
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -88[rbp], rax
	cmp	QWORD PTR -88[rbp], 0
	je	.L5341
	jmp	[QWORD PTR -88[rbp]]
.L5341:
	nop
.L5327:
	mov	rax, QWORD PTR -80[rbp]
	add	rax, 464
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -16[rbp], rax
	jmp	.L5328
.L5340:
	nop
.L5325:
	mov	QWORD PTR -16[rbp], 0
.L5328:
	cmp	QWORD PTR -16[rbp], 0
	je	.L5342
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 543
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -112[rbp], rax
	cmp	QWORD PTR -112[rbp], 0
	je	.L5343
	jmp	[QWORD PTR -112[rbp]]
.L5343:
	nop
.L5332:
	mov	rax, QWORD PTR -104[rbp]
	add	rax, 464
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS9IMAGELIST7INDEXOFERw
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM17IMAGEINDEX__set__Eu7INTEGER
	jmp	.L5334
.L5330:
.L5333:
.L5342:
	nop
.L5334:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC352:
	.ascii "COMMAND\0"
	.text
	.def	_ZN2MY3SYS5FORMS8MENUITEM14COMMAND__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM14COMMAND__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC352[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L5345:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 200[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L5346:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MENUITEM14COMMAND__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM14COMMAND__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L5349:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC352[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 200[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
.L5350:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC184[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L5352:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 576[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L5353:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__set__EP7HMENU__;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__set__EP7HMENU__:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L5356:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC184[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 576[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
.L5357:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC353:
	.ascii "OWNER\0"
	.text
	.def	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC353[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L5359:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 592[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L5360:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__set__EPNS1_4MENUE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM12OWNER__set__EPNS1_4MENUE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L5363:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC353[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 592[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
.L5364:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MENUITEM13PARENT__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM13PARENT__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC181[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L5366:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 184
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L5373
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 184[rax]
	mov	QWORD PTR -40[rbp], rax
	jmp	.L5370
.L5373:
	nop
.L5368:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 592[rax]
	mov	QWORD PTR -40[rbp], rax
.L5369:
	nop
.L5370:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MENUITEM13PARENT__set__EPNS0_6OBJECTE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM13PARENT__set__EPNS0_6OBJECTE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L5375:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC181[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, _ZTSN2MY3SYS5FORMS4MENUE[rip]
	mov	rcx, rax
	call	fb_IsTypeOf
	mov	DWORD PTR -36[rbp], eax
	cmp	DWORD PTR -36[rbp], 0
	je	.L5383
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM17PARENTMENU__set__EPNS1_4MENUE
	jmp	.L5381
.L5383:
	nop
.L5377:
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, _ZTSN2MY3SYS5FORMS8MENUITEME[rip]
	mov	rcx, rax
	call	fb_IsTypeOf
	mov	DWORD PTR -40[rbp], eax
	cmp	DWORD PTR -40[rbp], 0
	je	.L5384
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM21PARENTMENUITEM__set__EPS2_
	jmp	.L5381
.L5378:
.L5380:
.L5384:
	nop
.L5381:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC354:
	.ascii "PARENTMENU\0"
	.text
	.def	_ZN2MY3SYS5FORMS8MENUITEM17PARENTMENU__set__EPNS1_4MENUE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM17PARENTMENU__set__EPNS1_4MENUE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L5386:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC354[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 592[rax]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 592[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	cmp	QWORD PTR -40[rbp], 0
	je	.L5392
	mov	rax, QWORD PTR -40[rbp]
	mov	rdx, QWORD PTR 16[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU6REMOVEEPNS1_8MENUITEME
	jmp	.L5388
.L5392:
	nop
.L5388:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 592
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L5393
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 592
	mov	rax, QWORD PTR [rax]
	mov	r8, -1
	mov	rdx, QWORD PTR 16[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU3ADDEPNS1_8MENUITEMEu7INTEGER
	jmp	.L5391
.L5390:
.L5393:
	nop
.L5391:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC355:
	.ascii "PARENTMENUITEM\0"
	.text
	.def	_ZN2MY3SYS5FORMS8MENUITEM21PARENTMENUITEM__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM21PARENTMENUITEM__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC355[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L5395:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 184[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L5396:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MENUITEM21PARENTMENUITEM__set__EPS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM21PARENTMENUITEM__set__EPS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L5399:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC355[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 184
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR 24[rbp], rax
	je	.L5408
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 184[rax]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 184[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	cmp	QWORD PTR -40[rbp], 0
	je	.L5409
	mov	rdx, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM6REMOVEEPS2_
	jmp	.L5403
.L5409:
	nop
.L5403:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 184
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L5410
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 184
	mov	rax, QWORD PTR [rax]
	mov	r8, -1
	lea	rdx, 16[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM3ADDERPS2_u7INTEGER
	jmp	.L5407
.L5401:
.L5405:
.L5406:
.L5408:
	nop
	jmp	.L5407
.L5410:
	nop
.L5407:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC356:
	.ascii "CAPTION\0"
	.text
	.def	_ZN2MY3SYS5FORMS8MENUITEM14CAPTION__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM14CAPTION__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -48[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC356[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L5412:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 144
	mov	rcx, rax
	call	WGET
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	nop
.L5413:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -48[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MENUITEM14CAPTION__set__ERw;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM14CAPTION__set__ERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 288
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L5416:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	lea	rcx, .LC356[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	fb_WstrLen
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	add	rax, rax
	add	rax, 2
	mov	rdx, rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 144
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	realloc
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 144[rax]
	mov	rax, QWORD PTR -80[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 144
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrAssign
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	DWORD PTR [rax], 80
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 52
	mov	DWORD PTR [rax], 320
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 144
	mov	rax, QWORD PTR [rax]
	lea	rdx, .LC344[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -84[rbp], eax
	cmp	DWORD PTR -84[rbp], 0
	jne	.L5447
	mov	QWORD PTR -8[rbp], 2048
	jmp	.L5419
.L5447:
	nop
.L5418:
	mov	QWORD PTR -8[rbp], 0
.L5419:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	rdx, QWORD PTR -8[rbp]
	mov	DWORD PTR [rax], edx
	mov	QWORD PTR -256[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 144
	mov	rax, QWORD PTR [rax]
	lea	rdx, .LC344[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -88[rbp], eax
	cmp	DWORD PTR -88[rbp], 0
	jne	.L5448
	lea	rax, -256[rbp]
	lea	rdx, .LC345[rip]
	mov	rcx, rax
	call	WLET
	jmp	.L5422
.L5448:
	nop
.L5421:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 144
	mov	rdx, QWORD PTR [rax]
	lea	rax, -256[rbp]
	mov	rcx, rax
	call	WLET
.L5422:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 104[rax]
	mov	rax, QWORD PTR -256[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR -256[rbp]
	mov	rcx, rax
	call	fb_WstrLen
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	mov	rdx, QWORD PTR -96[rbp]
	mov	DWORD PTR [rax], edx
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM21PARENTMENUITEM__get__Ev
	mov	QWORD PTR -104[rbp], rax
	cmp	QWORD PTR -104[rbp], 0
	je	.L5449
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM16MENUINDEX__get__Ev
	mov	QWORD PTR -112[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM21PARENTMENUITEM__get__Ev
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	mov	rax, QWORD PTR -112[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR -128[rbp]
	mov	r9, rdx
	mov	r8d, -1
	mov	edx, ecx
	mov	rcx, rax
	call	SetMenuItemInfoW
	jmp	.L5430
.L5449:
	nop
.L5424:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -136[rbp], rax
	cmp	QWORD PTR -136[rbp], 0
	je	.L5450
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU13HANDLE__get__Ev
	mov	QWORD PTR -152[rbp], rax
	cmp	QWORD PTR -152[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -16[rbp], rax
	jmp	.L5428
.L5450:
	nop
.L5427:
	mov	QWORD PTR -16[rbp], 0
.L5428:
	cmp	QWORD PTR -16[rbp], 0
	je	.L5451
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM16MENUINDEX__get__Ev
	mov	QWORD PTR -160[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU13HANDLE__get__Ev
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	mov	rax, QWORD PTR -160[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR -176[rbp]
	mov	r9, rdx
	mov	r8d, -1
	mov	edx, ecx
	mov	rcx, rax
	call	SetMenuItemInfoW
	jmp	.L5430
.L5425:
.L5451:
	nop
.L5430:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -184[rbp], rax
	cmp	QWORD PTR -184[rbp], 0
	je	.L5452
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -192[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU19PARENTWINDOW__get__Ev
	mov	QWORD PTR -200[rbp], rax
	cmp	QWORD PTR -200[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -24[rbp], rax
	jmp	.L5433
.L5452:
	nop
.L5432:
	mov	QWORD PTR -24[rbp], 0
.L5433:
	cmp	QWORD PTR -24[rbp], 0
	je	.L5453
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR -208[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU19PARENTWINDOW__get__Ev
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR -216[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -224[rbp], rax
	cmp	QWORD PTR -224[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -32[rbp], rax
	jmp	.L5436
.L5453:
	nop
.L5435:
	mov	QWORD PTR -32[rbp], 0
.L5436:
	cmp	QWORD PTR -32[rbp], 0
	je	.L5454
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -232[rbp], rax
	mov	rax, QWORD PTR -232[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU19PARENTWINDOW__get__Ev
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -240[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -248[rbp], rax
	mov	rax, QWORD PTR -248[rbp]
	mov	rcx, rax
	call	DrawMenuBar
	jmp	.L5439
.L5438:
.L5454:
	nop
.L5439:
	lea	rax, -256[rbp]
	mov	rcx, rax
	call	_Z11WDEALLOCATERPw
.L5440:
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC357:
	.ascii "CHECKED\0"
	.text
	.def	_ZN2MY3SYS5FORMS8MENUITEM14CHECKED__set__Eb;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM14CHECKED__set__Eb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 432
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	BYTE PTR 24[rbp], al
.L5456:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rcx, .LC357[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 176[rax]
	movzx	eax, BYTE PTR 24[rbp]
	mov	BYTE PTR [rdx], al
	lea	rax, -304[rbp]
	lea	rdx, 8[rax]
	lea	rax, -384[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -384[rbp]
	add	rax, 8
	lea	rdx, -304[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -384[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], 24
	lea	rax, -384[rbp]
	add	rax, 24
	mov	QWORD PTR [rax], 8
	lea	rax, -384[rbp]
	add	rax, 32
	mov	QWORD PTR [rax], 1
	lea	rax, -384[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], 49
	lea	rax, -384[rbp]
	add	rax, 48
	mov	QWORD PTR [rax], 3
	lea	rax, -384[rbp]
	add	rax, 56
	mov	QWORD PTR [rax], -1
	lea	rax, -384[rbp]
	add	rax, 64
	mov	QWORD PTR [rax], 1
	mov	QWORD PTR -304[rbp], 8
	lea	rax, -304[rbp]
	add	rax, 8
	mov	QWORD PTR [rax], 0
	lea	rax, -304[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], 8
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM21PARENTMENUITEM__get__Ev
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L5492
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM21PARENTMENUITEM__get__Ev
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L5459
.L5492:
	nop
.L5458:
	mov	QWORD PTR -8[rbp], 0
.L5459:
	cmp	QWORD PTR -8[rbp], 0
	je	.L5493
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L5494
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 176
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	rdx, .LC327[rip]
	mov	QWORD PTR 32[rsp], rdx
	mov	r9d, 704
	mov	r8d, 1
	mov	rdx, -1
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -96[rbp], rax
	cmp	QWORD PTR -96[rbp], 0
	je	.L5495
	jmp	[QWORD PTR -96[rbp]]
.L5495:
	nop
.L5465:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev
	mov	QWORD PTR -104[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM21PARENTMENUITEM__get__Ev
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev
	mov	QWORD PTR -120[rbp], rax
	lea	rax, -304[rbp]
	mov	rdx, QWORD PTR -88[rbp]
	sal	rdx, 3
	add	rax, rdx
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	or	eax, 16
	mov	ecx, eax
	mov	rax, QWORD PTR -104[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR -120[rbp]
	mov	r8d, ecx
	mov	rcx, rax
	call	CheckMenuItem
	nop
.L5466:
	jmp	.L5482
.L5494:
	nop
.L5463:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 176
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	rdx, .LC327[rip]
	mov	QWORD PTR 32[rsp], rdx
	mov	r9d, 706
	mov	r8d, 1
	mov	rdx, -1
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -136[rbp], rax
	cmp	QWORD PTR -136[rbp], 0
	je	.L5496
	jmp	[QWORD PTR -136[rbp]]
.L5496:
	nop
.L5468:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM16MENUINDEX__get__Ev
	mov	QWORD PTR -144[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM21PARENTMENUITEM__get__Ev
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev
	mov	QWORD PTR -160[rbp], rax
	lea	rax, -304[rbp]
	mov	rdx, QWORD PTR -128[rbp]
	sal	rdx, 3
	add	rax, rdx
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	or	ah, 4
	mov	ecx, eax
	mov	rax, QWORD PTR -144[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR -160[rbp]
	mov	r8d, ecx
	mov	rcx, rax
	call	CheckMenuItem
	jmp	.L5482
.L5493:
	nop
.L5461:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -168[rbp], rax
	cmp	QWORD PTR -168[rbp], 0
	je	.L5497
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU13HANDLE__get__Ev
	mov	QWORD PTR -184[rbp], rax
	cmp	QWORD PTR -184[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -16[rbp], rax
	jmp	.L5472
.L5497:
	nop
.L5471:
	mov	QWORD PTR -16[rbp], 0
.L5472:
	cmp	QWORD PTR -16[rbp], 0
	je	.L5498
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev
	mov	QWORD PTR -192[rbp], rax
	cmp	QWORD PTR -192[rbp], 0
	je	.L5499
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 176
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	lea	rdx, .LC327[rip]
	mov	QWORD PTR 32[rsp], rdx
	mov	r9d, 710
	mov	r8d, 1
	mov	rdx, -1
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -208[rbp], rax
	cmp	QWORD PTR -208[rbp], 0
	je	.L5500
	jmp	[QWORD PTR -208[rbp]]
.L5500:
	nop
.L5477:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev
	mov	QWORD PTR -216[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -224[rbp], rax
	mov	rax, QWORD PTR -224[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU13HANDLE__get__Ev
	mov	QWORD PTR -232[rbp], rax
	lea	rax, -304[rbp]
	mov	rdx, QWORD PTR -200[rbp]
	sal	rdx, 3
	add	rax, rdx
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	or	eax, 16
	mov	ecx, eax
	mov	rax, QWORD PTR -216[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR -232[rbp]
	mov	r8d, ecx
	mov	rcx, rax
	call	CheckMenuItem
	jmp	.L5482
.L5499:
	nop
.L5475:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 176
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -240[rbp]
	lea	rdx, .LC327[rip]
	mov	QWORD PTR 32[rsp], rdx
	mov	r9d, 712
	mov	r8d, 1
	mov	rdx, -1
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -248[rbp], rax
	cmp	QWORD PTR -248[rbp], 0
	je	.L5501
	jmp	[QWORD PTR -248[rbp]]
.L5501:
	nop
.L5479:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM16MENUINDEX__get__Ev
	mov	QWORD PTR -256[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -264[rbp], rax
	mov	rax, QWORD PTR -264[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU13HANDLE__get__Ev
	mov	QWORD PTR -272[rbp], rax
	lea	rax, -304[rbp]
	mov	rdx, QWORD PTR -240[rbp]
	sal	rdx, 3
	add	rax, rdx
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	or	ah, 4
	mov	ecx, eax
	mov	rax, QWORD PTR -256[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR -272[rbp]
	mov	r8d, ecx
	mov	rcx, rax
	call	CheckMenuItem
	jmp	.L5482
.L5469:
.L5480:
.L5481:
.L5498:
	nop
.L5482:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC358:
	.ascii "RADIOITEM\0"
	.text
	.def	_ZN2MY3SYS5FORMS8MENUITEM16RADIOITEM__set__Eb;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM16RADIOITEM__set__Eb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 192
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	BYTE PTR 24[rbp], al
.L5503:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC358[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 177[rax]
	movzx	eax, BYTE PTR 24[rbp]
	mov	BYTE PTR [rdx], al
	mov	QWORD PTR -136[rbp], 0
	mov	QWORD PTR -144[rbp], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM21PARENTMENUITEM__get__Ev
	mov	QWORD PTR -40[rbp], rax
	cmp	QWORD PTR -40[rbp], 0
	je	.L5508
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM21PARENTMENUITEM__get__Ev
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM16MENUINDEX__get__Ev
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -136[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM21PARENTMENUITEM__get__Ev
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM12COUNT__get__Ev
	mov	QWORD PTR -80[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM21PARENTMENUITEM__get__Ev
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	rdx, -1[rax]
	mov	rax, QWORD PTR -88[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM16MENUINDEX__get__Ev
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	QWORD PTR -144[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM16MENUINDEX__get__Ev
	mov	QWORD PTR -112[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM21PARENTMENUITEM__get__Ev
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	mov	r8d, eax
	mov	rax, QWORD PTR -144[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR -136[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR -128[rbp]
	mov	DWORD PTR 32[rsp], 1024
	mov	r9d, r8d
	mov	r8d, ecx
	mov	rcx, rax
	call	CheckMenuRadioItem
	jmp	.L5507
.L5505:
.L5506:
.L5508:
	nop
.L5507:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC359:
	.ascii "ENABLED\0"
	.text
	.def	_ZN2MY3SYS5FORMS8MENUITEM14ENABLED__set__Eb;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM14ENABLED__set__Eb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 400
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	BYTE PTR 24[rbp], al
.L5510:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	lea	rcx, .LC359[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 192[rax]
	movzx	eax, BYTE PTR 24[rbp]
	mov	BYTE PTR [rdx], al
	lea	rax, -368[rbp]
	lea	rdx, -288[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -368[rbp]
	add	rax, 8
	lea	rdx, -288[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -368[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], 16
	lea	rax, -368[rbp]
	add	rax, 24
	mov	QWORD PTR [rax], 8
	lea	rax, -368[rbp]
	add	rax, 32
	mov	QWORD PTR [rax], 1
	lea	rax, -368[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], 49
	lea	rax, -368[rbp]
	add	rax, 48
	mov	QWORD PTR [rax], 2
	lea	rax, -368[rbp]
	add	rax, 56
	mov	QWORD PTR [rax], 0
	lea	rax, -368[rbp]
	add	rax, 64
	mov	QWORD PTR [rax], 1
	mov	QWORD PTR -288[rbp], 3
	lea	rax, -288[rbp]
	add	rax, 8
	mov	QWORD PTR [rax], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM21PARENTMENUITEM__get__Ev
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	je	.L5543
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 192
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	neg	eax
	mov	edx, eax
	mov	eax, edx
	sar	eax, 31
	xor	edx, eax
	mov	DWORD PTR -76[rbp], edx
	sub	DWORD PTR -76[rbp], eax
	mov	eax, DWORD PTR -76[rbp]
	cdqe
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	r9, .LC327[rip]
	mov	r8d, 750
	mov	edx, 1
	mov	rcx, rax
	call	fb_ArraySngBoundChk
	mov	QWORD PTR -96[rbp], rax
	cmp	QWORD PTR -96[rbp], 0
	je	.L5544
	jmp	[QWORD PTR -96[rbp]]
.L5544:
	nop
.L5514:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM16MENUINDEX__get__Ev
	mov	QWORD PTR -104[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM21PARENTMENUITEM__get__Ev
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev
	mov	QWORD PTR -120[rbp], rax
	lea	rax, -288[rbp]
	mov	rdx, QWORD PTR -88[rbp]
	sal	rdx, 3
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	or	ah, 4
	mov	ecx, eax
	mov	rax, QWORD PTR -104[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR -120[rbp]
	mov	r8d, ecx
	mov	rcx, rax
	call	EnableMenuItem
	jmp	.L5522
.L5543:
	nop
.L5512:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -128[rbp], rax
	cmp	QWORD PTR -128[rbp], 0
	je	.L5545
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU13HANDLE__get__Ev
	mov	QWORD PTR -144[rbp], rax
	cmp	QWORD PTR -144[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L5518
.L5545:
	nop
.L5517:
	mov	QWORD PTR -8[rbp], 0
.L5518:
	cmp	QWORD PTR -8[rbp], 0
	je	.L5546
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 192
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	neg	eax
	mov	edx, eax
	mov	eax, edx
	sar	eax, 31
	xor	edx, eax
	mov	DWORD PTR -148[rbp], edx
	sub	DWORD PTR -148[rbp], eax
	mov	eax, DWORD PTR -148[rbp]
	cdqe
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	lea	r9, .LC327[rip]
	mov	r8d, 752
	mov	edx, 1
	mov	rcx, rax
	call	fb_ArraySngBoundChk
	mov	QWORD PTR -168[rbp], rax
	cmp	QWORD PTR -168[rbp], 0
	je	.L5547
	jmp	[QWORD PTR -168[rbp]]
.L5547:
	nop
.L5521:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM16MENUINDEX__get__Ev
	mov	QWORD PTR -176[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU13HANDLE__get__Ev
	mov	QWORD PTR -192[rbp], rax
	lea	rax, -288[rbp]
	mov	rdx, QWORD PTR -160[rbp]
	sal	rdx, 3
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	or	ah, 4
	mov	ecx, eax
	mov	rax, QWORD PTR -176[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR -192[rbp]
	mov	r8d, ecx
	mov	rcx, rax
	call	EnableMenuItem
	jmp	.L5522
.L5515:
.L5546:
	nop
.L5522:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM21PARENTMENUITEM__get__Ev
	mov	QWORD PTR -200[rbp], rax
	cmp	QWORD PTR -200[rbp], 0
	sete	al
	movzx	eax, al
	neg	eax
	test	eax, eax
	je	.L5548
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -208[rbp], rax
	cmp	QWORD PTR -208[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -16[rbp], rax
	jmp	.L5525
.L5548:
	nop
.L5524:
	mov	QWORD PTR -16[rbp], 0
.L5525:
	cmp	QWORD PTR -16[rbp], 0
	je	.L5549
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR -216[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU19PARENTWINDOW__get__Ev
	mov	QWORD PTR -224[rbp], rax
	cmp	QWORD PTR -224[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -24[rbp], rax
	jmp	.L5528
.L5549:
	nop
.L5527:
	mov	QWORD PTR -24[rbp], 0
.L5528:
	cmp	QWORD PTR -24[rbp], 0
	je	.L5550
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -232[rbp], rax
	mov	rax, QWORD PTR -232[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU19PARENTWINDOW__get__Ev
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -240[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -248[rbp], rax
	cmp	QWORD PTR -248[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -32[rbp], rax
	jmp	.L5531
.L5550:
	nop
.L5530:
	mov	QWORD PTR -32[rbp], 0
.L5531:
	cmp	QWORD PTR -32[rbp], 0
	je	.L5551
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -256[rbp], rax
	mov	rax, QWORD PTR -256[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU19PARENTWINDOW__get__Ev
	mov	QWORD PTR -264[rbp], rax
	mov	rax, QWORD PTR -264[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -272[rbp], rax
	mov	rax, QWORD PTR -272[rbp]
	mov	rcx, rax
	call	DrawMenuBar
	jmp	.L5535
.L5533:
.L5534:
.L5551:
	nop
.L5535:
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MENUITEM14VISIBLE__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM14VISIBLE__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	BYTE PTR -33[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC84[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L5553:
	mov	rax, QWORD PTR 16[rbp]
	movzx	eax, BYTE PTR 193[rax]
	mov	BYTE PTR -33[rbp], al
	nop
.L5554:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -33[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MENUITEM14VISIBLE__set__Eb;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM14VISIBLE__set__Eb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 240
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	BYTE PTR 24[rbp], al
.L5557:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rcx, .LC84[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 193
	movzx	eax, BYTE PTR [rax]
	cmp	BYTE PTR 24[rbp], al
	je	.L5585
	nop
.L5559:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 193[rax]
	movzx	eax, BYTE PTR 24[rbp]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 193
	movzx	eax, BYTE PTR [rax]
	test	al, al
	jne	.L5586
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM21PARENTMENUITEM__get__Ev
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L5587
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM16MENUINDEX__get__Ev
	mov	QWORD PTR -64[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM21PARENTMENUITEM__get__Ev
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR -80[rbp]
	mov	r8d, 1024
	mov	rcx, rax
	call	RemoveMenu
	jmp	.L5570
.L5587:
	nop
.L5564:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -88[rbp], rax
	cmp	QWORD PTR -88[rbp], 0
	je	.L5588
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU13HANDLE__get__Ev
	mov	QWORD PTR -104[rbp], rax
	cmp	QWORD PTR -104[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L5568
.L5588:
	nop
.L5567:
	mov	QWORD PTR -8[rbp], 0
.L5568:
	cmp	QWORD PTR -8[rbp], 0
	je	.L5589
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM16MENUINDEX__get__Ev
	mov	QWORD PTR -112[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU13HANDLE__get__Ev
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR -128[rbp]
	mov	r8d, 1024
	mov	rcx, rax
	call	RemoveMenu
	jmp	.L5579
.L5565:
.L5589:
	nop
.L5570:
	jmp	.L5579
.L5586:
	nop
.L5562:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM7SETINFOER16tagMENUITEMINFOW
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM21PARENTMENUITEM__get__Ev
	mov	QWORD PTR -136[rbp], rax
	cmp	QWORD PTR -136[rbp], 0
	je	.L5590
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM16MENUINDEX__get__Ev
	mov	QWORD PTR -144[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM21PARENTMENUITEM__get__Ev
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	mov	rax, QWORD PTR -144[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR -160[rbp]
	mov	r9, rdx
	mov	r8d, -1
	mov	edx, ecx
	mov	rcx, rax
	call	InsertMenuItemW
	jmp	.L5579
.L5590:
	nop
.L5572:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -168[rbp], rax
	cmp	QWORD PTR -168[rbp], 0
	je	.L5591
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU13HANDLE__get__Ev
	mov	QWORD PTR -184[rbp], rax
	cmp	QWORD PTR -184[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -16[rbp], rax
	jmp	.L5575
.L5591:
	nop
.L5574:
	mov	QWORD PTR -16[rbp], 0
.L5575:
	cmp	QWORD PTR -16[rbp], 0
	je	.L5592
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM16MENUINDEX__get__Ev
	mov	QWORD PTR -192[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU13HANDLE__get__Ev
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	mov	rax, QWORD PTR -192[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR -208[rbp]
	mov	r9, rdx
	mov	r8d, -1
	mov	edx, ecx
	mov	rcx, rax
	call	InsertMenuItemW
	jmp	.L5579
.L5560:
.L5577:
.L5578:
.L5585:
	nop
	jmp	.L5579
.L5592:
	nop
.L5579:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MENUITEM12COUNT__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM12COUNT__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC269[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L5594:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 128[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L5595:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MENUITEM11ITEM__get__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM11ITEM__get__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -56[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC257[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L5598:
	mov	rax, QWORD PTR 24[rbp]
	not	rax
	shr	rax, 63
	movzx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR 24[rbp], rax
	setl	al
	movzx	eax, al
	neg	eax
	and	eax, edx
	test	eax, eax
	je	.L5608
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 136[rax]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 797
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -48[rbp], rax
	cmp	QWORD PTR -48[rbp], 0
	je	.L5609
	jmp	[QWORD PTR -48[rbp]]
.L5609:
	nop
.L5602:
	mov	rax, QWORD PTR 24[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -40[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -56[rbp], rax
	jmp	.L5603
.L5600:
.L5608:
	nop
.L5604:
	mov	QWORD PTR -56[rbp], 0
	nop
.L5603:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -56[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MENUITEM11ITEM__set__Eu7INTEGERPS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM11ITEM__set__Eu7INTEGERPS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
.L5611:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC257[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L5612:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC360:
	.ascii "CLICK\0"
	.text
	.def	_ZN2MY3SYS5FORMS8MENUITEM5CLICKEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM5CLICKEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
.L5614:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC360[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 624
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L5621
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 624[rax]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 813
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -48[rbp], rax
	cmp	QWORD PTR -48[rbp], 0
	je	.L5622
	jmp	[QWORD PTR -48[rbp]]
.L5622:
	nop
.L5618:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L5619
.L5616:
.L5621:
	nop
.L5619:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MENUITEM3ADDERPS2_u7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM3ADDERPS2_u7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 272
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
.L5624:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC258[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM7INDEXOFEPS2_
	mov	QWORD PTR -48[rbp], rax
	cmp	QWORD PTR -48[rbp], -1
	jne	.L5661
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	add	rdx, 1
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 136
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	realloc
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 136[rax]
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR [rdx], rax
	cmp	QWORD PTR 32[rbp], -1
	je	.L5662
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR 32[rbp]
	add	rax, 1
	mov	QWORD PTR -64[rbp], rax
	jmp	.L5629
.L5665:
	nop
.L5630:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 136[rax]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 822
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L5663
	jmp	[QWORD PTR -80[rbp]]
.L5663:
	nop
.L5632:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 136[rax]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 822
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -96[rbp], rax
	cmp	QWORD PTR -96[rbp], 0
	je	.L5664
	jmp	[QWORD PTR -96[rbp]]
.L5664:
	nop
.L5634:
	mov	rax, QWORD PTR -8[rbp]
	sal	rax, 3
	lea	rdx, -8[rax]
	mov	rax, QWORD PTR -72[rbp]
	add	rax, rdx
	mov	rdx, QWORD PTR -8[rbp]
	sal	rdx, 3
	mov	rcx, rdx
	mov	rdx, QWORD PTR -88[rbp]
	add	rdx, rcx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
.L5635:
	sub	QWORD PTR -8[rbp], 1
.L5629:
	mov	rax, QWORD PTR -8[rbp]
	cmp	rax, QWORD PTR -64[rbp]
	jge	.L5665
	nop
.L5636:
	jmp	.L5637
.L5662:
	nop
.L5628:
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR 32[rbp], rax
.L5637:
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 32[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM16MENUINDEX__set__Eu7INTEGER
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 828
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -112[rbp], rax
	cmp	QWORD PTR -112[rbp], 0
	je	.L5666
	jmp	[QWORD PTR -112[rbp]]
.L5666:
	nop
.L5639:
	mov	rax, QWORD PTR -104[rbp]
	lea	rdx, 184[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__set__EPNS1_4MENUE
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS15ALLOCATECOMMANDEPNS1_8MENUITEME
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 136[rax]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 834
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -136[rbp], rax
	cmp	QWORD PTR -136[rbp], 0
	je	.L5667
	jmp	[QWORD PTR -136[rbp]]
.L5667:
	nop
.L5641:
	mov	rax, QWORD PTR 32[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -128[rbp]
	add	rdx, rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 616
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jne	.L5668
	mov	ecx, 496
	call	malloc
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	mov	QWORD PTR -152[rbp], rax
	cmp	QWORD PTR -152[rbp], 0
	je	.L5669
	mov	rax, QWORD PTR -152[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS9POPUPMENUC1Ev
	jmp	.L5645
.L5669:
	nop
.L5645:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 616[rax]
	mov	rax, QWORD PTR -152[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 616
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 16[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS9POPUPMENU21PARENTMENUITEM__set__EPNS1_8MENUITEME
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 616
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU13HANDLE__get__Ev
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__set__EP7HMENU__
	lea	rax, -240[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	QWORD PTR 32[rax], 0
	lea	rax, -240[rbp]
	mov	DWORD PTR [rax], 40
	lea	rax, -240[rbp]
	add	rax, 32
	mov	rdx, QWORD PTR 16[rbp]
	mov	rdx, QWORD PTR 616[rdx]
	mov	QWORD PTR [rax], rdx
	lea	rax, -240[rbp]
	add	rax, 4
	mov	DWORD PTR [rax], 8
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev
	mov	QWORD PTR -168[rbp], rax
	lea	rdx, -240[rbp]
	mov	rax, QWORD PTR -168[rbp]
	mov	rcx, rax
	call	SetMenuInfo
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM7SETINFOER16tagMENUITEMINFOW
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM11SETITEMINFOER16tagMENUITEMINFOW
	jmp	.L5646
.L5643:
.L5668:
	nop
.L5646:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM7SETINFOER16tagMENUITEMINFOW
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 872
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -184[rbp], rax
	cmp	QWORD PTR -184[rbp], 0
	je	.L5670
	jmp	[QWORD PTR -184[rbp]]
.L5670:
	nop
.L5648:
	mov	rax, QWORD PTR -176[rbp]
	add	rax, 193
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L5671
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	mov	rax, QWORD PTR 32[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR -192[rbp]
	mov	r9, rdx
	mov	r8d, -1
	mov	edx, ecx
	mov	rcx, rax
	call	InsertMenuItemW
	jmp	.L5653
.L5626:
.L5650:
.L5651:
.L5652:
.L5661:
	nop
	jmp	.L5653
.L5671:
	nop
.L5653:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MENUITEM6INSERTEu7INTEGERPS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM6INSERTEu7INTEGERPS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 352
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
.L5673:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rcx, .LC259[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM7INDEXOFEPS2_
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], -1
	jne	.L5724
	mov	rax, QWORD PTR 24[rbp]
	not	rax
	shr	rax, 63
	movzx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR 24[rbp], rax
	setl	al
	movzx	eax, al
	neg	eax
	and	eax, edx
	test	eax, eax
	je	.L5725
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	add	rdx, 1
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 136
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	realloc
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 136[rax]
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 1
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -72[rbp], rax
	jmp	.L5677
.L5728:
	nop
.L5678:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 136[rax]
	mov	QWORD PTR -256[rbp], rax
	mov	rax, QWORD PTR -256[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 942
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -264[rbp], rax
	cmp	QWORD PTR -264[rbp], 0
	je	.L5726
	jmp	[QWORD PTR -264[rbp]]
.L5726:
	nop
.L5680:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 136[rax]
	mov	QWORD PTR -272[rbp], rax
	mov	rax, QWORD PTR -272[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 942
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -280[rbp], rax
	cmp	QWORD PTR -280[rbp], 0
	je	.L5727
	jmp	[QWORD PTR -280[rbp]]
.L5727:
	nop
.L5682:
	mov	rax, QWORD PTR -8[rbp]
	sal	rax, 3
	lea	rdx, -8[rax]
	mov	rax, QWORD PTR -256[rbp]
	add	rax, rdx
	mov	rdx, QWORD PTR -8[rbp]
	sal	rdx, 3
	mov	rcx, rdx
	mov	rdx, QWORD PTR -272[rbp]
	add	rdx, rcx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
.L5683:
	add	QWORD PTR -8[rbp], 1
.L5677:
	mov	rax, QWORD PTR -8[rbp]
	cmp	rax, QWORD PTR -72[rbp]
	jle	.L5728
	nop
.L5684:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 136[rax]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 944
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -88[rbp], rax
	cmp	QWORD PTR -88[rbp], 0
	je	.L5729
	jmp	[QWORD PTR -88[rbp]]
.L5729:
	nop
.L5686:
	mov	rax, QWORD PTR 24[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -80[rbp]
	add	rdx, rax
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 136[rax]
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 945
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -104[rbp], rax
	cmp	QWORD PTR -104[rbp], 0
	je	.L5730
	jmp	[QWORD PTR -104[rbp]]
.L5730:
	nop
.L5688:
	mov	rax, QWORD PTR 24[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -96[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM16MENUINDEX__set__Eu7INTEGER
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 136[rax]
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 946
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -120[rbp], rax
	cmp	QWORD PTR -120[rbp], 0
	je	.L5731
	jmp	[QWORD PTR -120[rbp]]
.L5731:
	nop
.L5690:
	mov	rax, QWORD PTR 24[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -112[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 946
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -136[rbp], rax
	cmp	QWORD PTR -136[rbp], 0
	je	.L5732
	jmp	[QWORD PTR -136[rbp]]
.L5732:
	nop
.L5692:
	mov	rax, QWORD PTR -128[rbp]
	lea	rdx, 184[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 136[rax]
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 947
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -160[rbp], rax
	cmp	QWORD PTR -160[rbp], 0
	je	.L5733
	jmp	[QWORD PTR -160[rbp]]
.L5733:
	nop
.L5694:
	mov	rax, QWORD PTR 24[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -152[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR -144[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__set__EPNS1_4MENUE
	mov	rax, QWORD PTR 32[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS15ALLOCATECOMMANDEPNS1_8MENUITEME
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jle	.L5734
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev
	mov	QWORD PTR -168[rbp], rax
	cmp	QWORD PTR -168[rbp], 0
	jne	.L5735
	call	CreatePopupMenu
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__set__EP7HMENU__
	lea	rax, -320[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	QWORD PTR 32[rax], 0
	lea	rax, -320[rbp]
	mov	DWORD PTR [rax], 40
	lea	rax, -320[rbp]
	add	rax, 32
	mov	rdx, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -320[rbp]
	add	rax, 4
	mov	DWORD PTR [rax], 8
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev
	mov	QWORD PTR -184[rbp], rax
	lea	rdx, -320[rbp]
	mov	rax, QWORD PTR -184[rbp]
	mov	rcx, rax
	call	SetMenuInfo
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM7SETINFOER16tagMENUITEMINFOW
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM21PARENTMENUITEM__get__Ev
	mov	QWORD PTR -192[rbp], rax
	cmp	QWORD PTR -192[rbp], 0
	je	.L5736
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM16MENUINDEX__get__Ev
	mov	QWORD PTR -200[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM21PARENTMENUITEM__get__Ev
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR -208[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	mov	rax, QWORD PTR -200[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR -216[rbp]
	mov	r9, rdx
	mov	r8d, -1
	mov	edx, ecx
	mov	rcx, rax
	call	SetMenuItemInfoW
	jmp	.L5703
.L5699:
.L5700:
.L5696:
.L5701:
.L5702:
.L5734:
	nop
	jmp	.L5703
.L5735:
	nop
	jmp	.L5703
.L5736:
	nop
.L5703:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	mov	rax, QWORD PTR 32[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM7SETINFOER16tagMENUITEMINFOW
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev
	mov	QWORD PTR -224[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR -224[rbp]
	mov	r9, rdx
	mov	r8d, -1
	mov	edx, ecx
	mov	rcx, rax
	call	InsertMenuItemW
	mov	QWORD PTR -16[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -232[rbp], rax
	jmp	.L5704
.L5738:
	nop
.L5705:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 136[rax]
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -240[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 973
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -248[rbp], rax
	cmp	QWORD PTR -248[rbp], 0
	je	.L5737
	jmp	[QWORD PTR -248[rbp]]
.L5737:
	nop
.L5707:
	mov	rax, QWORD PTR -16[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -240[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM16MENUINDEX__set__Eu7INTEGER
.L5708:
	add	QWORD PTR -16[rbp], 1
.L5704:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -232[rbp]
	jle	.L5738
	jmp	.L5713
.L5675:
.L5709:
.L5710:
.L5711:
.L5712:
.L5724:
	nop
	jmp	.L5713
.L5725:
	nop
.L5713:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MENUITEM6REMOVEEPS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM6REMOVEEPS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 192
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L5740:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC261[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	QWORD PTR -144[rbp], 0
	mov	QWORD PTR -152[rbp], 0
	mov	QWORD PTR -160[rbp], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM7INDEXOFEPS2_
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	cmp	rax, -1
	je	.L5771
	mov	rax, QWORD PTR -144[rbp]
	add	rax, 1
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -56[rbp], rax
	jmp	.L5743
.L5774:
	nop
.L5744:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 136[rax]
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 985
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -120[rbp], rax
	cmp	QWORD PTR -120[rbp], 0
	je	.L5772
	jmp	[QWORD PTR -120[rbp]]
.L5772:
	nop
.L5746:
	mov	rax, QWORD PTR -152[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -112[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 136[rax]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 986
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -136[rbp], rax
	cmp	QWORD PTR -136[rbp], 0
	je	.L5773
	jmp	[QWORD PTR -136[rbp]]
.L5773:
	nop
.L5748:
	mov	rax, QWORD PTR -152[rbp]
	sal	rax, 3
	lea	rdx, -8[rax]
	mov	rax, QWORD PTR -128[rbp]
	add	rdx, rax
	mov	rax, QWORD PTR -160[rbp]
	mov	QWORD PTR [rdx], rax
.L5749:
	mov	rax, QWORD PTR -152[rbp]
	add	rax, 1
	mov	QWORD PTR -152[rbp], rax
.L5743:
	mov	rax, QWORD PTR -152[rbp]
	cmp	QWORD PTR -56[rbp], rax
	jge	.L5774
	nop
.L5750:
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	sub	rdx, 1
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jne	.L5775
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 136
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	free
	jmp	.L5759
.L5775:
	nop
.L5752:
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 136
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	realloc
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 136[rax]
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR [rdx], rax
	mov	QWORD PTR -8[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -72[rbp], rax
	jmp	.L5754
.L5777:
	nop
.L5755:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 136[rax]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 994
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -88[rbp], rax
	cmp	QWORD PTR -88[rbp], 0
	je	.L5776
	jmp	[QWORD PTR -88[rbp]]
.L5776:
	nop
.L5757:
	mov	rax, QWORD PTR -8[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -80[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR -8[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM16MENUINDEX__set__Eu7INTEGER
.L5758:
	add	QWORD PTR -8[rbp], 1
.L5754:
	mov	rax, QWORD PTR -8[rbp]
	cmp	rax, QWORD PTR -72[rbp]
	jle	.L5777
.L5753:
	nop
.L5759:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev
	mov	QWORD PTR -96[rbp], rax
	cmp	QWORD PTR -96[rbp], 0
	je	.L5778
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR -104[rbp]
	mov	r8d, 1024
	mov	rcx, rax
	call	RemoveMenu
	jmp	.L5764
.L5742:
.L5761:
.L5762:
.L5763:
.L5771:
	nop
	jmp	.L5764
.L5778:
	nop
.L5764:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MENUITEM5CLEAREv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM5CLEAREv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 160
	mov	QWORD PTR 16[rbp], rcx
.L5780:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC262[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM12COUNT__get__Ev
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	sub	rax, 1
	mov	QWORD PTR -8[rbp], rax
	jmp	.L5781
.L5821:
	nop
.L5782:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 136[rax]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1011
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -64[rbp], rax
	cmp	QWORD PTR -64[rbp], 0
	je	.L5813
	jmp	[QWORD PTR -64[rbp]]
.L5813:
	nop
.L5784:
	mov	rax, QWORD PTR -8[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -56[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1011
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L5814
	jmp	[QWORD PTR -80[rbp]]
.L5814:
	nop
.L5786:
	mov	rax, QWORD PTR -72[rbp]
	add	rax, 40
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L5815
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 136[rax]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1011
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -96[rbp], rax
	cmp	QWORD PTR -96[rbp], 0
	je	.L5816
	jmp	[QWORD PTR -96[rbp]]
.L5816:
	nop
.L5790:
	mov	rax, QWORD PTR -8[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -88[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L5817
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 136[rax]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1011
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -104[rbp], rax
	cmp	QWORD PTR -104[rbp], 0
	je	.L5818
	jmp	[QWORD PTR -104[rbp]]
.L5818:
	nop
.L5793:
	mov	rax, QWORD PTR -8[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -88[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEMD1Ev
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 136[rax]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1011
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -112[rbp], rax
	cmp	QWORD PTR -112[rbp], 0
	je	.L5819
	jmp	[QWORD PTR -112[rbp]]
.L5819:
	nop
.L5795:
	mov	rax, QWORD PTR -8[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -88[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	free
	jmp	.L5796
.L5788:
.L5815:
	nop
	jmp	.L5796
.L5817:
	nop
.L5796:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev
	mov	QWORD PTR -120[rbp], rax
	cmp	QWORD PTR -120[rbp], 0
	je	.L5820
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM13HANDLE__get__Ev
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR -128[rbp]
	mov	r8d, 1024
	mov	rcx, rax
	call	RemoveMenu
	jmp	.L5800
.L5798:
.L5799:
.L5820:
	nop
.L5800:
	sub	QWORD PTR -8[rbp], 1
.L5781:
	cmp	QWORD PTR -8[rbp], 0
	jns	.L5821
	nop
.L5801:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 136
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L5822
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 136
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L5823
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 136
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	free
	jmp	.L5805
.L5803:
.L5822:
	nop
	jmp	.L5805
.L5823:
	nop
.L5805:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 136
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	QWORD PTR [rax], 0
.L5806:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MENUITEM7INDEXOFEPS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM7INDEXOFEPS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -64[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC263[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L5825:
	mov	QWORD PTR -72[rbp], 0
	mov	QWORD PTR -72[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -40[rbp], rax
	jmp	.L5826
.L5841:
	nop
.L5827:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 136[rax]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1028
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L5839
	jmp	[QWORD PTR -56[rbp]]
.L5839:
	nop
.L5829:
	mov	rax, QWORD PTR -72[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -48[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR 24[rbp], rax
	jne	.L5840
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -64[rbp], rax
	jmp	.L5832
.L5831:
.L5840:
	nop
.L5833:
	mov	rax, QWORD PTR -72[rbp]
	add	rax, 1
	mov	QWORD PTR -72[rbp], rax
.L5826:
	mov	rax, QWORD PTR -72[rbp]
	cmp	QWORD PTR -40[rbp], rax
	jge	.L5841
	nop
.L5834:
	mov	QWORD PTR -64[rbp], -1
	nop
.L5832:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -64[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MENUITEM7INDEXOFERw;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM7INDEXOFERw:
	push	rbp
	mov	rbp, rsp
	add	rsp, -128
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -80[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC263[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L5843:
	mov	QWORD PTR -88[rbp], 0
	mov	QWORD PTR -88[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -40[rbp], rax
	jmp	.L5844
.L5859:
	nop
.L5845:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 136[rax]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1036
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L5857
	jmp	[QWORD PTR -56[rbp]]
.L5857:
	nop
.L5847:
	mov	rax, QWORD PTR -88[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -48[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM11NAME__get__Ev
	mov	QWORD PTR -64[rbp], rax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -68[rbp], eax
	cmp	DWORD PTR -68[rbp], 0
	jne	.L5858
	mov	rax, QWORD PTR -88[rbp]
	mov	QWORD PTR -80[rbp], rax
	jmp	.L5850
.L5849:
.L5858:
	nop
.L5851:
	mov	rax, QWORD PTR -88[rbp]
	add	rax, 1
	mov	QWORD PTR -88[rbp], rax
.L5844:
	mov	rax, QWORD PTR -88[rbp]
	cmp	QWORD PTR -40[rbp], rax
	jge	.L5859
	nop
.L5852:
	mov	QWORD PTR -80[rbp], -1
	nop
.L5850:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -80[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC361:
	.ascii "FIND\0"
	.text
	.def	_ZN2MY3SYS5FORMS8MENUITEM4FINDEu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM4FINDEu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 144
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -104[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC361[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L5861:
	mov	QWORD PTR -112[rbp], 0
	mov	QWORD PTR -8[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -48[rbp], rax
	jmp	.L5862
.L5879:
	nop
.L5863:
	mov	rax, QWORD PTR -8[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM14COMMAND__get__Ev
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	cmp	rax, QWORD PTR 24[rbp]
	jne	.L5876
	mov	rax, QWORD PTR -8[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -104[rbp], rax
	jmp	.L5866
.L5876:
	nop
.L5865:
	mov	rax, QWORD PTR -8[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -80[rbp], rax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM4FINDEu7INTEGER
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	test	rax, rax
	je	.L5877
	mov	rax, QWORD PTR -112[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM14COMMAND__get__Ev
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	cmp	rax, QWORD PTR 24[rbp]
	jne	.L5878
	mov	rax, QWORD PTR -112[rbp]
	mov	QWORD PTR -104[rbp], rax
	jmp	.L5866
.L5868:
.L5870:
.L5877:
	nop
	jmp	.L5871
.L5878:
	nop
.L5871:
	add	QWORD PTR -8[rbp], 1
.L5862:
	mov	rax, QWORD PTR -8[rbp]
	cmp	rax, QWORD PTR -48[rbp]
	jle	.L5879
	nop
.L5872:
	mov	QWORD PTR -104[rbp], 0
	nop
.L5866:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -104[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MENUITEM4FINDERw;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM4FINDERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 160
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -120[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC361[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L5881:
	mov	QWORD PTR -128[rbp], 0
	mov	QWORD PTR -8[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -48[rbp], rax
	jmp	.L5882
.L5899:
	nop
.L5883:
	mov	rax, QWORD PTR -8[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM11NAME__get__Ev
	mov	QWORD PTR -64[rbp], rax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -68[rbp], eax
	cmp	DWORD PTR -68[rbp], 0
	jne	.L5896
	mov	rax, QWORD PTR -8[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	QWORD PTR -120[rbp], rax
	jmp	.L5886
.L5896:
	nop
.L5885:
	mov	rax, QWORD PTR -8[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -88[rbp], rax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -88[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM4FINDERw
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	test	rax, rax
	je	.L5897
	mov	rax, QWORD PTR -128[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM11NAME__get__Ev
	mov	QWORD PTR -104[rbp], rax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -108[rbp], eax
	cmp	DWORD PTR -108[rbp], 0
	jne	.L5898
	mov	rax, QWORD PTR -128[rbp]
	mov	QWORD PTR -120[rbp], rax
	jmp	.L5886
.L5888:
.L5890:
.L5897:
	nop
	jmp	.L5891
.L5898:
	nop
.L5891:
	add	QWORD PTR -8[rbp], 1
.L5882:
	mov	rax, QWORD PTR -8[rbp]
	cmp	rax, QWORD PTR -48[rbp]
	jle	.L5899
	nop
.L5892:
	mov	QWORD PTR -120[rbp], 0
	nop
.L5886:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -120[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MENUITEMcvPvEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEMcvPvEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L5901:
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR -40[rbp], rax
	nop
.L5902:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC362:
	.ascii "BITMAPCHANGED\0"
	.text
	.def	_ZN2MY3SYS5FORMS8MENUITEM13BITMAPCHANGEDERNS0_7DRAWING10BITMAPTYPEE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEM13BITMAPCHANGEDERNS0_7DRAWING10BITMAPTYPEE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
.L5905:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC362[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 104[rax]
	mov	QWORD PTR -40[rbp], rax
.L5906:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 2
.LC363:
	.ascii "M\0e\0n\0u\0I\0t\0e\0m\0\0\0"
	.text
	.def	_ZN2MY3SYS5FORMS8MENUITEMC1ERwS3_PFvRNS0_6OBJECTEEb;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEMC1ERwS3_PFvRNS0_6OBJECTEEb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
	mov	eax, DWORD PTR 48[rbp]
	mov	BYTE PTR -36[rbp], al
.L5908:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	QWORD PTR 32[rax], 0
	mov	QWORD PTR 40[rax], 0
	mov	QWORD PTR 48[rax], 0
	mov	QWORD PTR 56[rax], 0
	mov	QWORD PTR 64[rax], 0
	mov	QWORD PTR 72[rax], 0
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 136
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 144
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 152
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 168
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 176
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 177
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 184
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 192
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 193
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 200
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 208
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 216
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPEC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 552
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 560
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 568
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 576
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 584
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 592
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 600
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 608
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 616
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 624
	mov	QWORD PTR [rax], 0
	lea	rdx, _ZTVN2MY3SYS5FORMS8MENUITEME[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 193
	mov	BYTE PTR [rax], 1
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 192
	mov	BYTE PTR [rax], 1
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 176
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 320[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 544
	lea	rdx, _ZN2MY3SYS5FORMS8MENUITEM13BITMAPCHANGEDERNS0_7DRAWING10BITMAPTYPEE[rip]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 328
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM14CAPTION__set__ERw
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 552
	mov	QWORD PTR [rax], -1
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 624[rax]
	mov	rax, QWORD PTR 40[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 32
	lea	rdx, .LC363[rip]
	mov	rcx, rax
	call	WLET
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 560[rax]
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	call	WLET
.L5909:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MENUITEMD1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MENUITEMD1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	lea	rdx, _ZTVN2MY3SYS5FORMS8MENUITEME[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L5911:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MENUITEM5CLEAREv
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 152
	mov	rcx, rax
	call	_Z11WDEALLOCATERPw
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 144
	mov	rcx, rax
	call	_Z11WDEALLOCATERPw
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rcx, rax
	call	_Z11WDEALLOCATERPw
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 168
	mov	rcx, rax
	call	_Z11WDEALLOCATERPw
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 584
	mov	rcx, rax
	call	_Z11WDEALLOCATERPw
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 560
	mov	rcx, rax
	call	_Z11WDEALLOCATERPw
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 576
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L5916
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 576
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DestroyMenu
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 576
	mov	QWORD PTR [rax], 0
	jmp	.L5915
.L5913:
.L5914:
.L5916:
	nop
.L5915:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 216
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPED1Ev
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTD1Ev
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 2
.LC364:
	.ascii "c\0o\0l\0o\0r\0i\0z\0e\0e\0n\0t\0i\0r\0e\0\0\0"
	.align 2
.LC365:
	.ascii "d\0i\0s\0p\0l\0a\0y\0i\0c\0o\0n\0s\0\0\0"
	.align 2
.LC366:
	.ascii "i\0m\0a\0g\0e\0s\0l\0i\0s\0t\0\0\0"
	.text
	.def	_ZN2MY3SYS5FORMS4MENU12READPROPERTYER8FBSTRING;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4MENU12READPROPERTYER8FBSTRING:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 304
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -224[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC152[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L5918:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 136
	mov	rdx, QWORD PTR -40[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrAssign
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 136[rax]
	lea	rax, -256[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -256[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC301[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L5950
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L5921:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 336
	mov	QWORD PTR -224[rbp], rax
	lea	rax, -256[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L5941
.L5950:
	nop
.L5920:
	lea	rax, -256[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	rdx, .LC195[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -84[rbp], eax
	cmp	DWORD PTR -84[rbp], 0
	jne	.L5951
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L5925:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 408
	mov	QWORD PTR -224[rbp], rax
	lea	rax, -256[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L5941
.L5951:
	nop
.L5924:
	lea	rax, -256[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	lea	rdx, .LC364[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -108[rbp], eax
	cmp	DWORD PTR -108[rbp], 0
	jne	.L5952
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L5928:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 456
	mov	QWORD PTR -224[rbp], rax
	lea	rax, -256[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L5941
.L5952:
	nop
.L5927:
	lea	rax, -256[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	rdx, .LC365[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -132[rbp], eax
	cmp	DWORD PTR -132[rbp], 0
	jne	.L5953
	mov	rax, QWORD PTR -128[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L5931:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 416
	mov	QWORD PTR -224[rbp], rax
	lea	rax, -256[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L5941
.L5953:
	nop
.L5930:
	lea	rax, -256[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	lea	rdx, .LC366[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -156[rbp], eax
	cmp	DWORD PTR -156[rbp], 0
	jne	.L5954
	mov	rax, QWORD PTR -152[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L5934:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 464[rax]
	mov	QWORD PTR -224[rbp], rax
	lea	rax, -256[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L5941
.L5954:
	nop
.L5933:
	lea	rax, -256[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	lea	rdx, .LC311[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -180[rbp], eax
	cmp	DWORD PTR -180[rbp], 0
	jne	.L5955
	mov	rax, QWORD PTR -176[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L5937:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 448[rax]
	mov	QWORD PTR -224[rbp], rax
	lea	rax, -256[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L5941
.L5955:
	nop
.L5936:
	lea	rax, -256[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -192[rbp]
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	lea	rdx, .LC196[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -204[rbp], eax
	cmp	DWORD PTR -204[rbp], 0
	jne	.L5956
	mov	rax, QWORD PTR -200[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L5940:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 400
	mov	QWORD PTR -224[rbp], rax
	lea	rax, -256[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L5941
.L5956:
	nop
.L5939:
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12READPROPERTYER8FBSTRING
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR -216[rbp]
	mov	QWORD PTR -224[rbp], rax
	lea	rax, -256[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	nop
.L5941:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -224[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4MENU13WRITEPROPERTYER8FBSTRINGPv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4MENU13WRITEPROPERTYER8FBSTRINGPv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 384
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	BYTE PTR -266[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC154[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L5958:
	cmp	QWORD PTR 32[rbp], 0
	jne	.L6003
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -304[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13WRITEPROPERTYER8FBSTRINGPv
	mov	BYTE PTR -41[rbp], al
	movzx	eax, BYTE PTR -41[rbp]
	mov	BYTE PTR -266[rbp], al
	lea	rax, -304[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L5961
.L6003:
	nop
.L5960:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -56[rbp], rax
	mov	rdx, QWORD PTR -56[rbp]
	lea	rax, -336[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -336[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	rdx, .LC195[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -76[rbp], eax
	cmp	DWORD PTR -76[rbp], 0
	jne	.L6004
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L5964:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1190
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -96[rbp], rax
	cmp	QWORD PTR -96[rbp], 0
	je	.L6005
	jmp	[QWORD PTR -96[rbp]]
.L6005:
	nop
.L5966:
	mov	rax, QWORD PTR -88[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENU12COLOR__set__Eu7INTEGER
	jmp	.L5989
.L6004:
	nop
.L5963:
	lea	rax, -336[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	lea	rdx, .LC364[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -116[rbp], eax
	cmp	DWORD PTR -116[rbp], 0
	jne	.L6006
	mov	rax, QWORD PTR -112[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L5970:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1191
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -136[rbp], rax
	cmp	QWORD PTR -136[rbp], 0
	je	.L6007
	jmp	[QWORD PTR -136[rbp]]
.L6007:
	nop
.L5972:
	mov	rax, QWORD PTR -128[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENU21COLORIZEENTIRE__set__Eu7INTEGER
	jmp	.L5989
.L6006:
	nop
.L5969:
	lea	rax, -336[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	lea	rdx, .LC365[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -156[rbp], eax
	cmp	DWORD PTR -156[rbp], 0
	jne	.L6008
	mov	rax, QWORD PTR -152[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L5975:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1192
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -176[rbp], rax
	cmp	QWORD PTR -176[rbp], 0
	je	.L6009
	jmp	[QWORD PTR -176[rbp]]
.L6009:
	nop
.L5977:
	mov	rax, QWORD PTR -168[rbp]
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENU19DISPLAYICONS__set__Eb
	jmp	.L5989
.L6008:
	nop
.L5974:
	lea	rax, -336[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -192[rbp]
	lea	rdx, .LC366[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -196[rbp], eax
	cmp	DWORD PTR -196[rbp], 0
	jne	.L6010
	mov	rax, QWORD PTR -192[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L5980:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 464[rax]
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR [rdx], rax
	jmp	.L5989
.L6010:
	nop
.L5979:
	lea	rax, -336[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR -208[rbp]
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR -216[rbp]
	lea	rdx, .LC311[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -220[rbp], eax
	cmp	DWORD PTR -220[rbp], 0
	jne	.L6011
	mov	rax, QWORD PTR -216[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L5983:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENU19PARENTWINDOW__set__EPNS0_14COMPONENTMODEL9COMPONENTE
	jmp	.L5989
.L6011:
	nop
.L5982:
	lea	rax, -336[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -232[rbp], rax
	mov	rax, QWORD PTR -232[rbp]
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -240[rbp]
	lea	rdx, .LC196[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -244[rbp], eax
	cmp	DWORD PTR -244[rbp], 0
	jne	.L6012
	mov	rax, QWORD PTR -240[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L5986:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -256[rbp], rax
	mov	rax, QWORD PTR -256[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1195
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -264[rbp], rax
	cmp	QWORD PTR -264[rbp], 0
	je	.L6013
	jmp	[QWORD PTR -264[rbp]]
.L6013:
	nop
.L5988:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 400[rax]
	mov	rax, QWORD PTR -256[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L5989
.L6012:
	nop
.L5985:
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13WRITEPROPERTYER8FBSTRINGPv
	mov	BYTE PTR -265[rbp], al
	movzx	eax, BYTE PTR -265[rbp]
	mov	BYTE PTR -266[rbp], al
	lea	rax, -336[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L5961
.L5967:
.L5989:
	lea	rax, -336[rbp]
	mov	rcx, rax
	call	fb_StrDelete
.L5990:
	mov	BYTE PTR -266[rbp], 1
	nop
.L5961:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -266[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4MENU13HANDLE__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4MENU13HANDLE__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC184[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L6015:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 392[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L6016:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4MENU19PARENTWINDOW__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4MENU19PARENTWINDOW__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC312[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L6019:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 448[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L6020:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4MENU19PARENTWINDOW__set__EPNS0_14COMPONENTMODEL9COMPONENTE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4MENU19PARENTWINDOW__set__EPNS0_14COMPONENTMODEL9COMPONENTE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L6023:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC312[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 448[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 464
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L6027
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 448
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 464
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS9IMAGELIST19PARENTWINDOW__set__EPNS0_14COMPONENTMODEL9COMPONENTE
	jmp	.L6026
.L6025:
.L6027:
	nop
.L6026:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC367:
	.ascii "DISPLAYICONS\0"
	.text
	.def	_ZN2MY3SYS5FORMS4MENU19DISPLAYICONS__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4MENU19DISPLAYICONS__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	BYTE PTR -33[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC367[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L6029:
	mov	rax, QWORD PTR 16[rbp]
	movzx	eax, BYTE PTR 416[rax]
	mov	BYTE PTR -33[rbp], al
	nop
.L6030:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -33[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4MENU19DISPLAYICONS__set__Eb;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4MENU19DISPLAYICONS__set__Eb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	BYTE PTR 24[rbp], al
.L6033:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC367[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 416[rax]
	movzx	eax, BYTE PTR 24[rbp]
	mov	BYTE PTR [rdx], al
.L6034:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4MENU12COLOR__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4MENU12COLOR__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 192
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L6036:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rcx, .LC199[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 408[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENU13HANDLE__get__Ev
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L6055
	lea	rax, -160[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	QWORD PTR 32[rax], 0
	lea	rax, -160[rbp]
	mov	DWORD PTR [rax], 40
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENU13HANDLE__get__Ev
	mov	QWORD PTR -64[rbp], rax
	lea	rdx, -160[rbp]
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	GetMenuInfo
	lea	rax, -160[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L6056
	lea	rax, -160[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DeleteObject
	jmp	.L6041
.L6040:
.L6056:
	nop
.L6041:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 408
	mov	rax, QWORD PTR [rax]
	mov	ecx, eax
	call	CreateSolidBrush
	mov	QWORD PTR -72[rbp], rax
	lea	rax, -160[rbp]
	add	rax, 16
	mov	rdx, QWORD PTR -72[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 456
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L6057
	mov	eax, 2147483648
	mov	QWORD PTR -8[rbp], rax
	jmp	.L6044
.L6057:
	nop
.L6043:
	mov	QWORD PTR -8[rbp], 0
.L6044:
	mov	rax, QWORD PTR -8[rbp]
	or	eax, 2
	mov	edx, eax
	lea	rax, -160[rbp]
	add	rax, 4
	mov	DWORD PTR [rax], edx
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENU13HANDLE__get__Ev
	mov	QWORD PTR -80[rbp], rax
	lea	rdx, -160[rbp]
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	SetMenuInfo
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 448
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L6058
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 448
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -88[rbp], rax
	cmp	QWORD PTR -88[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -16[rbp], rax
	jmp	.L6047
.L6058:
	nop
.L6046:
	mov	QWORD PTR -16[rbp], 0
.L6047:
	cmp	QWORD PTR -16[rbp], 0
	je	.L6059
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 448
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	rcx, rax
	call	DrawMenuBar
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 448
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	r9d, 5
	mov	r8d, 0
	mov	edx, 0
	mov	rcx, rax
	call	RedrawWindow
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 448
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	mov	rcx, rax
	call	UpdateWindow
	jmp	.L6052
.L6049:
.L6050:
.L6038:
.L6051:
.L6055:
	nop
	jmp	.L6052
.L6059:
	nop
.L6052:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC368:
	.ascii "COLORIZEENTIRE\0"
	.text
	.def	_ZN2MY3SYS5FORMS4MENU21COLORIZEENTIRE__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4MENU21COLORIZEENTIRE__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L6061:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC368[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 456[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 408
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENU12COLOR__set__Eu7INTEGER
.L6062:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4MENU12COUNT__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4MENU12COUNT__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -48[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC269[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L6064:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 440
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L6071
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 440
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM12COUNT__get__Ev
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	jmp	.L6068
.L6071:
	nop
.L6066:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 336[rax]
	mov	QWORD PTR -48[rbp], rax
.L6067:
	nop
.L6068:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -48[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4MENU11ITEM__get__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4MENU11ITEM__get__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -72[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC257[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L6073:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 440
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L6090
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 440
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM12COUNT__get__Ev
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	not	rax
	shr	rax, 63
	movzx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR 24[rbp]
	cmp	rax, QWORD PTR -40[rbp]
	setl	al
	movzx	eax, al
	neg	eax
	and	eax, edx
	test	eax, eax
	je	.L6091
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 440
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -72[rbp], rax
	jmp	.L6078
.L6077:
.L6091:
	nop
.L6079:
	jmp	.L6085
.L6090:
	nop
.L6075:
	mov	rax, QWORD PTR 24[rbp]
	not	rax
	shr	rax, 63
	movzx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 336
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR 24[rbp], rax
	setl	al
	movzx	eax, al
	neg	eax
	and	eax, edx
	test	eax, eax
	je	.L6092
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 344[rax]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1319
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -64[rbp], rax
	cmp	QWORD PTR -64[rbp], 0
	je	.L6093
	jmp	[QWORD PTR -64[rbp]]
.L6093:
	nop
.L6083:
	mov	rax, QWORD PTR 24[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -56[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -72[rbp], rax
	jmp	.L6078
.L6080:
.L6084:
.L6092:
	nop
.L6085:
	mov	QWORD PTR -72[rbp], 0
	nop
.L6078:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -72[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4MENU11ITEM__set__Eu7INTEGERPNS1_8MENUITEME;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4MENU11ITEM__set__Eu7INTEGERPNS1_8MENUITEME:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
.L6095:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC257[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 440
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L6111
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 440
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM12COUNT__get__Ev
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	not	rax
	shr	rax, 63
	movzx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR 24[rbp]
	cmp	rax, QWORD PTR -40[rbp]
	setl	al
	movzx	eax, al
	neg	eax
	and	eax, edx
	test	eax, eax
	je	.L6112
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 440
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR 32[rbp]
	mov	rdx, QWORD PTR 24[rbp]
	mov	r8, rcx
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM11ITEM__set__Eu7INTEGERPS2_
	jmp	.L6107
.L6099:
.L6112:
	nop
.L6100:
	jmp	.L6107
.L6111:
	nop
.L6097:
	mov	rax, QWORD PTR 24[rbp]
	not	rax
	shr	rax, 63
	movzx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 336
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR 24[rbp], rax
	setl	al
	movzx	eax, al
	neg	eax
	and	eax, edx
	test	eax, eax
	je	.L6113
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 344[rax]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1332
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L6114
	jmp	[QWORD PTR -56[rbp]]
.L6114:
	nop
.L6104:
	mov	rax, QWORD PTR 24[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -48[rbp]
	add	rdx, rax
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR [rdx], rax
	jmp	.L6107
.L6101:
.L6105:
.L6106:
.L6113:
	nop
.L6107:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4MENU3ADDEPNS1_8MENUITEMEu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4MENU3ADDEPNS1_8MENUITEMEu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 320
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
.L6116:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	lea	rcx, .LC258[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 440
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L6157
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 440
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR 32[rbp]
	lea	rdx, 24[rbp]
	mov	r8, rcx
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM3ADDERPS2_u7INTEGER
	jmp	.L6148
.L6118:
.L6157:
	nop
.L6120:
	lea	rax, -288[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	QWORD PTR 32[rax], 0
	mov	QWORD PTR 40[rax], 0
	mov	QWORD PTR 48[rax], 0
	mov	QWORD PTR 56[rax], 0
	mov	QWORD PTR 64[rax], 0
	mov	QWORD PTR 72[rax], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENU7INDEXOFEPNS1_8MENUITEME
	mov	QWORD PTR -64[rbp], rax
	cmp	QWORD PTR -64[rbp], -1
	jne	.L6158
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 336
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 336
	add	rdx, 1
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 336
	mov	rax, QWORD PTR [rax]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 344
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	realloc
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 344[rax]
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR [rdx], rax
	cmp	QWORD PTR 32[rbp], -1
	je	.L6159
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 336
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR 32[rbp]
	add	rax, 1
	mov	QWORD PTR -80[rbp], rax
	jmp	.L6124
.L6162:
	nop
.L6125:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 344[rax]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1358
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -96[rbp], rax
	cmp	QWORD PTR -96[rbp], 0
	je	.L6160
	jmp	[QWORD PTR -96[rbp]]
.L6160:
	nop
.L6127:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 344[rax]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1358
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -112[rbp], rax
	cmp	QWORD PTR -112[rbp], 0
	je	.L6161
	jmp	[QWORD PTR -112[rbp]]
.L6161:
	nop
.L6129:
	mov	rax, QWORD PTR -16[rbp]
	sal	rax, 3
	lea	rdx, -8[rax]
	mov	rax, QWORD PTR -88[rbp]
	add	rax, rdx
	mov	rdx, QWORD PTR -16[rbp]
	sal	rdx, 3
	mov	rcx, rdx
	mov	rdx, QWORD PTR -104[rbp]
	add	rdx, rcx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
.L6130:
	sub	QWORD PTR -16[rbp], 1
.L6124:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -80[rbp]
	jge	.L6162
	nop
.L6131:
	jmp	.L6132
.L6159:
	nop
.L6123:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 336
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR 32[rbp], rax
.L6132:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 344[rax]
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1363
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -128[rbp], rax
	cmp	QWORD PTR -128[rbp], 0
	je	.L6163
	jmp	[QWORD PTR -128[rbp]]
.L6163:
	nop
.L6134:
	mov	rax, QWORD PTR 32[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -120[rbp]
	add	rdx, rax
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM13PARENT__set__EPNS0_6OBJECTE
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, QWORD PTR 32[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM16MENUINDEX__set__Eu7INTEGER
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, QWORD PTR 16[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__set__EPNS1_4MENUE
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS15ALLOCATECOMMANDEPNS1_8MENUITEME
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, -288[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM7SETINFOER16tagMENUITEMINFOW
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM14VISIBLE__get__Ev
	mov	BYTE PTR -129[rbp], al
	cmp	BYTE PTR -129[rbp], 0
	je	.L6164
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENU13HANDLE__get__Ev
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR 32[rbp]
	mov	ecx, eax
	lea	rdx, -288[rbp]
	mov	rax, QWORD PTR -144[rbp]
	mov	r9, rdx
	mov	r8d, -1
	mov	edx, ecx
	mov	rcx, rax
	call	InsertMenuItemW
	jmp	.L6137
.L6136:
.L6164:
	nop
.L6137:
	mov	QWORD PTR -24[rbp], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM12COUNT__get__Ev
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	sub	rax, 1
	mov	QWORD PTR -160[rbp], rax
	jmp	.L6138
.L6165:
	nop
.L6139:
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__get__Ev
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -200[rbp], rax
	mov	rdx, QWORD PTR -192[rbp]
	mov	rax, QWORD PTR -200[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM12OWNER__set__EPNS1_4MENUE
.L6140:
	add	QWORD PTR -24[rbp], 1
.L6138:
	mov	rax, QWORD PTR -24[rbp]
	cmp	rax, QWORD PTR -160[rbp]
	jle	.L6165
	nop
.L6141:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 448
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L6166
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 448
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	rcx, rax
	call	IsWindow
	mov	DWORD PTR -172[rbp], eax
	cmp	DWORD PTR -172[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L6144
.L6166:
	nop
.L6143:
	mov	QWORD PTR -8[rbp], 0
.L6144:
	cmp	QWORD PTR -8[rbp], 0
	je	.L6167
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 448
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	mov	rcx, rax
	call	DrawMenuBar
	jmp	.L6148
.L6119:
.L6146:
.L6147:
.L6158:
	nop
	jmp	.L6148
.L6167:
	nop
.L6148:
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4MENU6REMOVEEPNS1_8MENUITEME;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4MENU6REMOVEEPNS1_8MENUITEME:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 208
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L6169:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rcx, .LC261[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	mov	QWORD PTR -160[rbp], 0
	mov	QWORD PTR -168[rbp], 0
	mov	QWORD PTR -176[rbp], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENU7INDEXOFEPNS1_8MENUITEME
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	cmp	rax, -1
	je	.L6199
	mov	rax, QWORD PTR -160[rbp]
	add	rax, 1
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 336
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -64[rbp], rax
	jmp	.L6172
.L6202:
	nop
.L6173:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 344[rax]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1512
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -136[rbp], rax
	cmp	QWORD PTR -136[rbp], 0
	je	.L6200
	jmp	[QWORD PTR -136[rbp]]
.L6200:
	nop
.L6175:
	mov	rax, QWORD PTR -168[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -128[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 344[rax]
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1513
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -152[rbp], rax
	cmp	QWORD PTR -152[rbp], 0
	je	.L6201
	jmp	[QWORD PTR -152[rbp]]
.L6201:
	nop
.L6177:
	mov	rax, QWORD PTR -168[rbp]
	sal	rax, 3
	lea	rdx, -8[rax]
	mov	rax, QWORD PTR -144[rbp]
	add	rdx, rax
	mov	rax, QWORD PTR -176[rbp]
	mov	QWORD PTR [rdx], rax
.L6178:
	mov	rax, QWORD PTR -168[rbp]
	add	rax, 1
	mov	QWORD PTR -168[rbp], rax
.L6172:
	mov	rax, QWORD PTR -168[rbp]
	cmp	QWORD PTR -64[rbp], rax
	jge	.L6202
	nop
.L6179:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 336
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 336
	sub	rdx, 1
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 336
	mov	rax, QWORD PTR [rax]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 344
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	realloc
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 344[rax]
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR [rdx], rax
	mov	QWORD PTR -16[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 336
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -80[rbp], rax
	jmp	.L6180
.L6204:
	nop
.L6181:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 344[rax]
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1518
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -120[rbp], rax
	cmp	QWORD PTR -120[rbp], 0
	je	.L6203
	jmp	[QWORD PTR -120[rbp]]
.L6203:
	nop
.L6183:
	mov	rax, QWORD PTR -16[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -112[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM16MENUINDEX__set__Eu7INTEGER
.L6184:
	add	QWORD PTR -16[rbp], 1
.L6180:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -80[rbp]
	jle	.L6204
	nop
.L6185:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 448
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L6205
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 448
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	rcx, rax
	call	IsWindow
	mov	DWORD PTR -92[rbp], eax
	cmp	DWORD PTR -92[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L6188
.L6205:
	nop
.L6187:
	mov	QWORD PTR -8[rbp], 0
.L6188:
	cmp	QWORD PTR -8[rbp], 0
	je	.L6206
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 448
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	DrawMenuBar
	jmp	.L6192
.L6171:
.L6190:
.L6191:
.L6199:
	nop
	jmp	.L6192
.L6206:
	nop
.L6192:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4MENU7INDEXOFEPNS1_8MENUITEME;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4MENU7INDEXOFEPNS1_8MENUITEME:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -72[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC263[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L6208:
	mov	QWORD PTR -8[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 336
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -48[rbp], rax
	jmp	.L6209
.L6224:
	nop
.L6210:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 344[rax]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1528
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -64[rbp], rax
	cmp	QWORD PTR -64[rbp], 0
	je	.L6222
	jmp	[QWORD PTR -64[rbp]]
.L6222:
	nop
.L6212:
	mov	rax, QWORD PTR -8[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -56[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR 24[rbp], rax
	jne	.L6223
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -72[rbp], rax
	jmp	.L6215
.L6214:
.L6223:
	nop
.L6216:
	add	QWORD PTR -8[rbp], 1
.L6209:
	mov	rax, QWORD PTR -8[rbp]
	cmp	rax, QWORD PTR -48[rbp]
	jle	.L6224
	nop
.L6217:
	mov	QWORD PTR -72[rbp], -1
	nop
.L6215:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -72[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4MENU7INDEXOFERw;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4MENU7INDEXOFERw:
	push	rbp
	mov	rbp, rsp
	add	rsp, -128
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -88[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC263[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L6226:
	mov	QWORD PTR -8[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 336
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -48[rbp], rax
	jmp	.L6227
.L6242:
	nop
.L6228:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 344[rax]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1535
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -64[rbp], rax
	cmp	QWORD PTR -64[rbp], 0
	je	.L6240
	jmp	[QWORD PTR -64[rbp]]
.L6240:
	nop
.L6230:
	mov	rax, QWORD PTR -8[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -56[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM11NAME__get__Ev
	mov	QWORD PTR -72[rbp], rax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -76[rbp], eax
	cmp	DWORD PTR -76[rbp], 0
	jne	.L6241
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -88[rbp], rax
	jmp	.L6233
.L6232:
.L6241:
	nop
.L6234:
	add	QWORD PTR -8[rbp], 1
.L6227:
	mov	rax, QWORD PTR -8[rbp]
	cmp	rax, QWORD PTR -48[rbp]
	jle	.L6242
	nop
.L6235:
	mov	QWORD PTR -88[rbp], -1
	nop
.L6233:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -88[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4MENU4FINDEu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4MENU4FINDEu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 144
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -104[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC361[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L6244:
	mov	QWORD PTR -112[rbp], 0
	mov	QWORD PTR -8[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 336
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -48[rbp], rax
	jmp	.L6245
.L6262:
	nop
.L6246:
	mov	rax, QWORD PTR -8[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENU11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM14COMMAND__get__Ev
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	cmp	rax, QWORD PTR 24[rbp]
	jne	.L6259
	mov	rax, QWORD PTR -8[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENU11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -104[rbp], rax
	jmp	.L6249
.L6259:
	nop
.L6248:
	mov	rax, QWORD PTR -8[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENU11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -80[rbp], rax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM4FINDEu7INTEGER
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	test	rax, rax
	je	.L6260
	mov	rax, QWORD PTR -112[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM14COMMAND__get__Ev
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	cmp	rax, QWORD PTR 24[rbp]
	jne	.L6261
	mov	rax, QWORD PTR -112[rbp]
	mov	QWORD PTR -104[rbp], rax
	jmp	.L6249
.L6251:
.L6253:
.L6260:
	nop
	jmp	.L6254
.L6261:
	nop
.L6254:
	add	QWORD PTR -8[rbp], 1
.L6245:
	mov	rax, QWORD PTR -8[rbp]
	cmp	rax, QWORD PTR -48[rbp]
	jle	.L6262
	nop
.L6255:
	mov	QWORD PTR -104[rbp], 0
	nop
.L6249:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -104[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4MENU11CHANGEINDEXEPNS1_8MENUITEMEu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4MENU11CHANGEINDEXEPNS1_8MENUITEMEu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 224
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
.L6264:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	lea	rcx, .LC347[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENU7INDEXOFEPNS1_8MENUITEME
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	js	.L6309
	mov	rax, QWORD PTR -80[rbp]
	cmp	rax, QWORD PTR 32[rbp]
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L6267
.L6309:
	nop
.L6266:
	mov	QWORD PTR -8[rbp], 0
.L6267:
	cmp	QWORD PTR -8[rbp], 0
	je	.L6310
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 336
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	cmp	QWORD PTR 32[rbp], rax
	setle	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -16[rbp], rax
	jmp	.L6270
.L6310:
	nop
.L6269:
	mov	QWORD PTR -16[rbp], 0
.L6270:
	cmp	QWORD PTR -16[rbp], 0
	je	.L6311
	mov	rax, QWORD PTR 32[rbp]
	cmp	rax, QWORD PTR -80[rbp]
	jge	.L6312
	mov	rax, QWORD PTR -80[rbp]
	sub	rax, 1
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -88[rbp], rax
	jmp	.L6275
.L6315:
	nop
.L6276:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 344[rax]
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1565
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -120[rbp], rax
	cmp	QWORD PTR -120[rbp], 0
	je	.L6313
	jmp	[QWORD PTR -120[rbp]]
.L6313:
	nop
.L6278:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 344[rax]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1565
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -136[rbp], rax
	cmp	QWORD PTR -136[rbp], 0
	je	.L6314
	jmp	[QWORD PTR -136[rbp]]
.L6314:
	nop
.L6280:
	mov	rax, QWORD PTR -24[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -112[rbp]
	add	rax, rdx
	mov	rdx, QWORD PTR -24[rbp]
	sal	rdx, 3
	lea	rcx, 8[rdx]
	mov	rdx, QWORD PTR -128[rbp]
	add	rdx, rcx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
.L6281:
	sub	QWORD PTR -24[rbp], 1
.L6275:
	mov	rax, QWORD PTR -24[rbp]
	cmp	rax, QWORD PTR -88[rbp]
	jge	.L6315
	nop
.L6282:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 344[rax]
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1567
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -104[rbp], rax
	cmp	QWORD PTR -104[rbp], 0
	je	.L6316
	jmp	[QWORD PTR -104[rbp]]
.L6316:
	nop
.L6284:
	mov	rax, QWORD PTR 32[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -96[rbp]
	add	rdx, rax
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	jmp	.L6297
.L6312:
	nop
.L6274:
	mov	rax, QWORD PTR -80[rbp]
	add	rax, 1
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -144[rbp], rax
	jmp	.L6285
.L6319:
	nop
.L6286:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 344[rax]
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1570
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -176[rbp], rax
	cmp	QWORD PTR -176[rbp], 0
	je	.L6317
	jmp	[QWORD PTR -176[rbp]]
.L6317:
	nop
.L6288:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 344[rax]
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1570
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -192[rbp], rax
	cmp	QWORD PTR -192[rbp], 0
	je	.L6318
	jmp	[QWORD PTR -192[rbp]]
.L6318:
	nop
.L6290:
	mov	rax, QWORD PTR -32[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -168[rbp]
	add	rax, rdx
	mov	rdx, QWORD PTR -32[rbp]
	sal	rdx, 3
	lea	rcx, -8[rdx]
	mov	rdx, QWORD PTR -184[rbp]
	add	rdx, rcx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
.L6291:
	add	QWORD PTR -32[rbp], 1
.L6285:
	mov	rax, QWORD PTR -32[rbp]
	cmp	rax, QWORD PTR -144[rbp]
	jle	.L6319
	nop
.L6292:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 344[rax]
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1572
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -160[rbp], rax
	cmp	QWORD PTR -160[rbp], 0
	je	.L6320
	jmp	[QWORD PTR -160[rbp]]
.L6320:
	nop
.L6294:
	mov	rax, QWORD PTR 32[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -152[rbp]
	add	rdx, rax
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	jmp	.L6297
.L6272:
.L6295:
.L6296:
.L6311:
	nop
.L6297:
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4MENU5CLEAREv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4MENU5CLEAREv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
.L6322:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC262[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 344
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L6343
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 336
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -8[rbp], rax
	jmp	.L6325
.L6347:
	nop
.L6326:
	mov	rax, QWORD PTR -8[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENU11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1580
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -64[rbp], rax
	cmp	QWORD PTR -64[rbp], 0
	je	.L6344
	jmp	[QWORD PTR -64[rbp]]
.L6344:
	nop
.L6328:
	mov	rax, QWORD PTR -56[rbp]
	add	rax, 40
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L6345
	mov	rax, QWORD PTR -8[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENU11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L6346
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEMD1Ev
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	free
	jmp	.L6333
.L6330:
.L6332:
.L6345:
	nop
	jmp	.L6333
.L6346:
	nop
.L6333:
	sub	QWORD PTR -8[rbp], 1
.L6325:
	cmp	QWORD PTR -8[rbp], 0
	jns	.L6347
	nop
.L6334:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 344
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L6348
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 344
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L6349
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 344
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	free
	jmp	.L6338
.L6336:
.L6348:
	nop
	jmp	.L6338
.L6349:
	nop
.L6338:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 344
	mov	QWORD PTR [rax], 0
	jmp	.L6340
.L6324:
.L6339:
.L6343:
	nop
.L6340:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC369:
	.ascii "PROCESSMESSAGE\0"
	.text
	.def	_ZN2MY3SYS5FORMS4MENU14PROCESSMESSAGEER7MESSAGE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4MENU14PROCESSMESSAGEER7MESSAGE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L6351:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC369[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L6352:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4MENUC1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4MENUC1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L6354:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 336
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 344
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 352
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	QWORD PTR 32[rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 392
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 400
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 408
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 416
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 424
	mov	rcx, rax
	call	_ZN4LISTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 440
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 448
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 456
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 464
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 472
	mov	QWORD PTR [rax], 0
	lea	rdx, _ZTVN2MY3SYS5FORMS4MENUE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 416
	mov	BYTE PTR [rax], 1
.L6355:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4MENUD1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4MENUD1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	lea	rdx, _ZTVN2MY3SYS5FORMS4MENUE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L6357:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENU5CLEAREv
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 368
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L6364
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 368
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DeleteObject
	jmp	.L6359
.L6364:
	nop
.L6359:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 392
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L6365
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 392
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DestroyMenu
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 392
	mov	QWORD PTR [rax], 0
	jmp	.L6363
.L6361:
.L6362:
.L6365:
	nop
.L6363:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 424
	mov	rcx, rax
	call	_ZN4LISTD1Ev
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENTD1Ev
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC370:
	.ascii "ENUMMENUITEMS\0"
	.text
	.def	_ZN2MY3SYS5FORMS8MAINMENU13ENUMMENUITEMSERNS1_8MENUITEME;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MAINMENU13ENUMMENUITEMSERNS1_8MENUITEME:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	BYTE PTR -73[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC370[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L6367:
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEMcvPvEv
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 424[rax]
	mov	rax, QWORD PTR -48[rbp]
	mov	rdx, rax
	call	_ZN4LIST3ADDEPv
	mov	QWORD PTR -8[rbp], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM12COUNT__get__Ev
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	sub	rax, 1
	mov	QWORD PTR -64[rbp], rax
	jmp	.L6368
.L6375:
	nop
.L6369:
	mov	rdx, QWORD PTR -8[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MAINMENU13ENUMMENUITEMSERNS1_8MENUITEME
.L6370:
	add	QWORD PTR -8[rbp], 1
.L6368:
	mov	rax, QWORD PTR -8[rbp]
	cmp	rax, QWORD PTR -64[rbp]
	jle	.L6375
	nop
.L6371:
	mov	BYTE PTR -73[rbp], 1
	nop
.L6372:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -73[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC371:
	.ascii "GETASCKEYCODE\0"
	.align 2
.LC372:
	.ascii "B\0r\0e\0a\0k\0\0\0"
	.align 2
.LC373:
	.ascii "B\0a\0c\0k\0s\0p\0a\0c\0e\0\0\0"
	.align 2
.LC374:
	.ascii "B\0a\0c\0k\0\0\0"
	.align 2
.LC375:
	.ascii "T\0a\0b\0\0\0"
	.align 2
.LC376:
	.ascii "E\0n\0t\0e\0r\0\0\0"
	.align 2
.LC377:
	.ascii "R\0e\0t\0u\0r\0n\0\0\0"
	.align 2
.LC378:
	.ascii "P\0a\0u\0s\0e\0\0\0"
	.align 2
.LC379:
	.ascii "E\0s\0c\0a\0p\0e\0\0\0"
	.align 2
.LC380:
	.ascii "E\0s\0c\0\0\0"
	.align 2
.LC381:
	.ascii "S\0p\0a\0c\0e\0\0\0"
	.align 2
.LC382:
	.ascii "P\0a\0g\0e\0U\0p\0\0\0"
	.align 2
.LC383:
	.ascii "P\0a\0g\0e\0D\0o\0w\0n\0\0\0"
	.align 2
.LC384:
	.ascii "E\0n\0d\0\0\0"
	.align 2
.LC385:
	.ascii "H\0o\0m\0e\0\0\0"
	.align 2
.LC386:
	.ascii "L\0e\0f\0t\0\0\0"
	.align 2
.LC387:
	.ascii "U\0p\0\0\0"
	.align 2
.LC388:
	.ascii "R\0i\0g\0h\0t\0\0\0"
	.align 2
.LC389:
	.ascii "D\0o\0w\0n\0\0\0"
	.align 2
.LC390:
	.ascii "P\0r\0i\0n\0t\0\0\0"
	.align 2
.LC391:
	.ascii "I\0n\0s\0e\0r\0t\0\0\0"
	.align 2
.LC392:
	.ascii "I\0n\0s\0\0\0"
	.align 2
.LC393:
	.ascii "N\0u\0m\0"
	.ascii "0\0\0\0"
	.align 2
.LC394:
	.ascii "N\0u\0m\0"
	.ascii "1\0\0\0"
	.align 2
.LC395:
	.ascii "N\0u\0m\0"
	.ascii "2\0\0\0"
	.align 2
.LC396:
	.ascii "N\0u\0m\0"
	.ascii "3\0\0\0"
	.align 2
.LC397:
	.ascii "N\0u\0m\0"
	.ascii "4\0\0\0"
	.align 2
.LC398:
	.ascii "N\0u\0m\0"
	.ascii "5\0\0\0"
	.align 2
.LC399:
	.ascii "N\0u\0m\0"
	.ascii "6\0\0\0"
	.align 2
.LC400:
	.ascii "N\0u\0m\0"
	.ascii "7\0\0\0"
	.align 2
.LC401:
	.ascii "N\0u\0m\0"
	.ascii "8\0\0\0"
	.align 2
.LC402:
	.ascii "N\0u\0m\0"
	.ascii "9\0\0\0"
	.align 2
.LC403:
	.ascii "F\0"
	.ascii "1\0\0\0"
	.align 2
.LC404:
	.ascii "F\0"
	.ascii "2\0\0\0"
	.align 2
.LC405:
	.ascii "F\0"
	.ascii "3\0\0\0"
	.align 2
.LC406:
	.ascii "F\0"
	.ascii "4\0\0\0"
	.align 2
.LC407:
	.ascii "F\0"
	.ascii "5\0\0\0"
	.align 2
.LC408:
	.ascii "F\0"
	.ascii "6\0\0\0"
	.align 2
.LC409:
	.ascii "F\0"
	.ascii "7\0\0\0"
	.align 2
.LC410:
	.ascii "F\0"
	.ascii "8\0\0\0"
	.align 2
.LC411:
	.ascii "F\0"
	.ascii "9\0\0\0"
	.align 2
.LC412:
	.ascii "F\0"
	.ascii "1\0"
	.ascii "0\0\0\0"
	.align 2
.LC413:
	.ascii "F\0"
	.ascii "1\0"
	.ascii "1\0\0\0"
	.align 2
.LC414:
	.ascii "F\0"
	.ascii "1\0"
	.ascii "2\0\0\0"
	.align 2
.LC415:
	.ascii "D\0e\0l\0e\0t\0e\0\0\0"
	.align 2
.LC416:
	.ascii "D\0e\0l\0\0\0"
	.text
	.def	_ZN2MY3SYS5FORMS13GETASCKEYCODEER8FBSTRING;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS13GETASCKEYCODEER8FBSTRING:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 1200
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -1120[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC371[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L6377:
	lea	rax, -1152[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, QWORD PTR 16[rbp]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	rdx, .LC372[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -52[rbp], eax
	cmp	DWORD PTR -52[rbp], 0
	jne	.L6551
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6380:
	mov	QWORD PTR -1120[rbp], 3
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6551:
	nop
.L6379:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	rdx, .LC373[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -76[rbp], eax
	cmp	DWORD PTR -76[rbp], 0
	je	.L6552
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6384:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	lea	rdx, .LC374[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -100[rbp], eax
	cmp	DWORD PTR -100[rbp], 0
	jne	.L6553
	mov	rax, QWORD PTR -96[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L6383
.L6552:
	nop
.L6383:
	mov	QWORD PTR -1120[rbp], 8
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6553:
	nop
.L6386:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	lea	rdx, .LC375[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -124[rbp], eax
	cmp	DWORD PTR -124[rbp], 0
	jne	.L6554
	mov	rax, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6389:
	mov	QWORD PTR -1120[rbp], 9
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6554:
	nop
.L6388:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	lea	rdx, .LC376[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -148[rbp], eax
	cmp	DWORD PTR -148[rbp], 0
	je	.L6555
	mov	rax, QWORD PTR -144[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6392:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	lea	rdx, .LC377[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -172[rbp], eax
	cmp	DWORD PTR -172[rbp], 0
	jne	.L6556
	mov	rax, QWORD PTR -168[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L6391
.L6555:
	nop
.L6391:
	mov	QWORD PTR -1120[rbp], 13
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6556:
	nop
.L6394:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -192[rbp]
	lea	rdx, .LC378[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -196[rbp], eax
	cmp	DWORD PTR -196[rbp], 0
	jne	.L6557
	mov	rax, QWORD PTR -192[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6397:
	mov	QWORD PTR -1120[rbp], 19
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6557:
	nop
.L6396:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR -208[rbp]
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR -216[rbp]
	lea	rdx, .LC379[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -220[rbp], eax
	cmp	DWORD PTR -220[rbp], 0
	je	.L6558
	mov	rax, QWORD PTR -216[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6400:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -232[rbp], rax
	mov	rax, QWORD PTR -232[rbp]
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -240[rbp]
	lea	rdx, .LC380[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -244[rbp], eax
	cmp	DWORD PTR -244[rbp], 0
	jne	.L6559
	mov	rax, QWORD PTR -240[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L6399
.L6558:
	nop
.L6399:
	mov	QWORD PTR -1120[rbp], 27
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6559:
	nop
.L6402:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -256[rbp], rax
	mov	rax, QWORD PTR -256[rbp]
	mov	QWORD PTR -264[rbp], rax
	mov	rax, QWORD PTR -264[rbp]
	lea	rdx, .LC381[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -268[rbp], eax
	cmp	DWORD PTR -268[rbp], 0
	jne	.L6560
	mov	rax, QWORD PTR -264[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6405:
	mov	QWORD PTR -1120[rbp], 32
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6560:
	nop
.L6404:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -280[rbp], rax
	mov	rax, QWORD PTR -280[rbp]
	mov	QWORD PTR -288[rbp], rax
	mov	rax, QWORD PTR -288[rbp]
	lea	rdx, .LC382[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -292[rbp], eax
	cmp	DWORD PTR -292[rbp], 0
	jne	.L6561
	mov	rax, QWORD PTR -288[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6408:
	mov	QWORD PTR -1120[rbp], 33
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6561:
	nop
.L6407:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -304[rbp], rax
	mov	rax, QWORD PTR -304[rbp]
	mov	QWORD PTR -312[rbp], rax
	mov	rax, QWORD PTR -312[rbp]
	lea	rdx, .LC383[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -316[rbp], eax
	cmp	DWORD PTR -316[rbp], 0
	jne	.L6562
	mov	rax, QWORD PTR -312[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6411:
	mov	QWORD PTR -1120[rbp], 34
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6562:
	nop
.L6410:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -328[rbp], rax
	mov	rax, QWORD PTR -328[rbp]
	mov	QWORD PTR -336[rbp], rax
	mov	rax, QWORD PTR -336[rbp]
	lea	rdx, .LC384[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -340[rbp], eax
	cmp	DWORD PTR -340[rbp], 0
	jne	.L6563
	mov	rax, QWORD PTR -336[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6414:
	mov	QWORD PTR -1120[rbp], 35
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6563:
	nop
.L6413:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -352[rbp], rax
	mov	rax, QWORD PTR -352[rbp]
	mov	QWORD PTR -360[rbp], rax
	mov	rax, QWORD PTR -360[rbp]
	lea	rdx, .LC385[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -364[rbp], eax
	cmp	DWORD PTR -364[rbp], 0
	jne	.L6564
	mov	rax, QWORD PTR -360[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6417:
	mov	QWORD PTR -1120[rbp], 36
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6564:
	nop
.L6416:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -376[rbp], rax
	mov	rax, QWORD PTR -376[rbp]
	mov	QWORD PTR -384[rbp], rax
	mov	rax, QWORD PTR -384[rbp]
	lea	rdx, .LC386[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -388[rbp], eax
	cmp	DWORD PTR -388[rbp], 0
	jne	.L6565
	mov	rax, QWORD PTR -384[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6420:
	mov	QWORD PTR -1120[rbp], 37
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6565:
	nop
.L6419:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -400[rbp], rax
	mov	rax, QWORD PTR -400[rbp]
	mov	QWORD PTR -408[rbp], rax
	mov	rax, QWORD PTR -408[rbp]
	lea	rdx, .LC387[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -412[rbp], eax
	cmp	DWORD PTR -412[rbp], 0
	jne	.L6566
	mov	rax, QWORD PTR -408[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6423:
	mov	QWORD PTR -1120[rbp], 38
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6566:
	nop
.L6422:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -424[rbp], rax
	mov	rax, QWORD PTR -424[rbp]
	mov	QWORD PTR -432[rbp], rax
	mov	rax, QWORD PTR -432[rbp]
	lea	rdx, .LC388[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -436[rbp], eax
	cmp	DWORD PTR -436[rbp], 0
	jne	.L6567
	mov	rax, QWORD PTR -432[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6426:
	mov	QWORD PTR -1120[rbp], 39
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6567:
	nop
.L6425:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -448[rbp], rax
	mov	rax, QWORD PTR -448[rbp]
	mov	QWORD PTR -456[rbp], rax
	mov	rax, QWORD PTR -456[rbp]
	lea	rdx, .LC389[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -460[rbp], eax
	cmp	DWORD PTR -460[rbp], 0
	jne	.L6568
	mov	rax, QWORD PTR -456[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6429:
	mov	QWORD PTR -1120[rbp], 40
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6568:
	nop
.L6428:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -472[rbp], rax
	mov	rax, QWORD PTR -472[rbp]
	mov	QWORD PTR -480[rbp], rax
	mov	rax, QWORD PTR -480[rbp]
	lea	rdx, .LC390[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -484[rbp], eax
	cmp	DWORD PTR -484[rbp], 0
	jne	.L6569
	mov	rax, QWORD PTR -480[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6432:
	mov	QWORD PTR -1120[rbp], 42
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6569:
	nop
.L6431:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -496[rbp], rax
	mov	rax, QWORD PTR -496[rbp]
	mov	QWORD PTR -504[rbp], rax
	mov	rax, QWORD PTR -504[rbp]
	lea	rdx, .LC391[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -508[rbp], eax
	cmp	DWORD PTR -508[rbp], 0
	je	.L6570
	mov	rax, QWORD PTR -504[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6435:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -520[rbp], rax
	mov	rax, QWORD PTR -520[rbp]
	mov	QWORD PTR -528[rbp], rax
	mov	rax, QWORD PTR -528[rbp]
	lea	rdx, .LC392[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -532[rbp], eax
	cmp	DWORD PTR -532[rbp], 0
	jne	.L6571
	mov	rax, QWORD PTR -528[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L6434
.L6570:
	nop
.L6434:
	mov	QWORD PTR -1120[rbp], 45
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6571:
	nop
.L6437:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -544[rbp], rax
	mov	rax, QWORD PTR -544[rbp]
	mov	QWORD PTR -552[rbp], rax
	mov	rax, QWORD PTR -552[rbp]
	lea	rdx, .LC393[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -556[rbp], eax
	cmp	DWORD PTR -556[rbp], 0
	jne	.L6572
	mov	rax, QWORD PTR -552[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6440:
	mov	QWORD PTR -1120[rbp], 96
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6572:
	nop
.L6439:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -568[rbp], rax
	mov	rax, QWORD PTR -568[rbp]
	mov	QWORD PTR -576[rbp], rax
	mov	rax, QWORD PTR -576[rbp]
	lea	rdx, .LC394[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -580[rbp], eax
	cmp	DWORD PTR -580[rbp], 0
	jne	.L6573
	mov	rax, QWORD PTR -576[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6443:
	mov	QWORD PTR -1120[rbp], 97
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6573:
	nop
.L6442:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -592[rbp], rax
	mov	rax, QWORD PTR -592[rbp]
	mov	QWORD PTR -600[rbp], rax
	mov	rax, QWORD PTR -600[rbp]
	lea	rdx, .LC395[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -604[rbp], eax
	cmp	DWORD PTR -604[rbp], 0
	jne	.L6574
	mov	rax, QWORD PTR -600[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6446:
	mov	QWORD PTR -1120[rbp], 98
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6574:
	nop
.L6445:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -616[rbp], rax
	mov	rax, QWORD PTR -616[rbp]
	mov	QWORD PTR -624[rbp], rax
	mov	rax, QWORD PTR -624[rbp]
	lea	rdx, .LC396[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -628[rbp], eax
	cmp	DWORD PTR -628[rbp], 0
	jne	.L6575
	mov	rax, QWORD PTR -624[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6449:
	mov	QWORD PTR -1120[rbp], 99
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6575:
	nop
.L6448:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -640[rbp], rax
	mov	rax, QWORD PTR -640[rbp]
	mov	QWORD PTR -648[rbp], rax
	mov	rax, QWORD PTR -648[rbp]
	lea	rdx, .LC397[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -652[rbp], eax
	cmp	DWORD PTR -652[rbp], 0
	jne	.L6576
	mov	rax, QWORD PTR -648[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6452:
	mov	QWORD PTR -1120[rbp], 100
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6576:
	nop
.L6451:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -664[rbp], rax
	mov	rax, QWORD PTR -664[rbp]
	mov	QWORD PTR -672[rbp], rax
	mov	rax, QWORD PTR -672[rbp]
	lea	rdx, .LC398[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -676[rbp], eax
	cmp	DWORD PTR -676[rbp], 0
	jne	.L6577
	mov	rax, QWORD PTR -672[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6455:
	mov	QWORD PTR -1120[rbp], 101
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6577:
	nop
.L6454:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -688[rbp], rax
	mov	rax, QWORD PTR -688[rbp]
	mov	QWORD PTR -696[rbp], rax
	mov	rax, QWORD PTR -696[rbp]
	lea	rdx, .LC399[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -700[rbp], eax
	cmp	DWORD PTR -700[rbp], 0
	jne	.L6578
	mov	rax, QWORD PTR -696[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6458:
	mov	QWORD PTR -1120[rbp], 102
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6578:
	nop
.L6457:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -712[rbp], rax
	mov	rax, QWORD PTR -712[rbp]
	mov	QWORD PTR -720[rbp], rax
	mov	rax, QWORD PTR -720[rbp]
	lea	rdx, .LC400[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -724[rbp], eax
	cmp	DWORD PTR -724[rbp], 0
	jne	.L6579
	mov	rax, QWORD PTR -720[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6461:
	mov	QWORD PTR -1120[rbp], 103
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6579:
	nop
.L6460:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -736[rbp], rax
	mov	rax, QWORD PTR -736[rbp]
	mov	QWORD PTR -744[rbp], rax
	mov	rax, QWORD PTR -744[rbp]
	lea	rdx, .LC401[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -748[rbp], eax
	cmp	DWORD PTR -748[rbp], 0
	jne	.L6580
	mov	rax, QWORD PTR -744[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6464:
	mov	QWORD PTR -1120[rbp], 104
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6580:
	nop
.L6463:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -760[rbp], rax
	mov	rax, QWORD PTR -760[rbp]
	mov	QWORD PTR -768[rbp], rax
	mov	rax, QWORD PTR -768[rbp]
	lea	rdx, .LC402[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -772[rbp], eax
	cmp	DWORD PTR -772[rbp], 0
	jne	.L6581
	mov	rax, QWORD PTR -768[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6467:
	mov	QWORD PTR -1120[rbp], 105
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6581:
	nop
.L6466:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -784[rbp], rax
	mov	rax, QWORD PTR -784[rbp]
	mov	QWORD PTR -792[rbp], rax
	mov	rax, QWORD PTR -792[rbp]
	lea	rdx, .LC403[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -796[rbp], eax
	cmp	DWORD PTR -796[rbp], 0
	jne	.L6582
	mov	rax, QWORD PTR -792[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6470:
	mov	QWORD PTR -1120[rbp], 112
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6582:
	nop
.L6469:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -808[rbp], rax
	mov	rax, QWORD PTR -808[rbp]
	mov	QWORD PTR -816[rbp], rax
	mov	rax, QWORD PTR -816[rbp]
	lea	rdx, .LC404[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -820[rbp], eax
	cmp	DWORD PTR -820[rbp], 0
	jne	.L6583
	mov	rax, QWORD PTR -816[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6473:
	mov	QWORD PTR -1120[rbp], 113
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6583:
	nop
.L6472:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -832[rbp], rax
	mov	rax, QWORD PTR -832[rbp]
	mov	QWORD PTR -840[rbp], rax
	mov	rax, QWORD PTR -840[rbp]
	lea	rdx, .LC405[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -844[rbp], eax
	cmp	DWORD PTR -844[rbp], 0
	jne	.L6584
	mov	rax, QWORD PTR -840[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6476:
	mov	QWORD PTR -1120[rbp], 114
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6584:
	nop
.L6475:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -856[rbp], rax
	mov	rax, QWORD PTR -856[rbp]
	mov	QWORD PTR -864[rbp], rax
	mov	rax, QWORD PTR -864[rbp]
	lea	rdx, .LC406[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -868[rbp], eax
	cmp	DWORD PTR -868[rbp], 0
	jne	.L6585
	mov	rax, QWORD PTR -864[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6479:
	mov	QWORD PTR -1120[rbp], 115
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6585:
	nop
.L6478:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -880[rbp], rax
	mov	rax, QWORD PTR -880[rbp]
	mov	QWORD PTR -888[rbp], rax
	mov	rax, QWORD PTR -888[rbp]
	lea	rdx, .LC407[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -892[rbp], eax
	cmp	DWORD PTR -892[rbp], 0
	jne	.L6586
	mov	rax, QWORD PTR -888[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6482:
	mov	QWORD PTR -1120[rbp], 116
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6586:
	nop
.L6481:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -904[rbp], rax
	mov	rax, QWORD PTR -904[rbp]
	mov	QWORD PTR -912[rbp], rax
	mov	rax, QWORD PTR -912[rbp]
	lea	rdx, .LC408[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -916[rbp], eax
	cmp	DWORD PTR -916[rbp], 0
	jne	.L6587
	mov	rax, QWORD PTR -912[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6485:
	mov	QWORD PTR -1120[rbp], 117
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6587:
	nop
.L6484:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -928[rbp], rax
	mov	rax, QWORD PTR -928[rbp]
	mov	QWORD PTR -936[rbp], rax
	mov	rax, QWORD PTR -936[rbp]
	lea	rdx, .LC409[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -940[rbp], eax
	cmp	DWORD PTR -940[rbp], 0
	jne	.L6588
	mov	rax, QWORD PTR -936[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6488:
	mov	QWORD PTR -1120[rbp], 118
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6588:
	nop
.L6487:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -952[rbp], rax
	mov	rax, QWORD PTR -952[rbp]
	mov	QWORD PTR -960[rbp], rax
	mov	rax, QWORD PTR -960[rbp]
	lea	rdx, .LC410[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -964[rbp], eax
	cmp	DWORD PTR -964[rbp], 0
	jne	.L6589
	mov	rax, QWORD PTR -960[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6491:
	mov	QWORD PTR -1120[rbp], 119
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6589:
	nop
.L6490:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -976[rbp], rax
	mov	rax, QWORD PTR -976[rbp]
	mov	QWORD PTR -984[rbp], rax
	mov	rax, QWORD PTR -984[rbp]
	lea	rdx, .LC411[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -988[rbp], eax
	cmp	DWORD PTR -988[rbp], 0
	jne	.L6590
	mov	rax, QWORD PTR -984[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6494:
	mov	QWORD PTR -1120[rbp], 120
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6590:
	nop
.L6493:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -1000[rbp], rax
	mov	rax, QWORD PTR -1000[rbp]
	mov	QWORD PTR -1008[rbp], rax
	mov	rax, QWORD PTR -1008[rbp]
	lea	rdx, .LC412[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -1012[rbp], eax
	cmp	DWORD PTR -1012[rbp], 0
	jne	.L6591
	mov	rax, QWORD PTR -1008[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6497:
	mov	QWORD PTR -1120[rbp], 121
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6591:
	nop
.L6496:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -1024[rbp], rax
	mov	rax, QWORD PTR -1024[rbp]
	mov	QWORD PTR -1032[rbp], rax
	mov	rax, QWORD PTR -1032[rbp]
	lea	rdx, .LC413[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -1036[rbp], eax
	cmp	DWORD PTR -1036[rbp], 0
	jne	.L6592
	mov	rax, QWORD PTR -1032[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6500:
	mov	QWORD PTR -1120[rbp], 122
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6592:
	nop
.L6499:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -1048[rbp], rax
	mov	rax, QWORD PTR -1048[rbp]
	mov	QWORD PTR -1056[rbp], rax
	mov	rax, QWORD PTR -1056[rbp]
	lea	rdx, .LC414[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -1060[rbp], eax
	cmp	DWORD PTR -1060[rbp], 0
	jne	.L6593
	mov	rax, QWORD PTR -1056[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6503:
	mov	QWORD PTR -1120[rbp], 123
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6593:
	nop
.L6502:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -1072[rbp], rax
	mov	rax, QWORD PTR -1072[rbp]
	mov	QWORD PTR -1080[rbp], rax
	mov	rax, QWORD PTR -1080[rbp]
	lea	rdx, .LC415[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -1084[rbp], eax
	cmp	DWORD PTR -1084[rbp], 0
	je	.L6594
	mov	rax, QWORD PTR -1080[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L6506:
	lea	rax, -1152[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -1096[rbp], rax
	mov	rax, QWORD PTR -1096[rbp]
	mov	QWORD PTR -1104[rbp], rax
	mov	rax, QWORD PTR -1104[rbp]
	lea	rdx, .LC416[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -1108[rbp], eax
	cmp	DWORD PTR -1108[rbp], 0
	jne	.L6595
	mov	rax, QWORD PTR -1104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L6505
.L6594:
	nop
.L6505:
	mov	QWORD PTR -1120[rbp], 127
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6509
.L6595:
	nop
.L6508:
	mov	edx, 1
	mov	rcx, QWORD PTR 16[rbp]
	call	fb_ASC
	mov	DWORD PTR -1112[rbp], eax
	mov	eax, DWORD PTR -1112[rbp]
	mov	QWORD PTR -1120[rbp], rax
	lea	rax, -1152[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	nop
.L6509:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -1120[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MAINMENU12READPROPERTYER8FBSTRING;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MAINMENU12READPROPERTYER8FBSTRING:
	push	rbp
	mov	rbp, rsp
	add	rsp, -128
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -56[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC152[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L6597:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 136
	mov	rdx, QWORD PTR -40[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrAssign
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 136[rax]
	lea	rax, -80[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENU12READPROPERTYER8FBSTRING
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	lea	rax, -80[rbp]
	mov	rcx, rax
	call	fb_StrDelete
.L6598:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -56[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8MAINMENU13WRITEPROPERTYER8FBSTRINGPv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MAINMENU13WRITEPROPERTYER8FBSTRINGPv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 176
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	BYTE PTR -58[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC154[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L6601:
	cmp	QWORD PTR 32[rbp], 0
	jne	.L6607
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -96[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENU13WRITEPROPERTYER8FBSTRINGPv
	mov	BYTE PTR -41[rbp], al
	movzx	eax, BYTE PTR -41[rbp]
	mov	BYTE PTR -58[rbp], al
	lea	rax, -96[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6604
.L6607:
	nop
.L6603:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -56[rbp], rax
	mov	rdx, QWORD PTR -56[rbp]
	lea	rax, -128[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENU13WRITEPROPERTYER8FBSTRINGPv
	mov	BYTE PTR -57[rbp], al
	movzx	eax, BYTE PTR -57[rbp]
	mov	BYTE PTR -58[rbp], al
	lea	rax, -128[rbp]
	mov	rcx, rax
	call	fb_StrDelete
.L6604:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -58[rbp]
	leave
	ret
	.section .rdata,"dr"
	.align 2
.LC417:
	.ascii "\11\0\0\0"
	.align 2
.LC418:
	.ascii "C\0t\0r\0l\0\0\0"
	.align 2
.LC419:
	.ascii "S\0h\0i\0f\0t\0\0\0"
	.align 2
.LC420:
	.ascii "A\0l\0t\0\0\0"
	.align 2
.LC421:
	.ascii "+\0\0\0"
	.text
	.def	_ZN2MY3SYS5FORMS8MAINMENU19PARENTWINDOW__set__EPNS0_14COMPONENTMODEL9COMPONENTE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MAINMENU19PARENTWINDOW__set__EPNS0_14COMPONENTMODEL9COMPONENTE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 880
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L6609:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	lea	rcx, .LC312[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 448[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	cmp	QWORD PTR 24[rbp], 0
	je	.L6701
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 448
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L6702
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 448
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	IsWindow
	mov	DWORD PTR -84[rbp], eax
	cmp	DWORD PTR -84[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L6614
.L6702:
	nop
.L6613:
	mov	QWORD PTR -8[rbp], 0
.L6614:
	cmp	QWORD PTR -8[rbp], 0
	je	.L6703
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 448
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 392
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -96[rbp]
	mov	rcx, rax
	call	SetMenu
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 448
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	DrawMenuBar
	jmp	.L6617
.L6616:
.L6703:
	nop
.L6617:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 424
	mov	rcx, rax
	call	_ZN4LIST5CLEAREv
	mov	QWORD PTR -16[rbp], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENU12COUNT__get__Ev
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	sub	rax, 1
	mov	QWORD PTR -120[rbp], rax
	jmp	.L6618
.L6704:
	nop
.L6619:
	mov	rax, QWORD PTR -16[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENU11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -512[rbp], rax
	mov	rax, QWORD PTR -512[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8MAINMENU13ENUMMENUITEMSERNS1_8MENUITEME
.L6620:
	add	QWORD PTR -16[rbp], 1
.L6618:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -120[rbp]
	jle	.L6704
	nop
.L6621:
	mov	QWORD PTR -520[rbp], 0
	lea	rax, -544[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	lea	rax, -576[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR -584[rbp], 0
	mov	QWORD PTR -24[rbp], 0
	lea	rax, -816[rbp]
	mov	QWORD PTR [rax], 0
	lea	rax, -816[rbp]
	add	rax, 8
	mov	QWORD PTR [rax], 0
	lea	rax, -816[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], 0
	lea	rax, -816[rbp]
	add	rax, 24
	mov	QWORD PTR [rax], 6
	lea	rax, -816[rbp]
	add	rax, 32
	mov	QWORD PTR [rax], 1
	lea	rax, -816[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], 17
	lea	rax, -816[rbp]
	add	rax, 48
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
.L6622:
	lea	rax, -816[rbp]
	mov	QWORD PTR 48[rsp], 1
	mov	QWORD PTR 40[rsp], 0
	mov	QWORD PTR 32[rsp], 1
	mov	r9d, 0
	mov	r8d, -1
	mov	edx, 6
	mov	rcx, rax
	call	fb_ArrayRedimEx
	mov	DWORD PTR -124[rbp], eax
	cmp	DWORD PTR -124[rbp], 0
	je	.L6705
	jmp	.L6684
.L6626:
	jmp	rax
.L6684:
	lea	r9, .L6625[rip]
	lea	r8, .L6622[rip]
	lea	rdx, .LC327[rip]
	mov	ecx, 1788
	call	fb_ErrorThrowAt
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	jmp	.L6626
.L6705:
	nop
.L6625:
	mov	QWORD PTR -32[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 424
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -40[rbp], rax
	jmp	.L6627
.L6723:
	nop
.L6628:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 432[rax]
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR -216[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1790
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -224[rbp], rax
	cmp	QWORD PTR -224[rbp], 0
	je	.L6706
	mov	rax, QWORD PTR -224[rbp]
	jmp	.L6626
.L6706:
	nop
.L6630:
	mov	rax, QWORD PTR -32[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -216[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -520[rbp], rax
	mov	rax, QWORD PTR -520[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM14CAPTION__get__Ev
	mov	QWORD PTR -232[rbp], rax
	mov	rdx, QWORD PTR -232[rbp]
	lea	rax, -544[rbp]
	mov	r9d, 0
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA
	lea	rax, -608[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	lea	rax, -608[rbp]
	mov	r9d, 0
	lea	r8, .LC417[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA
	lea	rdx, -608[rbp]
	lea	rax, -544[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	ecx, 1
	call	fb_StrInstr
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -240[rbp]
	mov	QWORD PTR -584[rbp], rax
	lea	rax, -608[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	mov	rax, QWORD PTR -584[rbp]
	test	rax, rax
	jle	.L6707
	add	QWORD PTR -24[rbp], 1
	mov	rax, QWORD PTR -584[rbp]
	lea	rdx, 1[rax]
	lea	rax, -544[rbp]
	mov	r8, -1
	mov	rcx, rax
	call	fb_StrMid
	mov	QWORD PTR -248[rbp], rax
	mov	rdx, QWORD PTR -248[rbp]
	lea	rax, -576[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrAssign
.L6633:
	mov	rax, QWORD PTR -24[rbp]
	lea	rdx, -1[rax]
	lea	rax, -816[rbp]
	mov	QWORD PTR 48[rsp], rdx
	mov	QWORD PTR 40[rsp], 0
	mov	QWORD PTR 32[rsp], 1
	mov	r9d, 0
	mov	r8d, -1
	mov	edx, 6
	mov	rcx, rax
	call	fb_ArrayRedimPresvEx
	mov	DWORD PTR -252[rbp], eax
	cmp	DWORD PTR -252[rbp], 0
	je	.L6708
	lea	r9, .L6635[rip]
	lea	r8, .L6633[rip]
	lea	rdx, .LC327[rip]
	mov	ecx, 1796
	call	fb_ErrorThrowAt
	mov	QWORD PTR -264[rbp], rax
	mov	rax, QWORD PTR -264[rbp]
	jmp	.L6626
.L6708:
	nop
.L6635:
	lea	rax, -640[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	lea	rax, -640[rbp]
	mov	r9d, 0
	lea	r8, .LC418[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA
	lea	rdx, -640[rbp]
	lea	rax, -576[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	ecx, 1
	call	fb_StrInstr
	mov	QWORD PTR -272[rbp], rax
	cmp	QWORD PTR -272[rbp], 0
	setg	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -280[rbp], rax
	lea	rax, -640[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	cmp	QWORD PTR -280[rbp], 0
	je	.L6709
	mov	rax, QWORD PTR -24[rbp]
	sub	rax, 1
	mov	QWORD PTR -288[rbp], rax
	lea	rax, -816[rbp]
	add	rax, 64
	mov	r8, QWORD PTR [rax]
	lea	rax, -816[rbp]
	add	rax, 56
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -288[rbp]
	lea	rcx, .LC327[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 1797
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -296[rbp], rax
	cmp	QWORD PTR -296[rbp], 0
	je	.L6710
	mov	rax, QWORD PTR -296[rbp]
	jmp	.L6626
.L6710:
	nop
.L6639:
	mov	rax, QWORD PTR -24[rbp]
	sub	rax, 1
	mov	QWORD PTR -304[rbp], rax
	lea	rax, -816[rbp]
	add	rax, 64
	mov	r8, QWORD PTR [rax]
	lea	rax, -816[rbp]
	add	rax, 56
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -304[rbp]
	lea	rcx, .LC327[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 1797
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -312[rbp], rax
	cmp	QWORD PTR -312[rbp], 0
	je	.L6711
	mov	rax, QWORD PTR -312[rbp]
	jmp	.L6626
.L6711:
	nop
.L6641:
	mov	rdx, QWORD PTR -288[rbp]
	mov	rax, rdx
	add	rax, rax
	add	rax, rdx
	add	rax, rax
	mov	rdx, rax
	lea	rax, -816[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	movzx	ecx, BYTE PTR [rax]
	mov	rdx, QWORD PTR -304[rbp]
	mov	rax, rdx
	add	rax, rax
	add	rax, rdx
	add	rax, rax
	mov	rdx, rax
	lea	rax, -816[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	or	ecx, 8
	mov	edx, ecx
	mov	BYTE PTR [rax], dl
	jmp	.L6637
.L6709:
	nop
.L6637:
	lea	rax, -672[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	lea	rax, -672[rbp]
	mov	r9d, 0
	lea	r8, .LC419[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA
	lea	rdx, -672[rbp]
	lea	rax, -576[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	ecx, 1
	call	fb_StrInstr
	mov	QWORD PTR -320[rbp], rax
	cmp	QWORD PTR -320[rbp], 0
	setg	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -328[rbp], rax
	lea	rax, -672[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	cmp	QWORD PTR -328[rbp], 0
	je	.L6712
	mov	rax, QWORD PTR -24[rbp]
	sub	rax, 1
	mov	QWORD PTR -336[rbp], rax
	lea	rax, -816[rbp]
	add	rax, 64
	mov	r8, QWORD PTR [rax]
	lea	rax, -816[rbp]
	add	rax, 56
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -336[rbp]
	lea	rcx, .LC327[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 1798
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -344[rbp], rax
	cmp	QWORD PTR -344[rbp], 0
	je	.L6713
	mov	rax, QWORD PTR -344[rbp]
	jmp	.L6626
.L6713:
	nop
.L6645:
	mov	rax, QWORD PTR -24[rbp]
	sub	rax, 1
	mov	QWORD PTR -352[rbp], rax
	lea	rax, -816[rbp]
	add	rax, 64
	mov	r8, QWORD PTR [rax]
	lea	rax, -816[rbp]
	add	rax, 56
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -352[rbp]
	lea	rcx, .LC327[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 1798
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -360[rbp], rax
	cmp	QWORD PTR -360[rbp], 0
	je	.L6714
	mov	rax, QWORD PTR -360[rbp]
	jmp	.L6626
.L6714:
	nop
.L6647:
	mov	rdx, QWORD PTR -336[rbp]
	mov	rax, rdx
	add	rax, rax
	add	rax, rdx
	add	rax, rax
	mov	rdx, rax
	lea	rax, -816[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	movzx	ecx, BYTE PTR [rax]
	mov	rdx, QWORD PTR -352[rbp]
	mov	rax, rdx
	add	rax, rax
	add	rax, rdx
	add	rax, rax
	mov	rdx, rax
	lea	rax, -816[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	or	ecx, 4
	mov	edx, ecx
	mov	BYTE PTR [rax], dl
	jmp	.L6643
.L6712:
	nop
.L6643:
	lea	rax, -704[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	lea	rax, -704[rbp]
	mov	r9d, 0
	lea	r8, .LC420[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA
	lea	rdx, -704[rbp]
	lea	rax, -576[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	ecx, 1
	call	fb_StrInstr
	mov	QWORD PTR -368[rbp], rax
	cmp	QWORD PTR -368[rbp], 0
	setg	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -376[rbp], rax
	lea	rax, -704[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	cmp	QWORD PTR -376[rbp], 0
	je	.L6715
	mov	rax, QWORD PTR -24[rbp]
	sub	rax, 1
	mov	QWORD PTR -384[rbp], rax
	lea	rax, -816[rbp]
	add	rax, 64
	mov	r8, QWORD PTR [rax]
	lea	rax, -816[rbp]
	add	rax, 56
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -384[rbp]
	lea	rcx, .LC327[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 1799
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -392[rbp], rax
	cmp	QWORD PTR -392[rbp], 0
	je	.L6716
	mov	rax, QWORD PTR -392[rbp]
	jmp	.L6626
.L6716:
	nop
.L6651:
	mov	rax, QWORD PTR -24[rbp]
	sub	rax, 1
	mov	QWORD PTR -400[rbp], rax
	lea	rax, -816[rbp]
	add	rax, 64
	mov	r8, QWORD PTR [rax]
	lea	rax, -816[rbp]
	add	rax, 56
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -400[rbp]
	lea	rcx, .LC327[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 1799
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -408[rbp], rax
	cmp	QWORD PTR -408[rbp], 0
	je	.L6717
	mov	rax, QWORD PTR -408[rbp]
	jmp	.L6626
.L6717:
	nop
.L6653:
	mov	rdx, QWORD PTR -384[rbp]
	mov	rax, rdx
	add	rax, rax
	add	rax, rdx
	add	rax, rax
	mov	rdx, rax
	lea	rax, -816[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	movzx	ecx, BYTE PTR [rax]
	mov	rdx, QWORD PTR -400[rbp]
	mov	rax, rdx
	add	rax, rax
	add	rax, rdx
	add	rax, rax
	mov	rdx, rax
	lea	rax, -816[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	or	ecx, 16
	mov	edx, ecx
	mov	BYTE PTR [rax], dl
	jmp	.L6649
.L6715:
	nop
.L6649:
	mov	rax, QWORD PTR -24[rbp]
	sub	rax, 1
	mov	QWORD PTR -416[rbp], rax
	lea	rax, -816[rbp]
	add	rax, 64
	mov	r8, QWORD PTR [rax]
	lea	rax, -816[rbp]
	add	rax, 56
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -416[rbp]
	lea	rcx, .LC327[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 1800
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -424[rbp], rax
	cmp	QWORD PTR -424[rbp], 0
	je	.L6718
	mov	rax, QWORD PTR -424[rbp]
	jmp	.L6626
.L6718:
	nop
.L6655:
	mov	rax, QWORD PTR -24[rbp]
	sub	rax, 1
	mov	QWORD PTR -432[rbp], rax
	lea	rax, -816[rbp]
	add	rax, 64
	mov	r8, QWORD PTR [rax]
	lea	rax, -816[rbp]
	add	rax, 56
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -432[rbp]
	lea	rcx, .LC327[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 1800
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -440[rbp], rax
	cmp	QWORD PTR -440[rbp], 0
	je	.L6719
	mov	rax, QWORD PTR -440[rbp]
	jmp	.L6626
.L6719:
	nop
.L6657:
	mov	rdx, QWORD PTR -416[rbp]
	mov	rax, rdx
	add	rax, rax
	add	rax, rdx
	add	rax, rax
	mov	rdx, rax
	lea	rax, -816[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	movzx	ecx, BYTE PTR [rax]
	mov	rdx, QWORD PTR -432[rbp]
	mov	rax, rdx
	add	rax, rax
	add	rax, rdx
	add	rax, rax
	mov	rdx, rax
	lea	rax, -816[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	or	ecx, 1
	mov	edx, ecx
	mov	BYTE PTR [rax], dl
	lea	rax, -736[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	lea	rax, -736[rbp]
	mov	r9d, 0
	lea	r8, .LC421[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA
	lea	rdx, -736[rbp]
	lea	rax, -576[rbp]
	mov	r8, -1
	mov	rcx, rax
	call	fb_StrInstrRev
	mov	QWORD PTR -448[rbp], rax
	mov	rax, QWORD PTR -448[rbp]
	mov	QWORD PTR -584[rbp], rax
	lea	rax, -736[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	mov	rax, QWORD PTR -584[rbp]
	test	rax, rax
	jle	.L6720
	mov	rax, QWORD PTR -584[rbp]
	lea	rdx, 1[rax]
	lea	rax, -576[rbp]
	mov	r8, -1
	mov	rcx, rax
	call	fb_StrMid
	mov	QWORD PTR -456[rbp], rax
	mov	rdx, QWORD PTR -456[rbp]
	lea	rax, -576[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrAssign
	jmp	.L6659
.L6720:
	nop
.L6659:
	lea	rax, -576[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS13GETASCKEYCODEER8FBSTRING
	mov	QWORD PTR -464[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	sub	rax, 1
	mov	QWORD PTR -472[rbp], rax
	lea	rax, -816[rbp]
	add	rax, 64
	mov	r8, QWORD PTR [rax]
	lea	rax, -816[rbp]
	add	rax, 56
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -472[rbp]
	lea	rcx, .LC327[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 1803
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -480[rbp], rax
	cmp	QWORD PTR -480[rbp], 0
	je	.L6721
	mov	rax, QWORD PTR -480[rbp]
	jmp	.L6626
.L6721:
	nop
.L6661:
	mov	rdx, QWORD PTR -472[rbp]
	mov	rax, rdx
	add	rax, rax
	add	rax, rdx
	add	rax, rax
	mov	rdx, rax
	lea	rax, -816[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	add	rax, 2
	mov	rdx, rax
	mov	rax, QWORD PTR -464[rbp]
	mov	WORD PTR [rdx], ax
	mov	rax, QWORD PTR -520[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM14COMMAND__get__Ev
	mov	QWORD PTR -488[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	sub	rax, 1
	mov	QWORD PTR -496[rbp], rax
	lea	rax, -816[rbp]
	add	rax, 64
	mov	r8, QWORD PTR [rax]
	lea	rax, -816[rbp]
	add	rax, 56
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -496[rbp]
	lea	rcx, .LC327[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 1804
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -504[rbp], rax
	cmp	QWORD PTR -504[rbp], 0
	je	.L6722
	mov	rax, QWORD PTR -504[rbp]
	jmp	.L6626
.L6722:
	nop
.L6663:
	mov	rdx, QWORD PTR -496[rbp]
	mov	rax, rdx
	add	rax, rax
	add	rax, rdx
	add	rax, rax
	mov	rdx, rax
	lea	rax, -816[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	add	rax, 4
	mov	rdx, rax
	mov	rax, QWORD PTR -488[rbp]
	mov	WORD PTR [rdx], ax
	jmp	.L6665
.L6632:
.L6664:
.L6707:
	nop
.L6665:
	add	QWORD PTR -32[rbp], 1
.L6627:
	mov	rax, QWORD PTR -32[rbp]
	cmp	rax, QWORD PTR -40[rbp]
	jle	.L6723
	nop
.L6666:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 448
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L6724
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 448[rax]
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1808
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -152[rbp], rax
	cmp	QWORD PTR -152[rbp], 0
	je	.L6725
	mov	rax, QWORD PTR -152[rbp]
	jmp	.L6626
.L6725:
	nop
.L6670:
	mov	rax, QWORD PTR -144[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L6726
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 448[rax]
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1808
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -168[rbp], rax
	cmp	QWORD PTR -168[rbp], 0
	je	.L6727
	mov	rax, QWORD PTR -168[rbp]
	jmp	.L6626
.L6727:
	nop
.L6674:
	mov	rax, QWORD PTR -160[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DestroyAcceleratorTable
	jmp	.L6672
.L6726:
	nop
.L6672:
	mov	QWORD PTR -176[rbp], 0
	lea	rax, -816[rbp]
	add	rax, 64
	mov	r8, QWORD PTR [rax]
	lea	rax, -816[rbp]
	add	rax, 56
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -176[rbp]
	lea	rcx, .LC327[rip]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9d, 1809
	mov	rcx, rax
	call	fb_ArrayBoundChk
	mov	QWORD PTR -184[rbp], rax
	cmp	QWORD PTR -184[rbp], 0
	je	.L6728
	mov	rax, QWORD PTR -184[rbp]
	jmp	.L6626
.L6728:
	nop
.L6676:
	mov	rax, QWORD PTR -24[rbp]
	mov	ecx, eax
	mov	rdx, QWORD PTR -176[rbp]
	mov	rax, rdx
	add	rax, rax
	add	rax, rdx
	add	rax, rax
	mov	rdx, rax
	lea	rax, -816[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	mov	edx, ecx
	mov	rcx, rax
	call	CreateAcceleratorTableW
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 448[rax]
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	lea	r8, .LC327[rip]
	mov	edx, 1809
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -208[rbp], rax
	cmp	QWORD PTR -208[rbp], 0
	je	.L6729
	mov	rax, QWORD PTR -208[rbp]
	jmp	.L6626
.L6729:
	nop
.L6678:
	mov	rax, QWORD PTR -200[rbp]
	lea	rdx, 8[rax]
	mov	rax, QWORD PTR -192[rbp]
	mov	QWORD PTR [rdx], rax
	jmp	.L6679
.L6668:
.L6724:
	nop
.L6679:
	lea	rax, -816[rbp]
	mov	rcx, rax
	call	fb_ArrayErase
	lea	rax, -816[rbp]
	mov	rcx, rax
	call	fb_ArrayErase
	lea	rax, -576[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	lea	rax, -544[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6681
.L6611:
.L6680:
.L6701:
	nop
.L6681:
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC422:
	.ascii "PROCESSMESSAGES\0"
	.text
	.def	_ZN2MY3SYS5FORMS8MAINMENU15PROCESSMESSAGESER7MESSAGE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8MAINMENU15PROCESSMESSAGESER7MESSAGE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L6731:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC422[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	QWORD PTR -48[rbp], 0
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	movzx	eax, ax
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENU4FINDEu7INTEGER
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	test	rax, rax
	je	.L6735
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM5CLICKEv
	jmp	.L6734
.L6733:
.L6735:
	nop
.L6734:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS9POPUPMENU12READPROPERTYER8FBSTRING;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9POPUPMENU12READPROPERTYER8FBSTRING:
	push	rbp
	mov	rbp, rsp
	add	rsp, -128
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -56[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC152[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L6737:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 136
	mov	rdx, QWORD PTR -40[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrAssign
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 136[rax]
	lea	rax, -80[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENU12READPROPERTYER8FBSTRING
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	lea	rax, -80[rbp]
	mov	rcx, rax
	call	fb_StrDelete
.L6738:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -56[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS9POPUPMENU13WRITEPROPERTYER8FBSTRINGPv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9POPUPMENU13WRITEPROPERTYER8FBSTRINGPv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 176
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	BYTE PTR -58[rbp], 0
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC154[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L6741:
	cmp	QWORD PTR 32[rbp], 0
	jne	.L6747
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -96[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENU13WRITEPROPERTYER8FBSTRINGPv
	mov	BYTE PTR -41[rbp], al
	movzx	eax, BYTE PTR -41[rbp]
	mov	BYTE PTR -58[rbp], al
	lea	rax, -96[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L6744
.L6747:
	nop
.L6743:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -56[rbp], rax
	mov	rdx, QWORD PTR -56[rbp]
	lea	rax, -128[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENU13WRITEPROPERTYER8FBSTRINGPv
	mov	BYTE PTR -57[rbp], al
	movzx	eax, BYTE PTR -57[rbp]
	mov	BYTE PTR -58[rbp], al
	lea	rax, -128[rbp]
	mov	rcx, rax
	call	fb_StrDelete
.L6744:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -58[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS9POPUPMENU21PARENTMENUITEM__set__EPNS1_8MENUITEME;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9POPUPMENU21PARENTMENUITEM__set__EPNS1_8MENUITEME:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L6749:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC355[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 440[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
.L6750:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS9POPUPMENU19PARENTWINDOW__set__EPNS0_14COMPONENTMODEL9COMPONENTE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9POPUPMENU19PARENTWINDOW__set__EPNS0_14COMPONENTMODEL9COMPONENTE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L6752:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC312[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENU19PARENTWINDOW__set__EPNS0_14COMPONENTMODEL9COMPONENTE
.L6753:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC423:
	.ascii "POPUP\0"
	.text
	.def	_ZN2MY3SYS5FORMS9POPUPMENU5POPUPEu7INTEGERS3_P7MESSAGE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9POPUPMENU5POPUPEu7INTEGERS3_P7MESSAGE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
.L6755:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC423[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 448
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L6764
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 448
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -48[rbp], rax
	cmp	QWORD PTR -48[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L6758
.L6764:
	nop
.L6757:
	mov	QWORD PTR -8[rbp], 0
.L6758:
	cmp	QWORD PTR -8[rbp], 0
	je	.L6765
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 448
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR 32[rbp]
	mov	r8d, eax
	mov	rax, QWORD PTR 24[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 392
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR 40[rsp], 0
	mov	rdx, QWORD PTR -56[rbp]
	mov	QWORD PTR 32[rsp], rdx
	mov	r9d, r8d
	mov	r8d, ecx
	mov	edx, 0
	mov	rcx, rax
	call	TrackPopupMenuEx
	jmp	.L6762
.L6760:
.L6761:
.L6765:
	nop
.L6762:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS9POPUPMENU15PROCESSMESSAGESER7MESSAGE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9POPUPMENU15PROCESSMESSAGESER7MESSAGE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L6767:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC422[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	QWORD PTR -48[rbp], 0
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	movzx	eax, ax
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENU4FINDEu7INTEGER
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	test	rax, rax
	je	.L6771
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM5CLICKEv
	jmp	.L6770
.L6769:
.L6771:
	nop
.L6770:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 2
.LC424:
	.ascii "P\0o\0p\0u\0p\0M\0e\0n\0u\0\0\0"
	.text
	.def	_ZN2MY3SYS5FORMS9POPUPMENUC1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS9POPUPMENUC1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
.L6773:
	lea	rcx, .LC327[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4MENUC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 480
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 488
	mov	QWORD PTR [rax], 0
	lea	rdx, _ZTVN2MY3SYS5FORMS9POPUPMENUE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	call	CreatePopupMenu
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 392[rax]
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 352
	mov	DWORD PTR [rax], 40
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 356
	mov	DWORD PTR [rax], 8
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 384[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 352[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 392
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	SetMenuInfo
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 32
	lea	rdx, .LC424[rip]
	mov	rcx, rax
	call	WLET
.L6774:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC425:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\IntegerList.bi\0"
	.text
	.def	_ZN15INTEGERLISTITEMaSERKS_;	.scl	3;	.type	32;	.endef
_ZN15INTEGERLISTITEMaSERKS_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L6776:
	lea	rcx, .LC425[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 8[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 8[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 16[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 16[rax]
	mov	QWORD PTR [rdx], rax
.L6777:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN11INTEGERLISTaSERKS_;	.scl	3;	.type	32;	.endef
_ZN11INTEGERLISTaSERKS_:
	push	rbp
	mov	rbp, rsp
	and	rsp, -16
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L6779:
	lea	rcx, .LC425[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR 56[rsp], rax
	mov	rax, QWORD PTR 56[rsp]
	mov	QWORD PTR 48[rsp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR 40[rsp], rax
	mov	rax, QWORD PTR 40[rsp]
	mov	QWORD PTR 32[rsp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 8[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 8[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 16
	mov	rdx, QWORD PTR 16[rbp]
	lea	rcx, 16[rdx]
	mov	rdx, QWORD PTR 8[rax]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR 8[rcx], rdx
.L6780:
	mov	rax, QWORD PTR 32[rsp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR 48[rsp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC426:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\IntegerList.bas\0"
.LC427:
	.ascii "VALUE\0"
	.text
	.def	_ZN15INTEGERLISTITEM12VALUE__get__Ev;	.scl	3;	.type	32;	.endef
_ZN15INTEGERLISTITEM12VALUE__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC426[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC427[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L6782:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 8[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L6783:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN15INTEGERLISTITEM12VALUE__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN15INTEGERLISTITEM12VALUE__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L6786:
	lea	rcx, .LC426[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC427[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 8[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
.L6787:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN15INTEGERLISTITEMC1Ev;	.scl	3;	.type	32;	.endef
_ZN15INTEGERLISTITEMC1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L6789:
	lea	rcx, .LC426[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10fb_Object$C1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], 0
	lea	rdx, _ZTVN15INTEGERLISTITEME[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	mov	edx, 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN15INTEGERLISTITEM12VALUE__set__Eu7INTEGER
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], 0
.L6790:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN15INTEGERLISTITEMD1Ev;	.scl	3;	.type	32;	.endef
_ZN15INTEGERLISTITEMD1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	lea	rdx, _ZTVN15INTEGERLISTITEME[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rcx, .LC426[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L6792:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], 0
.L6793:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN11INTEGERLIST12COUNT__get__Ev;	.scl	3;	.type	32;	.endef
_ZN11INTEGERLIST12COUNT__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC426[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC269[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L6795:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 16[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L6796:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN11INTEGERLIST11ITEM__get__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN11INTEGERLIST11ITEM__get__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -72[rbp], 0
	lea	rcx, .LC426[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC257[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L6799:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN11INTEGERLIST12COUNT__get__Ev
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	not	rax
	shr	rax, 63
	movzx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR -40[rbp]
	sub	rax, 1
	cmp	QWORD PTR 24[rbp], rax
	setle	al
	movzx	eax, al
	neg	eax
	and	eax, edx
	test	eax, eax
	je	.L6809
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	r8, .LC426[rip]
	mov	edx, 59
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L6810
	jmp	[QWORD PTR -56[rbp]]
.L6810:
	nop
.L6803:
	mov	rax, QWORD PTR 24[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -48[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN15INTEGERLISTITEM12VALUE__get__Ev
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -72[rbp], rax
	jmp	.L6804
.L6801:
.L6809:
	nop
.L6805:
	mov	QWORD PTR -72[rbp], 0
	nop
.L6804:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -72[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC428:
	.ascii "OBJECT\0"
	.text
	.def	_ZN11INTEGERLIST13OBJECT__get__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN11INTEGERLIST13OBJECT__get__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -64[rbp], 0
	lea	rcx, .LC426[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC428[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L6812:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN11INTEGERLIST12COUNT__get__Ev
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	not	rax
	shr	rax, 63
	movzx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR -40[rbp]
	sub	rax, 1
	cmp	QWORD PTR 24[rbp], rax
	setle	al
	movzx	eax, al
	neg	eax
	and	eax, edx
	test	eax, eax
	je	.L6822
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	r8, .LC426[rip]
	mov	edx, 72
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L6823
	jmp	[QWORD PTR -56[rbp]]
.L6823:
	nop
.L6816:
	mov	rax, QWORD PTR 24[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -48[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rax]
	mov	QWORD PTR -64[rbp], rax
	jmp	.L6817
.L6814:
.L6822:
	nop
.L6818:
	mov	QWORD PTR -64[rbp], 0
	nop
.L6817:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -64[rbp]
	leave
	ret
	.def	_ZN11INTEGERLIST3ADDEu7INTEGERPv;	.scl	3;	.type	32;	.endef
_ZN11INTEGERLIST3ADDEu7INTEGERPv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
.L6825:
	lea	rcx, .LC426[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC258[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	ecx, 24
	call	malloc
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	cmp	QWORD PTR -48[rbp], 0
	je	.L6829
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	_ZN15INTEGERLISTITEMC1Ev
	jmp	.L6827
.L6829:
	nop
.L6827:
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	_ZN15INTEGERLISTITEM12VALUE__set__Eu7INTEGER
	mov	rax, QWORD PTR -64[rbp]
	lea	rdx, 16[rax]
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 16[rax]
	mov	rax, QWORD PTR -56[rbp]
	mov	rdx, rax
	call	_ZN4LIST3ADDEPv
.L6828:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN11INTEGERLIST6INSERTEu7INTEGERS0_Pv;	.scl	3;	.type	32;	.endef
_ZN11INTEGERLIST6INSERTEu7INTEGERS0_Pv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
.L6831:
	lea	rcx, .LC426[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC259[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	ecx, 24
	call	malloc
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	cmp	QWORD PTR -48[rbp], 0
	je	.L6835
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	_ZN15INTEGERLISTITEMC1Ev
	jmp	.L6833
.L6835:
	nop
.L6833:
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	_ZN15INTEGERLISTITEM12VALUE__set__Eu7INTEGER
	mov	rax, QWORD PTR -64[rbp]
	lea	rdx, 16[rax]
	mov	rax, QWORD PTR 40[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 16[rax]
	mov	rdx, QWORD PTR -56[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	call	_ZN4LIST6INSERTEu7INTEGERPv
.L6834:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN11INTEGERLIST8EXCHANGEEu7INTEGERS0_;	.scl	3;	.type	32;	.endef
_ZN11INTEGERLIST8EXCHANGEEu7INTEGERS0_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
.L6837:
	lea	rcx, .LC426[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC260[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 16[rax]
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	call	_ZN4LIST8EXCHANGEEu7INTEGERS0_
.L6838:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN11INTEGERLIST4SORTEv;	.scl	3;	.type	32;	.endef
_ZN11INTEGERLIST4SORTEv:
	push	rbp
	mov	rbp, rsp
	add	rsp, -128
	mov	QWORD PTR 16[rbp], rcx
.L6840:
	lea	rcx, .LC426[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC270[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	QWORD PTR -88[rbp], 0
	mov	QWORD PTR -96[rbp], 0
	mov	QWORD PTR -88[rbp], 1
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN11INTEGERLIST12COUNT__get__Ev
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	sub	rax, 1
	mov	QWORD PTR -48[rbp], rax
	jmp	.L6841
.L6857:
	nop
.L6842:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN11INTEGERLIST12COUNT__get__Ev
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	sub	rax, 1
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	QWORD PTR -64[rbp], rax
	jmp	.L6843
.L6856:
	nop
.L6844:
	mov	rax, QWORD PTR -96[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN11INTEGERLIST11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	sub	rax, 1
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN11INTEGERLIST11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	cmp	rax, QWORD PTR -80[rbp]
	jge	.L6855
	mov	rdx, QWORD PTR -96[rbp]
	mov	rax, QWORD PTR -96[rbp]
	sub	rax, 1
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN11INTEGERLIST8EXCHANGEEu7INTEGERS0_
	jmp	.L6848
.L6846:
.L6847:
.L6855:
	nop
.L6848:
	mov	rax, QWORD PTR -96[rbp]
	sub	rax, 1
	mov	QWORD PTR -96[rbp], rax
.L6843:
	mov	rax, QWORD PTR -96[rbp]
	cmp	QWORD PTR -64[rbp], rax
	jle	.L6856
.L6849:
	nop
.L6850:
	mov	rax, QWORD PTR -88[rbp]
	add	rax, 1
	mov	QWORD PTR -88[rbp], rax
.L6841:
	mov	rax, QWORD PTR -88[rbp]
	cmp	QWORD PTR -48[rbp], rax
	jge	.L6857
.L6851:
	nop
.L6852:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN11INTEGERLIST5CLEAREv;	.scl	3;	.type	32;	.endef
_ZN11INTEGERLIST5CLEAREv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
.L6859:
	lea	rcx, .LC426[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC262[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN11INTEGERLIST12COUNT__get__Ev
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	sub	rax, 1
	mov	QWORD PTR -8[rbp], rax
	jmp	.L6860
.L6881:
	nop
.L6861:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	r8, .LC426[rip]
	mov	edx, 124
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -64[rbp], rax
	cmp	QWORD PTR -64[rbp], 0
	je	.L6877
	jmp	[QWORD PTR -64[rbp]]
.L6877:
	nop
.L6863:
	mov	rax, QWORD PTR -8[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -56[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L6878
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	r8, .LC426[rip]
	mov	edx, 124
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	je	.L6879
	jmp	[QWORD PTR -72[rbp]]
.L6879:
	nop
.L6867:
	mov	rax, QWORD PTR -8[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -56[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN15INTEGERLISTITEMD1Ev
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	r8, .LC426[rip]
	mov	edx, 124
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L6880
	jmp	[QWORD PTR -80[rbp]]
.L6880:
	nop
.L6869:
	mov	rax, QWORD PTR -8[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -56[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	free
	jmp	.L6870
.L6865:
.L6878:
	nop
.L6870:
	sub	QWORD PTR -8[rbp], 1
.L6860:
	cmp	QWORD PTR -8[rbp], 0
	jns	.L6881
	nop
.L6871:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rcx, rax
	call	_ZN4LIST5CLEAREv
.L6872:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN11INTEGERLIST7INDEXOFEu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN11INTEGERLIST7INDEXOFEu7INTEGER:
	push	rbp
	mov	rbp, rsp
	add	rsp, -128
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -88[rbp], 0
	lea	rcx, .LC426[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC263[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L6883:
	mov	QWORD PTR -8[rbp], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN11INTEGERLIST12COUNT__get__Ev
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	sub	rax, 1
	mov	QWORD PTR -56[rbp], rax
	jmp	.L6884
.L6899:
	nop
.L6885:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	lea	r8, .LC426[rip]
	mov	edx, 131
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	je	.L6897
	jmp	[QWORD PTR -72[rbp]]
.L6897:
	nop
.L6887:
	mov	rax, QWORD PTR -8[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -64[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN15INTEGERLISTITEM12VALUE__get__Ev
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	cmp	rax, QWORD PTR 24[rbp]
	jne	.L6898
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -88[rbp], rax
	jmp	.L6890
.L6889:
.L6898:
	nop
.L6891:
	add	QWORD PTR -8[rbp], 1
.L6884:
	mov	rax, QWORD PTR -8[rbp]
	cmp	rax, QWORD PTR -56[rbp]
	jle	.L6899
	nop
.L6892:
	mov	QWORD PTR -88[rbp], -1
	nop
.L6890:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -88[rbp]
	leave
	ret
	.def	_ZN11INTEGERLIST13INDEXOFOBJECTEPv;	.scl	3;	.type	32;	.endef
_ZN11INTEGERLIST13INDEXOFOBJECTEPv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -80[rbp], 0
	lea	rcx, .LC426[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC273[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L6901:
	mov	QWORD PTR -8[rbp], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN11INTEGERLIST12COUNT__get__Ev
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	sub	rax, 1
	mov	QWORD PTR -56[rbp], rax
	jmp	.L6902
.L6917:
	nop
.L6903:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	lea	r8, .LC426[rip]
	mov	edx, 138
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	je	.L6915
	jmp	[QWORD PTR -72[rbp]]
.L6915:
	nop
.L6905:
	mov	rax, QWORD PTR -8[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -64[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR 24[rbp], rax
	jne	.L6916
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -80[rbp], rax
	jmp	.L6908
.L6907:
.L6916:
	nop
.L6909:
	add	QWORD PTR -8[rbp], 1
.L6902:
	mov	rax, QWORD PTR -8[rbp]
	cmp	rax, QWORD PTR -56[rbp]
	jle	.L6917
	nop
.L6910:
	mov	QWORD PTR -80[rbp], -1
	nop
.L6908:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -80[rbp]
	leave
	ret
	.def	_ZN11INTEGERLISTC1Ev;	.scl	3;	.type	32;	.endef
_ZN11INTEGERLISTC1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L6919:
	lea	rcx, .LC426[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN10fb_Object$C1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rcx, rax
	call	_ZN4LISTC1Ev
	lea	rdx, _ZTVN11INTEGERLISTE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rcx, rax
	call	_ZN4LIST5CLEAREv
.L6920:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN11INTEGERLISTD1Ev;	.scl	3;	.type	32;	.endef
_ZN11INTEGERLISTD1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	lea	rdx, _ZTVN11INTEGERLISTE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rcx, .LC426[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L6922:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN11INTEGERLIST12COUNT__get__Ev
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	sub	rax, 1
	mov	QWORD PTR -8[rbp], rax
	jmp	.L6923
.L6944:
	nop
.L6924:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	r8, .LC426[rip]
	mov	edx, 169
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -64[rbp], rax
	cmp	QWORD PTR -64[rbp], 0
	je	.L6940
	jmp	[QWORD PTR -64[rbp]]
.L6940:
	nop
.L6926:
	mov	rax, QWORD PTR -8[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -56[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L6941
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	r8, .LC426[rip]
	mov	edx, 169
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	je	.L6942
	jmp	[QWORD PTR -72[rbp]]
.L6942:
	nop
.L6930:
	mov	rax, QWORD PTR -8[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -56[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN15INTEGERLISTITEMD1Ev
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	r8, .LC426[rip]
	mov	edx, 169
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L6943
	jmp	[QWORD PTR -80[rbp]]
.L6943:
	nop
.L6932:
	mov	rax, QWORD PTR -8[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -56[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	free
	jmp	.L6933
.L6928:
.L6941:
	nop
.L6933:
	sub	QWORD PTR -8[rbp], 1
.L6923:
	cmp	QWORD PTR -8[rbp], 0
	jns	.L6944
.L6934:
	nop
.L6935:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rcx, rax
	call	_ZN4LISTD1Ev
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC429:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Control.bi\0"
	.text
	.def	_ZN2MY3SYS5FORMS15SIZECONSTRAINTSC1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS15SIZECONSTRAINTSC1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	QWORD PTR [rax], 0
	lea	rdx, _ZTVN2MY3SYS5FORMS15SIZECONSTRAINTSE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rcx, .LC429[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L6946:
.L6947:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS15SIZECONSTRAINTSaSERKS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS15SIZECONSTRAINTSaSERKS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L6949:
	lea	rcx, .LC429[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTaSERKS1_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 48[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 56[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 56[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 64[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 64[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 72[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 72[rax]
	mov	QWORD PTR [rdx], rax
.L6950:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS15SIZECONSTRAINTSD1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS15SIZECONSTRAINTSD1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	lea	rdx, _ZTVN2MY3SYS5FORMS15SIZECONSTRAINTSE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rcx, .LC429[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L6952:
.L6953:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTD1Ev
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS10ANCHORTYPEC1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS10ANCHORTYPEC1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	QWORD PTR [rax], 0
	lea	rdx, _ZTVN2MY3SYS5FORMS10ANCHORTYPEE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rcx, .LC429[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L6955:
.L6956:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS10ANCHORTYPEaSERKS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS10ANCHORTYPEaSERKS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L6958:
	lea	rcx, .LC429[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTaSERKS1_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 48[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 56[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 56[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 64[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 64[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 72[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 72[rax]
	mov	QWORD PTR [rdx], rax
.L6959:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS10ANCHORTYPED1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS10ANCHORTYPED1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	lea	rdx, _ZTVN2MY3SYS5FORMS10ANCHORTYPEE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rcx, .LC429[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L6961:
.L6962:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTD1Ev
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS17CONTROLCOLLECTIONaSERKS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS17CONTROLCOLLECTIONaSERKS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L6964:
	lea	rcx, .LC429[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTaSERKS1_
.L6965:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS7CONTROLaSERKS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROLaSERKS2_:
	push	rbp
	mov	rbp, rsp
	push	rbx
	and	rsp, -16
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L6967:
	lea	rcx, .LC429[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR 56[rsp], rax
	mov	rax, QWORD PTR 56[rsp]
	mov	QWORD PTR 48[rsp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR 40[rsp], rax
	mov	rax, QWORD PTR 40[rsp]
	mov	QWORD PTR 32[rsp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENTaSERKS2_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 336[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 336[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 344[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 344[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 352[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 352[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 360[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 360[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 368[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 368[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 376[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 376[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 384[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 384[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 392[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 392[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 393[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 393[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 400[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 400[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 408[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 408[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 416[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 416[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 424[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 424[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 432[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 432[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 440[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 440[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 448[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 448[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 456[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 456[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 464[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 464
	mov	rcx, QWORD PTR [rdx]
	mov	rbx, QWORD PTR 8[rdx]
	mov	QWORD PTR [rax], rcx
	mov	QWORD PTR 8[rax], rbx
	mov	rcx, QWORD PTR 16[rdx]
	mov	rbx, QWORD PTR 24[rdx]
	mov	QWORD PTR 16[rax], rcx
	mov	QWORD PTR 24[rax], rbx
	mov	rcx, QWORD PTR 32[rdx]
	mov	rbx, QWORD PTR 40[rdx]
	mov	QWORD PTR 32[rax], rcx
	mov	QWORD PTR 40[rax], rbx
	mov	rcx, QWORD PTR 48[rdx]
	mov	rbx, QWORD PTR 56[rdx]
	mov	QWORD PTR 48[rax], rcx
	mov	QWORD PTR 56[rax], rbx
	mov	rdx, QWORD PTR 64[rdx]
	mov	QWORD PTR 64[rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 536[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 536[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 544[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 544[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 552[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 552[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 560[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 560[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 568[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 568[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 576[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 576[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 584[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 584[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 592[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 592[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 600[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 600
	mov	rcx, rax
	call	_ZN7USTRINGaSERS_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 632[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 632[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 640[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 640[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 648[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 648[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 656[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 656[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 664[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 664[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 672[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 672[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 680[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 680[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 688[rax]
	mov	rax, QWORD PTR 24[rbp]
	movsd	xmm0, QWORD PTR 688[rax]
	movsd	QWORD PTR [rdx], xmm0
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 696[rax]
	mov	rax, QWORD PTR 24[rbp]
	movsd	xmm0, QWORD PTR 696[rax]
	movsd	QWORD PTR [rdx], xmm0
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 704[rax]
	mov	rax, QWORD PTR 24[rbp]
	movsd	xmm0, QWORD PTR 704[rax]
	movsd	QWORD PTR [rdx], xmm0
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 712[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 712[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 720[rax]
	mov	rax, QWORD PTR 24[rbp]
	movsd	xmm0, QWORD PTR 720[rax]
	movsd	QWORD PTR [rdx], xmm0
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 728[rax]
	mov	rax, QWORD PTR 24[rbp]
	movsd	xmm0, QWORD PTR 728[rax]
	movsd	QWORD PTR [rdx], xmm0
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 736[rax]
	mov	rax, QWORD PTR 24[rbp]
	movsd	xmm0, QWORD PTR 736[rax]
	movsd	QWORD PTR [rdx], xmm0
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 744[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 744
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4FONTaSERS2_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 904[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 904[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 912[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 912[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 920[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 920[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 921[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 921[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 928[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 928[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 936[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 936
	mov	rcx, rax
	call	_ZN11INTEGERLISTaSERKS_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 968[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 968[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 969[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 969[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 970[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 970[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 976[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 976[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 984[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 984[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 992[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 992[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 1000[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 1000[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 1008
	mov	rdx, QWORD PTR 16[rbp]
	lea	rcx, 1008[rdx]
	mov	rdx, QWORD PTR 8[rax]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR 8[rcx], rdx
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 1024
	mov	rdx, QWORD PTR 16[rbp]
	lea	rcx, 1024[rdx]
	mov	rdx, QWORD PTR 8[rax]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR 8[rcx], rdx
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 1040[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 1040[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 1048[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 1048[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 1056[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 1056[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 1064[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 1064[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 1072[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1072
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING5BRUSHaSERKS2_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 1168[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 1168[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 1176[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 1176[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 1184[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 1184[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 1192[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 1192[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 1200[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 1200[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 1208[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1208
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING6CANVASaSERKS2_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 1760[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 1760[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 1768[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1768
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4FONTaSERS2_
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 1928[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1928
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING6CURSORaSERS2_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2048[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2048[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 2056[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2056
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS15SIZECONSTRAINTSaSERKS2_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2136[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 2136[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2144[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 2152[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2152
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS10ANCHORTYPEaSERKS2_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2232[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2232[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2240[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2240[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2248[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2248[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2256[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2256[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2264[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2264[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2272[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2272[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2280[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2280[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2288[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2288[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2296[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2296[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2304[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2304[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2312[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2312[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2320[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2320[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2328[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2328[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2336[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2336[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2344[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2344[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2352[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2352[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2360[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2360[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2368[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2368[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2376[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2376[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2384[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2384[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2392[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2392[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2400[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2400[rax]
	mov	QWORD PTR [rdx], rax
.L6968:
	mov	rax, QWORD PTR 32[rsp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR 48[rsp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	mov	rbx, QWORD PTR -8[rbp]
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC430:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\WStringList.bi\0"
	.text
	.def	_ZN11WSTRINGLISTaSERKS_;	.scl	3;	.type	32;	.endef
_ZN11WSTRINGLISTaSERKS_:
	push	rbp
	mov	rbp, rsp
	and	rsp, -16
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L6970:
	lea	rcx, .LC430[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR 56[rsp], rax
	mov	rax, QWORD PTR 56[rsp]
	mov	QWORD PTR 48[rsp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR 40[rsp], rax
	mov	rax, QWORD PTR 40[rsp]
	mov	QWORD PTR 32[rsp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 8[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 8[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 9[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 9[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 10[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 10[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 16[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 16[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rdx, QWORD PTR 16[rbp]
	lea	rcx, 24[rdx]
	mov	rdx, QWORD PTR 8[rax]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR 8[rcx], rdx
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 40
	mov	rdx, QWORD PTR 16[rbp]
	lea	rcx, 40[rdx]
	mov	rdx, QWORD PTR 8[rax]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR 8[rcx], rdx
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 56[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 56[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 64[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 64[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 72[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 72[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 80[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 80[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 88[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 88[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 96[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 96[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 104[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 104[rax]
	mov	QWORD PTR [rdx], rax
.L6971:
	mov	rax, QWORD PTR 32[rsp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR 48[rsp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC431:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\WStringList.bas\0"
.LC432:
	.ascii "MATCHCASE\0"
	.text
	.def	_ZN11WSTRINGLIST16MATCHCASE__get__Ev;	.scl	3;	.type	32;	.endef
_ZN11WSTRINGLIST16MATCHCASE__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	BYTE PTR -33[rbp], 0
	lea	rcx, .LC431[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC432[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L6973:
	mov	rax, QWORD PTR 16[rbp]
	movzx	eax, BYTE PTR 8[rax]
	mov	BYTE PTR -33[rbp], al
	nop
.L6974:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -33[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC433:
	.ascii "MATCHFULLWORDS\0"
	.text
	.def	_ZN11WSTRINGLIST21MATCHFULLWORDS__get__Ev;	.scl	3;	.type	32;	.endef
_ZN11WSTRINGLIST21MATCHFULLWORDS__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	BYTE PTR -33[rbp], 0
	lea	rcx, .LC431[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC433[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L6977:
	mov	rax, QWORD PTR 16[rbp]
	movzx	eax, BYTE PTR 9[rax]
	mov	BYTE PTR -33[rbp], al
	nop
.L6978:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -33[rbp]
	leave
	ret
	.section .rdata,"dr"
	.align 2
.LC434:
	.ascii "\15\0\0\0"
	.text
	.def	_ZN11WSTRINGLIST11TEXT__set__ERw;	.scl	3;	.type	32;	.endef
_ZN11WSTRINGLIST11TEXT__set__ERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 192
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L6981:
	lea	rcx, .LC431[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC268[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	lea	rdx, .LC77[rip]
	mov	rcx, QWORD PTR 16[rbp]
	call	WLET
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN11WSTRINGLIST5CLEAREv
	mov	QWORD PTR -8[rbp], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	fb_WstrLen
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	jmp	.L6982
.L7004:
	nop
.L6983:
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	lea	r8, .LC431[rip]
	mov	edx, 66
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	je	.L7000
	jmp	[QWORD PTR -72[rbp]]
.L7000:
	nop
.L6985:
	mov	rax, QWORD PTR -8[rbp]
	add	rax, rax
	mov	rdx, rax
	mov	rax, QWORD PTR -64[rbp]
	add	rax, rdx
	movzx	eax, WORD PTR [rax]
	movzx	eax, ax
	mov	rdx, rax
	mov	ecx, 1
	call	fb_WstrChr
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	r8d, 0
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	WADD
	mov	rax, QWORD PTR -88[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	lea	r8, .LC431[rip]
	mov	edx, 67
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -104[rbp], rax
	cmp	QWORD PTR -104[rbp], 0
	je	.L7001
	jmp	[QWORD PTR -104[rbp]]
.L7001:
	nop
.L6987:
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	lea	r8, .LC431[rip]
	mov	edx, 67
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -120[rbp], rax
	cmp	QWORD PTR -120[rbp], 0
	je	.L7002
	jmp	[QWORD PTR -120[rbp]]
.L7002:
	nop
.L6989:
	mov	rax, QWORD PTR -8[rbp]
	add	rax, rax
	mov	rdx, rax
	mov	rax, QWORD PTR -96[rbp]
	add	rax, rdx
	movzx	eax, WORD PTR [rax]
	cmp	ax, 10
	sete	al
	movzx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR -8[rbp]
	add	rax, rax
	mov	rcx, rax
	mov	rax, QWORD PTR -112[rbp]
	add	rax, rcx
	movzx	eax, WORD PTR [rax]
	test	ax, ax
	sete	al
	movzx	eax, al
	neg	eax
	or	eax, edx
	test	eax, eax
	je	.L7003
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_WstrLen
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	rdx, -1[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	mov	r8, rdx
	mov	edx, 1
	mov	rcx, rax
	call	fb_WstrMid
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	lea	rdx, .LC434[rip]
	mov	rcx, rax
	call	fb_WstrTrimAny
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	mov	r8d, 0
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN11WSTRINGLIST3ADDERKwPv
	mov	rax, QWORD PTR -160[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -144[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	lea	rdx, .LC77[rip]
	mov	rcx, QWORD PTR 16[rbp]
	call	WLET
	jmp	.L6993
.L6991:
.L6992:
.L7003:
	nop
.L6993:
	add	QWORD PTR -8[rbp], 1
.L6982:
	mov	rax, QWORD PTR -8[rbp]
	cmp	rax, QWORD PTR -56[rbp]
	jle	.L7004
.L6994:
	nop
.L6995:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN11WSTRINGLIST3ADDERKwPv;	.scl	3;	.type	32;	.endef
_ZN11WSTRINGLIST3ADDERKwPv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR -80[rbp], 0
	lea	rcx, .LC431[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC258[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L7006:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jle	.L7017
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 10
	movzx	eax, BYTE PTR [rax]
	test	al, al
	setne	al
	mov	BYTE PTR -1[rbp], al
	jmp	.L7009
.L7017:
	nop
.L7008:
	mov	BYTE PTR -1[rbp], 0
.L7009:
	cmp	BYTE PTR -1[rbp], 0
	je	.L7018
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r9, rdx
	mov	r8, rax
	mov	rdx, -1
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN11WSTRINGLIST6INSERTEu7INTEGERRKwPv
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -80[rbp], rax
	jmp	.L7013
.L7018:
	nop
.L7011:
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	fb_WstrLen
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	add	rax, rax
	add	rax, 2
	mov	edx, 1
	mov	rcx, rax
	call	calloc
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -72[rbp], rax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -72[rbp]
	mov	r8, rdx
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrAssign
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 24[rax]
	mov	rax, QWORD PTR -72[rbp]
	mov	rdx, rax
	call	_ZN4LIST3ADDEPv
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 40[rax]
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	call	_ZN4LIST3ADDEPv
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 16[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -80[rbp], rax
.L7012:
	nop
.L7013:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -80[rbp]
	leave
	ret
	.def	_ZN11WSTRINGLIST6INSERTEu7INTEGERRKwPv;	.scl	3;	.type	32;	.endef
_ZN11WSTRINGLIST6INSERTEu7INTEGERRKwPv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 400
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
	mov	QWORD PTR -352[rbp], 0
	lea	rcx, .LC431[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	lea	rcx, .LC259[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	QWORD PTR -96[rbp], rax
.L7020:
	mov	QWORD PTR -360[rbp], 0
	cmp	QWORD PTR 24[rbp], -1
	je	.L7080
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 10
	movzx	eax, BYTE PTR [rax]
	test	al, al
	setne	al
	mov	BYTE PTR -1[rbp], al
	jmp	.L7023
.L7080:
	nop
.L7022:
	mov	BYTE PTR -1[rbp], 1
.L7023:
	cmp	BYTE PTR -1[rbp], 0
	je	.L7081
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jle	.L7026
	mov	eax, 1
	jmp	.L7027
.L7026:
	mov	eax, 0
.L7027:
	mov	BYTE PTR -2[rbp], al
	jmp	.L7028
.L7081:
	nop
.L7025:
	mov	BYTE PTR -2[rbp], 0
.L7028:
	cmp	BYTE PTR -2[rbp], 0
	je	.L7082
	mov	QWORD PTR -104[rbp], 0
	mov	rax, QWORD PTR -104[rbp]
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -104[rbp]
	add	rax, rdx
	sub	rax, 1
	mov	rdx, rax
	shr	rdx, 63
	add	rax, rdx
	sar	rax
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 16[rax]
	mov	QWORD PTR -360[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	movzx	eax, BYTE PTR [rax]
	test	al, al
	jne	.L7083
	jmp	.L7032
.L7083:
	nop
.L7031:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	setle	al
	movzx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR -16[rbp], rax
	setl	al
	movzx	eax, al
	neg	eax
	and	edx, eax
	mov	rax, QWORD PTR -24[rbp]
	not	rax
	shr	rax, 63
	movzx	eax, al
	neg	eax
	and	eax, edx
	test	eax, eax
	je	.L7084
	mov	rdx, QWORD PTR -24[rbp]
	mov	rax, QWORD PTR -16[rbp]
	add	rax, rdx
	mov	rdx, rax
	shr	rdx, 63
	add	rax, rdx
	sar	rax
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 24[rax]
	mov	rax, QWORD PTR -112[rbp]
	mov	rdx, rax
	call	_ZN4LIST11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -120[rbp], rax
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -124[rbp], eax
	cmp	DWORD PTR -124[rbp], 0
	jle	.L7085
	cmp	QWORD PTR -112[rbp], 0
	je	.L7086
	mov	rax, QWORD PTR -112[rbp]
	lea	rdx, -1[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 24
	mov	rcx, rax
	call	_ZN4LIST11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -136[rbp], rax
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR -136[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -140[rbp], eax
	cmp	DWORD PTR -140[rbp], 0
	setle	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -32[rbp], rax
	jmp	.L7039
.L7086:
	nop
.L7038:
	mov	QWORD PTR -32[rbp], -1
.L7039:
	cmp	QWORD PTR -32[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -40[rbp], rax
	jmp	.L7040
.L7085:
	nop
.L7036:
	mov	QWORD PTR -40[rbp], 0
.L7040:
	cmp	QWORD PTR -40[rbp], 0
	je	.L7087
	mov	rax, QWORD PTR -112[rbp]
	mov	QWORD PTR -360[rbp], rax
	jmp	.L7034
.L7087:
	nop
.L7042:
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 24[rax]
	mov	rax, QWORD PTR -112[rbp]
	mov	rdx, rax
	call	_ZN4LIST11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -152[rbp], rax
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR -152[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -156[rbp], eax
	cmp	DWORD PTR -156[rbp], 0
	jg	.L7088
	mov	rax, QWORD PTR -112[rbp]
	add	rax, 1
	mov	QWORD PTR -16[rbp], rax
	jmp	.L7045
.L7088:
	nop
.L7044:
	mov	rax, QWORD PTR -112[rbp]
	sub	rax, 1
	mov	QWORD PTR -24[rbp], rax
.L7045:
	jmp	.L7031
.L7084:
	nop
.L7034:
	jmp	.L7060
.L7032:
.L7047:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	setle	al
	movzx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR -16[rbp], rax
	setl	al
	movzx	eax, al
	neg	eax
	and	edx, eax
	mov	rax, QWORD PTR -24[rbp]
	not	rax
	shr	rax, 63
	movzx	eax, al
	neg	eax
	and	eax, edx
	test	eax, eax
	je	.L7089
	mov	rdx, QWORD PTR -24[rbp]
	mov	rax, QWORD PTR -16[rbp]
	add	rax, rdx
	mov	rdx, rax
	shr	rdx, 63
	add	rax, rdx
	sar	rax
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR 32[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 24[rax]
	mov	rax, QWORD PTR -112[rbp]
	mov	rdx, rax
	call	_ZN4LIST11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -192[rbp]
	mov	QWORD PTR -200[rbp], rax
	mov	rdx, QWORD PTR -176[rbp]
	mov	rax, QWORD PTR -200[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -204[rbp], eax
	cmp	DWORD PTR -204[rbp], 0
	jle	.L7090
	cmp	QWORD PTR -112[rbp], 0
	je	.L7091
	mov	rax, QWORD PTR 32[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR -216[rbp]
	mov	QWORD PTR -224[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	lea	rdx, -1[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 24
	mov	rcx, rax
	call	_ZN4LIST11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -232[rbp], rax
	mov	rax, QWORD PTR -232[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -240[rbp]
	mov	QWORD PTR -248[rbp], rax
	mov	rdx, QWORD PTR -224[rbp]
	mov	rax, QWORD PTR -248[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -252[rbp], eax
	cmp	DWORD PTR -252[rbp], 0
	setle	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -224[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -248[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L7053
.L7091:
	nop
.L7052:
	mov	QWORD PTR -48[rbp], -1
.L7053:
	cmp	QWORD PTR -48[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -56[rbp], rax
	jmp	.L7054
.L7090:
	nop
.L7050:
	mov	QWORD PTR -56[rbp], 0
.L7054:
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -264[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -200[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -264[rbp], 0
	je	.L7092
	mov	rax, QWORD PTR -112[rbp]
	mov	QWORD PTR -360[rbp], rax
	jmp	.L7060
.L7092:
	nop
.L7056:
	mov	rax, QWORD PTR 32[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -272[rbp], rax
	mov	rax, QWORD PTR -272[rbp]
	mov	QWORD PTR -280[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 24[rax]
	mov	rax, QWORD PTR -112[rbp]
	mov	rdx, rax
	call	_ZN4LIST11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -288[rbp], rax
	mov	rax, QWORD PTR -288[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -296[rbp], rax
	mov	rax, QWORD PTR -296[rbp]
	mov	QWORD PTR -304[rbp], rax
	mov	rdx, QWORD PTR -280[rbp]
	mov	rax, QWORD PTR -304[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -308[rbp], eax
	cmp	DWORD PTR -308[rbp], 0
	setle	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -320[rbp], rax
	mov	rax, QWORD PTR -280[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -304[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -320[rbp], 0
	je	.L7093
	mov	rax, QWORD PTR -112[rbp]
	add	rax, 1
	mov	QWORD PTR -16[rbp], rax
	jmp	.L7059
.L7093:
	nop
.L7058:
	mov	rax, QWORD PTR -112[rbp]
	sub	rax, 1
	mov	QWORD PTR -24[rbp], rax
.L7059:
	jmp	.L7032
.L7046:
.L7089:
	nop
.L7060:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 10
	mov	BYTE PTR [rax], 1
	jmp	.L7061
.L7082:
	nop
.L7030:
	cmp	QWORD PTR 24[rbp], 0
	jle	.L7094
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -64[rbp], rax
	jmp	.L7064
.L7094:
	nop
.L7063:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 16[rax]
	mov	QWORD PTR -64[rbp], rax
.L7064:
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -360[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 10
	mov	BYTE PTR [rax], 0
.L7061:
	mov	rax, QWORD PTR 32[rbp]
	mov	rcx, rax
	call	fb_WstrLen
	mov	QWORD PTR -328[rbp], rax
	mov	rax, QWORD PTR -328[rbp]
	add	rax, rax
	add	rax, 2
	mov	edx, 1
	mov	rcx, rax
	call	calloc
	mov	QWORD PTR -336[rbp], rax
	mov	rax, QWORD PTR -336[rbp]
	mov	QWORD PTR -344[rbp], rax
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR -344[rbp]
	mov	r8, rdx
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrAssign
	mov	rax, QWORD PTR -360[rbp]
	mov	rdx, QWORD PTR 16[rbp]
	lea	rcx, 24[rdx]
	mov	rdx, QWORD PTR -344[rbp]
	mov	r8, rdx
	mov	rdx, rax
	call	_ZN4LIST6INSERTEu7INTEGERPv
	mov	rax, QWORD PTR -360[rbp]
	mov	rdx, QWORD PTR 16[rbp]
	lea	rcx, 40[rdx]
	mov	rdx, QWORD PTR 40[rbp]
	mov	r8, rdx
	mov	rdx, rax
	call	_ZN4LIST6INSERTEu7INTEGERPv
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 16[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR -360[rbp]
	mov	QWORD PTR -352[rbp], rax
	nop
.L7065:
.L7066:
	mov	rax, QWORD PTR -96[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -352[rbp]
	leave
	ret
	.def	_ZN11WSTRINGLIST8EXCHANGEEu7INTEGERS0_;	.scl	3;	.type	32;	.endef
_ZN11WSTRINGLIST8EXCHANGEEu7INTEGERS0_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
.L7096:
	lea	rcx, .LC431[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC260[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 24[rax]
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	call	_ZN4LIST8EXCHANGEEu7INTEGERS0_
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 40[rax]
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	call	_ZN4LIST8EXCHANGEEu7INTEGERS0_
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L7103
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 88[rax]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	lea	r8, .LC431[rip]
	mov	edx, 156
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -48[rbp], rax
	cmp	QWORD PTR -48[rbp], 0
	je	.L7104
	jmp	[QWORD PTR -48[rbp]]
.L7104:
	nop
.L7100:
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r9, QWORD PTR -40[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	r9
	jmp	.L7101
.L7098:
.L7103:
	nop
.L7101:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN11WSTRINGLIST4SORTEu7INTEGERS0_;	.scl	3;	.type	32;	.endef
_ZN11WSTRINGLIST4SORTEu7INTEGERS0_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 304
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
.L7106:
	lea	rcx, .LC431[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -72[rbp], rax
	lea	rcx, .LC270[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	cmp	rax, 1
	jle	.L7178
	nop
.L7108:
	cmp	QWORD PTR 32[rbp], 0
	jne	.L7179
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR 32[rbp], rax
	jmp	.L7111
.L7179:
	nop
.L7111:
	cmp	QWORD PTR 24[rbp], 0
	jns	.L7180
	mov	QWORD PTR 24[rbp], 0
	jmp	.L7113
.L7180:
	nop
.L7113:
	cmp	QWORD PTR 32[rbp], 0
	je	.L7181
	mov	rax, QWORD PTR 24[rbp]
	cmp	rax, QWORD PTR 32[rbp]
	setge	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L7116
.L7181:
	nop
.L7115:
	mov	QWORD PTR -8[rbp], 0
.L7116:
	cmp	QWORD PTR -8[rbp], 0
	jne	.L7182
	nop
.L7118:
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 24[rax]
	mov	rax, QWORD PTR -16[rbp]
	mov	rdx, rax
	call	_ZN4LIST11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN11WSTRINGLIST16MATCHCASE__get__Ev
	mov	BYTE PTR -105[rbp], al
	cmp	BYTE PTR -105[rbp], 0
	jne	.L7183
	jmp	.L7120
.L7183:
	nop
.L7119:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR -16[rbp], rax
	setl	al
	movzx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR -24[rbp]
	not	rax
	shr	rax, 63
	movzx	eax, al
	neg	eax
	and	edx, eax
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	setle	al
	movzx	eax, al
	neg	eax
	and	eax, edx
	test	eax, eax
	je	.L7184
	nop
.L7121:
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 24[rax]
	mov	rax, QWORD PTR -24[rbp]
	mov	rdx, rax
	call	_ZN4LIST11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -120[rbp], rax
	mov	rdx, QWORD PTR -120[rbp]
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -124[rbp], eax
	cmp	DWORD PTR -124[rbp], 0
	jns	.L7185
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	setl	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -32[rbp], rax
	jmp	.L7125
.L7185:
	nop
.L7124:
	mov	QWORD PTR -32[rbp], 0
.L7125:
	cmp	QWORD PTR -32[rbp], 0
	je	.L7186
	sub	QWORD PTR -24[rbp], 1
	jmp	.L7121
.L7186:
	nop
.L7127:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	jg	.L7187
	mov	rdx, QWORD PTR -24[rbp]
	mov	rax, QWORD PTR -16[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN11WSTRINGLIST8EXCHANGEEu7INTEGERS0_
	add	QWORD PTR -16[rbp], 1
	jmp	.L7136
.L7129:
.L7187:
	nop
.L7130:
.L7136:
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 24[rax]
	mov	rax, QWORD PTR -16[rbp]
	mov	rdx, rax
	call	_ZN4LIST11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -136[rbp], rax
	mov	rdx, QWORD PTR -136[rbp]
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -140[rbp], eax
	cmp	DWORD PTR -140[rbp], 0
	js	.L7188
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	setl	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -40[rbp], rax
	jmp	.L7133
.L7188:
	nop
.L7132:
	mov	QWORD PTR -40[rbp], 0
.L7133:
	cmp	QWORD PTR -40[rbp], 0
	je	.L7189
	add	QWORD PTR -16[rbp], 1
	jmp	.L7136
.L7189:
	nop
.L7135:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	jg	.L7190
	mov	rdx, QWORD PTR -24[rbp]
	mov	rax, QWORD PTR -16[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN11WSTRINGLIST8EXCHANGEEu7INTEGERS0_
	sub	QWORD PTR -24[rbp], 1
	jmp	.L7119
.L7190:
	nop
.L7138:
	jmp	.L7119
.L7184:
	nop
.L7122:
	jmp	.L7158
.L7120:
.L7140:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR -16[rbp], rax
	setl	al
	movzx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR -24[rbp]
	not	rax
	shr	rax, 63
	movzx	eax, al
	neg	eax
	and	edx, eax
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	setle	al
	movzx	eax, al
	neg	eax
	and	eax, edx
	test	eax, eax
	je	.L7191
	nop
.L7141:
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 24[rax]
	mov	rax, QWORD PTR -24[rbp]
	mov	rdx, rax
	call	_ZN4LIST11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	mov	QWORD PTR -184[rbp], rax
	mov	rdx, QWORD PTR -168[rbp]
	mov	rax, QWORD PTR -184[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -188[rbp], eax
	cmp	DWORD PTR -188[rbp], 0
	jns	.L7192
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	setl	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -48[rbp], rax
	jmp	.L7144
.L7192:
	nop
.L7143:
	mov	QWORD PTR -48[rbp], 0
.L7144:
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -184[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -200[rbp], 0
	je	.L7193
	sub	QWORD PTR -24[rbp], 1
	jmp	.L7141
.L7193:
	nop
.L7146:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	jg	.L7194
	mov	rdx, QWORD PTR -24[rbp]
	mov	rax, QWORD PTR -16[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN11WSTRINGLIST8EXCHANGEEu7INTEGERS0_
	add	QWORD PTR -16[rbp], 1
	jmp	.L7155
.L7148:
.L7194:
	nop
.L7149:
.L7155:
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 24[rax]
	mov	rax, QWORD PTR -16[rbp]
	mov	rdx, rax
	call	_ZN4LIST11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR -208[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR -216[rbp]
	mov	QWORD PTR -224[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -232[rbp], rax
	mov	rax, QWORD PTR -232[rbp]
	mov	QWORD PTR -240[rbp], rax
	mov	rdx, QWORD PTR -224[rbp]
	mov	rax, QWORD PTR -240[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -244[rbp], eax
	cmp	DWORD PTR -244[rbp], 0
	js	.L7195
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	setl	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -56[rbp], rax
	jmp	.L7152
.L7195:
	nop
.L7151:
	mov	QWORD PTR -56[rbp], 0
.L7152:
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -256[rbp], rax
	mov	rax, QWORD PTR -224[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -240[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -256[rbp], 0
	je	.L7196
	add	QWORD PTR -16[rbp], 1
	jmp	.L7155
.L7196:
	nop
.L7154:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	jg	.L7197
	mov	rdx, QWORD PTR -24[rbp]
	mov	rax, QWORD PTR -16[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN11WSTRINGLIST8EXCHANGEEu7INTEGERS0_
	sub	QWORD PTR -24[rbp], 1
	jmp	.L7120
.L7197:
	nop
.L7157:
	jmp	.L7120
.L7139:
.L7191:
	nop
.L7158:
	mov	rax, QWORD PTR -24[rbp]
	cmp	rax, QWORD PTR 24[rbp]
	jle	.L7198
	mov	rdx, QWORD PTR -24[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN11WSTRINGLIST4SORTEu7INTEGERS0_
	jmp	.L7160
.L7198:
	nop
.L7160:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR 32[rbp]
	jge	.L7199
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR -16[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN11WSTRINGLIST4SORTEu7INTEGERS0_
	jmp	.L7162
.L7199:
	nop
.L7162:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 10
	mov	BYTE PTR [rax], 1
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L7200
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 104[rax]
	mov	QWORD PTR -264[rbp], rax
	mov	rax, QWORD PTR -264[rbp]
	lea	r8, .LC431[rip]
	mov	edx, 220
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -272[rbp], rax
	cmp	QWORD PTR -272[rbp], 0
	je	.L7201
	jmp	[QWORD PTR -272[rbp]]
.L7201:
	nop
.L7165:
	mov	rax, QWORD PTR -264[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L7166
.L7109:
.L7178:
	nop
	jmp	.L7166
.L7182:
	nop
	jmp	.L7166
.L7200:
	nop
.L7166:
	mov	rax, QWORD PTR -88[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN11WSTRINGLIST5CLEAREv;	.scl	3;	.type	32;	.endef
_ZN11WSTRINGLIST5CLEAREv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
.L7203:
	lea	rcx, .LC431[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC262[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jle	.L7219
	nop
.L7205:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -8[rbp], rax
	jmp	.L7207
.L7221:
	nop
.L7208:
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 24[rax]
	mov	rax, QWORD PTR -8[rbp]
	mov	rdx, rax
	call	_ZN4LIST11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -64[rbp], rax
	cmp	QWORD PTR -64[rbp], 0
	je	.L7220
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 24[rax]
	mov	rax, QWORD PTR -8[rbp]
	mov	rdx, rax
	call	_ZN4LIST11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, rax
	call	free
	jmp	.L7210
.L7220:
	nop
.L7210:
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 40[rax]
	mov	rax, QWORD PTR -8[rbp]
	mov	rdx, rax
	call	_ZN4LIST6REMOVEEu7INTEGER
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 24[rax]
	mov	rax, QWORD PTR -8[rbp]
	mov	rdx, rax
	call	_ZN4LIST6REMOVEEu7INTEGER
.L7211:
	add	QWORD PTR -8[rbp], 1
.L7207:
	cmp	QWORD PTR -8[rbp], 0
	jle	.L7221
	nop
.L7212:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 24
	mov	rcx, rax
	call	_ZN4LIST5CLEAREv
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 40
	mov	rcx, rax
	call	_ZN4LIST5CLEAREv
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 96
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L7222
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 96[rax]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	r8, .LC431[rip]
	mov	edx, 234
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L7223
	jmp	[QWORD PTR -56[rbp]]
.L7223:
	nop
.L7215:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L7216
.L7206:
.L7219:
	nop
	jmp	.L7216
.L7222:
	nop
.L7216:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN11WSTRINGLIST7INDEXOFERKwbbu7INTEGERR7USTRING;	.scl	3;	.type	32;	.endef
_ZN11WSTRINGLIST7INDEXOFERKwbbu7INTEGERR7USTRING:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 512
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	eax, r8d
	mov	edx, r9d
	mov	BYTE PTR 32[rbp], al
	mov	eax, edx
	mov	BYTE PTR 40[rbp], al
	mov	QWORD PTR -472[rbp], 0
	lea	rcx, .LC431[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	lea	rcx, .LC263[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	mov	QWORD PTR -120[rbp], rax
.L7225:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jg	.L7308
	mov	QWORD PTR -472[rbp], -1
	jmp	.L7286
.L7308:
	nop
.L7227:
	cmp	QWORD PTR 48[rbp], 0
	jns	.L7309
	mov	QWORD PTR 48[rbp], 0
	jmp	.L7230
.L7309:
	nop
.L7230:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 10
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	neg	eax
	test	eax, eax
	je	.L7310
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	cmp	rax, 1
	setg	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L7233
.L7310:
	nop
.L7232:
	mov	QWORD PTR -8[rbp], 0
.L7233:
	cmp	QWORD PTR -8[rbp], 0
	je	.L7311
	mov	rax, QWORD PTR 48[rbp]
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 48[rbp]
	add	rax, rdx
	sub	rax, 1
	mov	rdx, rax
	shr	rdx, 63
	add	rax, rdx
	sar	rax
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	movzx	eax, BYTE PTR [rax]
	test	al, al
	jne	.L7312
	jmp	.L7237
.L7312:
	nop
.L7236:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	setle	al
	movzx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR -16[rbp], rax
	setl	al
	movzx	eax, al
	neg	eax
	and	edx, eax
	mov	rax, QWORD PTR -24[rbp]
	not	rax
	shr	rax, 63
	movzx	eax, al
	neg	eax
	and	eax, edx
	test	eax, eax
	je	.L7313
	mov	rdx, QWORD PTR -24[rbp]
	mov	rax, QWORD PTR -16[rbp]
	add	rax, rdx
	mov	rdx, rax
	shr	rdx, 63
	add	rax, rdx
	sar	rax
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 24[rax]
	mov	rax, QWORD PTR -128[rbp]
	mov	rdx, rax
	call	_ZN4LIST11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -136[rbp], rax
	mov	rdx, QWORD PTR -136[rbp]
	mov	rax, QWORD PTR 56[rbp]
	mov	rcx, rax
	call	_ZN7USTRINGaSERw
	mov	rax, QWORD PTR 56[rbp]
	mov	rcx, rax
	call	_ZN7USTRINGcvwEv
	mov	QWORD PTR -144[rbp], rax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -144[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -148[rbp], eax
	cmp	DWORD PTR -148[rbp], 0
	jne	.L7314
	cmp	QWORD PTR -128[rbp], 0
	je	.L7315
	mov	rax, QWORD PTR -128[rbp]
	lea	rdx, -1[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 24
	mov	rcx, rax
	call	_ZN4LIST11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -160[rbp], rax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -160[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -164[rbp], eax
	cmp	DWORD PTR -164[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -40[rbp], rax
	jmp	.L7244
.L7315:
	nop
.L7243:
	mov	QWORD PTR -40[rbp], -1
.L7244:
	cmp	QWORD PTR -40[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -48[rbp], rax
	jmp	.L7245
.L7314:
	nop
.L7241:
	mov	QWORD PTR -48[rbp], 0
.L7245:
	cmp	QWORD PTR -48[rbp], 0
	je	.L7316
	mov	rax, QWORD PTR -128[rbp]
	mov	QWORD PTR -472[rbp], rax
	jmp	.L7286
.L7316:
	nop
.L7247:
	mov	rax, QWORD PTR 56[rbp]
	mov	rcx, rax
	call	_ZN7USTRINGcvwEv
	mov	QWORD PTR -176[rbp], rax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -176[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -180[rbp], eax
	cmp	DWORD PTR -180[rbp], 0
	jns	.L7317
	mov	rax, QWORD PTR -128[rbp]
	add	rax, 1
	mov	QWORD PTR -16[rbp], rax
	jmp	.L7250
.L7317:
	nop
.L7249:
	mov	rax, QWORD PTR -128[rbp]
	sub	rax, 1
	mov	QWORD PTR -24[rbp], rax
.L7250:
	jmp	.L7236
.L7313:
	nop
.L7239:
	cmp	BYTE PTR 40[rbp], 0
	je	.L7318
	mov	QWORD PTR -32[rbp], -1
	jmp	.L7253
.L7318:
	nop
.L7252:
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -32[rbp], rax
.L7253:
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -472[rbp], rax
	jmp	.L7286
.L7237:
.L7254:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -24[rbp]
	setle	al
	movzx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR -16[rbp], rax
	setl	al
	movzx	eax, al
	neg	eax
	and	edx, eax
	mov	rax, QWORD PTR -24[rbp]
	not	rax
	shr	rax, 63
	movzx	eax, al
	neg	eax
	and	eax, edx
	test	eax, eax
	je	.L7319
	mov	rdx, QWORD PTR -24[rbp]
	mov	rax, QWORD PTR -16[rbp]
	add	rax, rdx
	mov	rdx, rax
	shr	rdx, 63
	add	rax, rdx
	sar	rax
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 24[rax]
	mov	rax, QWORD PTR -128[rbp]
	mov	rdx, rax
	call	_ZN4LIST11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -192[rbp], rax
	mov	rdx, QWORD PTR -192[rbp]
	mov	rax, QWORD PTR 56[rbp]
	mov	rcx, rax
	call	_ZN7USTRINGaSERw
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR 56[rbp]
	mov	rcx, rax
	call	_ZN7USTRINGcvwEv
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR -216[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -224[rbp], rax
	mov	rax, QWORD PTR -224[rbp]
	mov	QWORD PTR -232[rbp], rax
	mov	rdx, QWORD PTR -208[rbp]
	mov	rax, QWORD PTR -232[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -236[rbp], eax
	cmp	DWORD PTR -236[rbp], 0
	jne	.L7320
	cmp	QWORD PTR -128[rbp], 0
	je	.L7321
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -248[rbp], rax
	mov	rax, QWORD PTR -248[rbp]
	mov	QWORD PTR -256[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	rdx, -1[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 24
	mov	rcx, rax
	call	_ZN4LIST11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -264[rbp], rax
	mov	rax, QWORD PTR -264[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -272[rbp], rax
	mov	rax, QWORD PTR -272[rbp]
	mov	QWORD PTR -280[rbp], rax
	mov	rdx, QWORD PTR -256[rbp]
	mov	rax, QWORD PTR -280[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -284[rbp], eax
	cmp	DWORD PTR -284[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -256[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -280[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L7261
.L7321:
	nop
.L7260:
	mov	QWORD PTR -64[rbp], -1
.L7261:
	cmp	QWORD PTR -64[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -72[rbp], rax
	jmp	.L7262
.L7320:
	nop
.L7258:
	mov	QWORD PTR -72[rbp], 0
.L7262:
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -296[rbp], rax
	mov	rax, QWORD PTR -208[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -232[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -296[rbp], 0
	je	.L7322
	mov	rax, QWORD PTR -128[rbp]
	mov	QWORD PTR -472[rbp], rax
	jmp	.L7286
.L7322:
	nop
.L7264:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -304[rbp], rax
	mov	rax, QWORD PTR -304[rbp]
	mov	QWORD PTR -312[rbp], rax
	mov	rax, QWORD PTR 56[rbp]
	mov	rcx, rax
	call	_ZN7USTRINGcvwEv
	mov	QWORD PTR -320[rbp], rax
	mov	rax, QWORD PTR -320[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -328[rbp], rax
	mov	rax, QWORD PTR -328[rbp]
	mov	QWORD PTR -336[rbp], rax
	mov	rdx, QWORD PTR -312[rbp]
	mov	rax, QWORD PTR -336[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -340[rbp], eax
	mov	eax, DWORD PTR -340[rbp]
	shr	eax, 31
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -352[rbp], rax
	mov	rax, QWORD PTR -312[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -336[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -352[rbp], 0
	je	.L7323
	mov	rax, QWORD PTR -128[rbp]
	add	rax, 1
	mov	QWORD PTR -16[rbp], rax
	jmp	.L7267
.L7323:
	nop
.L7266:
	mov	rax, QWORD PTR -128[rbp]
	sub	rax, 1
	mov	QWORD PTR -24[rbp], rax
.L7267:
	jmp	.L7237
.L7319:
	nop
.L7256:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN11WSTRINGLIST21MATCHFULLWORDS__get__Ev
	mov	BYTE PTR -353[rbp], al
	cmp	BYTE PTR -353[rbp], 0
	je	.L7324
	mov	QWORD PTR -56[rbp], -1
	jmp	.L7270
.L7324:
	nop
.L7269:
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -56[rbp], rax
.L7270:
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -472[rbp], rax
	jmp	.L7286
.L7311:
	nop
.L7235:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN11WSTRINGLIST16MATCHCASE__get__Ev
	mov	BYTE PTR -354[rbp], al
	cmp	BYTE PTR -354[rbp], 0
	je	.L7325
	mov	QWORD PTR -80[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -368[rbp], rax
	jmp	.L7273
.L7327:
	nop
.L7274:
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 24[rax]
	mov	rax, QWORD PTR -80[rbp]
	mov	rdx, rax
	call	_ZN4LIST11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -376[rbp], rax
	mov	rdx, QWORD PTR -376[rbp]
	mov	rax, QWORD PTR 56[rbp]
	mov	rcx, rax
	call	_ZN7USTRINGaSERw
	mov	rax, QWORD PTR 56[rbp]
	mov	rcx, rax
	call	_ZN7USTRINGcvwEv
	mov	QWORD PTR -384[rbp], rax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -384[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -388[rbp], eax
	cmp	DWORD PTR -388[rbp], 0
	jne	.L7326
	mov	rax, QWORD PTR -80[rbp]
	mov	QWORD PTR -472[rbp], rax
	jmp	.L7286
.L7276:
.L7326:
	nop
.L7277:
	add	QWORD PTR -80[rbp], 1
.L7273:
	mov	rax, QWORD PTR -80[rbp]
	cmp	rax, QWORD PTR -368[rbp]
	jle	.L7327
	nop
.L7278:
	jmp	.L7285
.L7325:
	nop
.L7272:
	mov	QWORD PTR -88[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -400[rbp], rax
	jmp	.L7280
.L7329:
	nop
.L7281:
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 24[rax]
	mov	rax, QWORD PTR -88[rbp]
	mov	rdx, rax
	call	_ZN4LIST11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -408[rbp], rax
	mov	rdx, QWORD PTR -408[rbp]
	mov	rax, QWORD PTR 56[rbp]
	mov	rcx, rax
	call	_ZN7USTRINGaSERw
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -416[rbp], rax
	mov	rax, QWORD PTR -416[rbp]
	mov	QWORD PTR -424[rbp], rax
	mov	rax, QWORD PTR 56[rbp]
	mov	rcx, rax
	call	_ZN7USTRINGcvwEv
	mov	QWORD PTR -432[rbp], rax
	mov	rax, QWORD PTR -432[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -440[rbp], rax
	mov	rax, QWORD PTR -440[rbp]
	mov	QWORD PTR -448[rbp], rax
	mov	rdx, QWORD PTR -424[rbp]
	mov	rax, QWORD PTR -448[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -452[rbp], eax
	cmp	DWORD PTR -452[rbp], 0
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -464[rbp], rax
	mov	rax, QWORD PTR -424[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -448[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -464[rbp], 0
	je	.L7328
	mov	rax, QWORD PTR -88[rbp]
	mov	QWORD PTR -472[rbp], rax
	jmp	.L7286
.L7283:
.L7328:
	nop
.L7284:
	add	QWORD PTR -88[rbp], 1
.L7280:
	mov	rax, QWORD PTR -88[rbp]
	cmp	rax, QWORD PTR -400[rbp]
	jle	.L7329
.L7279:
	nop
.L7285:
	mov	QWORD PTR -472[rbp], -1
.L7228:
	nop
.L7286:
	mov	rax, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -472[rbp]
	leave
	ret
	.def	_ZN11WSTRINGLIST13INDEXOFOBJECTEPv;	.scl	3;	.type	32;	.endef
_ZN11WSTRINGLIST13INDEXOFOBJECTEPv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -72[rbp], 0
	lea	rcx, .LC431[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rcx, .LC273[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
.L7331:
	cmp	QWORD PTR 24[rbp], 0
	je	.L7349
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	setle	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L7334
.L7349:
	nop
.L7333:
	mov	QWORD PTR -8[rbp], -1
.L7334:
	cmp	QWORD PTR -8[rbp], 0
	je	.L7350
	mov	QWORD PTR -72[rbp], -1
	jmp	.L7337
.L7350:
	nop
.L7336:
	mov	QWORD PTR -16[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -56[rbp], rax
	jmp	.L7338
.L7352:
	nop
.L7339:
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 40[rax]
	mov	rax, QWORD PTR -16[rbp]
	mov	rdx, rax
	call	_ZN4LIST11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	cmp	rax, QWORD PTR 24[rbp]
	jne	.L7351
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -72[rbp], rax
	jmp	.L7337
.L7341:
.L7351:
	nop
.L7342:
	add	QWORD PTR -16[rbp], 1
.L7338:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -56[rbp]
	jle	.L7352
	nop
.L7343:
	mov	QWORD PTR -72[rbp], -1
	nop
.L7337:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -72[rbp]
	leave
	ret
	.def	_ZN11WSTRINGLISTC1Ev;	.scl	3;	.type	32;	.endef
_ZN11WSTRINGLISTC1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L7354:
	lea	rcx, .LC431[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 9
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 10
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 24
	mov	rcx, rax
	call	_ZN4LISTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 40
	mov	rcx, rax
	call	_ZN4LISTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 96
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 24
	mov	rcx, rax
	call	_ZN4LIST5CLEAREv
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 40
	mov	rcx, rax
	call	_ZN4LIST5CLEAREv
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 9
	mov	BYTE PTR [rax], 1
.L7355:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN11WSTRINGLISTD1Ev;	.scl	3;	.type	32;	.endef
_ZN11WSTRINGLISTD1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L7357:
	lea	rcx, .LC431[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 24
	mov	rcx, rax
	call	_ZN4LIST5CLEAREv
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 40
	mov	rcx, rax
	call	_ZN4LIST5CLEAREv
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN11WSTRINGLIST5CLEAREv
.L7358:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 40
	mov	rcx, rax
	call	_ZN4LISTD1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 24
	mov	rcx, rax
	call	_ZN4LISTD1Ev
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC435:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Application.bi\0"
	.text
	.def	_ZN2MY11APPLICATIONaSERKS0_;	.scl	3;	.type	32;	.endef
_ZN2MY11APPLICATIONaSERKS0_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L7360:
	lea	rcx, .LC435[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTaSERKS1_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 48[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 48[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 56[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4ICONaSERS2_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 152[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 152[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 160[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 160[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 168[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 168[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 176[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 176[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 184[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 184[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 192[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 192[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 200[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 200[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 208[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 208[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 216[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 216[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 224[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 224[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 232[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 232[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 240[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 240[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 248[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 248[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 256[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 256[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 264[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 264[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 272[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 272
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrAssign
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 296[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 296
	mov	rcx, rax
	call	_ZN11WSTRINGLISTaSERKS_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 408[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 408[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 416[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 416[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 424[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 424
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrAssign
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 448
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 448
	mov	QWORD PTR -24[rbp], rax
	mov	QWORD PTR -8[rbp], 0
.L7361:
	mov	rax, QWORD PTR -24[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR [rax], rdx
	add	QWORD PTR -16[rbp], 8
	add	QWORD PTR -24[rbp], 8
	add	QWORD PTR -8[rbp], 1
	cmp	QWORD PTR -8[rbp], 1
	je	.L7362
	jmp	.L7361
.L7362:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 456[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 456[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 464[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 464[rax]
	mov	QWORD PTR [rdx], rax
.L7363:
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 2
.LC436:
	.ascii "m\0a\0i\0n\0f\0o\0r\0m\0\0\0"
	.align 2
.LC437:
	.ascii "v\0e\0r\0s\0i\0o\0n\0\0\0"
	.align 2
.LC438:
	.ascii "t\0i\0t\0l\0e\0\0\0"
	.align 2
.LC439:
	.ascii "f\0i\0l\0e\0n\0a\0m\0e\0\0\0"
	.text
	.def	_ZN2MY11APPLICATION12READPROPERTYER8FBSTRING;	.scl	3;	.type	32;	.endef
_ZN2MY11APPLICATION12READPROPERTYER8FBSTRING:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 288
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -184[rbp], 0
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC152[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L7365:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -208[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -208[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC436[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L7385
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7368:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 248
	mov	QWORD PTR -184[rbp], rax
	lea	rax, -208[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7379
.L7385:
	nop
.L7367:
	lea	rax, -208[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	rdx, .LC437[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -84[rbp], eax
	cmp	DWORD PTR -84[rbp], 0
	jne	.L7386
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7372:
	lea	rax, -240[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY11APPLICATION7VERSIONEv
	mov	QWORD PTR -96[rbp], rax
	mov	rdx, QWORD PTR -96[rbp]
	lea	rax, -240[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrAssign
	lea	rax, -240[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 24[rax]
	mov	rax, QWORD PTR -112[rbp]
	mov	rdx, rax
	call	WLET
	mov	rax, QWORD PTR -112[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	lea	rax, -240[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -184[rbp], rax
	lea	rax, -208[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7379
.L7386:
	nop
.L7371:
	lea	rax, -208[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	rdx, .LC438[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -132[rbp], eax
	cmp	DWORD PTR -132[rbp], 0
	jne	.L7387
	mov	rax, QWORD PTR -128[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7375:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY11APPLICATION12TITLE__get__Ev
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 48[rax]
	mov	QWORD PTR -184[rbp], rax
	lea	rax, -208[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7379
.L7387:
	nop
.L7374:
	lea	rax, -208[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	lea	rdx, .LC439[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -156[rbp], eax
	cmp	DWORD PTR -156[rbp], 0
	jne	.L7388
	mov	rax, QWORD PTR -152[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7378:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY11APPLICATION15FILENAME__get__Ev
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -184[rbp], rax
	lea	rax, -208[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7379
.L7388:
	nop
.L7377:
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT12READPROPERTYER8FBSTRING
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	mov	QWORD PTR -184[rbp], rax
	lea	rax, -208[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	nop
.L7379:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -184[rbp]
	leave
	ret
	.def	_ZN2MY11APPLICATION13WRITEPROPERTYER8FBSTRINGPv;	.scl	3;	.type	32;	.endef
_ZN2MY11APPLICATION13WRITEPROPERTYER8FBSTRINGPv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 208
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	BYTE PTR -102[rbp], 0
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC154[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L7390:
	cmp	QWORD PTR 32[rbp], 0
	jne	.L7407
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -128[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT13WRITEPROPERTYER8FBSTRINGPv
	mov	BYTE PTR -41[rbp], al
	movzx	eax, BYTE PTR -41[rbp]
	mov	BYTE PTR -102[rbp], al
	lea	rax, -128[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7393
.L7407:
	nop
.L7392:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -56[rbp], rax
	mov	rdx, QWORD PTR -56[rbp]
	lea	rax, -160[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -160[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	rdx, .LC436[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -76[rbp], eax
	cmp	DWORD PTR -76[rbp], 0
	jne	.L7408
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7396:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY11APPLICATION15MAINFORM__set__EPNS_3SYS5FORMS7CONTROLE
	jmp	.L7401
.L7408:
	nop
.L7395:
	lea	rax, -160[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	lea	rdx, .LC438[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -100[rbp], eax
	cmp	DWORD PTR -100[rbp], 0
	jne	.L7409
	mov	rax, QWORD PTR -96[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7400:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY11APPLICATION12TITLE__set__ERw
	jmp	.L7401
.L7409:
	nop
.L7399:
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT13WRITEPROPERTYER8FBSTRINGPv
	mov	BYTE PTR -101[rbp], al
	movzx	eax, BYTE PTR -101[rbp]
	mov	BYTE PTR -102[rbp], al
	lea	rax, -160[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7393
.L7397:
.L7401:
	lea	rax, -160[rbp]
	mov	rcx, rax
	call	fb_StrDelete
.L7402:
	mov	BYTE PTR -102[rbp], 1
	nop
.L7393:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -102[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC440:
	.ascii "VERSION\0"
	.align 2
.LC441:
	.ascii "F\0i\0l\0e\0V\0e\0r\0s\0i\0o\0n\0\0\0"
	.text
	.def	_ZN2MY11APPLICATION7VERSIONEv;	.scl	3;	.type	32;	.endef
_ZN2MY11APPLICATION7VERSIONEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 160
	mov	QWORD PTR 16[rbp], rcx
	lea	rax, -112[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC440[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L7411:
	lea	rax, -80[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	lea	rax, -80[rbp]
	mov	r9d, 0
	lea	r8, .LC441[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA
	lea	rax, -80[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY11APPLICATION10GETVERINFOER8FBSTRING
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -112[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -80[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	nop
.L7412:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	lea	rax, -112[rbp]
	mov	rcx, rax
	call	fb_StrAllocTempResult
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC442:
	.ascii "TITLE\0"
	.align 8
.LC443:
	.ascii "A\0p\0p\0l\0i\0c\0a\0t\0i\0o\0n\0T\0i\0t\0l\0e\0\0\0"
	.text
	.def	_ZN2MY11APPLICATION12TITLE__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY11APPLICATION12TITLE__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 288
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -184[rbp], 0
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC442[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L7415:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jne	.L7442
	lea	rax, -240[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	lea	rax, -208[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	lea	rax, -208[rbp]
	mov	r9d, 0
	lea	r8, .LC443[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA
	lea	rax, -208[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY11APPLICATION10GETVERINFOER8FBSTRING
	mov	QWORD PTR -48[rbp], rax
	mov	rdx, QWORD PTR -48[rbp]
	lea	rax, -240[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrAssign
	lea	rax, -240[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 48[rax]
	mov	rax, QWORD PTR -64[rbp]
	mov	rdx, rax
	call	WLET
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	lea	rax, -240[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	lea	rax, -208[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rax, QWORD PTR [rax]
	lea	rdx, .LC77[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -68[rbp], eax
	cmp	DWORD PTR -68[rbp], 0
	jne	.L7443
	mov	QWORD PTR -8[rbp], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY11APPLICATION9FORMCOUNTEv
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	sub	rax, 1
	mov	QWORD PTR -88[rbp], rax
	jmp	.L7420
.L7448:
	nop
.L7421:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY11APPLICATION12FORMS__get__Ev
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 75
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -112[rbp], rax
	cmp	QWORD PTR -112[rbp], 0
	je	.L7444
	jmp	[QWORD PTR -112[rbp]]
.L7444:
	nop
.L7423:
	mov	rax, QWORD PTR -8[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -104[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	edx, -20
	mov	rcx, rax
	call	GetWindowLongW
	mov	DWORD PTR -124[rbp], eax
	mov	eax, DWORD PTR -124[rbp]
	cdqe
	and	eax, 262144
	test	rax, rax
	je	.L7445
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY11APPLICATION12FORMS__get__Ev
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 76
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -152[rbp], rax
	cmp	QWORD PTR -152[rbp], 0
	je	.L7446
	jmp	[QWORD PTR -152[rbp]]
.L7446:
	nop
.L7427:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY11APPLICATION12FORMS__get__Ev
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 76
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -168[rbp], rax
	cmp	QWORD PTR -168[rbp], 0
	je	.L7447
	jmp	[QWORD PTR -168[rbp]]
.L7447:
	nop
.L7429:
	mov	rax, QWORD PTR -8[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -144[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax]
	add	rax, 72
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -8[rbp]
	sal	rax, 3
	mov	rcx, rax
	mov	rax, QWORD PTR -144[rbp]
	add	rax, rcx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	rdx
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 48[rax]
	mov	rax, QWORD PTR -176[rbp]
	mov	rdx, rax
	call	WLET
	jmp	.L7434
.L7425:
.L7430:
.L7445:
	nop
.L7431:
	add	QWORD PTR -8[rbp], 1
.L7420:
	mov	rax, QWORD PTR -8[rbp]
	cmp	rax, QWORD PTR -88[rbp]
	jle	.L7448
	jmp	.L7434
.L7419:
.L7432:
.L7433:
.L7417:
.L7442:
	nop
	jmp	.L7434
.L7443:
	nop
.L7434:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 48[rax]
	mov	QWORD PTR -184[rbp], rax
	nop
.L7435:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -184[rbp]
	leave
	ret
	.def	_ZN2MY11APPLICATION12TITLE__set__ERw;	.scl	3;	.type	32;	.endef
_ZN2MY11APPLICATION12TITLE__set__ERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L7450:
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC442[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 48[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	call	WLET
.L7451:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC444:
	.ascii "EXENAME\0"
	.text
	.def	_ZN2MY11APPLICATION14EXENAME__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY11APPLICATION14EXENAME__get__Ev:
	push	rbp
	mov	rbp, rsp
	push	rdi
	sub	rsp, 1656
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -160[rbp], 0
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rcx, .LC444[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
.L7453:
	lea	rax, -672[rbp]
	mov	rdx, rax
	mov	eax, 0
	mov	ecx, 63
	mov	rdi, rdx
	rep stosq
	mov	rdx, rdi
	mov	DWORD PTR [rdx], eax
	add	rdx, 4
	mov	WORD PTR [rdx], ax
	add	rdx, 2
	lea	rax, -1136[rbp]
	mov	rdx, rax
	mov	eax, 0
	mov	ecx, 56
	mov	rdi, rdx
	rep stosq
	mov	rdx, rdi
	mov	WORD PTR [rdx], ax
	add	rdx, 2
	lea	rax, -1600[rbp]
	mov	rdx, rax
	mov	eax, 0
	mov	ecx, 56
	mov	rdi, rdx
	rep stosq
	mov	rdx, rdi
	mov	WORD PTR [rdx], ax
	add	rdx, 2
	mov	QWORD PTR -1608[rbp], 0
	mov	QWORD PTR -1616[rbp], 0
	mov	QWORD PTR -1624[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 448
	mov	rax, QWORD PTR [rax]
	lea	rdx, -672[rbp]
	mov	r8d, 255
	mov	rcx, rax
	call	GetModuleFileNameW
	mov	DWORD PTR -52[rbp], eax
	mov	eax, DWORD PTR -52[rbp]
	mov	QWORD PTR -1608[rbp], rax
	mov	rdx, QWORD PTR -1608[rbp]
	lea	rax, -672[rbp]
	mov	rcx, rax
	call	fb_WstrLeft
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -72[rbp], rax
	mov	rdx, QWORD PTR -72[rbp]
	lea	rax, -1136[rbp]
	mov	r8, rdx
	mov	edx, 225
	mov	rcx, rax
	call	fb_WstrAssign
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	QWORD PTR -1616[rbp], 0
	lea	rax, -1136[rbp]
	mov	rcx, rax
	call	fb_WstrLen
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	QWORD PTR -88[rbp], rax
	jmp	.L7454
.L7468:
	nop
.L7455:
	lea	rax, -1136[rbp]
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 102
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -152[rbp], rax
	cmp	QWORD PTR -152[rbp], 0
	je	.L7466
	jmp	[QWORD PTR -152[rbp]]
.L7466:
	nop
.L7457:
	mov	rax, QWORD PTR -1616[rbp]
	add	rax, rax
	mov	rdx, rax
	mov	rax, QWORD PTR -144[rbp]
	add	rax, rdx
	movzx	eax, WORD PTR [rax]
	cmp	ax, 92
	jne	.L7467
	mov	rax, QWORD PTR -1616[rbp]
	mov	QWORD PTR -1624[rbp], rax
	jmp	.L7460
.L7459:
.L7467:
	nop
.L7460:
	mov	rax, QWORD PTR -1616[rbp]
	add	rax, 1
	mov	QWORD PTR -1616[rbp], rax
.L7454:
	mov	rax, QWORD PTR -1616[rbp]
	cmp	QWORD PTR -88[rbp], rax
	jge	.L7468
	nop
.L7461:
	lea	rax, -1136[rbp]
	mov	rcx, rax
	call	fb_WstrLen
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -1624[rbp]
	lea	rdx, 2[rax]
	mov	rcx, QWORD PTR -96[rbp]
	lea	rax, -1136[rbp]
	mov	r8, rcx
	mov	rcx, rax
	call	fb_WstrMid
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	QWORD PTR -112[rbp], rax
	mov	rdx, QWORD PTR -112[rbp]
	lea	rax, -1600[rbp]
	mov	r8, rdx
	mov	edx, 225
	mov	rcx, rax
	call	fb_WstrAssign
	mov	rax, QWORD PTR -112[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 160[rax]
	lea	rax, -1136[rbp]
	mov	rdx, rax
	call	WLET
	lea	rax, -1600[rbp]
	lea	r8, .LC212[rip]
	mov	rdx, rax
	mov	ecx, 1
	call	fb_WstrInstr
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	lea	rdx, -1[rax]
	lea	rax, -1600[rbp]
	mov	r8, rdx
	mov	edx, 1
	mov	rcx, rax
	call	fb_WstrMid
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 152[rax]
	mov	rax, QWORD PTR -136[rbp]
	mov	rdx, rax
	call	WLET
	mov	rax, QWORD PTR -136[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 152[rax]
	mov	QWORD PTR -160[rbp], rax
	nop
.L7462:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -160[rbp]
	add	rsp, 1656
	pop	rdi
	pop	rbp
	ret
	.section .rdata,"dr"
.LC445:
	.ascii "FILENAME\0"
	.text
	.def	_ZN2MY11APPLICATION15FILENAME__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY11APPLICATION15FILENAME__get__Ev:
	push	rbp
	mov	rbp, rsp
	push	rdi
	sub	rsp, 632
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -80[rbp], 0
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rcx, .LC445[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
.L7470:
	mov	QWORD PTR -88[rbp], 0
	lea	rax, -608[rbp]
	mov	rdx, rax
	mov	eax, 0
	mov	ecx, 63
	mov	rdi, rdx
	rep stosq
	mov	rdx, rdi
	mov	DWORD PTR [rdx], eax
	add	rdx, 4
	mov	WORD PTR [rdx], ax
	add	rdx, 2
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 448
	mov	rax, QWORD PTR [rax]
	lea	rdx, -608[rbp]
	mov	r8d, 254
	mov	rcx, rax
	call	GetModuleFileNameW
	mov	DWORD PTR -52[rbp], eax
	mov	eax, DWORD PTR -52[rbp]
	mov	QWORD PTR -88[rbp], rax
	mov	rdx, QWORD PTR -88[rbp]
	lea	rax, -608[rbp]
	mov	rcx, rax
	call	fb_WstrLeft
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 160[rax]
	mov	rax, QWORD PTR -72[rbp]
	mov	rdx, rax
	call	WLET
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 160[rax]
	mov	QWORD PTR -80[rbp], rax
	nop
.L7471:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -80[rbp]
	add	rsp, 632
	pop	rdi
	pop	rbp
	ret
	.section .rdata,"dr"
.LC446:
	.ascii "ACTIVEFORM\0"
	.text
	.def	_ZN2MY11APPLICATION17ACTIVEFORM__set__EPNS_3SYS5FORMS7CONTROLE;	.scl	3;	.type	32;	.endef
_ZN2MY11APPLICATION17ACTIVEFORM__set__EPNS_3SYS5FORMS7CONTROLE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L7474:
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC446[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 232[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
.L7475:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC447:
	.ascii "ACTIVEMDICHILD\0"
	.text
	.def	_ZN2MY11APPLICATION21ACTIVEMDICHILD__set__EPNS_3SYS5FORMS7CONTROLE;	.scl	3;	.type	32;	.endef
_ZN2MY11APPLICATION21ACTIVEMDICHILD__set__EPNS_3SYS5FORMS7CONTROLE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L7477:
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC447[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 240[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
.L7478:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC448:
	.ascii "MAINFORM\0"
	.text
	.def	_ZN2MY11APPLICATION15MAINFORM__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY11APPLICATION15MAINFORM__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC448[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L7480:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 248[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L7481:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY11APPLICATION15MAINFORM__set__EPNS_3SYS5FORMS7CONTROLE;	.scl	3;	.type	32;	.endef
_ZN2MY11APPLICATION15MAINFORM__set__EPNS_3SYS5FORMS7CONTROLE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L7484:
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC448[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 248[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
.L7485:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC449:
	.ascii "CONTROLCOUNT\0"
	.text
	.def	_ZN2MY11APPLICATION19CONTROLCOUNT__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY11APPLICATION19CONTROLCOUNT__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC449[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L7487:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY11APPLICATION11GETCONTROLSEv
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 216[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L7488:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC450:
	.ascii "CONTROLS\0"
	.text
	.def	_ZN2MY11APPLICATION15CONTROLS__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY11APPLICATION15CONTROLS__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC450[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L7491:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY11APPLICATION11GETCONTROLSEv
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 224[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L7492:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC451:
	.ascii "FORMCOUNT\0"
	.text
	.def	_ZN2MY11APPLICATION9FORMCOUNTEv;	.scl	3;	.type	32;	.endef
_ZN2MY11APPLICATION9FORMCOUNTEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC451[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L7495:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY11APPLICATION8GETFORMSEv
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 200[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L7496:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC452:
	.ascii "FORMS\0"
	.text
	.def	_ZN2MY11APPLICATION12FORMS__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY11APPLICATION12FORMS__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC452[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L7499:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY11APPLICATION8GETFORMSEv
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 208[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L7500:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC453:
	.ascii "HELPCOMMAND\0"
	.text
	.def	_ZN2MY11APPLICATION11HELPCOMMANDEu7INTEGERi;	.scl	3;	.type	32;	.endef
_ZN2MY11APPLICATION11HELPCOMMANDEu7INTEGERi:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	DWORD PTR 32[rbp], r8d
.L7503:
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC453[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY11APPLICATION15MAINFORM__get__Ev
	mov	QWORD PTR -40[rbp], rax
	cmp	QWORD PTR -40[rbp], 0
	je	.L7507
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 424
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY11APPLICATION15MAINFORM__get__Ev
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -72[rbp], rax
	mov	eax, DWORD PTR 32[rbp]
	movsx	rcx, eax
	mov	rax, QWORD PTR 24[rbp]
	mov	r8d, eax
	mov	rdx, QWORD PTR -56[rbp]
	mov	rax, QWORD PTR -72[rbp]
	mov	r9, rcx
	mov	rcx, rax
	call	WinHelpW
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L7506
.L7505:
.L7507:
	nop
.L7506:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC454:
	.ascii "HELPCONTEXT\0"
	.text
	.def	_ZN2MY11APPLICATION11HELPCONTEXTEi;	.scl	3;	.type	32;	.endef
_ZN2MY11APPLICATION11HELPCONTEXTEi:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	DWORD PTR 24[rbp], edx
.L7509:
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC454[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY11APPLICATION15MAINFORM__get__Ev
	mov	QWORD PTR -40[rbp], rax
	cmp	QWORD PTR -40[rbp], 0
	je	.L7513
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 424
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY11APPLICATION15MAINFORM__get__Ev
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -72[rbp], rax
	mov	eax, DWORD PTR 24[rbp]
	movsx	rcx, eax
	mov	rdx, QWORD PTR -56[rbp]
	mov	rax, QWORD PTR -72[rbp]
	mov	r9, rcx
	mov	r8d, 1
	mov	rcx, rax
	call	WinHelpW
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L7512
.L7511:
.L7513:
	nop
.L7512:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC455:
	.ascii "RUN\0"
	.text
	.def	_ZN2MY11APPLICATION3RUNEv;	.scl	3;	.type	32;	.endef
_ZN2MY11APPLICATION3RUNEv:
	push	rbp
	mov	rbp, rsp
	push	rdi
	sub	rsp, 344
	mov	QWORD PTR 16[rbp], rcx
.L7515:
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rcx, .LC455[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	lea	rax, -208[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	QWORD PTR 32[rax], 0
	mov	QWORD PTR 40[rax], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY11APPLICATION9FORMCOUNTEv
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	jne	.L7560
	mov	ecx, 10
	call	fb_End
	jmp	.L7518
.L7517:
.L7560:
	nop
.L7518:
	lea	rax, -304[rbp]
	mov	r8, rax
	mov	eax, 0
	mov	edx, 11
	mov	rdi, r8
	mov	rcx, rdx
	rep stosq
	mov	BYTE PTR -305[rbp], 0
.L7519:
	lea	rax, -208[rbp]
	mov	r9d, 0
	mov	r8d, 0
	mov	edx, 0
	mov	rcx, rax
	call	GetMessageW
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	je	.L7561
	mov	BYTE PTR -305[rbp], 1
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 232
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L7562
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 232[rax]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 292
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L7563
	jmp	[QWORD PTR -80[rbp]]
.L7563:
	nop
.L7525:
	mov	rax, QWORD PTR -72[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L7564
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 232[rax]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 292
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -96[rbp], rax
	cmp	QWORD PTR -96[rbp], 0
	je	.L7565
	jmp	[QWORD PTR -96[rbp]]
.L7565:
	nop
.L7529:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 232
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	add	rax, 8
	mov	rdx, QWORD PTR [rax]
	lea	rcx, -208[rbp]
	mov	rax, QWORD PTR -104[rbp]
	mov	r8, rcx
	mov	rcx, rax
	call	TranslateAcceleratorW
	mov	DWORD PTR -108[rbp], eax
	cmp	DWORD PTR -108[rbp], 0
	sete	al
	mov	BYTE PTR -305[rbp], al
	jmp	.L7527
.L7564:
	nop
.L7527:
	movzx	eax, BYTE PTR -305[rbp]
	test	al, al
	je	.L7566
	mov	eax, DWORD PTR -200[rbp]
	mov	DWORD PTR -112[rbp], eax
	cmp	DWORD PTR -112[rbp], 256
	jne	.L7567
	nop
.L7531:
	mov	rax, QWORD PTR -192[rbp]
	mov	QWORD PTR -120[rbp], rax
	cmp	QWORD PTR -120[rbp], 9
	jne	.L7568
	nop
.L7532:
	mov	ecx, 16
	call	GetKeyState
	mov	WORD PTR -122[rbp], ax
	movsx	rax, WORD PTR -122[rbp]
	and	eax, 8000
	test	rax, rax
	setne	al
	movzx	edx, al
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 232
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL17SELECTNEXTCONTROLEb
	mov	BYTE PTR -305[rbp], 0
	jmp	.L7539
.L7523:
.L7533:
.L7534:
.L7535:
.L7536:
.L7537:
.L7538:
.L7562:
	nop
	jmp	.L7539
.L7566:
	nop
	jmp	.L7539
.L7567:
	nop
	jmp	.L7539
.L7568:
	nop
.L7539:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 464
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L7569
	lea	rax, -304[rbp]
	mov	rdx, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rdx, -208[rbp]
	lea	rax, -304[rbp]
	add	rax, 8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR [rax], rdx
	lea	rax, -304[rbp]
	add	rax, 16
	mov	edx, DWORD PTR -200[rbp]
	mov	DWORD PTR [rax], edx
	lea	rax, -304[rbp]
	add	rax, 20
	mov	DWORD PTR [rax], 0
	lea	rax, -304[rbp]
	add	rax, 24
	mov	rdx, QWORD PTR -192[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -304[rbp]
	add	rax, 32
	mov	rdx, QWORD PTR -184[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -304[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], 0
	lea	rax, -208[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	lea	rax, -304[rbp]
	add	rax, 48
	movzx	edx, dx
	mov	QWORD PTR [rax], rdx
	lea	rax, -208[rbp]
	add	rax, 16
	mov	rax, QWORD PTR [rax]
	shr	rax, 16
	mov	rdx, rax
	lea	rax, -304[rbp]
	add	rax, 56
	movzx	edx, dx
	mov	QWORD PTR [rax], rdx
	lea	rax, -208[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	lea	rax, -304[rbp]
	add	rax, 64
	movzx	edx, dx
	mov	QWORD PTR [rax], rdx
	lea	rax, -208[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	shr	rax, 16
	mov	rdx, rax
	lea	rax, -304[rbp]
	add	rax, 72
	movzx	edx, dx
	mov	QWORD PTR [rax], rdx
	lea	rax, -304[rbp]
	add	rax, 80
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 464[rax]
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 328
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -144[rbp], rax
	cmp	QWORD PTR -144[rbp], 0
	je	.L7570
	jmp	[QWORD PTR -144[rbp]]
.L7570:
	nop
.L7543:
	lea	rax, -304[rbp]
	mov	rdx, QWORD PTR -136[rbp]
	mov	rcx, rax
	call	rdx
	lea	rax, -304[rbp]
	add	rax, 40
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L7571
	mov	BYTE PTR -305[rbp], 0
	jmp	.L7546
.L7541:
.L7545:
.L7569:
	nop
	jmp	.L7546
.L7571:
	nop
.L7546:
	movzx	eax, BYTE PTR -305[rbp]
	test	al, al
	je	.L7572
	lea	rax, -208[rbp]
	mov	rcx, rax
	call	TranslateMessage
	lea	rax, -208[rbp]
	mov	rcx, rax
	call	DispatchMessageW
	jmp	.L7549
.L7548:
.L7572:
	nop
.L7549:
	lea	rax, -208[rbp]
	add	rax, 36
	mov	eax, DWORD PTR [rax]
	mov	rdx, QWORD PTR 16[rbp]
	add	rdx, 408
	cdqe
	mov	QWORD PTR [rdx], rax
	lea	rax, -208[rbp]
	add	rax, 40
	mov	eax, DWORD PTR [rax]
	mov	rdx, QWORD PTR 16[rbp]
	add	rdx, 416
	cdqe
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 456
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L7573
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 456[rax]
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 337
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -160[rbp], rax
	cmp	QWORD PTR -160[rbp], 0
	je	.L7574
	jmp	[QWORD PTR -160[rbp]]
.L7574:
	nop
.L7553:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 416[rax]
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 408[rax]
	mov	rax, QWORD PTR -152[rbp]
	call	rax
	jmp	.L7519
.L7573:
	nop
.L7551:
	jmp	.L7519
.L7521:
.L7561:
	nop
.L7554:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	add	rsp, 344
	pop	rdi
	pop	rbp
	ret
	.def	_ZN2MY11APPLICATION21ENUMTHREADWINDOWSPROCEP6HWND__x;	.scl	3;	.type	32;	.endef
_ZN2MY11APPLICATION21ENUMTHREADWINDOWSPROCEP6HWND__x:
	push	rbp
	mov	rbp, rsp
	add	rsp, -128
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	DWORD PTR -76[rbp], 0
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC114[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L7576:
	mov	QWORD PTR -88[rbp], 0
	mov	QWORD PTR -96[rbp], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -96[rbp], rax
	mov	edx, -21
	mov	rcx, QWORD PTR 16[rbp]
	call	GetWindowLongPtrW
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	test	rax, rax
	je	.L7588
	mov	rax, QWORD PTR -88[rbp]
	test	rax, rax
	je	.L7589
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	add	rax, 200
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -48[rbp]
	add	rax, 200
	add	rdx, 1
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR -48[rbp]
	add	rax, 200
	mov	rax, QWORD PTR [rax]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -48[rbp]
	add	rax, 208
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	realloc
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	rdx, 208[rax]
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	rax, QWORD PTR 208[rax]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 418
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	je	.L7590
	jmp	[QWORD PTR -72[rbp]]
.L7590:
	nop
.L7581:
	mov	rax, QWORD PTR -48[rbp]
	add	rax, 200
	mov	rax, QWORD PTR [rax]
	sal	rax, 3
	lea	rdx, -8[rax]
	mov	rax, QWORD PTR -64[rbp]
	add	rdx, rax
	mov	rax, QWORD PTR -88[rbp]
	mov	QWORD PTR [rdx], rax
	jmp	.L7584
.L7578:
.L7582:
.L7583:
.L7588:
	nop
	jmp	.L7584
.L7589:
	nop
.L7584:
	mov	DWORD PTR -76[rbp], -1
	nop
.L7585:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	eax, DWORD PTR -76[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC456:
	.ascii "GETFORMS\0"
	.text
	.def	_ZN2MY11APPLICATION8GETFORMSEv;	.scl	3;	.type	32;	.endef
_ZN2MY11APPLICATION8GETFORMSEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
.L7592:
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC456[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 200
	mov	QWORD PTR [rax], 0
	call	GetCurrentThreadId
	mov	DWORD PTR -36[rbp], eax
	mov	rdx, QWORD PTR 16[rbp]
	mov	eax, DWORD PTR -36[rbp]
	mov	r8, rdx
	lea	rdx, _ZN2MY11APPLICATION21ENUMTHREADWINDOWSPROCEP6HWND__x[rip]
	mov	ecx, eax
	call	EnumThreadWindows
.L7593:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC457:
	.ascii "ENUMCONTROLS\0"
	.text
	.def	_ZN2MY11APPLICATION12ENUMCONTROLSERNS_3SYS5FORMS7CONTROLE;	.scl	3;	.type	32;	.endef
_ZN2MY11APPLICATION12ENUMCONTROLSERNS_3SYS5FORMS7CONTROLE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 144
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L7595:
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC457[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	QWORD PTR -112[rbp], 0
	mov	QWORD PTR -112[rbp], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL12CONTROLCOUNTEv
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	sub	rax, 1
	mov	QWORD PTR -48[rbp], rax
	jmp	.L7596
.L7614:
	nop
.L7597:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 216
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 216
	add	rdx, 1
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 216
	mov	rax, QWORD PTR [rax]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 224
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	realloc
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 224[rax]
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 439
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	je	.L7611
	jmp	[QWORD PTR -72[rbp]]
.L7611:
	nop
.L7599:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 224[rax]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 439
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -88[rbp], rax
	cmp	QWORD PTR -88[rbp], 0
	je	.L7612
	jmp	[QWORD PTR -88[rbp]]
.L7612:
	nop
.L7601:
	mov	rax, QWORD PTR -112[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -64[rbp]
	add	rax, rdx
	mov	rdx, QWORD PTR 16[rbp]
	add	rdx, 216
	mov	rdx, QWORD PTR [rdx]
	sal	rdx, 3
	lea	rcx, -8[rdx]
	mov	rdx, QWORD PTR -80[rbp]
	add	rdx, rcx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 440
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -104[rbp], rax
	cmp	QWORD PTR -104[rbp], 0
	je	.L7613
	jmp	[QWORD PTR -104[rbp]]
.L7613:
	nop
.L7603:
	mov	rax, QWORD PTR -112[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -96[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY11APPLICATION12ENUMCONTROLSERNS_3SYS5FORMS7CONTROLE
.L7604:
	mov	rax, QWORD PTR -112[rbp]
	add	rax, 1
	mov	QWORD PTR -112[rbp], rax
.L7596:
	mov	rax, QWORD PTR -112[rbp]
	cmp	QWORD PTR -48[rbp], rax
	jge	.L7614
.L7605:
	nop
.L7606:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC458:
	.ascii "GETCONTROLS\0"
	.text
	.def	_ZN2MY11APPLICATION11GETCONTROLSEv;	.scl	3;	.type	32;	.endef
_ZN2MY11APPLICATION11GETCONTROLSEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
.L7616:
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC458[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	QWORD PTR -80[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 216
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR -80[rbp], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY11APPLICATION9FORMCOUNTEv
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	sub	rax, 1
	mov	QWORD PTR -48[rbp], rax
	jmp	.L7617
.L7627:
	nop
.L7618:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY11APPLICATION12FORMS__get__Ev
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 449
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	je	.L7626
	jmp	[QWORD PTR -72[rbp]]
.L7626:
	nop
.L7620:
	mov	rax, QWORD PTR -80[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -64[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY11APPLICATION12ENUMCONTROLSERNS_3SYS5FORMS7CONTROLE
.L7621:
	mov	rax, QWORD PTR -80[rbp]
	add	rax, 1
	mov	QWORD PTR -80[rbp], rax
.L7617:
	mov	rax, QWORD PTR -80[rbp]
	cmp	QWORD PTR -48[rbp], rax
	jge	.L7627
.L7622:
	nop
.L7623:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC459:
	.ascii "GETFONTS\0"
	.text
	.def	_ZN2MY11APPLICATION8GETFONTSEv;	.scl	3;	.type	32;	.endef
_ZN2MY11APPLICATION8GETFONTSEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 144
	mov	QWORD PTR 16[rbp], rcx
.L7629:
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC459[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	QWORD PTR -48[rbp], 0
	lea	rax, -112[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	QWORD PTR 32[rax], 0
	mov	QWORD PTR 40[rax], 0
	mov	QWORD PTR 48[rax], 0
	mov	DWORD PTR 56[rax], 0
	mov	ecx, 0
	call	GetDC
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	lea	rax, -112[rbp]
	add	rax, 23
	mov	BYTE PTR [rax], 1
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 296
	mov	rcx, rax
	call	_ZN11WSTRINGLIST5CLEAREv
	mov	rax, QWORD PTR -48[rbp]
	mov	rdx, rax
	mov	ecx, 0
	call	ReleaseDC
.L7630:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC460:
	.ascii "GETVERINFO\0"
	.align 8
.LC461:
	.ascii "\\\0S\0t\0r\0i\0n\0g\0F\0i\0l\0e\0I\0n\0f\0o\0\\\0\0\0"
	.align 2
.LC462:
	.ascii "\\\0\0\0"
	.text
	.def	_ZN2MY11APPLICATION10GETVERINFOER8FBSTRING;	.scl	3;	.type	32;	.endef
_ZN2MY11APPLICATION10GETVERINFOER8FBSTRING:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 256
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	lea	rax, -176[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC460[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L7632:
	mov	DWORD PTR -180[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 272
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	rdx, .LC77[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -52[rbp], eax
	cmp	DWORD PTR -52[rbp], 0
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -64[rbp], 0
	je	.L7640
	lea	rax, -176[rbp]
	mov	r9d, 0
	lea	r8, .LC77[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA_Init
	jmp	.L7635
.L7640:
	nop
.L7634:
	mov	QWORD PTR -192[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 272
	mov	r8, -1
	mov	rdx, rax
	lea	rcx, .LC461[rip]
	call	fb_WstrConcatWA
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	rdx, .LC462[rip]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	QWORD PTR -96[rbp], rax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -96[rbp]
	mov	r8, -1
	mov	rcx, rax
	call	fb_WstrConcatWA
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	QWORD PTR -112[rbp], rax
	mov	rdx, QWORD PTR -112[rbp]
	lea	rax, -224[rbp]
	mov	r9d, 0
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA_Init
	mov	rax, QWORD PTR -112[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -96[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	lea	rax, -224[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 264
	mov	rax, QWORD PTR [rax]
	lea	r8, -180[rbp]
	lea	rcx, -192[rbp]
	mov	rdx, QWORD PTR -128[rbp]
	mov	r9, r8
	mov	r8, rcx
	mov	rcx, rax
	call	VerQueryValueW
	mov	DWORD PTR -132[rbp], eax
	mov	eax, DWORD PTR -132[rbp]
	mov	DWORD PTR -136[rbp], eax
	mov	rax, QWORD PTR -128[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	DWORD PTR -136[rbp], 0
	nop
.L7636:
.L7637:
	lea	rax, -192[rbp]
	mov	rcx, rax
	call	WGET
	mov	QWORD PTR -144[rbp], rax
	mov	rdx, QWORD PTR -144[rbp]
	lea	rax, -176[rbp]
	mov	r9d, 0
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA_Init
	lea	rax, -224[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	nop
.L7635:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	lea	rax, -176[rbp]
	mov	rcx, rax
	call	fb_StrAllocTempResult
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC463:
	.ascii "\\\0V\0a\0r\0F\0i\0l\0e\0I\0n\0f\0o\0\\\0T\0r\0a\0n\0s\0l\0a\0t\0i\0o\0n\0\0\0"
	.text
	.def	_ZN2MY11APPLICATIONC1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY11APPLICATIONC1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 224
	mov	QWORD PTR 16[rbp], rcx
.L7642:
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4ICONC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 152
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 168
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 176
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 184
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 192
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 200
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 208
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 216
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 224
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 232
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 240
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 248
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 256
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 264
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 272
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 296
	mov	rcx, rax
	call	_ZN11WSTRINGLISTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 408
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 416
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 424
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 448
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 456
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 464
	mov	QWORD PTR [rax], 0
	lea	rdx, _ZTVN2MY11APPLICATIONE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, PAPP$[rip]
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jne	.L7664
	lea	rax, PAPP$[rip]
	mov	rdx, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	jmp	.L7644
.L7664:
	nop
.L7644:
	lea	rax, -120[rbp]
	mov	QWORD PTR [rax], 0
	lea	rax, -120[rbp]
	mov	DWORD PTR [rax], 8
	lea	rax, -120[rbp]
	add	rax, 4
	mov	DWORD PTR [rax], 65535
	lea	rax, -120[rbp]
	mov	rcx, rax
	call	InitCommonControlsEx
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY11APPLICATION8GETFONTSEv
	mov	DWORD PTR -124[rbp], 0
	mov	DWORD PTR -128[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 256
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 264
	mov	QWORD PTR [rax], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY11APPLICATION14EXENAME__get__Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	lea	rdx, -128[rbp]
	mov	rcx, rax
	call	GetFileVersionInfoSizeW
	mov	DWORD PTR -36[rbp], eax
	mov	eax, DWORD PTR -36[rbp]
	mov	DWORD PTR -124[rbp], eax
	mov	eax, DWORD PTR -124[rbp]
	test	eax, eax
	je	.L7665
	mov	eax, DWORD PTR -124[rbp]
	mov	eax, eax
	mov	rcx, rax
	call	malloc
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 264[rax]
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 264
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L7666
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 264
	mov	rcx, QWORD PTR [rax]
	mov	edx, DWORD PTR -124[rbp]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	r9, rcx
	mov	r8d, edx
	mov	edx, 0
	mov	rcx, rax
	call	GetFileVersionInfoW
	mov	DWORD PTR -52[rbp], eax
	cmp	DWORD PTR -52[rbp], 0
	je	.L7667
	mov	QWORD PTR -136[rbp], 0
	mov	DWORD PTR -140[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 264
	mov	rax, QWORD PTR [rax]
	lea	rcx, -140[rbp]
	lea	rdx, -136[rbp]
	mov	r9, rcx
	mov	r8, rdx
	lea	rdx, .LC463[rip]
	mov	rcx, rax
	call	VerQueryValueW
	mov	DWORD PTR -56[rbp], eax
	cmp	DWORD PTR -56[rbp], 0
	je	.L7668
	mov	rax, QWORD PTR -136[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 570
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	je	.L7669
	jmp	[QWORD PTR -72[rbp]]
.L7669:
	nop
.L7652:
	mov	rax, QWORD PTR -64[rbp]
	add	rax, 2
	movzx	eax, WORD PTR [rax]
	movzx	eax, ax
	mov	edx, 4
	mov	ecx, eax
	call	fb_HEXEx_s
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 570
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -96[rbp], rax
	cmp	QWORD PTR -96[rbp], 0
	je	.L7670
	jmp	[QWORD PTR -96[rbp]]
.L7670:
	nop
.L7654:
	mov	rax, QWORD PTR -88[rbp]
	movzx	eax, WORD PTR [rax]
	movzx	eax, ax
	mov	edx, 4
	mov	ecx, eax
	call	fb_HEXEx_s
	mov	QWORD PTR -104[rbp], rax
	lea	rax, -176[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	rcx, QWORD PTR -80[rbp]
	mov	rdx, QWORD PTR -104[rbp]
	lea	rax, -176[rbp]
	mov	QWORD PTR 32[rsp], -1
	mov	r9, rcx
	mov	r8, -1
	mov	rcx, rax
	call	fb_StrConcat
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 272
	mov	rdx, QWORD PTR -112[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrAssign
	jmp	.L7655
.L7650:
.L7668:
	nop
.L7655:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 256
	mov	BYTE PTR [rax], -1
	jmp	.L7661
.L7646:
.L7656:
.L7657:
.L7658:
.L7659:
.L7660:
.L7665:
	nop
	jmp	.L7661
.L7666:
	nop
	jmp	.L7661
.L7667:
	nop
.L7661:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY11APPLICATIOND1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY11APPLICATIOND1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	lea	rdx, _ZTVN2MY11APPLICATIONE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L7672:
	lea	rax, PAPP$[rip]
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 208
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L7686
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 208
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	free
	jmp	.L7674
.L7686:
	nop
.L7674:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L7687
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	free
	jmp	.L7676
.L7687:
	nop
.L7676:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 152
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L7688
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 152
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	free
	jmp	.L7678
.L7688:
	nop
.L7678:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L7689
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	free
	jmp	.L7680
.L7689:
	nop
.L7680:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 224
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L7690
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 224
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	free
	jmp	.L7682
.L7690:
	nop
.L7682:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 264
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L7691
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 264
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	free
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 264
	mov	QWORD PTR [rax], 0
	jmp	.L7685
.L7684:
.L7691:
	nop
.L7685:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 424
	mov	rcx, rax
	call	fb_StrDelete
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 296
	mov	rcx, rax
	call	_ZN11WSTRINGLISTD1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 272
	mov	rcx, rax
	call	fb_StrDelete
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4ICOND1Ev
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTD1Ev
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC464:
	.ascii "PRINT\0"
	.align 2
.LC465:
	.ascii "/\0D\0e\0b\0u\0g\0I\0n\0f\0o\0.\0l\0o\0g\0\0\0"
	.align 2
.LC466:
	.ascii "2\0"
	.ascii "0\0"
	.ascii "2\0"
	.ascii "2\0-\0"
	.ascii "0\0"
	.ascii "9\0-\0"
	.ascii "2\0"
	.ascii "6\0 \0\0\0"
	.align 8
.LC467:
	.ascii "V\0i\0s\0u\0a\0l\0 \0F\0B\0 \0E\0d\0i\0t\0o\0r\0\0\0"
	.text
	.def	_ZN5DEBUG5PRINTERwbbbb;	.scl	3;	.type	32;	.endef
_ZN5DEBUG5PRINTERwbbbb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 368
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	ecx, r9d
	mov	edx, DWORD PTR 48[rbp]
	mov	BYTE PTR 24[rbp], al
	mov	eax, r8d
	mov	BYTE PTR 32[rbp], al
	mov	eax, ecx
	mov	BYTE PTR 40[rbp], al
	mov	eax, edx
	mov	BYTE PTR -308[rbp], al
.L7693:
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC464[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	cmp	BYTE PTR 24[rbp], 0
	je	.L7719
	mov	QWORD PTR -296[rbp], 0
	call	fb_FileFree
	mov	DWORD PTR -36[rbp], eax
	mov	eax, DWORD PTR -36[rbp]
	cdqe
	mov	QWORD PTR -48[rbp], rax
	lea	rax, -288[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	call	fb_ExePath
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	r8, .LC465[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrConcatAW
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -72[rbp], rax
	mov	rdx, QWORD PTR -72[rbp]
	lea	rax, -288[rbp]
	mov	r9d, 0
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA
	mov	rax, QWORD PTR -48[rbp]
	mov	edx, eax
	lea	rax, -288[rbp]
	mov	DWORD PTR 40[rsp], 0
	mov	DWORD PTR 32[rsp], edx
	mov	r9d, 0
	mov	r8d, 0
	mov	edx, 4
	mov	rcx, rax
	call	fb_FileOpen
	mov	DWORD PTR -76[rbp], eax
	mov	eax, DWORD PTR -76[rbp]
	cdqe
	mov	QWORD PTR -296[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	lea	rax, -288[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	mov	rax, QWORD PTR -296[rbp]
	test	rax, rax
	jne	.L7720
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -88[rbp], rax
	mov	ecx, 20
	call	fb_SPACE
	mov	QWORD PTR -96[rbp], rax
	call	fb_Time
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	r8, -1
	mov	rdx, rax
	lea	rcx, .LC466[rip]
	call	fb_WstrConcatWA
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	r8d, 2
	lea	rdx, .LC274[rip]
	mov	rcx, rax
	call	fb_WstrConcatWA
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	mov	rdx, QWORD PTR 16[rbp]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	mov	QWORD PTR -152[rbp], rax
	mov	rdx, QWORD PTR -96[rbp]
	mov	rax, QWORD PTR -152[rbp]
	mov	r8, -1
	mov	rcx, rax
	call	fb_WstrConcatWA
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR -168[rbp]
	mov	r8d, 1
	mov	rdx, rax
	call	fb_PrintWstr
	mov	rax, QWORD PTR -168[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -152[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -136[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7698:
	mov	rax, QWORD PTR -48[rbp]
	mov	ecx, eax
	call	fb_FileClose
	mov	DWORD PTR -172[rbp], eax
	cmp	DWORD PTR -172[rbp], 0
	je	.L7721
	lea	r9, .L7697[rip]
	lea	r8, .L7698[rip]
	lea	rdx, .LC67[rip]
	mov	ecx, 611
	call	fb_ErrorThrowAt
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	nop
	jmp	rax
.L7697:
	jmp	.L7704
.L7702:
.L7703:
.L7695:
.L7719:
	nop
	jmp	.L7704
.L7720:
	nop
	jmp	.L7704
.L7721:
	nop
.L7704:
	cmp	BYTE PTR 32[rbp], 0
	je	.L7722
	mov	r8d, 1
	mov	rdx, QWORD PTR 16[rbp]
	mov	ecx, 0
	call	fb_PrintWstr
	jmp	.L7706
.L7722:
	nop
.L7706:
	cmp	BYTE PTR 40[rbp], 0
	je	.L7723
	mov	r9d, 1
	mov	r8d, 0
	lea	rdx, .LC467[rip]
	mov	rcx, QWORD PTR 16[rbp]
	call	MsgBox
	jmp	.L7708
.L7723:
	nop
.L7708:
	cmp	BYTE PTR -308[rbp], 0
	je	.L7724
	mov	rax, QWORD PTR DEBUGWINDOWHANDLE$[rip]
	mov	rcx, rax
	call	IsWindow
	mov	DWORD PTR -188[rbp], eax
	cmp	DWORD PTR -188[rbp], 0
	je	.L7725
	mov	rax, QWORD PTR DEBUGWINDOWHANDLE$[rip]
	mov	rcx, rax
	call	GetParent
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	mov	rcx, rax
	call	GetParent
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR -208[rbp]
	mov	r9d, 0
	mov	r8d, 0
	mov	edx, 4875
	mov	rcx, rax
	call	SendMessageW
	mov	QWORD PTR -216[rbp], rax
	cmp	QWORD PTR -216[rbp], 5
	je	.L7726
	mov	rax, QWORD PTR DEBUGWINDOWHANDLE$[rip]
	mov	rcx, rax
	call	GetParent
	mov	QWORD PTR -224[rbp], rax
	mov	rax, QWORD PTR -224[rbp]
	mov	rcx, rax
	call	GetParent
	mov	QWORD PTR -232[rbp], rax
	mov	rax, QWORD PTR -232[rbp]
	mov	r9d, 0
	mov	r8d, 5
	mov	edx, 4876
	mov	rcx, rax
	call	SendMessageW
	mov	rax, QWORD PTR DEBUGWINDOWHANDLE$[rip]
	mov	rcx, rax
	call	GetParent
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -240[rbp]
	mov	edx, 5
	mov	rcx, rax
	call	ShowWindow
	mov	rax, QWORD PTR DEBUGWINDOWHANDLE$[rip]
	mov	rcx, rax
	call	GetParent
	mov	QWORD PTR -248[rbp], rax
	mov	rax, QWORD PTR -248[rbp]
	mov	rcx, rax
	call	BringWindowToTop
	jmp	.L7714
.L7713:
.L7726:
	nop
.L7714:
	mov	QWORD PTR -304[rbp], 0
	mov	r8d, 3
	lea	rdx, .LC73[rip]
	mov	rcx, QWORD PTR 16[rbp]
	call	fb_WstrConcatWA
	mov	QWORD PTR -256[rbp], rax
	mov	rax, QWORD PTR -256[rbp]
	mov	QWORD PTR -264[rbp], rax
	mov	rdx, QWORD PTR -264[rbp]
	lea	rax, -304[rbp]
	mov	rcx, rax
	call	WLET
	mov	rax, QWORD PTR -264[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -304[rbp]
	mov	rdx, rax
	mov	rax, QWORD PTR DEBUGWINDOWHANDLE$[rip]
	mov	r9, rdx
	mov	r8d, 0
	mov	edx, 194
	mov	rcx, rax
	call	SendMessageW
	lea	rax, -304[rbp]
	mov	rcx, rax
	call	_Z11WDEALLOCATERPw
	jmp	.L7718
.L7710:
.L7715:
.L7716:
.L7717:
.L7724:
	nop
	jmp	.L7718
.L7725:
	nop
.L7718:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC468:
	.ascii "MSGBOX\0"
	.text
	.def	MsgBox;	.scl	3;	.type	32;	.endef
MsgBox:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 144
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
	mov	QWORD PTR -72[rbp], 0
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC468[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L7728:
	mov	QWORD PTR -8[rbp], -1
	mov	QWORD PTR -80[rbp], 0
	mov	QWORD PTR -88[rbp], 0
	mov	QWORD PTR -96[rbp], 0
	mov	rdx, QWORD PTR 24[rbp]
	lea	rax, -80[rbp]
	mov	rcx, rax
	call	WLET
	mov	QWORD PTR -104[rbp], 0
	mov	rax, QWORD PTR -80[rbp]
	lea	rdx, .LC77[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -44[rbp], eax
	cmp	DWORD PTR -44[rbp], 0
	jne	.L7784
	lea	rcx, APP$[rip]
	call	_ZN2MY11APPLICATION12TITLE__get__Ev
	mov	QWORD PTR -56[rbp], rax
	mov	rdx, QWORD PTR -56[rbp]
	lea	rax, -80[rbp]
	mov	rcx, rax
	call	WLET
	jmp	.L7730
.L7784:
	nop
.L7730:
	mov	QWORD PTR -112[rbp], 0
	cmp	QWORD PTR 32[rbp], 0
	jne	.L7785
	nop
.L7731:
	mov	QWORD PTR -88[rbp], 64
	jmp	.L7741
.L7785:
	nop
.L7732:
	cmp	QWORD PTR 32[rbp], 1
	jne	.L7786
	nop
.L7734:
	mov	QWORD PTR -88[rbp], 48
	jmp	.L7741
.L7786:
	nop
.L7735:
	cmp	QWORD PTR 32[rbp], 2
	jne	.L7787
	nop
.L7736:
	mov	QWORD PTR -88[rbp], 32
	jmp	.L7741
.L7787:
	nop
.L7737:
	cmp	QWORD PTR 32[rbp], 3
	jne	.L7788
	nop
.L7738:
	mov	QWORD PTR -88[rbp], 16
	jmp	.L7741
.L7788:
	nop
.L7739:
	cmp	QWORD PTR 32[rbp], 4
	jne	.L7789
	nop
.L7740:
	mov	QWORD PTR -88[rbp], 0
	jmp	.L7741
.L7733:
.L7789:
	nop
.L7741:
	cmp	QWORD PTR 40[rbp], 0
	jne	.L7790
	nop
.L7742:
	mov	QWORD PTR -96[rbp], 0
	jmp	.L7752
.L7790:
	nop
.L7743:
	cmp	QWORD PTR 40[rbp], 1
	jne	.L7791
	nop
.L7745:
	mov	QWORD PTR -96[rbp], 0
	jmp	.L7752
.L7791:
	nop
.L7746:
	cmp	QWORD PTR 40[rbp], 2
	jne	.L7792
	nop
.L7747:
	mov	QWORD PTR -96[rbp], 4
	jmp	.L7752
.L7792:
	nop
.L7748:
	cmp	QWORD PTR 40[rbp], 3
	jne	.L7793
	nop
.L7749:
	mov	QWORD PTR -96[rbp], 3
	jmp	.L7752
.L7793:
	nop
.L7750:
	cmp	QWORD PTR 40[rbp], 4
	jne	.L7794
	nop
.L7751:
	mov	QWORD PTR -96[rbp], 1
	jmp	.L7752
.L7744:
.L7794:
	nop
.L7752:
	mov	rax, QWORD PTR -88[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR -96[rbp]
	or	eax, edx
	or	eax, 270336
	mov	edx, eax
	mov	rax, QWORD PTR -80[rbp]
	mov	r9d, edx
	mov	r8, rax
	mov	rdx, QWORD PTR 16[rbp]
	mov	ecx, 0
	call	MessageBoxW
	mov	DWORD PTR -60[rbp], eax
	mov	eax, DWORD PTR -60[rbp]
	cdqe
	mov	QWORD PTR -8[rbp], rax
	cmp	QWORD PTR -8[rbp], 3
	jne	.L7795
	nop
.L7753:
	mov	QWORD PTR -8[rbp], 0
	jmp	.L7767
.L7795:
	nop
.L7754:
	cmp	QWORD PTR -8[rbp], 2
	jne	.L7796
	nop
.L7756:
	mov	QWORD PTR -8[rbp], 1
	jmp	.L7767
.L7796:
	nop
.L7757:
	cmp	QWORD PTR -8[rbp], 5
	jne	.L7797
	nop
.L7758:
	mov	QWORD PTR -8[rbp], 2
	jmp	.L7767
.L7797:
	nop
.L7759:
	cmp	QWORD PTR -8[rbp], 7
	jne	.L7798
	nop
.L7760:
	mov	QWORD PTR -8[rbp], 3
	jmp	.L7767
.L7798:
	nop
.L7761:
	cmp	QWORD PTR -8[rbp], 1
	jne	.L7799
	nop
.L7762:
	mov	QWORD PTR -8[rbp], 4
	jmp	.L7767
.L7799:
	nop
.L7763:
	cmp	QWORD PTR -8[rbp], 4
	jne	.L7800
	nop
.L7764:
	mov	QWORD PTR -8[rbp], 5
	jmp	.L7767
.L7800:
	nop
.L7765:
	cmp	QWORD PTR -8[rbp], 6
	jne	.L7801
	nop
.L7766:
	mov	QWORD PTR -8[rbp], 6
	jmp	.L7767
.L7755:
.L7801:
	nop
.L7767:
	lea	rax, -80[rbp]
	mov	rcx, rax
	call	_Z11WDEALLOCATERPw
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -72[rbp], rax
	nop
.L7768:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -72[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC469:
	.ascii "CHECKUTF8NOBOM\0"
	.text
	.def	CHECKUTF8NOBOM;	.scl	3;	.type	32;	.endef
CHECKUTF8NOBOM:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 224
	mov	QWORD PTR 16[rbp], rcx
	mov	BYTE PTR -177[rbp], 0
	lea	rcx, .LC67[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rcx, .LC469[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
.L7803:
	mov	BYTE PTR -1[rbp], 1
	mov	QWORD PTR -16[rbp], 0
	mov	rdx, -1
	mov	rcx, QWORD PTR 16[rbp]
	call	fb_StrLen
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
.L7804:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -64[rbp]
	jge	.L7855
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 769
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L7856
	jmp	[QWORD PTR -80[rbp]]
.L7856:
	nop
.L7808:
	mov	rdx, QWORD PTR -16[rbp]
	mov	rax, QWORD PTR -72[rbp]
	add	rax, rdx
	movzx	eax, BYTE PTR [rax]
	test	al, al
	js	.L7857
	add	QWORD PTR -16[rbp], 1
	jmp	.L7811
.L7857:
	nop
.L7810:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 772
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -96[rbp], rax
	cmp	QWORD PTR -96[rbp], 0
	je	.L7858
	jmp	[QWORD PTR -96[rbp]]
.L7858:
	nop
.L7813:
	mov	rdx, QWORD PTR -16[rbp]
	mov	rax, QWORD PTR -88[rbp]
	add	rax, rdx
	movzx	eax, BYTE PTR [rax]
	cmp	al, -65
	ja	.L7859
	mov	BYTE PTR -1[rbp], 0
	jmp	.L7806
.L7859:
	nop
.L7815:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 776
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -112[rbp], rax
	cmp	QWORD PTR -112[rbp], 0
	je	.L7860
	jmp	[QWORD PTR -112[rbp]]
.L7860:
	nop
.L7817:
	mov	rdx, QWORD PTR -16[rbp]
	mov	rax, QWORD PTR -104[rbp]
	add	rax, rdx
	movzx	eax, BYTE PTR [rax]
	cmp	al, -33
	ja	.L7861
	mov	rax, QWORD PTR -64[rbp]
	sub	rax, 1
	cmp	QWORD PTR -16[rbp], rax
	jge	.L7862
	nop
.L7821:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 779
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -128[rbp], rax
	cmp	QWORD PTR -128[rbp], 0
	je	.L7863
	jmp	[QWORD PTR -128[rbp]]
.L7863:
	nop
.L7823:
	mov	rax, QWORD PTR -16[rbp]
	lea	rdx, 1[rax]
	mov	rax, QWORD PTR -120[rbp]
	add	rax, rdx
	movzx	eax, BYTE PTR [rax]
	movzx	eax, al
	and	eax, 192
	cmp	rax, 128
	je	.L7864
	mov	BYTE PTR -1[rbp], 0
	jmp	.L7806
.L7825:
.L7864:
	nop
.L7826:
	add	QWORD PTR -16[rbp], 2
	jmp	.L7811
.L7861:
	nop
.L7819:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 784
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -144[rbp], rax
	cmp	QWORD PTR -144[rbp], 0
	je	.L7865
	jmp	[QWORD PTR -144[rbp]]
.L7865:
	nop
.L7828:
	mov	rdx, QWORD PTR -16[rbp]
	mov	rax, QWORD PTR -136[rbp]
	add	rax, rdx
	movzx	eax, BYTE PTR [rax]
	cmp	al, -17
	ja	.L7866
	mov	rax, QWORD PTR -64[rbp]
	sub	rax, 2
	cmp	QWORD PTR -16[rbp], rax
	jge	.L7867
	nop
.L7832:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 787
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -160[rbp], rax
	cmp	QWORD PTR -160[rbp], 0
	je	.L7868
	jmp	[QWORD PTR -160[rbp]]
.L7868:
	nop
.L7834:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	lea	r8, .LC67[rip]
	mov	edx, 787
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -176[rbp], rax
	cmp	QWORD PTR -176[rbp], 0
	je	.L7869
	jmp	[QWORD PTR -176[rbp]]
.L7869:
	nop
.L7836:
	mov	rax, QWORD PTR -16[rbp]
	lea	rdx, 1[rax]
	mov	rax, QWORD PTR -152[rbp]
	add	rax, rdx
	movzx	eax, BYTE PTR [rax]
	movzx	eax, al
	and	eax, 192
	cmp	rax, 128
	setne	al
	movzx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR -16[rbp]
	lea	rcx, 2[rax]
	mov	rax, QWORD PTR -168[rbp]
	add	rax, rcx
	movzx	eax, BYTE PTR [rax]
	movzx	eax, al
	and	eax, 192
	cmp	rax, 128
	setne	al
	movzx	eax, al
	neg	eax
	or	eax, edx
	test	eax, eax
	je	.L7870
	mov	BYTE PTR -1[rbp], 0
	jmp	.L7806
.L7838:
.L7870:
	nop
.L7839:
	add	QWORD PTR -16[rbp], 3
	jmp	.L7811
.L7866:
	nop
.L7830:
	mov	BYTE PTR -1[rbp], 0
	jmp	.L7806
.L7811:
	jmp	.L7804
.L7855:
	nop
	jmp	.L7806
.L7862:
	nop
	jmp	.L7806
.L7867:
	nop
.L7806:
	movzx	eax, BYTE PTR -1[rbp]
	mov	BYTE PTR -177[rbp], al
	nop
.L7840:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -177[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS15SIZECONSTRAINTS8TOSTRINGEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS15SIZECONSTRAINTS8TOSTRINGEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 224
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -192[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC155[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L7872:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_LongintToWstr
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_LongintToWstr
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_LongintToWstr
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_LongintToStr
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	r8, .LC159[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrConcatAW
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rdx, QWORD PTR -80[rbp]
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	lea	rdx, .LC159[rip]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	mov	QWORD PTR -136[rbp], rax
	mov	rdx, QWORD PTR -64[rbp]
	mov	rax, QWORD PTR -136[rbp]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	lea	rdx, .LC159[rip]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	mov	QWORD PTR -168[rbp], rax
	mov	rdx, QWORD PTR -48[rbp]
	mov	rax, QWORD PTR -168[rbp]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 24[rax]
	mov	rax, QWORD PTR -184[rbp]
	mov	rdx, rax
	call	WLET
	mov	rax, QWORD PTR -184[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -168[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -152[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -136[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -192[rbp], rax
	nop
.L7873:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -192[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS10ANCHORTYPE8TOSTRINGEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS10ANCHORTYPE8TOSTRINGEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 224
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -192[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC155[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L7876:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_LongintToWstr
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_LongintToWstr
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_LongintToWstr
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_LongintToStr
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	r8, .LC159[rip]
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrConcatAW
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rdx, QWORD PTR -80[rbp]
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	lea	rdx, .LC159[rip]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	mov	QWORD PTR -136[rbp], rax
	mov	rdx, QWORD PTR -64[rbp]
	mov	rax, QWORD PTR -136[rbp]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	lea	rdx, .LC159[rip]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	mov	QWORD PTR -168[rbp], rax
	mov	rdx, QWORD PTR -48[rbp]
	mov	rax, QWORD PTR -168[rbp]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 24[rax]
	mov	rax, QWORD PTR -184[rbp]
	mov	rdx, rax
	call	WLET
	mov	rax, QWORD PTR -184[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -168[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -152[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -136[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -192[rbp], rax
	nop
.L7877:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -192[rbp]
	leave
	ret
	.section .rdata,"dr"
	.align 2
.LC470:
	.ascii "a\0l\0i\0g\0n\0\0\0"
	.align 2
.LC471:
	.ascii "a\0l\0l\0o\0w\0d\0r\0o\0p\0\0\0"
	.align 2
.LC472:
	.ascii "a\0n\0c\0h\0o\0r\0\0\0"
	.align 2
.LC473:
	.ascii "a\0n\0c\0h\0o\0r\0.\0l\0e\0f\0t\0\0\0"
	.align 2
.LC474:
	.ascii "a\0n\0c\0h\0o\0r\0.\0r\0i\0g\0h\0t\0\0\0"
	.align 2
.LC475:
	.ascii "a\0n\0c\0h\0o\0r\0.\0t\0o\0p\0\0\0"
	.align 2
.LC476:
	.ascii "a\0n\0c\0h\0o\0r\0.\0b\0o\0t\0t\0o\0m\0\0\0"
	.align 2
.LC477:
	.ascii "b\0o\0r\0d\0e\0r\0s\0t\0y\0l\0e\0\0\0"
	.align 2
.LC478:
	.ascii "c\0o\0n\0s\0t\0r\0a\0i\0n\0t\0s\0\0\0"
	.align 8
.LC479:
	.ascii "c\0o\0n\0s\0t\0r\0a\0i\0n\0t\0s\0.\0l\0e\0f\0t\0\0\0"
	.align 8
.LC480:
	.ascii "c\0o\0n\0s\0t\0r\0a\0i\0n\0t\0s\0.\0t\0o\0p\0\0\0"
	.align 8
.LC481:
	.ascii "c\0o\0n\0s\0t\0r\0a\0i\0n\0t\0s\0.\0w\0i\0d\0t\0h\0\0\0"
	.align 8
.LC482:
	.ascii "c\0o\0n\0s\0t\0r\0a\0i\0n\0t\0s\0.\0h\0e\0i\0g\0h\0t\0\0\0"
	.align 2
.LC483:
	.ascii "c\0o\0n\0t\0e\0x\0t\0m\0e\0n\0u\0\0\0"
	.align 2
.LC484:
	.ascii "c\0o\0n\0t\0r\0o\0l\0i\0n\0d\0e\0x\0\0\0"
	.align 2
.LC485:
	.ascii "c\0o\0n\0t\0r\0o\0l\0c\0o\0u\0n\0t\0\0\0"
	.align 2
.LC486:
	.ascii "c\0u\0r\0s\0o\0r\0\0\0"
	.align 2
.LC487:
	.ascii "d\0o\0u\0b\0l\0e\0b\0u\0f\0f\0e\0r\0e\0d\0\0\0"
	.align 2
.LC488:
	.ascii "g\0r\0o\0u\0p\0e\0d\0\0\0"
	.align 2
.LC489:
	.ascii "h\0e\0l\0p\0c\0o\0n\0t\0e\0x\0t\0\0\0"
	.align 2
.LC490:
	.ascii "p\0a\0r\0e\0n\0t\0h\0a\0n\0d\0l\0e\0\0\0"
	.align 2
.LC491:
	.ascii "f\0o\0r\0e\0c\0o\0l\0o\0r\0\0\0"
	.align 2
.LC492:
	.ascii "i\0d\0\0\0"
	.align 2
.LC493:
	.ascii "i\0s\0c\0h\0i\0l\0d\0\0\0"
	.align 2
.LC494:
	.ascii "s\0h\0o\0w\0h\0i\0n\0t\0\0\0"
	.align 2
.LC495:
	.ascii "h\0i\0n\0t\0\0\0"
	.align 2
.LC496:
	.ascii "s\0u\0b\0c\0l\0a\0s\0s\0\0\0"
	.align 2
.LC497:
	.ascii "t\0a\0b\0s\0t\0o\0p\0\0\0"
	.align 2
.LC498:
	.ascii "t\0e\0x\0t\0\0\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL12READPROPERTYER8FBSTRING;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL12READPROPERTYER8FBSTRING:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 976
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -896[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC152[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L7880:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 136
	mov	rdx, QWORD PTR -40[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrAssign
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 136[rax]
	lea	rax, -928[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC470[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L8020
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7883:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 648
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8020:
	nop
.L7882:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	rdx, .LC471[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -84[rbp], eax
	cmp	DWORD PTR -84[rbp], 0
	jne	.L8021
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7887:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 560
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8021:
	nop
.L7886:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	lea	rdx, .LC472[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -108[rbp], eax
	cmp	DWORD PTR -108[rbp], 0
	jne	.L8022
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7890:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2152
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8022:
	nop
.L7889:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	rdx, .LC473[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -132[rbp], eax
	cmp	DWORD PTR -132[rbp], 0
	jne	.L8023
	mov	rax, QWORD PTR -128[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7893:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2200
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8023:
	nop
.L7892:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	lea	rdx, .LC474[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -156[rbp], eax
	cmp	DWORD PTR -156[rbp], 0
	jne	.L8024
	mov	rax, QWORD PTR -152[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7896:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2216
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8024:
	nop
.L7895:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	lea	rdx, .LC475[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -180[rbp], eax
	cmp	DWORD PTR -180[rbp], 0
	jne	.L8025
	mov	rax, QWORD PTR -176[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7899:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2208
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8025:
	nop
.L7898:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -192[rbp]
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	lea	rdx, .LC476[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -204[rbp], eax
	cmp	DWORD PTR -204[rbp], 0
	jne	.L8026
	mov	rax, QWORD PTR -200[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7902:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2224
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8026:
	nop
.L7901:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR -216[rbp]
	mov	QWORD PTR -224[rbp], rax
	mov	rax, QWORD PTR -224[rbp]
	lea	rdx, .LC477[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -228[rbp], eax
	cmp	DWORD PTR -228[rbp], 0
	jne	.L8027
	mov	rax, QWORD PTR -224[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7905:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 544
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8027:
	nop
.L7904:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -240[rbp]
	mov	QWORD PTR -248[rbp], rax
	mov	rax, QWORD PTR -248[rbp]
	lea	rdx, .LC300[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -252[rbp], eax
	cmp	DWORD PTR -252[rbp], 0
	jne	.L8028
	mov	rax, QWORD PTR -248[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7908:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 680
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8028:
	nop
.L7907:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -264[rbp], rax
	mov	rax, QWORD PTR -264[rbp]
	mov	QWORD PTR -272[rbp], rax
	mov	rax, QWORD PTR -272[rbp]
	lea	rdx, .LC478[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -276[rbp], eax
	cmp	DWORD PTR -276[rbp], 0
	jne	.L8029
	mov	rax, QWORD PTR -272[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7911:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2056
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8029:
	nop
.L7910:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -288[rbp], rax
	mov	rax, QWORD PTR -288[rbp]
	mov	QWORD PTR -296[rbp], rax
	mov	rax, QWORD PTR -296[rbp]
	lea	rdx, .LC479[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -300[rbp], eax
	cmp	DWORD PTR -300[rbp], 0
	jne	.L8030
	mov	rax, QWORD PTR -296[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7914:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2104
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8030:
	nop
.L7913:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -312[rbp], rax
	mov	rax, QWORD PTR -312[rbp]
	mov	QWORD PTR -320[rbp], rax
	mov	rax, QWORD PTR -320[rbp]
	lea	rdx, .LC480[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -324[rbp], eax
	cmp	DWORD PTR -324[rbp], 0
	jne	.L8031
	mov	rax, QWORD PTR -320[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7917:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2112
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8031:
	nop
.L7916:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -336[rbp], rax
	mov	rax, QWORD PTR -336[rbp]
	mov	QWORD PTR -344[rbp], rax
	mov	rax, QWORD PTR -344[rbp]
	lea	rdx, .LC481[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -348[rbp], eax
	cmp	DWORD PTR -348[rbp], 0
	jne	.L8032
	mov	rax, QWORD PTR -344[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7920:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2120
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8032:
	nop
.L7919:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -360[rbp], rax
	mov	rax, QWORD PTR -360[rbp]
	mov	QWORD PTR -368[rbp], rax
	mov	rax, QWORD PTR -368[rbp]
	lea	rdx, .LC482[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -372[rbp], eax
	cmp	DWORD PTR -372[rbp], 0
	jne	.L8033
	mov	rax, QWORD PTR -368[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7923:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2128
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8033:
	nop
.L7922:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -384[rbp], rax
	mov	rax, QWORD PTR -384[rbp]
	mov	QWORD PTR -392[rbp], rax
	mov	rax, QWORD PTR -392[rbp]
	lea	rdx, .LC483[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -396[rbp], eax
	cmp	DWORD PTR -396[rbp], 0
	jne	.L8034
	mov	rax, QWORD PTR -392[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7926:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL18CONTEXTMENU__get__Ev
	mov	QWORD PTR -408[rbp], rax
	mov	rax, QWORD PTR -408[rbp]
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8034:
	nop
.L7925:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -416[rbp], rax
	mov	rax, QWORD PTR -416[rbp]
	mov	QWORD PTR -424[rbp], rax
	mov	rax, QWORD PTR -424[rbp]
	lea	rdx, .LC484[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -428[rbp], eax
	cmp	DWORD PTR -428[rbp], 0
	jne	.L8035
	mov	rax, QWORD PTR -424[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7929:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL19CONTROLINDEX__get__Ev
	mov	QWORD PTR -440[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 568[rax]
	mov	rax, QWORD PTR -440[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 568
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8035:
	nop
.L7928:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -448[rbp], rax
	mov	rax, QWORD PTR -448[rbp]
	mov	QWORD PTR -456[rbp], rax
	mov	rax, QWORD PTR -456[rbp]
	lea	rdx, .LC485[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -460[rbp], eax
	cmp	DWORD PTR -460[rbp], 0
	jne	.L8036
	mov	rax, QWORD PTR -456[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7932:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1040
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8036:
	nop
.L7931:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -472[rbp], rax
	mov	rax, QWORD PTR -472[rbp]
	mov	QWORD PTR -480[rbp], rax
	mov	rax, QWORD PTR -480[rbp]
	lea	rdx, .LC486[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -484[rbp], eax
	cmp	DWORD PTR -484[rbp], 0
	jne	.L8037
	mov	rax, QWORD PTR -480[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7935:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1928
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8037:
	nop
.L7934:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -496[rbp], rax
	mov	rax, QWORD PTR -496[rbp]
	mov	QWORD PTR -504[rbp], rax
	mov	rax, QWORD PTR -504[rbp]
	lea	rdx, .LC487[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -508[rbp], eax
	cmp	DWORD PTR -508[rbp], 0
	jne	.L8038
	mov	rax, QWORD PTR -504[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7938:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2136
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8038:
	nop
.L7937:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -520[rbp], rax
	mov	rax, QWORD PTR -520[rbp]
	mov	QWORD PTR -528[rbp], rax
	mov	rax, QWORD PTR -528[rbp]
	lea	rdx, .LC488[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -532[rbp], eax
	cmp	DWORD PTR -532[rbp], 0
	jne	.L8039
	mov	rax, QWORD PTR -528[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7941:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 920
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8039:
	nop
.L7940:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -544[rbp], rax
	mov	rax, QWORD PTR -544[rbp]
	mov	QWORD PTR -552[rbp], rax
	mov	rax, QWORD PTR -552[rbp]
	lea	rdx, .LC489[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -556[rbp], eax
	cmp	DWORD PTR -556[rbp], 0
	jne	.L8040
	mov	rax, QWORD PTR -552[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7944:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2048
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8040:
	nop
.L7943:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -568[rbp], rax
	mov	rax, QWORD PTR -568[rbp]
	mov	QWORD PTR -576[rbp], rax
	mov	rax, QWORD PTR -576[rbp]
	lea	rdx, .LC490[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -580[rbp], eax
	cmp	DWORD PTR -580[rbp], 0
	jne	.L8041
	mov	rax, QWORD PTR -576[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7947:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 416
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8041:
	nop
.L7946:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -592[rbp], rax
	mov	rax, QWORD PTR -592[rbp]
	mov	QWORD PTR -600[rbp], rax
	mov	rax, QWORD PTR -600[rbp]
	lea	rdx, .LC332[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -604[rbp], eax
	cmp	DWORD PTR -604[rbp], 0
	jne	.L8042
	mov	rax, QWORD PTR -600[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7950:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 969
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8042:
	nop
.L7949:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -616[rbp], rax
	mov	rax, QWORD PTR -616[rbp]
	mov	QWORD PTR -624[rbp], rax
	mov	rax, QWORD PTR -624[rbp]
	lea	rdx, .LC491[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -628[rbp], eax
	cmp	DWORD PTR -628[rbp], 0
	jne	.L8043
	mov	rax, QWORD PTR -624[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7953:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 712
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8043:
	nop
.L7952:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -640[rbp], rax
	mov	rax, QWORD PTR -640[rbp]
	mov	QWORD PTR -648[rbp], rax
	mov	rax, QWORD PTR -648[rbp]
	lea	rdx, .LC281[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -652[rbp], eax
	cmp	DWORD PTR -652[rbp], 0
	jne	.L8044
	mov	rax, QWORD PTR -648[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7956:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1768
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8044:
	nop
.L7955:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -664[rbp], rax
	mov	rax, QWORD PTR -664[rbp]
	mov	QWORD PTR -672[rbp], rax
	mov	rax, QWORD PTR -672[rbp]
	lea	rdx, .LC492[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -676[rbp], eax
	cmp	DWORD PTR -676[rbp], 0
	jne	.L8045
	mov	rax, QWORD PTR -672[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7959:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8045:
	nop
.L7958:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -688[rbp], rax
	mov	rax, QWORD PTR -688[rbp]
	mov	QWORD PTR -696[rbp], rax
	mov	rax, QWORD PTR -696[rbp]
	lea	rdx, .LC493[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -700[rbp], eax
	cmp	DWORD PTR -700[rbp], 0
	jne	.L8046
	mov	rax, QWORD PTR -696[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7962:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 968
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8046:
	nop
.L7961:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -712[rbp], rax
	mov	rax, QWORD PTR -712[rbp]
	mov	QWORD PTR -720[rbp], rax
	mov	rax, QWORD PTR -720[rbp]
	lea	rdx, .LC168[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -724[rbp], eax
	cmp	DWORD PTR -724[rbp], 0
	jne	.L8047
	mov	rax, QWORD PTR -720[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7965:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 128[rax]
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8047:
	nop
.L7964:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -736[rbp], rax
	mov	rax, QWORD PTR -736[rbp]
	mov	QWORD PTR -744[rbp], rax
	mov	rax, QWORD PTR -744[rbp]
	lea	rdx, .LC494[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -748[rbp], eax
	cmp	DWORD PTR -748[rbp], 0
	jne	.L8048
	mov	rax, QWORD PTR -744[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7968:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 640
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8048:
	nop
.L7967:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -760[rbp], rax
	mov	rax, QWORD PTR -760[rbp]
	mov	QWORD PTR -768[rbp], rax
	mov	rax, QWORD PTR -768[rbp]
	lea	rdx, .LC495[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -772[rbp], eax
	cmp	DWORD PTR -772[rbp], 0
	jne	.L8049
	mov	rax, QWORD PTR -768[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7971:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 632[rax]
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8049:
	nop
.L7970:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -784[rbp], rax
	mov	rax, QWORD PTR -784[rbp]
	mov	QWORD PTR -792[rbp], rax
	mov	rax, QWORD PTR -792[rbp]
	lea	rdx, .LC496[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -796[rbp], eax
	cmp	DWORD PTR -796[rbp], 0
	jne	.L8050
	mov	rax, QWORD PTR -792[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7974:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1760
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8050:
	nop
.L7973:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -808[rbp], rax
	mov	rax, QWORD PTR -808[rbp]
	mov	QWORD PTR -816[rbp], rax
	mov	rax, QWORD PTR -816[rbp]
	lea	rdx, .LC497[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -820[rbp], eax
	cmp	DWORD PTR -820[rbp], 0
	jne	.L8051
	mov	rax, QWORD PTR -816[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7977:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 921
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8051:
	nop
.L7976:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -832[rbp], rax
	mov	rax, QWORD PTR -832[rbp]
	mov	QWORD PTR -840[rbp], rax
	mov	rax, QWORD PTR -840[rbp]
	lea	rdx, .LC498[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -844[rbp], eax
	cmp	DWORD PTR -844[rbp], 0
	jne	.L8052
	mov	rax, QWORD PTR -840[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7980:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 600
	mov	rcx, rax
	call	_ZN7USTRING4VPTREv
	mov	QWORD PTR -856[rbp], rax
	mov	rax, QWORD PTR -856[rbp]
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8052:
	nop
.L7979:
	lea	rax, -928[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -864[rbp], rax
	mov	rax, QWORD PTR -864[rbp]
	mov	QWORD PTR -872[rbp], rax
	mov	rax, QWORD PTR -872[rbp]
	lea	rdx, .LC341[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -876[rbp], eax
	cmp	DWORD PTR -876[rbp], 0
	jne	.L8053
	mov	rax, QWORD PTR -872[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L7983:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 970
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L7984
.L8053:
	nop
.L7982:
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12READPROPERTYER8FBSTRING
	mov	QWORD PTR -888[rbp], rax
	mov	rax, QWORD PTR -888[rbp]
	mov	QWORD PTR -896[rbp], rax
	lea	rax, -928[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	nop
.L7984:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -896[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS7CONTROL13WRITEPROPERTYER8FBSTRINGPv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL13WRITEPROPERTYER8FBSTRINGPv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 1328
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	BYTE PTR -1218[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC154[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L8055:
	cmp	QWORD PTR 32[rbp], 0
	jne	.L8269
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -1248[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -1248[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC168[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L8270
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8060:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL13PARENT__set__EPS2_
	nop
.L8063:
	lea	rax, -1248[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L8064
.L8061:
.L8270:
	nop
.L8059:
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13WRITEPROPERTYER8FBSTRINGPv
	mov	BYTE PTR -61[rbp], al
	movzx	eax, BYTE PTR -61[rbp]
	mov	BYTE PTR -1218[rbp], al
	lea	rax, -1248[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L8062
.L8269:
	nop
.L8057:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -72[rbp], rax
	mov	rdx, QWORD PTR -72[rbp]
	lea	rax, -1280[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	rdx, .LC470[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -92[rbp], eax
	cmp	DWORD PTR -92[rbp], 0
	jne	.L8271
	mov	rax, QWORD PTR -88[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8067:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 86
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -112[rbp], rax
	cmp	QWORD PTR -112[rbp], 0
	je	.L8272
	jmp	[QWORD PTR -112[rbp]]
.L8272:
	nop
.L8069:
	mov	rax, QWORD PTR -104[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12ALIGN__set__ENS1_9DOCKSTYLEE
	jmp	.L8209
.L8271:
	nop
.L8066:
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	rdx, .LC471[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -132[rbp], eax
	cmp	DWORD PTR -132[rbp], 0
	jne	.L8273
	mov	rax, QWORD PTR -128[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8073:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 87
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -152[rbp], rax
	cmp	QWORD PTR -152[rbp], 0
	je	.L8274
	jmp	[QWORD PTR -152[rbp]]
.L8274:
	nop
.L8075:
	mov	rax, QWORD PTR -144[rbp]
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL16ALLOWDROP__set__Eb
	jmp	.L8209
.L8273:
	nop
.L8072:
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	lea	rdx, .LC473[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -172[rbp], eax
	cmp	DWORD PTR -172[rbp], 0
	jne	.L8275
	mov	rax, QWORD PTR -168[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8078:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 88
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -192[rbp], rax
	cmp	QWORD PTR -192[rbp], 0
	je	.L8276
	jmp	[QWORD PTR -192[rbp]]
.L8276:
	nop
.L8080:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2200[rax]
	mov	rax, QWORD PTR -184[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L8209
.L8275:
	nop
.L8077:
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR -208[rbp]
	lea	rdx, .LC474[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -212[rbp], eax
	cmp	DWORD PTR -212[rbp], 0
	jne	.L8277
	mov	rax, QWORD PTR -208[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8083:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -224[rbp], rax
	mov	rax, QWORD PTR -224[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 89
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -232[rbp], rax
	cmp	QWORD PTR -232[rbp], 0
	je	.L8278
	jmp	[QWORD PTR -232[rbp]]
.L8278:
	nop
.L8085:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2216[rax]
	mov	rax, QWORD PTR -224[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L8209
.L8277:
	nop
.L8082:
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -240[rbp]
	mov	QWORD PTR -248[rbp], rax
	mov	rax, QWORD PTR -248[rbp]
	lea	rdx, .LC475[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -252[rbp], eax
	cmp	DWORD PTR -252[rbp], 0
	jne	.L8279
	mov	rax, QWORD PTR -248[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8088:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -264[rbp], rax
	mov	rax, QWORD PTR -264[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 90
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -272[rbp], rax
	cmp	QWORD PTR -272[rbp], 0
	je	.L8280
	jmp	[QWORD PTR -272[rbp]]
.L8280:
	nop
.L8090:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2208[rax]
	mov	rax, QWORD PTR -264[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L8209
.L8279:
	nop
.L8087:
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -280[rbp], rax
	mov	rax, QWORD PTR -280[rbp]
	mov	QWORD PTR -288[rbp], rax
	mov	rax, QWORD PTR -288[rbp]
	lea	rdx, .LC476[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -292[rbp], eax
	cmp	DWORD PTR -292[rbp], 0
	jne	.L8281
	mov	rax, QWORD PTR -288[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8093:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -304[rbp], rax
	mov	rax, QWORD PTR -304[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 91
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -312[rbp], rax
	cmp	QWORD PTR -312[rbp], 0
	je	.L8282
	jmp	[QWORD PTR -312[rbp]]
.L8282:
	nop
.L8095:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2224[rax]
	mov	rax, QWORD PTR -304[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L8209
.L8281:
	nop
.L8092:
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -320[rbp], rax
	mov	rax, QWORD PTR -320[rbp]
	mov	QWORD PTR -328[rbp], rax
	mov	rax, QWORD PTR -328[rbp]
	lea	rdx, .LC486[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -332[rbp], eax
	cmp	DWORD PTR -332[rbp], 0
	jne	.L8283
	mov	rax, QWORD PTR -328[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8098:
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 1928[rax]
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING6CURSORaSERw
	jmp	.L8209
.L8283:
	nop
.L8097:
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -344[rbp], rax
	mov	rax, QWORD PTR -344[rbp]
	mov	QWORD PTR -352[rbp], rax
	mov	rax, QWORD PTR -352[rbp]
	lea	rdx, .LC487[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -356[rbp], eax
	cmp	DWORD PTR -356[rbp], 0
	jne	.L8284
	mov	rax, QWORD PTR -352[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8101:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -368[rbp], rax
	mov	rax, QWORD PTR -368[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 93
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -376[rbp], rax
	cmp	QWORD PTR -376[rbp], 0
	je	.L8285
	jmp	[QWORD PTR -376[rbp]]
.L8285:
	nop
.L8103:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2136[rax]
	mov	rax, QWORD PTR -368[rbp]
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR [rdx], al
	jmp	.L8209
.L8284:
	nop
.L8100:
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -384[rbp], rax
	mov	rax, QWORD PTR -384[rbp]
	mov	QWORD PTR -392[rbp], rax
	mov	rax, QWORD PTR -392[rbp]
	lea	rdx, .LC477[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -396[rbp], eax
	cmp	DWORD PTR -396[rbp], 0
	jne	.L8286
	mov	rax, QWORD PTR -392[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8106:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -408[rbp], rax
	mov	rax, QWORD PTR -408[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 94
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -416[rbp], rax
	cmp	QWORD PTR -416[rbp], 0
	je	.L8287
	jmp	[QWORD PTR -416[rbp]]
.L8287:
	nop
.L8108:
	mov	rax, QWORD PTR -408[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL18BORDERSTYLE__set__Eu7INTEGER
	jmp	.L8209
.L8286:
	nop
.L8105:
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -424[rbp], rax
	mov	rax, QWORD PTR -424[rbp]
	mov	QWORD PTR -432[rbp], rax
	mov	rax, QWORD PTR -432[rbp]
	lea	rdx, .LC300[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -436[rbp], eax
	cmp	DWORD PTR -436[rbp], 0
	jne	.L8288
	mov	rax, QWORD PTR -432[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8111:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -448[rbp], rax
	mov	rax, QWORD PTR -448[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 95
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -456[rbp], rax
	cmp	QWORD PTR -456[rbp], 0
	je	.L8289
	jmp	[QWORD PTR -456[rbp]]
.L8289:
	nop
.L8113:
	mov	rax, QWORD PTR -448[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL16BACKCOLOR__set__Eu7INTEGER
	jmp	.L8209
.L8288:
	nop
.L8110:
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -464[rbp], rax
	mov	rax, QWORD PTR -464[rbp]
	mov	QWORD PTR -472[rbp], rax
	mov	rax, QWORD PTR -472[rbp]
	lea	rdx, .LC479[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -476[rbp], eax
	cmp	DWORD PTR -476[rbp], 0
	jne	.L8290
	mov	rax, QWORD PTR -472[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8116:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -488[rbp], rax
	mov	rax, QWORD PTR -488[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 96
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -496[rbp], rax
	cmp	QWORD PTR -496[rbp], 0
	je	.L8291
	jmp	[QWORD PTR -496[rbp]]
.L8291:
	nop
.L8118:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2104[rax]
	mov	rax, QWORD PTR -488[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L8209
.L8290:
	nop
.L8115:
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -504[rbp], rax
	mov	rax, QWORD PTR -504[rbp]
	mov	QWORD PTR -512[rbp], rax
	mov	rax, QWORD PTR -512[rbp]
	lea	rdx, .LC480[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -516[rbp], eax
	cmp	DWORD PTR -516[rbp], 0
	jne	.L8292
	mov	rax, QWORD PTR -512[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8121:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -528[rbp], rax
	mov	rax, QWORD PTR -528[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 97
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -536[rbp], rax
	cmp	QWORD PTR -536[rbp], 0
	je	.L8293
	jmp	[QWORD PTR -536[rbp]]
.L8293:
	nop
.L8123:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2112[rax]
	mov	rax, QWORD PTR -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L8209
.L8292:
	nop
.L8120:
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -544[rbp], rax
	mov	rax, QWORD PTR -544[rbp]
	mov	QWORD PTR -552[rbp], rax
	mov	rax, QWORD PTR -552[rbp]
	lea	rdx, .LC481[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -556[rbp], eax
	cmp	DWORD PTR -556[rbp], 0
	jne	.L8294
	mov	rax, QWORD PTR -552[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8126:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -568[rbp], rax
	mov	rax, QWORD PTR -568[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 98
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -576[rbp], rax
	cmp	QWORD PTR -576[rbp], 0
	je	.L8295
	jmp	[QWORD PTR -576[rbp]]
.L8295:
	nop
.L8128:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2120[rax]
	mov	rax, QWORD PTR -568[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L8209
.L8294:
	nop
.L8125:
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -584[rbp], rax
	mov	rax, QWORD PTR -584[rbp]
	mov	QWORD PTR -592[rbp], rax
	mov	rax, QWORD PTR -592[rbp]
	lea	rdx, .LC482[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -596[rbp], eax
	cmp	DWORD PTR -596[rbp], 0
	jne	.L8296
	mov	rax, QWORD PTR -592[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8131:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -608[rbp], rax
	mov	rax, QWORD PTR -608[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 99
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -616[rbp], rax
	cmp	QWORD PTR -616[rbp], 0
	je	.L8297
	jmp	[QWORD PTR -616[rbp]]
.L8297:
	nop
.L8133:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2128[rax]
	mov	rax, QWORD PTR -608[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L8209
.L8296:
	nop
.L8130:
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -624[rbp], rax
	mov	rax, QWORD PTR -624[rbp]
	mov	QWORD PTR -632[rbp], rax
	mov	rax, QWORD PTR -632[rbp]
	lea	rdx, .LC484[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -636[rbp], eax
	cmp	DWORD PTR -636[rbp], 0
	jne	.L8298
	mov	rax, QWORD PTR -632[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8136:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -648[rbp], rax
	mov	rax, QWORD PTR -648[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 100
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -656[rbp], rax
	cmp	QWORD PTR -656[rbp], 0
	je	.L8299
	jmp	[QWORD PTR -656[rbp]]
.L8299:
	nop
.L8138:
	mov	rax, QWORD PTR -648[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL19CONTROLINDEX__set__Eu7INTEGER
	jmp	.L8209
.L8298:
	nop
.L8135:
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -664[rbp], rax
	mov	rax, QWORD PTR -664[rbp]
	mov	QWORD PTR -672[rbp], rax
	mov	rax, QWORD PTR -672[rbp]
	lea	rdx, .LC483[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -676[rbp], eax
	cmp	DWORD PTR -676[rbp], 0
	jne	.L8300
	mov	rax, QWORD PTR -672[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8141:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL18CONTEXTMENU__set__EPNS1_9POPUPMENUE
	jmp	.L8209
.L8300:
	nop
.L8140:
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -688[rbp], rax
	mov	rax, QWORD PTR -688[rbp]
	mov	QWORD PTR -696[rbp], rax
	mov	rax, QWORD PTR -696[rbp]
	lea	rdx, .LC332[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -700[rbp], eax
	cmp	DWORD PTR -700[rbp], 0
	jne	.L8301
	mov	rax, QWORD PTR -696[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8144:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -712[rbp], rax
	mov	rax, QWORD PTR -712[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 102
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -720[rbp], rax
	cmp	QWORD PTR -720[rbp], 0
	je	.L8302
	jmp	[QWORD PTR -720[rbp]]
.L8302:
	nop
.L8146:
	mov	rax, QWORD PTR -712[rbp]
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL14ENABLED__set__Eb
	jmp	.L8209
.L8301:
	nop
.L8143:
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -728[rbp], rax
	mov	rax, QWORD PTR -728[rbp]
	mov	QWORD PTR -736[rbp], rax
	mov	rax, QWORD PTR -736[rbp]
	lea	rdx, .LC488[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -740[rbp], eax
	cmp	DWORD PTR -740[rbp], 0
	jne	.L8303
	mov	rax, QWORD PTR -736[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8149:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -752[rbp], rax
	mov	rax, QWORD PTR -752[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 103
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -760[rbp], rax
	cmp	QWORD PTR -760[rbp], 0
	je	.L8304
	jmp	[QWORD PTR -760[rbp]]
.L8304:
	nop
.L8151:
	mov	rax, QWORD PTR -752[rbp]
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL14GROUPED__set__Eb
	jmp	.L8209
.L8303:
	nop
.L8148:
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -768[rbp], rax
	mov	rax, QWORD PTR -768[rbp]
	mov	QWORD PTR -776[rbp], rax
	mov	rax, QWORD PTR -776[rbp]
	lea	rdx, .LC489[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -780[rbp], eax
	cmp	DWORD PTR -780[rbp], 0
	jne	.L8305
	mov	rax, QWORD PTR -776[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8154:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -792[rbp], rax
	mov	rax, QWORD PTR -792[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 104
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -800[rbp], rax
	cmp	QWORD PTR -800[rbp], 0
	je	.L8306
	jmp	[QWORD PTR -800[rbp]]
.L8306:
	nop
.L8156:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2048[rax]
	mov	rax, QWORD PTR -792[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L8209
.L8305:
	nop
.L8153:
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -808[rbp], rax
	mov	rax, QWORD PTR -808[rbp]
	mov	QWORD PTR -816[rbp], rax
	mov	rax, QWORD PTR -816[rbp]
	lea	rdx, .LC281[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -820[rbp], eax
	cmp	DWORD PTR -820[rbp], 0
	jne	.L8307
	mov	rax, QWORD PTR -816[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8159:
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 1768[rax]
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING4FONTaSERS2_
	jmp	.L8209
.L8307:
	nop
.L8158:
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -832[rbp], rax
	mov	rax, QWORD PTR -832[rbp]
	mov	QWORD PTR -840[rbp], rax
	mov	rax, QWORD PTR -840[rbp]
	lea	rdx, .LC492[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -844[rbp], eax
	cmp	DWORD PTR -844[rbp], 0
	jne	.L8308
	mov	rax, QWORD PTR -840[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8162:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -856[rbp], rax
	mov	rax, QWORD PTR -856[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 106
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -864[rbp], rax
	cmp	QWORD PTR -864[rbp], 0
	je	.L8309
	jmp	[QWORD PTR -864[rbp]]
.L8309:
	nop
.L8164:
	mov	rax, QWORD PTR -856[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL9ID__set__Eu7INTEGER
	jmp	.L8209
.L8308:
	nop
.L8161:
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -872[rbp], rax
	mov	rax, QWORD PTR -872[rbp]
	mov	QWORD PTR -880[rbp], rax
	mov	rax, QWORD PTR -880[rbp]
	lea	rdx, .LC493[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -884[rbp], eax
	cmp	DWORD PTR -884[rbp], 0
	jne	.L8310
	mov	rax, QWORD PTR -880[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8167:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -896[rbp], rax
	mov	rax, QWORD PTR -896[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 107
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -904[rbp], rax
	cmp	QWORD PTR -904[rbp], 0
	je	.L8311
	jmp	[QWORD PTR -904[rbp]]
.L8311:
	nop
.L8169:
	mov	rax, QWORD PTR -896[rbp]
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	setne	al
	movzx	eax, al
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL14ISCHILD__set__Eb
	jmp	.L8209
.L8310:
	nop
.L8166:
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -912[rbp], rax
	mov	rax, QWORD PTR -912[rbp]
	mov	QWORD PTR -920[rbp], rax
	mov	rax, QWORD PTR -920[rbp]
	lea	rdx, .LC491[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -924[rbp], eax
	cmp	DWORD PTR -924[rbp], 0
	jne	.L8312
	mov	rax, QWORD PTR -920[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8172:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -936[rbp], rax
	mov	rax, QWORD PTR -936[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 108
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -944[rbp], rax
	cmp	QWORD PTR -944[rbp], 0
	je	.L8313
	jmp	[QWORD PTR -944[rbp]]
.L8313:
	nop
.L8174:
	mov	rax, QWORD PTR -936[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL16FORECOLOR__set__Eu7INTEGER
	jmp	.L8209
.L8312:
	nop
.L8171:
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -952[rbp], rax
	mov	rax, QWORD PTR -952[rbp]
	mov	QWORD PTR -960[rbp], rax
	mov	rax, QWORD PTR -960[rbp]
	lea	rdx, .LC168[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -964[rbp], eax
	cmp	DWORD PTR -964[rbp], 0
	jne	.L8314
	mov	rax, QWORD PTR -960[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8177:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL13PARENT__set__EPS2_
	jmp	.L8209
.L8314:
	nop
.L8176:
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -976[rbp], rax
	mov	rax, QWORD PTR -976[rbp]
	mov	QWORD PTR -984[rbp], rax
	mov	rax, QWORD PTR -984[rbp]
	lea	rdx, .LC490[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -988[rbp], eax
	cmp	DWORD PTR -988[rbp], 0
	jne	.L8315
	mov	rax, QWORD PTR -984[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8180:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -1000[rbp], rax
	mov	rax, QWORD PTR -1000[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 113
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1008[rbp], rax
	cmp	QWORD PTR -1008[rbp], 0
	je	.L8316
	jmp	[QWORD PTR -1008[rbp]]
.L8316:
	nop
.L8182:
	mov	rax, QWORD PTR -1000[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL19PARENTHANDLE__set__EP6HWND__
	jmp	.L8209
.L8315:
	nop
.L8179:
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -1016[rbp], rax
	mov	rax, QWORD PTR -1016[rbp]
	mov	QWORD PTR -1024[rbp], rax
	mov	rax, QWORD PTR -1024[rbp]
	lea	rdx, .LC497[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -1028[rbp], eax
	cmp	DWORD PTR -1028[rbp], 0
	jne	.L8317
	mov	rax, QWORD PTR -1024[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8185:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -1040[rbp], rax
	mov	rax, QWORD PTR -1040[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 115
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1048[rbp], rax
	cmp	QWORD PTR -1048[rbp], 0
	je	.L8318
	jmp	[QWORD PTR -1048[rbp]]
.L8318:
	nop
.L8187:
	mov	rax, QWORD PTR -1040[rbp]
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL13CHANGETABSTOPEb
	jmp	.L8209
.L8317:
	nop
.L8184:
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -1056[rbp], rax
	mov	rax, QWORD PTR -1056[rbp]
	mov	QWORD PTR -1064[rbp], rax
	mov	rax, QWORD PTR -1064[rbp]
	lea	rdx, .LC498[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -1068[rbp], eax
	cmp	DWORD PTR -1068[rbp], 0
	jne	.L8319
	mov	rax, QWORD PTR -1064[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8190:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 80
	mov	r8, QWORD PTR [rax]
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	r8
	jmp	.L8209
.L8319:
	nop
.L8189:
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -1080[rbp], rax
	mov	rax, QWORD PTR -1080[rbp]
	mov	QWORD PTR -1088[rbp], rax
	mov	rax, QWORD PTR -1088[rbp]
	lea	rdx, .LC341[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -1092[rbp], eax
	cmp	DWORD PTR -1092[rbp], 0
	jne	.L8320
	mov	rax, QWORD PTR -1088[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8193:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -1104[rbp], rax
	mov	rax, QWORD PTR -1104[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 117
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1112[rbp], rax
	cmp	QWORD PTR -1112[rbp], 0
	je	.L8321
	jmp	[QWORD PTR -1112[rbp]]
.L8321:
	nop
.L8195:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 96
	mov	r8, QWORD PTR [rax]
	mov	rax, QWORD PTR -1104[rbp]
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	r8
	jmp	.L8209
.L8320:
	nop
.L8192:
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -1120[rbp], rax
	mov	rax, QWORD PTR -1120[rbp]
	mov	QWORD PTR -1128[rbp], rax
	mov	rax, QWORD PTR -1128[rbp]
	lea	rdx, .LC494[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -1132[rbp], eax
	cmp	DWORD PTR -1132[rbp], 0
	jne	.L8322
	mov	rax, QWORD PTR -1128[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8198:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -1144[rbp], rax
	mov	rax, QWORD PTR -1144[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 118
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1152[rbp], rax
	cmp	QWORD PTR -1152[rbp], 0
	je	.L8323
	jmp	[QWORD PTR -1152[rbp]]
.L8323:
	nop
.L8200:
	mov	rax, QWORD PTR -1144[rbp]
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL15SHOWHINT__set__Eb
	jmp	.L8209
.L8322:
	nop
.L8197:
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -1160[rbp], rax
	mov	rax, QWORD PTR -1160[rbp]
	mov	QWORD PTR -1168[rbp], rax
	mov	rax, QWORD PTR -1168[rbp]
	lea	rdx, .LC495[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -1172[rbp], eax
	cmp	DWORD PTR -1172[rbp], 0
	jne	.L8324
	mov	rax, QWORD PTR -1168[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8203:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11HINT__set__ERw
	jmp	.L8209
.L8324:
	nop
.L8202:
	lea	rax, -1280[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -1184[rbp], rax
	mov	rax, QWORD PTR -1184[rbp]
	mov	QWORD PTR -1192[rbp], rax
	mov	rax, QWORD PTR -1192[rbp]
	lea	rdx, .LC496[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -1196[rbp], eax
	cmp	DWORD PTR -1196[rbp], 0
	jne	.L8325
	mov	rax, QWORD PTR -1192[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L8206:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -1208[rbp], rax
	mov	rax, QWORD PTR -1208[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 120
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1216[rbp], rax
	cmp	QWORD PTR -1216[rbp], 0
	je	.L8326
	jmp	[QWORD PTR -1216[rbp]]
.L8326:
	nop
.L8208:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 1760[rax]
	mov	rax, QWORD PTR -1208[rbp]
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR [rdx], al
	jmp	.L8209
.L8325:
	nop
.L8205:
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13WRITEPROPERTYER8FBSTRINGPv
	mov	BYTE PTR -1217[rbp], al
	movzx	eax, BYTE PTR -1217[rbp]
	mov	BYTE PTR -1218[rbp], al
	lea	rax, -1280[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L8062
.L8070:
.L8209:
	lea	rax, -1280[rbp]
	mov	rcx, rax
	call	fb_StrDelete
.L8064:
	mov	BYTE PTR -1218[rbp], 1
	nop
.L8062:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -1218[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC499:
	.ascii "ALLOWDROP\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL16ALLOWDROP__set__Eb;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL16ALLOWDROP__set__Eb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	BYTE PTR 24[rbp], al
.L8328:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC499[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 560[rax]
	movzx	eax, BYTE PTR 24[rbp]
	mov	BYTE PTR [rdx], al
	movsx	eax, BYTE PTR 24[rbp]
	mov	r8d, eax
	mov	edx, 16
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL13CHANGEEXSTYLEEu7INTEGERb
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8336
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	movzx	eax, BYTE PTR [rax]
	test	al, al
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L8331
.L8336:
	nop
.L8330:
	mov	QWORD PTR -8[rbp], 0
.L8331:
	cmp	QWORD PTR -8[rbp], 0
	je	.L8337
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11RECREATEWNDEv
	jmp	.L8334
.L8333:
.L8337:
	nop
.L8334:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS7CONTROL12CONTROLCOUNTEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL12CONTROLCOUNTEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC449[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L8339:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 1040[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L8340:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC500:
	.ascii "GETFORM\0"
	.align 2
.LC501:
	.ascii "F\0o\0r\0m\0\0\0"
	.align 2
.LC502:
	.ascii "U\0s\0e\0r\0C\0o\0n\0t\0r\0o\0l\0\0\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL7GETFORMEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL7GETFORMEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 144
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -104[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rcx, .LC500[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
.L8343:
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8358
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 32
	mov	rcx, rax
	call	WGET
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC501[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L8346
.L8358:
	nop
.L8345:
	mov	QWORD PTR -8[rbp], -1
.L8346:
	cmp	QWORD PTR -8[rbp], 0
	jne	.L8359
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 32
	mov	rcx, rax
	call	WGET
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	rdx, .LC502[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -76[rbp], eax
	cmp	DWORD PTR -76[rbp], 0
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -16[rbp], rax
	jmp	.L8349
.L8359:
	nop
.L8348:
	mov	QWORD PTR -16[rbp], -1
.L8349:
	cmp	QWORD PTR -16[rbp], 0
	je	.L8360
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR -104[rbp], rax
	jmp	.L8353
.L8360:
	nop
.L8351:
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL7GETFORMEv
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROLcvPvEv
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
.L8352:
	nop
.L8353:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -104[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC503:
	.ascii "TOPLEVELCONTROL\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL15TOPLEVELCONTROLEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL15TOPLEVELCONTROLEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -56[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC503[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L8362:
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jne	.L8369
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR -56[rbp], rax
	jmp	.L8366
.L8369:
	nop
.L8364:
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL15TOPLEVELCONTROLEv
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROLcvPvEv
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
.L8365:
	nop
.L8366:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -56[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC504:
	.ascii "BORDERSTYLE\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL18BORDERSTYLE__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL18BORDERSTYLE__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L8371:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC504[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 544[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	cmp	QWORD PTR 24[rbp], 0
	setne	al
	movzx	eax, al
	mov	r8d, eax
	mov	edx, 512
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL13CHANGEEXSTYLEEu7INTEGERb
.L8372:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS7CONTROL12STYLE__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL12STYLE__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -48[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC200[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L8374:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8380
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	edx, -16
	mov	rcx, rax
	call	GetWindowLongW
	mov	DWORD PTR -36[rbp], eax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 592[rax]
	mov	eax, DWORD PTR -36[rbp]
	cdqe
	mov	QWORD PTR [rdx], rax
	jmp	.L8377
.L8376:
.L8380:
	nop
.L8377:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 592[rax]
	mov	QWORD PTR -48[rbp], rax
	nop
.L8378:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -48[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS7CONTROL12STYLE__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL12STYLE__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L8382:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC200[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 592[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8387
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 592
	mov	rax, QWORD PTR [rax]
	mov	edx, eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	r8d, edx
	mov	edx, -16
	mov	rcx, rax
	call	SetWindowLongW
	jmp	.L8386
.L8384:
.L8385:
.L8387:
	nop
.L8386:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC505:
	.ascii "EXSTYLE\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL14EXSTYLE__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL14EXSTYLE__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -48[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC505[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L8389:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8395
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	edx, -20
	mov	rcx, rax
	call	GetWindowLongW
	mov	DWORD PTR -36[rbp], eax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 552[rax]
	mov	eax, DWORD PTR -36[rbp]
	cdqe
	mov	QWORD PTR [rdx], rax
	jmp	.L8392
.L8391:
.L8395:
	nop
.L8392:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 552[rax]
	mov	QWORD PTR -48[rbp], rax
	nop
.L8393:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -48[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS7CONTROL14EXSTYLE__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL14EXSTYLE__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L8397:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC505[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 552[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
.L8398:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC506:
	.ascii "ISCHILD\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL14ISCHILD__set__Eb;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL14ISCHILD__set__Eb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	BYTE PTR 24[rbp], al
.L8400:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC506[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 968[rax]
	movzx	eax, BYTE PTR 24[rbp]
	mov	BYTE PTR [rdx], al
	movsx	eax, BYTE PTR 24[rbp]
	mov	r8d, eax
	mov	edx, 1073741824
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8404
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11RECREATEWNDEv
	jmp	.L8403
.L8402:
.L8404:
	nop
.L8403:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC507:
	.ascii "ID\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL9ID__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL9ID__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L8406:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC507[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 64[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
.L8407:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC508:
	.ascii "CONTROLINDEX\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL19CONTROLINDEX__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL19CONTROLINDEX__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -48[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC508[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L8409:
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8416
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 16[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL7INDEXOFEPS2_
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	jmp	.L8413
.L8416:
	nop
.L8411:
	mov	QWORD PTR -48[rbp], -1
.L8412:
	nop
.L8413:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -48[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS7CONTROL19CONTROLINDEX__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL19CONTROLINDEX__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L8418:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC508[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8423
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 128[rax]
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -40[rbp]
	mov	r8, rdx
	mov	rdx, QWORD PTR 16[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL18CHANGECONTROLINDEXEPS2_u7INTEGER
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8, -1
	mov	rdx, -1
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL12REQUESTALIGNEu7INTEGERS3_bPS2_
	jmp	.L8422
.L8420:
.L8421:
.L8423:
	nop
.L8422:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS7CONTROL11TEXT__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL11TEXT__get__Ev:
	push	rbp
	mov	rbp, rsp
	add	rsp, -128
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -80[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC268[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L8425:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8431
	mov	QWORD PTR -88[rbp], 0
	mov	r9d, 0
	mov	r8d, 0
	mov	edx, 14
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL7PERFORMEjyx
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	rdx, 1[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 600
	mov	rcx, rax
	call	_ZN7USTRING6RESIZEEu7INTEGER
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 600
	mov	rcx, rax
	call	_ZN7USTRING4VPTREv
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	ecx, 1[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR -48[rbp]
	mov	r8d, ecx
	mov	rcx, rax
	call	GetWindowTextW
	jmp	.L8428
.L8427:
.L8431:
	nop
.L8428:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 600
	mov	rcx, rax
	call	_ZN7USTRING4VPTREv
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -72[rbp], rax
	lea	rax, -72[rbp]
	mov	rcx, rax
	call	WGET
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -80[rbp], rax
	nop
.L8429:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -80[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS7CONTROL11TEXT__set__ERw;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL11TEXT__set__ERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L8433:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC268[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 600[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	call	_ZN7USTRINGaSERw
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8438
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 600
	mov	rcx, rax
	call	_ZN7USTRING4VPTREv
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	SetWindowTextW
	jmp	.L8437
.L8435:
.L8436:
.L8438:
	nop
.L8437:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC509:
	.ascii "HINT\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL11HINT__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL11HINT__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -48[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC509[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L8440:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 632
	mov	rcx, rax
	call	WGET
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	nop
.L8441:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -48[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS7CONTROL11HINT__set__ERw;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL11HINT__set__ERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L8444:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC509[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 632[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	call	WLET
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8455
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1200
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8456
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 464
	mov	rdx, rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1200
	mov	rax, QWORD PTR [rax]
	mov	r9, rdx
	mov	r8d, 0
	mov	edx, 1077
	mov	rcx, rax
	call	SendMessageW
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 512[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 632[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 464
	mov	rdx, rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1200
	mov	rax, QWORD PTR [rax]
	mov	r9, rdx
	mov	r8d, 0
	mov	edx, 1081
	mov	rcx, rax
	call	SendMessageW
	jmp	.L8453
.L8456:
	nop
.L8448:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 640
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L8457
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12ALLOCATEHINTEv
	jmp	.L8453
.L8446:
.L8450:
.L8451:
.L8452:
.L8455:
	nop
	jmp	.L8453
.L8457:
	nop
.L8453:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC510:
	.ascii "ALIGN\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL12ALIGN__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL12ALIGN__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC510[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L8459:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 648[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L8460:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS7CONTROL12ALIGN__set__ENS1_9DOCKSTYLEE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL12ALIGN__set__ENS1_9DOCKSTYLEE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L8463:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC510[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 648[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8467
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8, -1
	mov	rdx, -1
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL12REQUESTALIGNEu7INTEGERS3_bPS2_
	jmp	.L8466
.L8465:
.L8467:
	nop
.L8466:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC511:
	.ascii "CLIENTWIDTH\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL11CLIENTWIDTHEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL11CLIENTWIDTHEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -48[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC511[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L8469:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8475
	lea	rax, -64[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	lea	rdx, -64[rbp]
	mov	rcx, rax
	call	GetClientRect
	lea	rax, -64[rbp]
	add	rax, 8
	mov	eax, DWORD PTR [rax]
	cvtsi2ss	xmm0, eax
	call	UNSCALEX
	movd	eax, xmm0
	mov	DWORD PTR -36[rbp], eax
	mov	eax, DWORD PTR -36[rbp]
	movd	xmm0, eax
	call	nearbyintf
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 656[rax]
	cvttss2si	rax, xmm0
	mov	QWORD PTR [rdx], rax
	jmp	.L8472
.L8471:
.L8475:
	nop
.L8472:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 656[rax]
	mov	QWORD PTR -48[rbp], rax
	nop
.L8473:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -48[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC512:
	.ascii "CLIENTHEIGHT\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL12CLIENTHEIGHTEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL12CLIENTHEIGHTEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -48[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC512[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L8477:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8483
	lea	rax, -64[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	lea	rdx, -64[rbp]
	mov	rcx, rax
	call	GetClientRect
	lea	rax, -64[rbp]
	add	rax, 12
	mov	eax, DWORD PTR [rax]
	cvtsi2ss	xmm0, eax
	call	UNSCALEY
	movd	eax, xmm0
	mov	DWORD PTR -36[rbp], eax
	mov	eax, DWORD PTR -36[rbp]
	movd	xmm0, eax
	call	nearbyintf
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 664[rax]
	cvttss2si	rax, xmm0
	mov	QWORD PTR [rdx], rax
	jmp	.L8480
.L8479:
.L8483:
	nop
.L8480:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 664[rax]
	mov	QWORD PTR -48[rbp], rax
	nop
.L8481:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -48[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC513:
	.ascii "SHOWHINT\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL15SHOWHINT__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL15SHOWHINT__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	BYTE PTR -33[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC513[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L8485:
	mov	rax, QWORD PTR 16[rbp]
	movzx	eax, BYTE PTR 640[rax]
	mov	BYTE PTR -33[rbp], al
	nop
.L8486:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -33[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS7CONTROL15SHOWHINT__set__Eb;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL15SHOWHINT__set__Eb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	BYTE PTR 24[rbp], al
.L8489:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC513[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 640[rax]
	movzx	eax, BYTE PTR 24[rbp]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8496
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1200
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8497
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 640
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	neg	eax
	movsx	rdx, eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1200
	mov	rax, QWORD PTR [rax]
	mov	r9d, 0
	mov	r8, rdx
	mov	edx, 1025
	mov	rcx, rax
	call	SendMessageW
	jmp	.L8495
.L8491:
.L8493:
.L8494:
.L8496:
	nop
	jmp	.L8495
.L8497:
	nop
.L8495:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS7CONTROL16BACKCOLOR__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL16BACKCOLOR__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC284[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L8499:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 680[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L8500:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS7CONTROL16BACKCOLOR__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL16BACKCOLOR__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L8503:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC284[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 680[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	ecx, eax
	call	GETRED
	mov	QWORD PTR -40[rbp], rax
	cvtsi2sd	xmm0, QWORD PTR -40[rbp]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 688
	movsd	xmm1, QWORD PTR .LC514[rip]
	divsd	xmm0, xmm1
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR 24[rbp]
	mov	ecx, eax
	call	GETGREEN
	mov	QWORD PTR -48[rbp], rax
	cvtsi2sd	xmm0, QWORD PTR -48[rbp]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 696
	movsd	xmm1, QWORD PTR .LC514[rip]
	divsd	xmm0, xmm1
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR 24[rbp]
	mov	ecx, eax
	call	GETBLUE
	mov	QWORD PTR -56[rbp], rax
	cvtsi2sd	xmm0, QWORD PTR -56[rbp]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 704
	movsd	xmm1, QWORD PTR .LC514[rip]
	divsd	xmm0, xmm1
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 680
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 16[rbp]
	lea	rcx, 1072[rdx]
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING5BRUSH12COLOR__set__Eu7INTEGER
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 680
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 16[rbp]
	lea	rcx, 1208[rdx]
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING6CANVAS16BACKCOLOR__set__Eu7INTEGER
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL10INVALIDATEEv
.L8504:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC515:
	.ascii "FORECOLOR\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL16FORECOLOR__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL16FORECOLOR__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L8506:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC515[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 712[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	ecx, eax
	call	GETRED
	mov	QWORD PTR -40[rbp], rax
	cvtsi2sd	xmm0, QWORD PTR -40[rbp]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 720
	movsd	xmm1, QWORD PTR .LC514[rip]
	divsd	xmm0, xmm1
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR 24[rbp]
	mov	ecx, eax
	call	GETGREEN
	mov	QWORD PTR -48[rbp], rax
	cvtsi2sd	xmm0, QWORD PTR -48[rbp]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 728
	movsd	xmm1, QWORD PTR .LC514[rip]
	divsd	xmm0, xmm1
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR 24[rbp]
	mov	ecx, eax
	call	GETBLUE
	mov	QWORD PTR -56[rbp], rax
	cvtsi2sd	xmm0, QWORD PTR -56[rbp]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 736
	movsd	xmm1, QWORD PTR .LC514[rip]
	divsd	xmm0, xmm1
	movsd	QWORD PTR [rax], xmm0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 712
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 16[rbp]
	lea	rcx, 1768[rdx]
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING4FONT12COLOR__set__Eu7INTEGER
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 712
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 16[rbp]
	lea	rcx, 1584[rdx]
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING4FONT12COLOR__set__Eu7INTEGER
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL10INVALIDATEEv
.L8507:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS7CONTROL13PARENT__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL13PARENT__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC181[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L8509:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 128[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L8510:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS7CONTROL13PARENT__set__EPS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL13PARENT__set__EPS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L8513:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC181[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 24[rbp]
	cmp	rdx, rax
	je	.L8520
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 128[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	cmp	QWORD PTR 24[rbp], 0
	je	.L8521
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	sub	rax, -128
	mov	r9, QWORD PTR [rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, -1
	mov	rdx, QWORD PTR 16[rbp]
	mov	rcx, rax
	call	r9
	jmp	.L8519
.L8515:
.L8517:
.L8518:
.L8520:
	nop
	jmp	.L8519
.L8521:
	nop
.L8519:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC516:
	.ascii "STYLEEXISTS\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL11STYLEEXISTSEu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL11STYLEEXISTSEu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	BYTE PTR -41[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC516[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L8523:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12STYLE__get__Ev
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	and	rax, QWORD PTR 24[rbp]
	cmp	QWORD PTR 24[rbp], rax
	sete	al
	mov	BYTE PTR -41[rbp], al
	nop
.L8524:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -41[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC517:
	.ascii "CHANGESTYLE\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	eax, r8d
	mov	BYTE PTR 32[rbp], al
.L8527:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC517[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	cmp	BYTE PTR 32[rbp], 0
	je	.L8538
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12STYLE__get__Ev
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	and	rax, QWORD PTR 24[rbp]
	cmp	QWORD PTR 24[rbp], rax
	je	.L8539
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12STYLE__get__Ev
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	or	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12STYLE__set__Eu7INTEGER
	jmp	.L8535
.L8539:
	nop
.L8531:
	jmp	.L8535
.L8538:
	nop
.L8529:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12STYLE__get__Ev
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	and	rax, QWORD PTR 24[rbp]
	cmp	QWORD PTR 24[rbp], rax
	jne	.L8540
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12STYLE__get__Ev
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	not	rax
	and	rax, QWORD PTR -64[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12STYLE__set__Eu7INTEGER
	jmp	.L8535
.L8532:
.L8534:
.L8540:
	nop
.L8535:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC518:
	.ascii "CHANGEEXSTYLE\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL13CHANGEEXSTYLEEu7INTEGERb;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL13CHANGEEXSTYLEEu7INTEGERb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	eax, r8d
	mov	BYTE PTR 32[rbp], al
.L8542:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC518[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	cmp	BYTE PTR 32[rbp], 0
	je	.L8553
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL14EXSTYLE__get__Ev
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	and	rax, QWORD PTR 24[rbp]
	cmp	QWORD PTR 24[rbp], rax
	je	.L8554
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL14EXSTYLE__get__Ev
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	or	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL14EXSTYLE__set__Eu7INTEGER
	jmp	.L8550
.L8554:
	nop
.L8546:
	jmp	.L8550
.L8553:
	nop
.L8544:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL14EXSTYLE__get__Ev
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	and	rax, QWORD PTR 24[rbp]
	cmp	QWORD PTR 24[rbp], rax
	jne	.L8555
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL14EXSTYLE__get__Ev
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	not	rax
	and	rax, QWORD PTR -64[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL14EXSTYLE__set__Eu7INTEGER
	jmp	.L8550
.L8547:
.L8549:
.L8555:
	nop
.L8550:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC519:
	.ascii "CHANGECONTROLINDEX\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL18CHANGECONTROLINDEXEPS2_u7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL18CHANGECONTROLINDEXEPS2_u7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 224
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
.L8557:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	lea	rcx, .LC519[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL7INDEXOFEPS2_
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	js	.L8602
	mov	rax, QWORD PTR -80[rbp]
	cmp	rax, QWORD PTR 32[rbp]
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L8560
.L8602:
	nop
.L8559:
	mov	QWORD PTR -8[rbp], 0
.L8560:
	cmp	QWORD PTR -8[rbp], 0
	je	.L8603
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1040
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	cmp	QWORD PTR 32[rbp], rax
	setle	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -16[rbp], rax
	jmp	.L8563
.L8603:
	nop
.L8562:
	mov	QWORD PTR -16[rbp], 0
.L8563:
	cmp	QWORD PTR -16[rbp], 0
	je	.L8604
	mov	rax, QWORD PTR 32[rbp]
	cmp	rax, QWORD PTR -80[rbp]
	jge	.L8605
	mov	rax, QWORD PTR -80[rbp]
	sub	rax, 1
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -88[rbp], rax
	jmp	.L8568
.L8608:
	nop
.L8569:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 686
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -120[rbp], rax
	cmp	QWORD PTR -120[rbp], 0
	je	.L8606
	jmp	[QWORD PTR -120[rbp]]
.L8606:
	nop
.L8571:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 686
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -136[rbp], rax
	cmp	QWORD PTR -136[rbp], 0
	je	.L8607
	jmp	[QWORD PTR -136[rbp]]
.L8607:
	nop
.L8573:
	mov	rax, QWORD PTR -24[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -112[rbp]
	add	rax, rdx
	mov	rdx, QWORD PTR -24[rbp]
	sal	rdx, 3
	lea	rcx, 8[rdx]
	mov	rdx, QWORD PTR -128[rbp]
	add	rdx, rcx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
.L8574:
	sub	QWORD PTR -24[rbp], 1
.L8568:
	mov	rax, QWORD PTR -24[rbp]
	cmp	rax, QWORD PTR -88[rbp]
	jge	.L8608
	nop
.L8575:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 688
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -104[rbp], rax
	cmp	QWORD PTR -104[rbp], 0
	je	.L8609
	jmp	[QWORD PTR -104[rbp]]
.L8609:
	nop
.L8577:
	mov	rax, QWORD PTR 32[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -96[rbp]
	add	rdx, rax
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	jmp	.L8590
.L8605:
	nop
.L8567:
	mov	rax, QWORD PTR -80[rbp]
	add	rax, 1
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -144[rbp], rax
	jmp	.L8578
.L8612:
	nop
.L8579:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 691
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -176[rbp], rax
	cmp	QWORD PTR -176[rbp], 0
	je	.L8610
	jmp	[QWORD PTR -176[rbp]]
.L8610:
	nop
.L8581:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 691
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -192[rbp], rax
	cmp	QWORD PTR -192[rbp], 0
	je	.L8611
	jmp	[QWORD PTR -192[rbp]]
.L8611:
	nop
.L8583:
	mov	rax, QWORD PTR -32[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -168[rbp]
	add	rax, rdx
	mov	rdx, QWORD PTR -32[rbp]
	sal	rdx, 3
	lea	rcx, -8[rdx]
	mov	rdx, QWORD PTR -184[rbp]
	add	rdx, rcx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
.L8584:
	add	QWORD PTR -32[rbp], 1
.L8578:
	mov	rax, QWORD PTR -32[rbp]
	cmp	rax, QWORD PTR -144[rbp]
	jle	.L8612
	nop
.L8585:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 693
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -160[rbp], rax
	cmp	QWORD PTR -160[rbp], 0
	je	.L8613
	jmp	[QWORD PTR -160[rbp]]
.L8613:
	nop
.L8587:
	mov	rax, QWORD PTR 32[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -152[rbp]
	add	rdx, rax
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	jmp	.L8590
.L8565:
.L8588:
.L8589:
.L8604:
	nop
.L8590:
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC520:
	.ascii "CHANGETABINDEX\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL14CHANGETABINDEXEu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL14CHANGETABINDEXEu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 240
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L8615:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	lea	rcx, .LC520[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 928[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8655
	nop
.L8617:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL7GETFORMEv
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	QWORD PTR -200[rbp], 0
	cmp	QWORD PTR -80[rbp], 0
	je	.L8656
	mov	rax, QWORD PTR -80[rbp]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL11GETCONTROLSEv
	mov	rax, QWORD PTR -88[rbp]
	add	rax, 936
	mov	rcx, rax
	call	_ZN11INTEGERLIST5CLEAREv
	mov	QWORD PTR -208[rbp], 0
	mov	QWORD PTR -16[rbp], 0
	mov	rax, QWORD PTR -88[rbp]
	add	rax, 1024
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -96[rbp], rax
	jmp	.L8620
.L8661:
	nop
.L8621:
	mov	rax, QWORD PTR -88[rbp]
	lea	rcx, 1024[rax]
	mov	rax, QWORD PTR -16[rbp]
	mov	rdx, rax
	call	_ZN4LIST11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	cmp	QWORD PTR 16[rbp], rax
	je	.L8657
	mov	rax, QWORD PTR -200[rbp]
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 712
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -176[rbp], rax
	cmp	QWORD PTR -176[rbp], 0
	je	.L8658
	jmp	[QWORD PTR -176[rbp]]
.L8658:
	nop
.L8625:
	mov	rax, QWORD PTR -168[rbp]
	add	rax, 928
	mov	rax, QWORD PTR [rax]
	cmp	rax, -2
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -24[rbp], rax
	jmp	.L8626
.L8657:
	nop
.L8623:
	mov	QWORD PTR -24[rbp], 0
.L8626:
	cmp	QWORD PTR -24[rbp], 0
	je	.L8659
	mov	rax, QWORD PTR -200[rbp]
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 712
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -192[rbp], rax
	cmp	QWORD PTR -192[rbp], 0
	je	.L8660
	jmp	[QWORD PTR -192[rbp]]
.L8660:
	nop
.L8630:
	mov	r8, QWORD PTR -200[rbp]
	mov	rax, QWORD PTR -184[rbp]
	add	rax, 928
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR -88[rbp]
	lea	rcx, 936[rdx]
	mov	rdx, rax
	call	_ZN11INTEGERLIST3ADDEu7INTEGERPv
	jmp	.L8631
.L8628:
.L8659:
	nop
.L8631:
	add	QWORD PTR -16[rbp], 1
.L8620:
	mov	rax, QWORD PTR -16[rbp]
	cmp	rax, QWORD PTR -96[rbp]
	jle	.L8661
	nop
.L8632:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 928
	mov	rax, QWORD PTR [rax]
	cmp	rax, -1
	je	.L8662
	mov	rax, QWORD PTR -88[rbp]
	add	rax, 936
	mov	rcx, rax
	call	_ZN11INTEGERLIST12COUNT__get__Ev
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 928
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR -104[rbp], rax
	setl	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L8635
.L8662:
	nop
.L8634:
	mov	QWORD PTR -8[rbp], -1
.L8635:
	cmp	QWORD PTR -8[rbp], 0
	je	.L8663
	mov	rax, QWORD PTR -88[rbp]
	add	rax, 936
	mov	rcx, rax
	call	_ZN11INTEGERLIST12COUNT__get__Ev
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 928[rax]
	mov	rax, QWORD PTR -112[rbp]
	mov	QWORD PTR [rdx], rax
	jmp	.L8637
.L8663:
	nop
.L8637:
	mov	rax, QWORD PTR -88[rbp]
	add	rax, 936
	mov	rcx, rax
	call	_ZN11INTEGERLIST4SORTEv
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 928
	mov	rax, QWORD PTR [rax]
	cmp	rax, -2
	je	.L8664
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 928
	mov	r8, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 928
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR -88[rbp]
	lea	rcx, 936[rdx]
	mov	r9, QWORD PTR 16[rbp]
	mov	rdx, rax
	call	_ZN11INTEGERLIST6INSERTEu7INTEGERS0_Pv
	jmp	.L8639
.L8664:
	nop
.L8639:
	mov	QWORD PTR -32[rbp], 0
	mov	rax, QWORD PTR -88[rbp]
	add	rax, 936
	mov	rcx, rax
	call	_ZN11INTEGERLIST12COUNT__get__Ev
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	sub	rax, 1
	mov	QWORD PTR -128[rbp], rax
	jmp	.L8640
.L8666:
	nop
.L8641:
	mov	rax, QWORD PTR -88[rbp]
	lea	rcx, 936[rax]
	mov	rax, QWORD PTR -32[rbp]
	mov	rdx, rax
	call	_ZN11INTEGERLIST13OBJECT__get__Eu7INTEGER
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 719
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -152[rbp], rax
	cmp	QWORD PTR -152[rbp], 0
	je	.L8665
	jmp	[QWORD PTR -152[rbp]]
.L8665:
	nop
.L8643:
	mov	rax, QWORD PTR -144[rbp]
	lea	rdx, 928[rax]
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR [rdx], rax
.L8644:
	add	QWORD PTR -32[rbp], 1
.L8640:
	mov	rax, QWORD PTR -32[rbp]
	cmp	rax, QWORD PTR -128[rbp]
	jle	.L8666
	jmp	.L8647
.L8645:
.L8618:
.L8646:
.L8655:
	nop
	jmp	.L8647
.L8656:
	nop
.L8647:
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC521:
	.ascii "PARENTHANDLE\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL19PARENTHANDLE__set__EP6HWND__;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL19PARENTHANDLE__set__EP6HWND__:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L8668:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC521[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 416[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
.L8669:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC522:
	.ascii "CHANGETABSTOP\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL13CHANGETABSTOPEb;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL13CHANGETABSTOPEb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	BYTE PTR 24[rbp], al
.L8671:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC522[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 921[rax]
	movzx	eax, BYTE PTR 24[rbp]
	mov	BYTE PTR [rdx], al
	movsx	eax, BYTE PTR 24[rbp]
	mov	r8d, eax
	mov	edx, 65536
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
.L8672:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC523:
	.ascii "GROUPED\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL14GROUPED__set__Eb;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL14GROUPED__set__Eb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	BYTE PTR 24[rbp], al
.L8674:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC523[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 920[rax]
	movzx	eax, BYTE PTR 24[rbp]
	mov	BYTE PTR [rdx], al
	movsx	eax, BYTE PTR 24[rbp]
	mov	r8d, eax
	mov	edx, 131072
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
.L8675:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS7CONTROL14ENABLED__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL14ENABLED__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	BYTE PTR -37[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC359[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L8677:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8682
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	IsWindowEnabled
	mov	DWORD PTR -36[rbp], eax
	cmp	DWORD PTR -36[rbp], 0
	setne	dl
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 969
	mov	BYTE PTR [rax], dl
	jmp	.L8679
.L8682:
	nop
.L8679:
	mov	rax, QWORD PTR 16[rbp]
	movzx	eax, BYTE PTR 969[rax]
	mov	BYTE PTR -37[rbp], al
	nop
.L8680:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -37[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS7CONTROL14ENABLED__set__Eb;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL14ENABLED__set__Eb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	BYTE PTR 24[rbp], al
.L8684:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC359[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 969[rax]
	movzx	eax, BYTE PTR 24[rbp]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8688
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 969
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	EnableWindow
	jmp	.L8687
.L8686:
.L8688:
	nop
.L8687:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS7CONTROL14VISIBLE__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL14VISIBLE__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	BYTE PTR -37[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC84[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L8690:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8695
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	IsWindowVisible
	mov	DWORD PTR -36[rbp], eax
	cmp	DWORD PTR -36[rbp], 0
	setne	dl
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 970
	mov	BYTE PTR [rax], dl
	jmp	.L8692
.L8695:
	nop
.L8692:
	mov	rax, QWORD PTR 16[rbp]
	movzx	eax, BYTE PTR 970[rax]
	mov	BYTE PTR -37[rbp], al
	nop
.L8693:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -37[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS7CONTROL14VISIBLE__set__Eb;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL14VISIBLE__set__Eb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	BYTE PTR 24[rbp], al
.L8697:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC84[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 970[rax]
	movzx	eax, BYTE PTR 24[rbp]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L8716
	cmp	BYTE PTR 24[rbp], 0
	setne	al
	mov	BYTE PTR -1[rbp], al
	jmp	.L8700
.L8716:
	nop
.L8699:
	mov	BYTE PTR -1[rbp], 1
.L8700:
	cmp	BYTE PTR -1[rbp], 0
	je	.L8717
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	sete	al
	movzx	eax, al
	neg	eax
	mov	edx, eax
	movsx	eax, BYTE PTR 24[rbp]
	neg	eax
	and	eax, edx
	test	eax, eax
	je	.L8718
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L8705
.L8704:
.L8718:
	nop
.L8705:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8719
	cmp	BYTE PTR 24[rbp], 0
	je	.L8720
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	edx, 5
	mov	rcx, rax
	call	ShowWindow
	jmp	.L8713
.L8720:
	nop
.L8708:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	edx, 0
	mov	rcx, rax
	call	ShowWindow
	jmp	.L8713
.L8702:
.L8709:
.L8710:
.L8711:
.L8712:
.L8717:
	nop
	jmp	.L8713
.L8719:
	nop
.L8713:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC524:
	.ascii "SHOW\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL4SHOWEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL4SHOWEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L8722:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC524[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 96
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
.L8723:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC525:
	.ascii "HIDE\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL4HIDEEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL4HIDEEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L8725:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC525[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 96
	mov	rax, QWORD PTR [rax]
	mov	edx, 0
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
.L8726:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC526:
	.ascii "SETDARK\0"
	.align 8
.LC527:
	.ascii "D\0a\0r\0k\0M\0o\0d\0e\0_\0E\0x\0p\0l\0o\0r\0e\0r\0\0\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL7SETDARKEb;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL7SETDARKEb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	BYTE PTR 24[rbp], al
.L8728:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC526[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 536[rax]
	movzx	eax, BYTE PTR 24[rbp]
	mov	BYTE PTR [rdx], al
	cmp	BYTE PTR 24[rbp], 0
	je	.L8746
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 672
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 680
	mov	rax, QWORD PTR [rax]
	cmp	rdx, rax
	jne	.L8747
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 1144[rax]
	mov	rax, QWORD PTR HBRBKGND$[rip]
	mov	QWORD PTR [rdx], rax
	jmp	.L8733
.L8732:
.L8747:
	nop
.L8733:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	r8d, 0
	lea	rdx, .LC527[rip]
	mov	rcx, rax
	call	SetWindowTheme
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1200
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8748
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1200
	mov	rax, QWORD PTR [rax]
	mov	r8d, 0
	lea	rdx, .LC527[rip]
	mov	rcx, rax
	call	SetWindowTheme
	jmp	.L8741
.L8748:
	nop
.L8735:
	jmp	.L8741
.L8746:
	nop
.L8730:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	r8d, 0
	mov	edx, 0
	mov	rcx, rax
	call	SetWindowTheme
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1200
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8749
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1200
	mov	rax, QWORD PTR [rax]
	mov	r8d, 0
	mov	edx, 0
	mov	rcx, rax
	call	SetWindowTheme
	jmp	.L8738
.L8749:
	nop
.L8738:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 680
	mov	rax, QWORD PTR [rax]
	cmp	rax, -1
	jne	.L8750
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1144
	mov	QWORD PTR [rax], 0
	jmp	.L8741
.L8750:
	nop
.L8740:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 680
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 16[rbp]
	lea	rcx, 1072[rdx]
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING5BRUSH12COLOR__set__Eu7INTEGER
.L8736:
.L8741:
	lea	rax, G_DARKMODEENABLED$[rip]
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	ALLOWDARKMODEFORWINDOW
.L8742:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC528:
	.ascii "CREATEWND\0"
	.align 2
.LC529:
	.ascii "W\0e\0b\0B\0r\0o\0w\0s\0e\0r\0\0\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL9CREATEWNDEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL9CREATEWNDEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 1264
	mov	QWORD PTR 16[rbp], rcx
.L8752:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	QWORD PTR -96[rbp], rax
	lea	rcx, .LC528[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	SCALEX
	movd	eax, xmm0
	mov	DWORD PTR -116[rbp], eax
	mov	eax, DWORD PTR -116[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	eax, xmm0
	mov	DWORD PTR -28[rbp], eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	SCALEY
	movd	eax, xmm0
	mov	DWORD PTR -120[rbp], eax
	mov	eax, DWORD PTR -120[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	eax, xmm0
	mov	DWORD PTR -32[rbp], eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 96
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	SCALEX
	movd	eax, xmm0
	mov	DWORD PTR -124[rbp], eax
	mov	eax, DWORD PTR -124[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	eax, xmm0
	mov	DWORD PTR -36[rbp], eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	SCALEY
	movd	eax, xmm0
	mov	DWORD PTR -128[rbp], eax
	mov	eax, DWORD PTR -128[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	eax, xmm0
	mov	DWORD PTR -40[rbp], eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jne	.L8925
	nop
.L8754:
	mov	QWORD PTR -824[rbp], 0
	mov	QWORD PTR -48[rbp], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12STYLE__get__Ev
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	and	eax, 1073741824
	test	rax, rax
	je	.L8926
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8927
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	mov	QWORD PTR -824[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL12CONTROLCOUNTEv
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 64
	mov	rdx, QWORD PTR -152[rbp]
	add	rdx, 1000
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 64[rax]
	mov	QWORD PTR -48[rbp], rax
	jmp	.L8760
.L8927:
	nop
.L8759:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 400
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	setne	al
	movzx	eax, al
	neg	eax
	test	eax, eax
	je	.L8928
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 400
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -160[rbp], rax
	cmp	QWORD PTR -160[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -56[rbp], rax
	jmp	.L8763
.L8928:
	nop
.L8762:
	mov	QWORD PTR -56[rbp], 0
.L8763:
	cmp	QWORD PTR -56[rbp], 0
	je	.L8929
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 400
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -824[rbp], rax
	jmp	.L8760
.L8929:
	nop
.L8765:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 416
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8930
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 416[rax]
	mov	QWORD PTR -824[rbp], rax
	jmp	.L8760
.L8930:
	nop
.L8767:
	jmp	.L8888
.L8760:
	jmp	.L8768
.L8926:
	nop
.L8757:
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8931
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 128[rax]
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 877
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -184[rbp], rax
	cmp	QWORD PTR -184[rbp], 0
	je	.L8932
	jmp	[QWORD PTR -184[rbp]]
.L8932:
	nop
.L8772:
	mov	rax, QWORD PTR -176[rbp]
	add	rax, 424
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8933
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 128[rax]
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -192[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 878
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -200[rbp], rax
	cmp	QWORD PTR -200[rbp], 0
	je	.L8934
	jmp	[QWORD PTR -200[rbp]]
.L8934:
	nop
.L8776:
	mov	rax, QWORD PTR -192[rbp]
	mov	rax, QWORD PTR 424[rax]
	mov	QWORD PTR -824[rbp], rax
	nop
.L8777:
	jmp	.L8781
.L8933:
	nop
.L8774:
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR -208[rbp]
	mov	QWORD PTR -824[rbp], rax
	jmp	.L8781
.L8931:
	nop
.L8770:
	mov	QWORD PTR -824[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 400
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8935
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 400
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR -216[rbp]
	mov	QWORD PTR -824[rbp], rax
	jmp	.L8781
.L8778:
.L8780:
.L8935:
	nop
.L8781:
	mov	QWORD PTR -48[rbp], 0
.L8768:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 584[rax]
	mov	QWORD PTR -224[rbp], rax
	cmp	QWORD PTR -224[rbp], 0
	jne	.L8936
	nop
.L8782:
	jmp	.L8797
.L8936:
	nop
.L8783:
	cmp	QWORD PTR -224[rbp], 1
	je	.L8937
	nop
.L8785:
	cmp	QWORD PTR -224[rbp], 4
	jne	.L8938
	jmp	.L8786
.L8937:
	nop
.L8786:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 584
	mov	rax, QWORD PTR [rax]
	cmp	rax, 4
	jne	.L8939
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -64[rbp], rax
	jmp	.L8790
.L8939:
	nop
.L8789:
	mov	QWORD PTR -64[rbp], 0
.L8790:
	cmp	QWORD PTR -64[rbp], 0
	je	.L8940
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 128[rax]
	mov	QWORD PTR -232[rbp], rax
	mov	rax, QWORD PTR -232[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT11LEFT__get__Ev
	mov	QWORD PTR -240[rbp], rax
	cvtsi2ss	xmm0, QWORD PTR -240[rbp]
	call	SCALEX
	movd	eax, xmm0
	mov	DWORD PTR -244[rbp], eax
	mov	rax, QWORD PTR -232[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12WIDTH__get__Ev
	mov	QWORD PTR -256[rbp], rax
	cvtsi2ss	xmm0, QWORD PTR -256[rbp]
	call	SCALEX
	movd	eax, xmm0
	mov	DWORD PTR -260[rbp], eax
	cvtsi2ss	xmm1, DWORD PTR -36[rbp]
	movss	xmm0, DWORD PTR -260[rbp]
	subss	xmm0, xmm1
	call	nearbyintf
	cvttss2si	rax, xmm0
	mov	rdx, rax
	shr	rdx, 63
	add	rax, rdx
	sar	rax
	cvtsi2ss	xmm0, rax
	addss	xmm0, DWORD PTR -244[rbp]
	call	nearbyintf
	cvttss2si	eax, xmm0
	mov	DWORD PTR -28[rbp], eax
	mov	rax, QWORD PTR -232[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT10TOP__get__Ev
	mov	QWORD PTR -272[rbp], rax
	cvtsi2ss	xmm0, QWORD PTR -272[rbp]
	call	SCALEY
	movd	eax, xmm0
	mov	DWORD PTR -276[rbp], eax
	mov	rax, QWORD PTR -232[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HEIGHT__get__Ev
	mov	QWORD PTR -288[rbp], rax
	cvtsi2ss	xmm0, QWORD PTR -288[rbp]
	call	SCALEY
	movd	eax, xmm0
	mov	DWORD PTR -292[rbp], eax
	cvtsi2ss	xmm1, DWORD PTR -40[rbp]
	movss	xmm0, DWORD PTR -292[rbp]
	subss	xmm0, xmm1
	call	nearbyintf
	cvttss2si	rax, xmm0
	mov	rdx, rax
	shr	rdx, 63
	add	rax, rdx
	sar	rax
	cvtsi2ss	xmm0, rax
	addss	xmm0, DWORD PTR -276[rbp]
	call	nearbyintf
	cvttss2si	eax, xmm0
	mov	DWORD PTR -32[rbp], eax
	nop
.L8793:
	jmp	.L8797
.L8940:
	nop
.L8792:
	mov	ecx, 0
	call	GetSystemMetrics
	mov	DWORD PTR -296[rbp], eax
	mov	eax, DWORD PTR -296[rbp]
	movsx	rdx, eax
	mov	eax, DWORD PTR -36[rbp]
	cdqe
	sub	rdx, rax
	mov	rax, rdx
	mov	rdx, rax
	shr	rdx, 63
	add	rax, rdx
	sar	rax
	mov	DWORD PTR -28[rbp], eax
	mov	ecx, 1
	call	GetSystemMetrics
	mov	DWORD PTR -300[rbp], eax
	mov	eax, DWORD PTR -300[rbp]
	movsx	rdx, eax
	mov	eax, DWORD PTR -40[rbp]
	cdqe
	sub	rdx, rax
	mov	rax, rdx
	mov	rdx, rax
	shr	rdx, 63
	add	rax, rdx
	sar	rax
	mov	DWORD PTR -32[rbp], eax
	jmp	.L8797
.L8938:
	nop
.L8787:
	cmp	QWORD PTR -224[rbp], 2
	jne	.L8941
	nop
.L8794:
	mov	DWORD PTR -28[rbp], -2147483648
	mov	DWORD PTR -32[rbp], -2147483648
	jmp	.L8797
.L8941:
	nop
.L8795:
	cmp	QWORD PTR -224[rbp], 3
	jne	.L8942
	nop
.L8796:
	mov	DWORD PTR -28[rbp], -2147483648
	mov	DWORD PTR -32[rbp], -2147483648
	mov	DWORD PTR -36[rbp], -2147483648
	mov	DWORD PTR -40[rbp], -2147483648
	jmp	.L8797
.L8784:
.L8942:
	nop
.L8797:
	lea	rax, -928[rbp]
	lea	rdx, -848[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -928[rbp]
	add	rax, 8
	lea	rdx, -848[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -928[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], 24
	lea	rax, -928[rbp]
	add	rax, 24
	mov	QWORD PTR [rax], 8
	lea	rax, -928[rbp]
	add	rax, 32
	mov	QWORD PTR [rax], 1
	lea	rax, -928[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], 49
	lea	rax, -928[rbp]
	add	rax, 48
	mov	QWORD PTR [rax], 3
	lea	rax, -928[rbp]
	add	rax, 56
	mov	QWORD PTR [rax], 0
	lea	rax, -928[rbp]
	add	rax, 64
	mov	QWORD PTR [rax], 2
	mov	QWORD PTR -848[rbp], 0
	lea	rax, -848[rbp]
	add	rax, 8
	mov	QWORD PTR [rax], 65536
	lea	rax, -848[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], 0
	lea	rax, -1040[rbp]
	lea	rdx, -960[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -1040[rbp]
	add	rax, 8
	lea	rdx, -960[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -1040[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], 24
	lea	rax, -1040[rbp]
	add	rax, 24
	mov	QWORD PTR [rax], 8
	lea	rax, -1040[rbp]
	add	rax, 32
	mov	QWORD PTR [rax], 1
	lea	rax, -1040[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], 49
	lea	rax, -1040[rbp]
	add	rax, 48
	mov	QWORD PTR [rax], 3
	lea	rax, -1040[rbp]
	add	rax, 56
	mov	QWORD PTR [rax], 0
	lea	rax, -1040[rbp]
	add	rax, 64
	mov	QWORD PTR [rax], 2
	mov	QWORD PTR -960[rbp], 0
	lea	rax, -960[rbp]
	add	rax, 8
	mov	QWORD PTR [rax], 65536
	lea	rax, -960[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], 0
	lea	rax, -1152[rbp]
	lea	rdx, -1072[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -1152[rbp]
	add	rax, 8
	lea	rdx, -1072[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -1152[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], 24
	lea	rax, -1152[rbp]
	add	rax, 24
	mov	QWORD PTR [rax], 8
	lea	rax, -1152[rbp]
	add	rax, 32
	mov	QWORD PTR [rax], 1
	lea	rax, -1152[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], 49
	lea	rax, -1152[rbp]
	add	rax, 48
	mov	QWORD PTR [rax], 3
	lea	rax, -1152[rbp]
	add	rax, 56
	mov	QWORD PTR [rax], 0
	lea	rax, -1152[rbp]
	add	rax, 64
	mov	QWORD PTR [rax], 2
	mov	QWORD PTR -1072[rbp], 0
	lea	rax, -1072[rbp]
	add	rax, 8
	mov	QWORD PTR [rax], 131072
	lea	rax, -1072[rbp]
	add	rax, 16
	mov	QWORD PTR [rax], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT9CLASSNAMEEv
	mov	QWORD PTR -312[rbp], rax
	mov	rax, QWORD PTR -312[rbp]
	lea	rdx, .LC529[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -316[rbp], eax
	cmp	DWORD PTR -316[rbp], 0
	je	.L8943
	nop
.L8799:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12STYLE__get__Ev
	mov	QWORD PTR -328[rbp], rax
	mov	rax, QWORD PTR -328[rbp]
	and	eax, 100663296
	cmp	rax, 100663296
	je	.L8944
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12STYLE__get__Ev
	mov	QWORD PTR -336[rbp], rax
	mov	rax, QWORD PTR -336[rbp]
	or	rax, 100663296
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12STYLE__set__Eu7INTEGER
	jmp	.L8803
.L8802:
.L8944:
	nop
.L8803:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12STYLE__get__Ev
	mov	QWORD PTR -344[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 921
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	neg	eax
	mov	edx, eax
	mov	eax, edx
	sar	eax, 31
	xor	edx, eax
	mov	DWORD PTR -348[rbp], edx
	sub	DWORD PTR -348[rbp], eax
	mov	eax, DWORD PTR -348[rbp]
	cdqe
	mov	QWORD PTR -360[rbp], rax
	mov	rax, QWORD PTR -360[rbp]
	lea	r9, .LC81[rip]
	mov	r8d, 943
	mov	edx, 2
	mov	rcx, rax
	call	fb_ArraySngBoundChk
	mov	QWORD PTR -368[rbp], rax
	cmp	QWORD PTR -368[rbp], 0
	je	.L8945
	jmp	[QWORD PTR -368[rbp]]
.L8945:
	nop
.L8805:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 920
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	neg	eax
	mov	edx, eax
	mov	eax, edx
	sar	eax, 31
	xor	edx, eax
	mov	DWORD PTR -372[rbp], edx
	sub	DWORD PTR -372[rbp], eax
	mov	eax, DWORD PTR -372[rbp]
	cdqe
	mov	QWORD PTR -384[rbp], rax
	mov	rax, QWORD PTR -384[rbp]
	lea	r9, .LC81[rip]
	mov	r8d, 943
	mov	edx, 2
	mov	rcx, rax
	call	fb_ArraySngBoundChk
	mov	QWORD PTR -392[rbp], rax
	cmp	QWORD PTR -392[rbp], 0
	je	.L8946
	jmp	[QWORD PTR -392[rbp]]
.L8946:
	nop
.L8807:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 921
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	neg	eax
	mov	edx, eax
	mov	eax, edx
	sar	eax, 31
	xor	edx, eax
	mov	DWORD PTR -396[rbp], edx
	sub	DWORD PTR -396[rbp], eax
	mov	eax, DWORD PTR -396[rbp]
	cdqe
	mov	QWORD PTR -408[rbp], rax
	mov	rax, QWORD PTR -408[rbp]
	lea	r9, .LC81[rip]
	mov	r8d, 943
	mov	edx, 2
	mov	rcx, rax
	call	fb_ArraySngBoundChk
	mov	QWORD PTR -416[rbp], rax
	cmp	QWORD PTR -416[rbp], 0
	je	.L8947
	jmp	[QWORD PTR -416[rbp]]
.L8947:
	nop
.L8809:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 920
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	neg	eax
	mov	edx, eax
	mov	eax, edx
	sar	eax, 31
	xor	edx, eax
	mov	DWORD PTR -420[rbp], edx
	sub	DWORD PTR -420[rbp], eax
	mov	eax, DWORD PTR -420[rbp]
	cdqe
	mov	QWORD PTR -432[rbp], rax
	mov	rax, QWORD PTR -432[rbp]
	lea	r9, .LC81[rip]
	mov	r8d, 943
	mov	edx, 2
	mov	rcx, rax
	call	fb_ArraySngBoundChk
	mov	QWORD PTR -440[rbp], rax
	cmp	QWORD PTR -440[rbp], 0
	je	.L8948
	jmp	[QWORD PTR -440[rbp]]
.L8948:
	nop
.L8811:
	lea	rax, -960[rbp]
	mov	rdx, QWORD PTR -360[rbp]
	sal	rdx, 3
	add	rax, rdx
	mov	rdx, QWORD PTR [rax]
	lea	rax, -1072[rbp]
	mov	rcx, QWORD PTR -384[rbp]
	sal	rcx, 3
	add	rax, rcx
	mov	rax, QWORD PTR [rax]
	or	rax, rdx
	and	rax, QWORD PTR -344[rbp]
	lea	rdx, -960[rbp]
	mov	rcx, QWORD PTR -408[rbp]
	sal	rcx, 3
	add	rdx, rcx
	mov	rcx, QWORD PTR [rdx]
	lea	rdx, -1072[rbp]
	mov	r8, QWORD PTR -432[rbp]
	sal	r8, 3
	add	rdx, r8
	mov	rdx, QWORD PTR [rdx]
	or	rdx, rcx
	cmp	rax, rdx
	je	.L8949
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12STYLE__get__Ev
	mov	QWORD PTR -448[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 921
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	neg	eax
	mov	edx, eax
	mov	eax, edx
	sar	eax, 31
	xor	edx, eax
	mov	DWORD PTR -452[rbp], edx
	sub	DWORD PTR -452[rbp], eax
	mov	eax, DWORD PTR -452[rbp]
	cdqe
	mov	QWORD PTR -464[rbp], rax
	mov	rax, QWORD PTR -464[rbp]
	lea	r9, .LC81[rip]
	mov	r8d, 944
	mov	edx, 2
	mov	rcx, rax
	call	fb_ArraySngBoundChk
	mov	QWORD PTR -472[rbp], rax
	cmp	QWORD PTR -472[rbp], 0
	je	.L8950
	jmp	[QWORD PTR -472[rbp]]
.L8950:
	nop
.L8815:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 920
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	neg	eax
	mov	edx, eax
	mov	eax, edx
	sar	eax, 31
	xor	edx, eax
	mov	DWORD PTR -476[rbp], edx
	sub	DWORD PTR -476[rbp], eax
	mov	eax, DWORD PTR -476[rbp]
	cdqe
	mov	QWORD PTR -488[rbp], rax
	mov	rax, QWORD PTR -488[rbp]
	lea	r9, .LC81[rip]
	mov	r8d, 944
	mov	edx, 2
	mov	rcx, rax
	call	fb_ArraySngBoundChk
	mov	QWORD PTR -496[rbp], rax
	cmp	QWORD PTR -496[rbp], 0
	je	.L8951
	jmp	[QWORD PTR -496[rbp]]
.L8951:
	nop
.L8817:
	lea	rax, -960[rbp]
	mov	rdx, QWORD PTR -464[rbp]
	sal	rdx, 3
	add	rax, rdx
	mov	rdx, QWORD PTR [rax]
	lea	rax, -1072[rbp]
	mov	rcx, QWORD PTR -488[rbp]
	sal	rcx, 3
	add	rax, rcx
	mov	rax, QWORD PTR [rax]
	or	rax, rdx
	or	rax, QWORD PTR -448[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12STYLE__set__Eu7INTEGER
	jmp	.L8818
.L8813:
.L8949:
	nop
.L8818:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL14EXSTYLE__get__Ev
	mov	QWORD PTR -504[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 576
	mov	rax, QWORD PTR [rax]
	mov	edx, eax
	mov	eax, edx
	sar	eax, 31
	xor	edx, eax
	mov	DWORD PTR -508[rbp], edx
	sub	DWORD PTR -508[rbp], eax
	mov	eax, DWORD PTR -508[rbp]
	cdqe
	mov	QWORD PTR -520[rbp], rax
	mov	rax, QWORD PTR -520[rbp]
	lea	r9, .LC81[rip]
	mov	r8d, 946
	mov	edx, 2
	mov	rcx, rax
	call	fb_ArraySngBoundChk
	mov	QWORD PTR -528[rbp], rax
	cmp	QWORD PTR -528[rbp], 0
	je	.L8952
	jmp	[QWORD PTR -528[rbp]]
.L8952:
	nop
.L8820:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 576
	mov	rax, QWORD PTR [rax]
	mov	edx, eax
	mov	eax, edx
	sar	eax, 31
	xor	edx, eax
	mov	DWORD PTR -532[rbp], edx
	sub	DWORD PTR -532[rbp], eax
	mov	eax, DWORD PTR -532[rbp]
	cdqe
	mov	QWORD PTR -544[rbp], rax
	mov	rax, QWORD PTR -544[rbp]
	lea	r9, .LC81[rip]
	mov	r8d, 946
	mov	edx, 2
	mov	rcx, rax
	call	fb_ArraySngBoundChk
	mov	QWORD PTR -552[rbp], rax
	cmp	QWORD PTR -552[rbp], 0
	je	.L8953
	jmp	[QWORD PTR -552[rbp]]
.L8953:
	nop
.L8822:
	lea	rax, -848[rbp]
	mov	rdx, QWORD PTR -520[rbp]
	sal	rdx, 3
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	and	rax, QWORD PTR -504[rbp]
	mov	rdx, rax
	lea	rax, -848[rbp]
	mov	rcx, QWORD PTR -544[rbp]
	sal	rcx, 3
	add	rax, rcx
	mov	rax, QWORD PTR [rax]
	cmp	rdx, rax
	je	.L8954
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL14EXSTYLE__get__Ev
	mov	QWORD PTR -560[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 576
	mov	rax, QWORD PTR [rax]
	mov	edx, eax
	mov	eax, edx
	sar	eax, 31
	xor	edx, eax
	mov	DWORD PTR -564[rbp], edx
	sub	DWORD PTR -564[rbp], eax
	mov	eax, DWORD PTR -564[rbp]
	cdqe
	mov	QWORD PTR -576[rbp], rax
	mov	rax, QWORD PTR -576[rbp]
	lea	r9, .LC81[rip]
	mov	r8d, 947
	mov	edx, 2
	mov	rcx, rax
	call	fb_ArraySngBoundChk
	mov	QWORD PTR -584[rbp], rax
	cmp	QWORD PTR -584[rbp], 0
	je	.L8955
	jmp	[QWORD PTR -584[rbp]]
.L8955:
	nop
.L8825:
	lea	rax, -848[rbp]
	mov	rdx, QWORD PTR -576[rbp]
	sal	rdx, 3
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	or	rax, QWORD PTR -560[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL14EXSTYLE__set__Eu7INTEGER
	jmp	.L8827
.L8800:
.L8826:
.L8943:
	nop
	jmp	.L8827
.L8954:
	nop
.L8827:
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR _ZN2MY3SYS5FORMS16CREATIONCONTROL$E[rip], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 552
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR -588[rbp], eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 592
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR -592[rbp], eax
	mov	ecx, 0
	call	GetModuleHandleW
	mov	QWORD PTR -600[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 32
	mov	rax, QWORD PTR [rax]
	lea	rdx, .LC529[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -604[rbp], eax
	cmp	DWORD PTR -604[rbp], 0
	jne	.L8956
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L8830
.L8956:
	nop
.L8829:
	mov	QWORD PTR -8[rbp], 0
.L8830:
	cmp	QWORD PTR -8[rbp], 0
	je	.L8957
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 128[rax]
	mov	QWORD PTR -616[rbp], rax
	mov	rax, QWORD PTR -616[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 969
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -624[rbp], rax
	cmp	QWORD PTR -624[rbp], 0
	je	.L8958
	jmp	[QWORD PTR -624[rbp]]
.L8958:
	nop
.L8834:
	mov	rax, QWORD PTR -616[rbp]
	add	rax, 56
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	neg	eax
	test	eax, eax
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -16[rbp], rax
	jmp	.L8835
.L8957:
	nop
.L8832:
	mov	QWORD PTR -16[rbp], 0
.L8835:
	cmp	QWORD PTR -16[rbp], 0
	je	.L8959
	mov	QWORD PTR -24[rbp], 0
	jmp	.L8838
.L8959:
	nop
.L8837:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 600
	mov	rcx, rax
	call	_ZN7USTRING4VPTREv
	mov	QWORD PTR -632[rbp], rax
	mov	rax, QWORD PTR -632[rbp]
	mov	QWORD PTR -24[rbp], rax
.L8838:
	mov	r8, QWORD PTR -48[rbp]
	mov	rcx, QWORD PTR -824[rbp]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 32
	mov	rdx, QWORD PTR [rax]
	mov	r11d, DWORD PTR -592[rbp]
	mov	r10, QWORD PTR -24[rbp]
	mov	eax, DWORD PTR -588[rbp]
	mov	r9, QWORD PTR 16[rbp]
	mov	QWORD PTR 88[rsp], r9
	mov	r9, QWORD PTR -600[rbp]
	mov	QWORD PTR 80[rsp], r9
	mov	QWORD PTR 72[rsp], r8
	mov	QWORD PTR 64[rsp], rcx
	mov	ecx, DWORD PTR -40[rbp]
	mov	DWORD PTR 56[rsp], ecx
	mov	ecx, DWORD PTR -36[rbp]
	mov	DWORD PTR 48[rsp], ecx
	mov	ecx, DWORD PTR -32[rbp]
	mov	DWORD PTR 40[rsp], ecx
	mov	ecx, DWORD PTR -28[rbp]
	mov	DWORD PTR 32[rsp], ecx
	mov	r9d, r11d
	mov	r8, r10
	mov	ecx, eax
	call	CreateWindowExW
	mov	QWORD PTR -640[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 160[rax]
	mov	rax, QWORD PTR -640[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8960
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	edx, -21
	mov	rcx, rax
	call	GetWindowLongPtrW
	mov	QWORD PTR -648[rbp], rax
	cmp	QWORD PTR -648[rbp], 0
	jne	.L8961
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1056
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	r8, rdx
	mov	edx, -21
	mov	rcx, rax
	call	SetWindowLongPtrW
	jmp	.L8842
.L8841:
.L8961:
	nop
.L8842:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR 16[rbp]
	lea	rdx, .LC89[rip]
	mov	rcx, rax
	call	SetPropW
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1760
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L8962
	lea	rdx, _ZN2MY3SYS5FORMS7CONTROL11CALLWNDPROCEP6HWND__jyx[rip]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	r8, rdx
	mov	edx, -4
	mov	rcx, rax
	call	SetWindowLongPtrW
	mov	QWORD PTR -656[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 1048[rax]
	mov	rax, QWORD PTR -656[rbp]
	mov	QWORD PTR [rdx], rax
	jmp	.L8845
.L8844:
.L8962:
	nop
.L8845:
	lea	rax, G_DARKMODESUPPORTED$[rip]
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L8963
	lea	rax, G_DARKMODEENABLED$[rip]
	movzx	eax, BYTE PTR [rax]
	test	al, al
	setne	al
	mov	BYTE PTR -65[rbp], al
	jmp	.L8848
.L8963:
	nop
.L8847:
	mov	BYTE PTR -65[rbp], 0
.L8848:
	cmp	BYTE PTR -65[rbp], 0
	je	.L8964
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 48
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L8851
.L8850:
.L8964:
	nop
.L8851:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12BRINGTOFRONTEv
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1768
	mov	rdx, QWORD PTR 16[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4FONT13PARENT__set__EPNS0_6OBJECTE
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	r9d, 0
	mov	r8d, 0
	mov	edx, 40012
	mov	rcx, rax
	call	SendMessageW
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL15SHOWHINT__get__Ev
	mov	BYTE PTR -657[rbp], al
	movsx	eax, BYTE PTR -657[rbp]
	neg	eax
	test	eax, eax
	je	.L8965
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11HINT__get__Ev
	mov	QWORD PTR -672[rbp], rax
	mov	rax, QWORD PTR -672[rbp]
	lea	rdx, .LC77[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -676[rbp], eax
	cmp	DWORD PTR -676[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -80[rbp], rax
	jmp	.L8854
.L8965:
	nop
.L8853:
	mov	QWORD PTR -80[rbp], 0
.L8854:
	cmp	QWORD PTR -80[rbp], 0
	je	.L8966
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12ALLOCATEHINTEv
	jmp	.L8856
.L8966:
	nop
.L8856:
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8967
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12WIDTH__get__Ev
	mov	QWORD PTR -688[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 376[rax]
	mov	rax, QWORD PTR -688[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HEIGHT__get__Ev
	mov	QWORD PTR -696[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 384[rax]
	mov	rax, QWORD PTR -696[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 344[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 80[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 352[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 88[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 376
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 96
	mov	rax, QWORD PTR [rax]
	mov	rcx, rdx
	sub	rcx, rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 360
	sub	rcx, rdx
	mov	rdx, rcx
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 384
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	mov	rcx, rdx
	sub	rcx, rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 368
	sub	rcx, rdx
	mov	rdx, rcx
	mov	QWORD PTR [rax], rdx
	jmp	.L8859
.L8858:
.L8967:
	nop
.L8859:
	mov	QWORD PTR -1160[rbp], 0
	mov	QWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8, -1
	mov	rdx, -1
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12REQUESTALIGNEu7INTEGERS3_bPS2_
	mov	QWORD PTR -1160[rbp], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12CONTROLCOUNTEv
	mov	QWORD PTR -704[rbp], rax
	mov	rax, QWORD PTR -704[rbp]
	sub	rax, 1
	mov	QWORD PTR -712[rbp], rax
	jmp	.L8860
.L8971:
	nop
.L8861:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -784[rbp], rax
	mov	rax, QWORD PTR -784[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1075
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -792[rbp], rax
	cmp	QWORD PTR -792[rbp], 0
	je	.L8968
	jmp	[QWORD PTR -792[rbp]]
.L8968:
	nop
.L8863:
	mov	rax, QWORD PTR -1160[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -784[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8, -1
	mov	rdx, -1
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL12REQUESTALIGNEu7INTEGERS3_bPS2_
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -800[rbp], rax
	mov	rax, QWORD PTR -800[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1076
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -808[rbp], rax
	cmp	QWORD PTR -808[rbp], 0
	je	.L8969
	jmp	[QWORD PTR -808[rbp]]
.L8969:
	nop
.L8865:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -800[rbp], rax
	mov	rax, QWORD PTR -800[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1076
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -816[rbp], rax
	cmp	QWORD PTR -816[rbp], 0
	je	.L8970
	jmp	[QWORD PTR -816[rbp]]
.L8970:
	nop
.L8867:
	mov	rax, QWORD PTR -1160[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -800[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax]
	add	rax, 104
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -1160[rbp]
	sal	rax, 3
	mov	rcx, rax
	mov	rax, QWORD PTR -800[rbp]
	add	rax, rcx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	rdx
.L8868:
	mov	rax, QWORD PTR -1160[rbp]
	add	rax, 1
	mov	QWORD PTR -1160[rbp], rax
.L8860:
	mov	rax, QWORD PTR -1160[rbp]
	cmp	QWORD PTR -712[rbp], rax
	jge	.L8971
	nop
.L8869:
	mov	QWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8, -1
	mov	rdx, -1
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12REQUESTALIGNEu7INTEGERS3_bPS2_
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL18CONTEXTMENU__get__Ev
	mov	QWORD PTR -720[rbp], rax
	cmp	QWORD PTR -720[rbp], 0
	je	.L8972
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL18CONTEXTMENU__get__Ev
	mov	QWORD PTR -728[rbp], rax
	mov	rax, QWORD PTR -728[rbp]
	mov	rdx, QWORD PTR 16[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS9POPUPMENU19PARENTWINDOW__set__EPNS0_14COMPONENTMODEL9COMPONENTE
	jmp	.L8871
.L8972:
	nop
.L8871:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1184
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8973
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 1184[rax]
	mov	QWORD PTR -736[rbp], rax
	mov	rax, QWORD PTR -736[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1080
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -744[rbp], rax
	cmp	QWORD PTR -744[rbp], 0
	je	.L8974
	jmp	[QWORD PTR -744[rbp]]
.L8974:
	nop
.L8875:
	mov	rax, QWORD PTR -736[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L8873
.L8973:
	nop
.L8873:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2232
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8975
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2232[rax]
	mov	QWORD PTR -752[rbp], rax
	mov	rax, QWORD PTR -752[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1081
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -760[rbp], rax
	cmp	QWORD PTR -760[rbp], 0
	je	.L8976
	jmp	[QWORD PTR -760[rbp]]
.L8976:
	nop
.L8879:
	mov	rax, QWORD PTR -752[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L8877
.L8975:
	nop
.L8877:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 969
	movzx	eax, BYTE PTR [rax]
	test	al, al
	jne	.L8977
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 969
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL14ENABLED__set__Eb
	jmp	.L8881
.L8977:
	nop
.L8881:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 970
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L8978
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT9CLASSNAMEEv
	mov	QWORD PTR -768[rbp], rax
	mov	rax, QWORD PTR -768[rbp]
	lea	rdx, .LC501[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -772[rbp], eax
	cmp	DWORD PTR -772[rbp], 0
	jne	.L8979
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 112
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L8886
.L8979:
	nop
.L8885:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, rax
	call	ShowWindow
	jmp	.L8886
.L8883:
.L8978:
	nop
.L8886:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL6UPDATEEv
	jmp	.L8888
.L8755:
.L8887:
.L8925:
	nop
	jmp	.L8888
.L8960:
	nop
.L8888:
	mov	rax, QWORD PTR -112[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -96[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC530:
	.ascii "RECREATEWND\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL11RECREATEWNDEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL11RECREATEWNDEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 144
	mov	QWORD PTR 16[rbp], rcx
.L8981:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC530[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	QWORD PTR -88[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L8996
	nop
.L8983:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL7FREEWNDEv
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	mov	QWORD PTR -88[rbp], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12CONTROLCOUNTEv
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	sub	rax, 1
	mov	QWORD PTR -48[rbp], rax
	jmp	.L8985
.L8999:
	nop
.L8986:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1105
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -64[rbp], rax
	cmp	QWORD PTR -64[rbp], 0
	je	.L8997
	jmp	[QWORD PTR -64[rbp]]
.L8997:
	nop
.L8988:
	mov	rax, QWORD PTR -88[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -56[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL11RECREATEWNDEv
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1106
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L8998
	jmp	[QWORD PTR -80[rbp]]
.L8998:
	nop
.L8990:
	mov	rax, QWORD PTR -88[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -72[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8, -1
	mov	rdx, -1
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL12REQUESTALIGNEu7INTEGERS3_bPS2_
.L8991:
	mov	rax, QWORD PTR -88[rbp]
	add	rax, 1
	mov	QWORD PTR -88[rbp], rax
.L8985:
	mov	rax, QWORD PTR -88[rbp]
	cmp	QWORD PTR -48[rbp], rax
	jge	.L8999
	nop
.L8992:
	mov	QWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8, -1
	mov	rdx, -1
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12REQUESTALIGNEu7INTEGERS3_bPS2_
	jmp	.L8984
.L8996:
	nop
.L8984:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC531:
	.ascii "FREEWND\0"
	.align 2
.LC532:
	.ascii "I\0P\0A\0d\0d\0r\0e\0s\0s\0\0\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL7FREEWNDEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL7FREEWNDEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
.L9001:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC531[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1192
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9016
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 1192[rax]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1121
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -48[rbp], rax
	cmp	QWORD PTR -48[rbp], 0
	je	.L9017
	jmp	[QWORD PTR -48[rbp]]
.L9017:
	nop
.L9005:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L9003
.L9016:
	nop
.L9003:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9018
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT9CLASSNAMEEv
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC532[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	je	.L9019
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DestroyWindow
	jmp	.L9009
.L9019:
	nop
.L9009:
	mov	edx, 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__set__EP6HWND__
	jmp	.L9010
.L9007:
.L9018:
	nop
.L9010:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1200
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9020
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1200
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DestroyWindow
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1200
	mov	QWORD PTR [rax], 0
	jmp	.L9014
.L9012:
.L9013:
.L9020:
	nop
.L9014:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC533:
	.ascii "CONTEXTMENU\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL18CONTEXTMENU__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL18CONTEXTMENU__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC533[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L9022:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 912[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L9023:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS7CONTROL18CONTEXTMENU__set__EPNS1_9POPUPMENUE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL18CONTEXTMENU__set__EPNS1_9POPUPMENUE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L9026:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC533[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 912[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 912
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9030
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 912
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 16[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS9POPUPMENU19PARENTWINDOW__set__EPNS0_14COMPONENTMODEL9COMPONENTE
	jmp	.L9029
.L9028:
.L9030:
	nop
.L9029:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 2
.LC534:
	.ascii "G\0r\0o\0u\0p\0B\0o\0x\0\0\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL14PROCESSMESSAGEER7MESSAGE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL14PROCESSMESSAGEER7MESSAGE:
	push	rbp
	mov	rbp, rsp
	push	rsi
	push	rbx
	sub	rsp, 1776
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L9032:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -176[rbp], rax
	lea	rcx, .LC369[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2368
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9646
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2368[rax]
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1162
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -208[rbp], rax
	cmp	QWORD PTR -208[rbp], 0
	je	.L9647
	jmp	[QWORD PTR -208[rbp]]
.L9647:
	nop
.L9036:
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, QWORD PTR -200[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	r8
	jmp	.L9034
.L9646:
	nop
.L9034:
	mov	ecx, 16
	call	GetKeyState
	mov	WORD PTR -210[rbp], ax
	movsx	rax, WORD PTR -210[rbp]
	and	eax, 8000
	test	rax, rax
	setne	al
	mov	BYTE PTR BSHIFT$1.18746[rip], al
	mov	ecx, 17
	call	GetKeyState
	mov	WORD PTR -212[rbp], ax
	movsx	rax, WORD PTR -212[rbp]
	and	eax, 8000
	test	rax, rax
	setne	al
	mov	BYTE PTR BCTRL$1.18747[rip], al
	mov	rax, QWORD PTR 24[rbp]
	mov	eax, DWORD PTR 16[rax]
	mov	DWORD PTR -216[rbp], eax
	cmp	DWORD PTR -216[rbp], 132
	jne	.L9648
	nop
.L9037:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L9649
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT9CLASSNAMEEv
	mov	QWORD PTR -224[rbp], rax
	mov	rax, QWORD PTR -224[rbp]
	lea	rdx, .LC501[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -228[rbp], eax
	cmp	DWORD PTR -228[rbp], 0
	je	.L9650
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT9CLASSNAMEEv
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -240[rbp]
	lea	rdx, .LC534[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -244[rbp], eax
	cmp	DWORD PTR -244[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -24[rbp], rax
	jmp	.L9043
.L9650:
	nop
.L9042:
	mov	QWORD PTR -24[rbp], 0
.L9043:
	cmp	QWORD PTR -24[rbp], 0
	je	.L9651
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], -1
	jmp	.L9490
.L9040:
.L9045:
.L9046:
.L9649:
	nop
	jmp	.L9490
.L9651:
	nop
.L9047:
	jmp	.L9490
.L9648:
	nop
.L9038:
	cmp	DWORD PTR -216[rbp], 15
	jne	.L9652
	nop
.L9049:
	lea	rax, G_DARKMODESUPPORTED$[rip]
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L9653
	lea	rax, G_DARKMODEENABLED$[rip]
	movzx	eax, BYTE PTR [rax]
	test	al, al
	setne	al
	mov	BYTE PTR -25[rbp], al
	jmp	.L9053
.L9653:
	nop
.L9052:
	mov	BYTE PTR -25[rbp], 0
.L9053:
	cmp	BYTE PTR -25[rbp], 0
	je	.L9654
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 536
	movzx	eax, BYTE PTR [rax]
	test	al, al
	jne	.L9655
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 48
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL7REPAINTEv
	jmp	.L9062
.L9057:
.L9655:
	nop
.L9058:
	jmp	.L9062
.L9654:
	nop
.L9055:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 536
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L9656
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 48
	mov	rax, QWORD PTR [rax]
	mov	edx, 0
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL7REPAINTEv
	jmp	.L9062
.L9059:
.L9061:
.L9656:
	nop
.L9062:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2256
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9657
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	GetDC
	mov	QWORD PTR -256[rbp], rax
	mov	rax, QWORD PTR -256[rbp]
	mov	QWORD PTR -264[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1368
	mov	BYTE PTR [rax], 1
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 1376[rax]
	mov	rax, QWORD PTR -264[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2256[rax]
	mov	QWORD PTR -272[rbp], rax
	mov	rax, QWORD PTR -272[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1368
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -280[rbp], rax
	cmp	QWORD PTR -280[rbp], 0
	je	.L9658
	jmp	[QWORD PTR -280[rbp]]
.L9658:
	nop
.L9066:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 1208[rax]
	mov	rax, QWORD PTR -272[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1368
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR -264[rbp]
	mov	rcx, rax
	call	ReleaseDC
	jmp	.L9490
.L9064:
.L9657:
	nop
.L9067:
	jmp	.L9490
.L9652:
	nop
.L9050:
	cmp	DWORD PTR -216[rbp], 32
	jne	.L9659
	nop
.L9068:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2032
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9660
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 32
	mov	rax, QWORD PTR [rax]
	movzx	eax, ax
	cmp	rax, 1
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -40[rbp], rax
	jmp	.L9072
.L9660:
	nop
.L9071:
	mov	QWORD PTR -40[rbp], 0
.L9072:
	cmp	QWORD PTR -40[rbp], 0
	je	.L9661
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	movzx	eax, BYTE PTR [rax]
	test	al, al
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -48[rbp], rax
	jmp	.L9075
.L9661:
	nop
.L9074:
	mov	QWORD PTR -48[rbp], 0
.L9075:
	cmp	QWORD PTR -48[rbp], 0
	je	.L9662
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2032
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	SetCursor
	mov	QWORD PTR -288[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 40[rax]
	mov	rax, QWORD PTR -288[rbp]
	mov	QWORD PTR [rdx], rax
	jmp	.L9490
.L9077:
.L9662:
	nop
.L9078:
	jmp	.L9490
.L9659:
	nop
.L9069:
	cmp	DWORD PTR -216[rbp], 276
	jne	.L9663
	nop
.L9079:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 32
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9664
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 32
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 32
	mov	rax, QWORD PTR [rax]
	mov	r9, rcx
	mov	r8, rdx
	mov	edx, 40003
	mov	rcx, rax
	call	SendMessageW
	jmp	.L9087
.L9664:
	nop
.L9082:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2384
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9665
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2384[rax]
	mov	QWORD PTR -296[rbp], rax
	mov	rax, QWORD PTR -296[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1380
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -304[rbp], rax
	cmp	QWORD PTR -304[rbp], 0
	je	.L9666
	jmp	[QWORD PTR -304[rbp]]
.L9666:
	nop
.L9086:
	mov	rax, QWORD PTR -296[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L9490
.L9083:
.L9665:
	nop
.L9087:
	jmp	.L9490
.L9663:
	nop
.L9080:
	cmp	DWORD PTR -216[rbp], 277
	jne	.L9667
	nop
.L9088:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 32
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9668
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 32
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 32
	mov	rax, QWORD PTR [rax]
	mov	r9, rcx
	mov	r8, rdx
	mov	edx, 40004
	mov	rcx, rax
	call	SendMessageW
	jmp	.L9096
.L9668:
	nop
.L9091:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2384
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9669
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2384[rax]
	mov	QWORD PTR -312[rbp], rax
	mov	rax, QWORD PTR -312[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1386
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -320[rbp], rax
	cmp	QWORD PTR -320[rbp], 0
	je	.L9670
	jmp	[QWORD PTR -320[rbp]]
.L9670:
	nop
.L9095:
	mov	rax, QWORD PTR -312[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L9490
.L9092:
.L9669:
	nop
.L9096:
	jmp	.L9490
.L9667:
	nop
.L9089:
	cmp	DWORD PTR -216[rbp], 305
	jbe	.L9671
	cmp	DWORD PTR -216[rbp], 312
	jbe	.L9672
	jmp	.L9098
.L9671:
	nop
.L9098:
	cmp	DWORD PTR -216[rbp], 309
	jne	.L9673
	jmp	.L9099
.L9672:
	nop
.L9099:
	mov	QWORD PTR -1624[rbp], 0
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 16
	mov	eax, DWORD PTR [rax]
	cmp	eax, 312
	jne	.L9674
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 32
	mov	rax, QWORD PTR [rax]
	mov	edx, -16
	mov	rcx, rax
	call	GetWindowLongW
	mov	DWORD PTR -1548[rbp], eax
	mov	eax, DWORD PTR -1548[rbp]
	cdqe
	and	eax, 11
	cmp	rax, 11
	je	.L9675
	jmp	.L9106
.L9102:
.L9104:
.L9105:
.L9674:
	nop
.L9106:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 32
	mov	rax, QWORD PTR [rax]
	lea	rdx, .LC89[rip]
	mov	rcx, rax
	call	GetPropW
	mov	QWORD PTR -1560[rbp], rax
	mov	rax, QWORD PTR -1560[rbp]
	mov	QWORD PTR -1624[rbp], rax
	mov	rax, QWORD PTR -1624[rbp]
	test	rax, rax
	je	.L9676
	mov	rax, QWORD PTR -1624[rbp]
	mov	QWORD PTR -1568[rbp], rax
	lea	rax, G_DARKMODESUPPORTED$[rip]
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L9677
	lea	rax, G_DARKMODEENABLED$[rip]
	movzx	eax, BYTE PTR [rax]
	test	al, al
	setne	al
	mov	BYTE PTR -49[rbp], al
	jmp	.L9111
.L9677:
	nop
.L9110:
	mov	BYTE PTR -49[rbp], 0
.L9111:
	movsx	eax, BYTE PTR -49[rbp]
	neg	eax
	test	eax, eax
	je	.L9678
	mov	rax, QWORD PTR -1568[rbp]
	add	rax, 672
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -1568[rbp]
	add	rax, 680
	mov	rax, QWORD PTR [rax]
	cmp	rdx, rax
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -64[rbp], rax
	jmp	.L9114
.L9678:
	nop
.L9113:
	mov	QWORD PTR -64[rbp], 0
.L9114:
	cmp	QWORD PTR -64[rbp], 0
	je	.L9679
	mov	rax, QWORD PTR -1568[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13CLASSANCESTOREv
	mov	QWORD PTR -1576[rbp], rax
	mov	rax, QWORD PTR -1576[rbp]
	lea	rdx, .LC53[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -1580[rbp], eax
	cmp	DWORD PTR -1580[rbp], 0
	je	.L9680
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -1592[rbp], rax
	mov	rax, QWORD PTR -1592[rbp]
	mov	edx, 16777215
	mov	rcx, rax
	call	SetTextColor
	mov	rax, QWORD PTR -1592[rbp]
	mov	edx, 3684408
	mov	rcx, rax
	call	SetBkColor
	mov	rax, QWORD PTR -1568[rbp]
	add	rax, 1144
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR HBRBKGND$[rip]
	cmp	rdx, rax
	je	.L9681
	mov	rax, QWORD PTR -1568[rbp]
	lea	rdx, 1144[rax]
	mov	rax, QWORD PTR HBRBKGND$[rip]
	mov	QWORD PTR [rdx], rax
	jmp	.L9121
.L9120:
.L9681:
	nop
.L9121:
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 40[rax]
	mov	rax, QWORD PTR -1568[rbp]
	mov	rax, QWORD PTR 1144[rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L9123
.L9118:
.L9680:
	nop
.L9122:
	jmp	.L9123
.L9679:
	nop
.L9116:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 32
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 32
	mov	rax, QWORD PTR [rax]
	mov	r9, rcx
	mov	r8, rdx
	mov	edx, 40000
	mov	rcx, rax
	call	SendMessageW
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 40[rax]
	mov	rax, QWORD PTR -1568[rbp]
	mov	rax, QWORD PTR 1144[rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L9490
.L9123:
	jmp	.L9490
.L9676:
	nop
.L9108:
	mov	QWORD PTR -1632[rbp], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -1632[rbp], rax
	lea	rax, G_DARKMODESUPPORTED$[rip]
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L9682
	lea	rax, G_DARKMODEENABLED$[rip]
	movzx	eax, BYTE PTR [rax]
	test	al, al
	setne	al
	mov	BYTE PTR -65[rbp], al
	jmp	.L9127
.L9682:
	nop
.L9126:
	mov	BYTE PTR -65[rbp], 0
.L9127:
	movsx	eax, BYTE PTR -65[rbp]
	neg	eax
	test	eax, eax
	je	.L9683
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 672
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 680
	mov	rax, QWORD PTR [rax]
	cmp	rdx, rax
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -80[rbp], rax
	jmp	.L9130
.L9683:
	nop
.L9129:
	mov	QWORD PTR -80[rbp], 0
.L9130:
	cmp	QWORD PTR -80[rbp], 0
	je	.L9684
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -1600[rbp], rax
	mov	rax, QWORD PTR -1600[rbp]
	mov	edx, 16777215
	mov	rcx, rax
	call	SetTextColor
	mov	rax, QWORD PTR -1600[rbp]
	mov	edx, 3684408
	mov	rcx, rax
	call	SetBkColor
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1144
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR HBRBKGND$[rip]
	cmp	rdx, rax
	je	.L9685
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 1144[rax]
	mov	rax, QWORD PTR HBRBKGND$[rip]
	mov	QWORD PTR [rdx], rax
	jmp	.L9136
.L9134:
.L9685:
	nop
.L9135:
	jmp	.L9136
.L9684:
	nop
.L9132:
	mov	rax, QWORD PTR -1632[rbp]
	mov	edx, 1
	mov	rcx, rax
	call	SetBkMode
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL16BACKCOLOR__get__Ev
	mov	QWORD PTR -1608[rbp], rax
	mov	rax, QWORD PTR -1608[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR -1632[rbp]
	mov	rcx, rax
	call	SetBkColor
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1768
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4FONT12COLOR__get__Ev
	mov	QWORD PTR -1616[rbp], rax
	mov	rax, QWORD PTR -1616[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR -1632[rbp]
	mov	rcx, rax
	call	SetTextColor
	mov	rax, QWORD PTR -1632[rbp]
	mov	edx, 2
	mov	rcx, rax
	call	SetBkMode
.L9136:
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 40[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 1144[rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L9490
.L9673:
	nop
.L9100:
	cmp	DWORD PTR -216[rbp], 26
	jne	.L9686
	nop
.L9137:
	lea	rax, G_DARKMODESUPPORTED$[rip]
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L9687
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 32
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_Z26ISCOLORSCHEMECHANGEMESSAGEx
	mov	DWORD PTR -324[rbp], eax
	cmp	DWORD PTR -324[rbp], 0
	je	.L9141
	mov	eax, 1
	jmp	.L9142
.L9141:
	mov	eax, 0
.L9142:
	mov	BYTE PTR -81[rbp], al
	jmp	.L9143
.L9687:
	nop
.L9140:
	mov	BYTE PTR -81[rbp], 0
.L9143:
	cmp	BYTE PTR -81[rbp], 0
	je	.L9688
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	r9d, 0
	mov	r8d, 0
	mov	edx, 794
	mov	rcx, rax
	call	SendMessageW
	jmp	.L9490
.L9145:
.L9688:
	nop
.L9146:
	jmp	.L9490
.L9686:
	nop
.L9138:
	cmp	DWORD PTR -216[rbp], 736
	jne	.L9689
	nop
.L9147:
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 32[rax]
	mov	QWORD PTR -336[rbp], rax
	mov	rax, QWORD PTR -336[rbp]
	mov	QWORD PTR -344[rbp], rax
	mov	rax, QWORD PTR -344[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1453
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -352[rbp], rax
	cmp	QWORD PTR -352[rbp], 0
	je	.L9690
	jmp	[QWORD PTR -352[rbp]]
.L9690:
	nop
.L9150:
	mov	rax, QWORD PTR -336[rbp]
	mov	QWORD PTR -360[rbp], rax
	mov	rax, QWORD PTR -360[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1453
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -368[rbp], rax
	cmp	QWORD PTR -368[rbp], 0
	je	.L9691
	jmp	[QWORD PTR -368[rbp]]
.L9691:
	nop
.L9152:
	mov	rax, QWORD PTR -336[rbp]
	mov	QWORD PTR -376[rbp], rax
	mov	rax, QWORD PTR -376[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1453
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -384[rbp], rax
	cmp	QWORD PTR -384[rbp], 0
	je	.L9692
	jmp	[QWORD PTR -384[rbp]]
.L9692:
	nop
.L9154:
	mov	rax, QWORD PTR -336[rbp]
	mov	QWORD PTR -392[rbp], rax
	mov	rax, QWORD PTR -392[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1453
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -400[rbp], rax
	cmp	QWORD PTR -400[rbp], 0
	je	.L9693
	jmp	[QWORD PTR -400[rbp]]
.L9693:
	nop
.L9156:
	mov	rax, QWORD PTR -336[rbp]
	mov	QWORD PTR -408[rbp], rax
	mov	rax, QWORD PTR -408[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1453
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -416[rbp], rax
	cmp	QWORD PTR -416[rbp], 0
	je	.L9694
	jmp	[QWORD PTR -416[rbp]]
.L9694:
	nop
.L9158:
	mov	rax, QWORD PTR -336[rbp]
	mov	QWORD PTR -424[rbp], rax
	mov	rax, QWORD PTR -424[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1453
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -432[rbp], rax
	cmp	QWORD PTR -432[rbp], 0
	je	.L9695
	jmp	[QWORD PTR -432[rbp]]
.L9695:
	nop
.L9160:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 24
	mov	r10, QWORD PTR [rax]
	mov	rax, QWORD PTR -344[rbp]
	add	rax, 12
	mov	eax, DWORD PTR [rax]
	movsx	rdx, eax
	mov	rax, QWORD PTR -360[rbp]
	add	rax, 4
	mov	eax, DWORD PTR [rax]
	cdqe
	sub	rdx, rax
	mov	rax, QWORD PTR -376[rbp]
	add	rax, 8
	mov	eax, DWORD PTR [rax]
	movsx	rcx, eax
	mov	rax, QWORD PTR -392[rbp]
	mov	eax, DWORD PTR [rax]
	cdqe
	sub	rcx, rax
	mov	r8, rcx
	mov	rax, QWORD PTR -408[rbp]
	add	rax, 4
	mov	eax, DWORD PTR [rax]
	movsx	rcx, eax
	mov	rax, QWORD PTR -424[rbp]
	mov	eax, DWORD PTR [rax]
	cdqe
	mov	QWORD PTR 32[rsp], rdx
	mov	r9, r8
	mov	r8, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	r10
	mov	QWORD PTR -96[rbp], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12CONTROLCOUNTEv
	mov	QWORD PTR -440[rbp], rax
	mov	rax, QWORD PTR -440[rbp]
	sub	rax, 1
	mov	QWORD PTR -448[rbp], rax
	jmp	.L9161
.L9162:
.L9696:
	nop
.L9163:
	add	QWORD PTR -96[rbp], 1
.L9161:
	mov	rax, QWORD PTR -96[rbp]
	cmp	rax, QWORD PTR -448[rbp]
	jle	.L9696
	nop
.L9164:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], 0
	jmp	.L9490
.L9689:
	nop
.L9148:
	cmp	DWORD PTR -216[rbp], 794
	jne	.L9697
	nop
.L9165:
	jmp	.L9490
.L9697:
	nop
.L9166:
	cmp	DWORD PTR -216[rbp], 309
	jne	.L9698
	nop
.L9167:
	jmp	.L9490
.L9698:
	nop
.L9168:
	cmp	DWORD PTR -216[rbp], 5
	jne	.L9699
	nop
.L9169:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2144
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9700
	mov	QWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8, -1
	mov	rdx, -1
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12REQUESTALIGNEu7INTEGERS3_bPS2_
	jmp	.L9173
.L9172:
.L9700:
	nop
.L9173:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2376
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9701
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HEIGHT__get__Ev
	mov	QWORD PTR -456[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12WIDTH__get__Ev
	mov	QWORD PTR -464[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2376[rax]
	mov	QWORD PTR -472[rbp], rax
	mov	rax, QWORD PTR -472[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1471
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -480[rbp], rax
	cmp	QWORD PTR -480[rbp], 0
	je	.L9702
	jmp	[QWORD PTR -480[rbp]]
.L9702:
	nop
.L9177:
	mov	rdx, QWORD PTR -456[rbp]
	mov	rax, QWORD PTR -464[rbp]
	mov	r9, QWORD PTR -472[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	r9
	jmp	.L9490
.L9701:
	nop
.L9175:
	jmp	.L9490
.L9699:
	nop
.L9170:
	cmp	DWORD PTR -216[rbp], 70
	jne	.L9703
	nop
.L9178:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2104
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9704
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2104
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 32
	mov	rax, QWORD PTR [rax]
	add	rax, 16
	mov	DWORD PTR [rax], edx
	jmp	.L9181
.L9704:
	nop
.L9181:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2112
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9705
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2112
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 32
	mov	rax, QWORD PTR [rax]
	add	rax, 20
	mov	DWORD PTR [rax], edx
	jmp	.L9183
.L9705:
	nop
.L9183:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2120
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9706
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2120
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 32
	mov	rax, QWORD PTR [rax]
	add	rax, 24
	mov	DWORD PTR [rax], edx
	jmp	.L9185
.L9706:
	nop
.L9185:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2128
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9707
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2128
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 32
	mov	rax, QWORD PTR [rax]
	add	rax, 28
	mov	DWORD PTR [rax], edx
	jmp	.L9490
.L9707:
	nop
.L9187:
	jmp	.L9490
.L9703:
	nop
.L9179:
	cmp	DWORD PTR -216[rbp], 71
	jne	.L9708
	nop
.L9188:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2320
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9709
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2320[rax]
	mov	QWORD PTR -488[rbp], rax
	mov	rax, QWORD PTR -488[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1478
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -496[rbp], rax
	cmp	QWORD PTR -496[rbp], 0
	je	.L9710
	jmp	[QWORD PTR -496[rbp]]
.L9710:
	nop
.L9193:
	mov	rax, QWORD PTR -488[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L9490
.L9709:
	nop
.L9191:
	jmp	.L9490
.L9708:
	nop
.L9189:
	cmp	DWORD PTR -216[rbp], 31
	jne	.L9711
	nop
.L9194:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	r9d, 0
	mov	r8d, 0
	mov	edx, 40008
	mov	rcx, rax
	call	SendMessageW
	jmp	.L9490
.L9711:
	nop
.L9195:
	cmp	DWORD PTR -216[rbp], 513
	jne	.L9712
	nop
.L9196:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 976
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2272
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9713
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	UNSCALEY
	movd	eax, xmm0
	mov	DWORD PTR -500[rbp], eax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 64
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	UNSCALEX
	movd	eax, xmm0
	mov	DWORD PTR -504[rbp], eax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2272[rax]
	mov	QWORD PTR -512[rbp], rax
	mov	rax, QWORD PTR -512[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1483
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -520[rbp], rax
	cmp	QWORD PTR -520[rbp], 0
	je	.L9714
	jmp	[QWORD PTR -520[rbp]]
.L9714:
	nop
.L9201:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	movzx	ebx, ax
	mov	eax, DWORD PTR -500[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	rsi, xmm0
	mov	eax, DWORD PTR -504[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	rdx, xmm0
	mov	QWORD PTR 32[rsp], rbx
	mov	rax, QWORD PTR -512[rbp]
	mov	r9, rsi
	mov	r8, rdx
	mov	edx, 0
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L9490
.L9713:
	nop
.L9199:
	jmp	.L9490
.L9712:
	nop
.L9197:
	cmp	DWORD PTR -216[rbp], 515
	jne	.L9715
	nop
.L9202:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2336
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9716
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2336[rax]
	mov	QWORD PTR -528[rbp], rax
	mov	rax, QWORD PTR -528[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1485
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -536[rbp], rax
	cmp	QWORD PTR -536[rbp], 0
	je	.L9717
	jmp	[QWORD PTR -536[rbp]]
.L9717:
	nop
.L9207:
	mov	rax, QWORD PTR -528[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L9490
.L9716:
	nop
.L9205:
	jmp	.L9490
.L9715:
	nop
.L9203:
	cmp	DWORD PTR -216[rbp], 514
	jne	.L9718
	nop
.L9208:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 976
	mov	QWORD PTR [rax], -1
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2328
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9719
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2328[rax]
	mov	QWORD PTR -544[rbp], rax
	mov	rax, QWORD PTR -544[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1488
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -552[rbp], rax
	cmp	QWORD PTR -552[rbp], 0
	je	.L9720
	jmp	[QWORD PTR -552[rbp]]
.L9720:
	nop
.L9213:
	mov	rax, QWORD PTR -544[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L9211
.L9719:
	nop
.L9211:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2280
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9721
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	UNSCALEY
	movd	eax, xmm0
	mov	DWORD PTR -556[rbp], eax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 64
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	UNSCALEX
	movd	eax, xmm0
	mov	DWORD PTR -560[rbp], eax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2280[rax]
	mov	QWORD PTR -568[rbp], rax
	mov	rax, QWORD PTR -568[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1489
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -576[rbp], rax
	cmp	QWORD PTR -576[rbp], 0
	je	.L9722
	jmp	[QWORD PTR -576[rbp]]
.L9722:
	nop
.L9217:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	movzx	ebx, ax
	mov	eax, DWORD PTR -556[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	rsi, xmm0
	mov	eax, DWORD PTR -560[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	rdx, xmm0
	mov	QWORD PTR 32[rsp], rbx
	mov	rax, QWORD PTR -568[rbp]
	mov	r9, rsi
	mov	r8, rdx
	mov	edx, 0
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L9490
.L9721:
	nop
.L9215:
	jmp	.L9490
.L9718:
	nop
.L9209:
	cmp	DWORD PTR -216[rbp], 519
	jne	.L9723
	nop
.L9218:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 976
	mov	QWORD PTR [rax], 2
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2272
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9724
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	UNSCALEY
	movd	eax, xmm0
	mov	DWORD PTR -580[rbp], eax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 64
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	UNSCALEX
	movd	eax, xmm0
	mov	DWORD PTR -584[rbp], eax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2272[rax]
	mov	QWORD PTR -592[rbp], rax
	mov	rax, QWORD PTR -592[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1492
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -600[rbp], rax
	cmp	QWORD PTR -600[rbp], 0
	je	.L9725
	jmp	[QWORD PTR -600[rbp]]
.L9725:
	nop
.L9223:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	movzx	ebx, ax
	mov	eax, DWORD PTR -580[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	rsi, xmm0
	mov	eax, DWORD PTR -584[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	rdx, xmm0
	mov	QWORD PTR 32[rsp], rbx
	mov	rax, QWORD PTR -592[rbp]
	mov	r9, rsi
	mov	r8, rdx
	mov	edx, 2
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L9490
.L9724:
	nop
.L9221:
	jmp	.L9490
.L9723:
	nop
.L9219:
	cmp	DWORD PTR -216[rbp], 520
	jne	.L9726
	nop
.L9224:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 976
	mov	QWORD PTR [rax], -1
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2280
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9727
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	UNSCALEY
	movd	eax, xmm0
	mov	DWORD PTR -604[rbp], eax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 64
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	UNSCALEX
	movd	eax, xmm0
	mov	DWORD PTR -608[rbp], eax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2280[rax]
	mov	QWORD PTR -616[rbp], rax
	mov	rax, QWORD PTR -616[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1495
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -624[rbp], rax
	cmp	QWORD PTR -624[rbp], 0
	je	.L9728
	jmp	[QWORD PTR -624[rbp]]
.L9728:
	nop
.L9229:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	movzx	ebx, ax
	mov	eax, DWORD PTR -604[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	rsi, xmm0
	mov	eax, DWORD PTR -608[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	rdx, xmm0
	mov	QWORD PTR 32[rsp], rbx
	mov	rax, QWORD PTR -616[rbp]
	mov	r9, rsi
	mov	r8, rdx
	mov	edx, 2
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L9490
.L9727:
	nop
.L9227:
	jmp	.L9490
.L9726:
	nop
.L9225:
	cmp	DWORD PTR -216[rbp], 516
	jne	.L9729
	nop
.L9230:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 976
	mov	QWORD PTR [rax], 1
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2272
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9730
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	UNSCALEX
	movd	eax, xmm0
	mov	DWORD PTR -628[rbp], eax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 64
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	UNSCALEX
	movd	eax, xmm0
	mov	DWORD PTR -632[rbp], eax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2272[rax]
	mov	QWORD PTR -640[rbp], rax
	mov	rax, QWORD PTR -640[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1498
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -648[rbp], rax
	cmp	QWORD PTR -648[rbp], 0
	je	.L9731
	jmp	[QWORD PTR -648[rbp]]
.L9731:
	nop
.L9235:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	movzx	ebx, ax
	mov	eax, DWORD PTR -628[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	rsi, xmm0
	mov	eax, DWORD PTR -632[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	rdx, xmm0
	mov	QWORD PTR 32[rsp], rbx
	mov	rax, QWORD PTR -640[rbp]
	mov	r9, rsi
	mov	r8, rdx
	mov	edx, 1
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L9490
.L9730:
	nop
.L9233:
	jmp	.L9490
.L9729:
	nop
.L9231:
	cmp	DWORD PTR -216[rbp], 517
	jne	.L9732
	nop
.L9236:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 976
	mov	QWORD PTR [rax], -1
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2280
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9733
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	UNSCALEY
	movd	eax, xmm0
	mov	DWORD PTR -652[rbp], eax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 64
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	UNSCALEX
	movd	eax, xmm0
	mov	DWORD PTR -656[rbp], eax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2280[rax]
	mov	QWORD PTR -664[rbp], rax
	mov	rax, QWORD PTR -664[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1501
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -672[rbp], rax
	cmp	QWORD PTR -672[rbp], 0
	je	.L9734
	jmp	[QWORD PTR -672[rbp]]
.L9734:
	nop
.L9241:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	movzx	ebx, ax
	mov	eax, DWORD PTR -652[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	rsi, xmm0
	mov	eax, DWORD PTR -656[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	rdx, xmm0
	mov	QWORD PTR 32[rsp], rbx
	mov	rax, QWORD PTR -664[rbp]
	mov	r9, rsi
	mov	r8, rdx
	mov	edx, 1
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L9239
.L9733:
	nop
.L9239:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL18CONTEXTMENU__get__Ev
	mov	QWORD PTR -680[rbp], rax
	cmp	QWORD PTR -680[rbp], 0
	je	.L9735
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL18CONTEXTMENU__get__Ev
	mov	QWORD PTR -688[rbp], rax
	mov	rax, QWORD PTR -688[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU13HANDLE__get__Ev
	mov	QWORD PTR -696[rbp], rax
	cmp	QWORD PTR -696[rbp], 0
	je	.L9736
	lea	rax, -1640[rbp]
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 64
	mov	rdx, QWORD PTR [rax]
	lea	rax, -1640[rbp]
	mov	DWORD PTR [rax], edx
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 72
	mov	rdx, QWORD PTR [rax]
	lea	rax, -1640[rbp]
	add	rax, 4
	mov	DWORD PTR [rax], edx
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -704[rbp], rax
	lea	rdx, -1640[rbp]
	mov	rax, QWORD PTR -704[rbp]
	mov	rcx, rax
	call	ClientToScreen
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL18CONTEXTMENU__get__Ev
	mov	QWORD PTR -712[rbp], rax
	lea	rax, -1640[rbp]
	add	rax, 4
	mov	eax, DWORD PTR [rax]
	movsx	rcx, eax
	lea	rax, -1640[rbp]
	mov	eax, DWORD PTR [rax]
	movsx	rdx, eax
	mov	rax, QWORD PTR -712[rbp]
	mov	r9d, 0
	mov	r8, rcx
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS9POPUPMENU5POPUPEu7INTEGERS3_P7MESSAGE
	jmp	.L9490
.L9243:
.L9245:
.L9246:
.L9735:
	nop
	jmp	.L9490
.L9736:
	nop
.L9247:
	jmp	.L9490
.L9732:
	nop
.L9237:
	cmp	DWORD PTR -216[rbp], 44
	jne	.L9737
	nop
.L9248:
	mov	QWORD PTR -1648[rbp], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 32[rax]
	mov	QWORD PTR -1648[rbp], rax
	mov	rax, QWORD PTR -1648[rbp]
	mov	QWORD PTR -720[rbp], rax
	mov	rax, QWORD PTR -720[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1514
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -728[rbp], rax
	cmp	QWORD PTR -728[rbp], 0
	je	.L9738
	jmp	[QWORD PTR -728[rbp]]
.L9738:
	nop
.L9251:
	mov	rax, QWORD PTR -720[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR -732[rbp], eax
	cmp	DWORD PTR -732[rbp], 1
	jne	.L9739
	nop
.L9252:
	jmp	.L9257
.L9739:
	nop
.L9253:
	cmp	DWORD PTR -732[rbp], 2
	je	.L9740
	nop
.L9255:
	cmp	DWORD PTR -732[rbp], 3
	jne	.L9741
	jmp	.L9256
.L9740:
	nop
.L9256:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	mov	edx, eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	GetDlgItem
	mov	QWORD PTR -744[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 32
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -744[rbp]
	mov	r9, rcx
	mov	r8, rdx
	mov	edx, 40005
	mov	rcx, rax
	call	SendMessageW
	jmp	.L9490
.L9254:
.L9741:
	nop
.L9257:
	jmp	.L9490
.L9737:
	nop
.L9249:
	cmp	DWORD PTR -216[rbp], 43
	jne	.L9742
	nop
.L9258:
	mov	QWORD PTR -1656[rbp], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 32[rax]
	mov	QWORD PTR -1656[rbp], rax
	mov	rax, QWORD PTR -1656[rbp]
	mov	QWORD PTR -752[rbp], rax
	mov	rax, QWORD PTR -752[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1524
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -760[rbp], rax
	cmp	QWORD PTR -760[rbp], 0
	je	.L9743
	jmp	[QWORD PTR -760[rbp]]
.L9743:
	nop
.L9261:
	mov	rax, QWORD PTR -752[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR -764[rbp], eax
	cmp	DWORD PTR -764[rbp], 1
	jne	.L9744
	nop
.L9262:
	jmp	.L9274
.L9744:
	nop
.L9263:
	cmp	DWORD PTR -764[rbp], 4
	je	.L9745
	nop
.L9265:
	cmp	DWORD PTR -764[rbp], 3
	je	.L9746
	nop
.L9267:
	cmp	DWORD PTR -764[rbp], 100
	je	.L9747
	nop
.L9268:
	cmp	DWORD PTR -764[rbp], 2
	je	.L9748
	nop
.L9269:
	cmp	DWORD PTR -764[rbp], 102
	je	.L9749
	nop
.L9270:
	cmp	DWORD PTR -764[rbp], 5
	je	.L9750
	nop
.L9271:
	cmp	DWORD PTR -764[rbp], 101
	jne	.L9751
	jmp	.L9266
.L9745:
	nop
	jmp	.L9266
.L9746:
	nop
	jmp	.L9266
.L9747:
	nop
	jmp	.L9266
.L9748:
	nop
	jmp	.L9266
.L9749:
	nop
	jmp	.L9266
.L9750:
	nop
.L9266:
	mov	rax, QWORD PTR -1656[rbp]
	mov	QWORD PTR -776[rbp], rax
	mov	rax, QWORD PTR -776[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1530
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -784[rbp], rax
	cmp	QWORD PTR -784[rbp], 0
	je	.L9752
	jmp	[QWORD PTR -784[rbp]]
.L9752:
	nop
.L9273:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 32
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -776[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	mov	r9, rcx
	mov	r8, rdx
	mov	edx, 40006
	mov	rcx, rax
	call	SendMessageW
	jmp	.L9490
.L9264:
.L9751:
	nop
.L9274:
	jmp	.L9490
.L9742:
	nop
.L9259:
	cmp	DWORD PTR -216[rbp], 273
	jne	.L9753
	nop
.L9275:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL17GETPOPUPMENUITEMSEv
	mov	QWORD PTR -1664[rbp], 0
	mov	QWORD PTR -104[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1008
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -792[rbp], rax
	jmp	.L9277
.L9760:
	nop
.L9278:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 1016[rax]
	mov	QWORD PTR -800[rbp], rax
	mov	rax, QWORD PTR -800[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1536
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -808[rbp], rax
	cmp	QWORD PTR -808[rbp], 0
	je	.L9754
	jmp	[QWORD PTR -808[rbp]]
.L9754:
	nop
.L9280:
	mov	rax, QWORD PTR -104[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -800[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -1664[rbp], rax
	mov	rax, QWORD PTR -1664[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM14COMMAND__get__Ev
	mov	QWORD PTR -816[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 48
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR -816[rbp], rax
	jne	.L9755
	mov	rax, QWORD PTR -1664[rbp]
	mov	QWORD PTR -824[rbp], rax
	mov	rax, QWORD PTR -824[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1538
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -832[rbp], rax
	cmp	QWORD PTR -832[rbp], 0
	je	.L9756
	jmp	[QWORD PTR -832[rbp]]
.L9756:
	nop
.L9284:
	mov	rax, QWORD PTR -824[rbp]
	add	rax, 624
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9757
	mov	rax, QWORD PTR -1664[rbp]
	mov	QWORD PTR -840[rbp], rax
	mov	rax, QWORD PTR -840[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1538
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -848[rbp], rax
	cmp	QWORD PTR -848[rbp], 0
	je	.L9758
	jmp	[QWORD PTR -848[rbp]]
.L9758:
	nop
.L9288:
	mov	rax, QWORD PTR -840[rbp]
	mov	rax, QWORD PTR 624[rax]
	mov	QWORD PTR -856[rbp], rax
	mov	rax, QWORD PTR -856[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1538
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -864[rbp], rax
	cmp	QWORD PTR -864[rbp], 0
	je	.L9759
	jmp	[QWORD PTR -864[rbp]]
.L9759:
	nop
.L9290:
	mov	rax, QWORD PTR -1664[rbp]
	mov	rdx, QWORD PTR -856[rbp]
	mov	rcx, rax
	call	rdx
	jmp	.L9291
.L9757:
	nop
.L9286:
	jmp	.L9291
.L9282:
.L9292:
.L9755:
	nop
.L9293:
	add	QWORD PTR -104[rbp], 1
.L9277:
	mov	rax, QWORD PTR -104[rbp]
	cmp	rax, QWORD PTR -792[rbp]
	jle	.L9760
	nop
.L9291:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 32
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 32
	mov	rax, QWORD PTR [rax]
	mov	r9, rcx
	mov	r8, rdx
	mov	edx, 40001
	mov	rcx, rax
	call	SendMessageW
	jmp	.L9490
.L9753:
	nop
.L9276:
	cmp	DWORD PTR -216[rbp], 512
	jne	.L9761
	nop
.L9294:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 393
	movzx	eax, BYTE PTR [rax]
	test	al, al
	jne	.L9762
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 393
	mov	BYTE PTR [rax], 1
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2304
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9763
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2304[rax]
	mov	QWORD PTR -872[rbp], rax
	mov	rax, QWORD PTR -872[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1546
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -880[rbp], rax
	cmp	QWORD PTR -880[rbp], 0
	je	.L9764
	jmp	[QWORD PTR -880[rbp]]
.L9764:
	nop
.L9300:
	mov	rax, QWORD PTR -872[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L9302
.L9297:
.L9301:
.L9762:
	nop
	jmp	.L9302
.L9763:
	nop
.L9302:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2264
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9765
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	UNSCALEY
	movd	eax, xmm0
	mov	DWORD PTR -884[rbp], eax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 64
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	UNSCALEX
	movd	eax, xmm0
	mov	DWORD PTR -888[rbp], eax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2264[rax]
	mov	QWORD PTR -896[rbp], rax
	mov	rax, QWORD PTR -896[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1548
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -904[rbp], rax
	cmp	QWORD PTR -904[rbp], 0
	je	.L9766
	jmp	[QWORD PTR -904[rbp]]
.L9766:
	nop
.L9306:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	movzx	ebx, ax
	mov	eax, DWORD PTR -884[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	rsi, xmm0
	mov	eax, DWORD PTR -888[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	rdx, xmm0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 976
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR 32[rsp], rbx
	mov	r10, QWORD PTR -896[rbp]
	mov	r9, rsi
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	r10
	jmp	.L9304
.L9765:
	nop
.L9304:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 336
	movzx	eax, BYTE PTR [rax]
	test	al, al
	jne	.L9767
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2312
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jne	.L9768
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2296
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -112[rbp], rax
	jmp	.L9311
.L9768:
	nop
.L9310:
	mov	QWORD PTR -112[rbp], -1
.L9311:
	mov	rax, QWORD PTR -112[rbp]
	test	rax, rax
	jne	.L9769
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2304
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -120[rbp], rax
	jmp	.L9314
.L9769:
	nop
.L9313:
	mov	QWORD PTR -120[rbp], -1
.L9314:
	cmp	QWORD PTR -120[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -128[rbp], rax
	jmp	.L9315
.L9767:
	nop
.L9308:
	mov	QWORD PTR -128[rbp], 0
.L9315:
	cmp	QWORD PTR -128[rbp], 0
	je	.L9770
	lea	rax, -1696[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	lea	rax, -1696[rbp]
	mov	DWORD PTR [rax], 24
	lea	rax, -1696[rbp]
	add	rax, 4
	mov	DWORD PTR [rax], 3
	lea	rax, -1696[rbp]
	add	rax, 8
	mov	rdx, QWORD PTR 16[rbp]
	mov	rdx, QWORD PTR 160[rdx]
	mov	QWORD PTR [rax], rdx
	lea	rax, -1696[rbp]
	mov	rcx, rax
	call	TrackMouseEvent
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 336
	mov	BYTE PTR [rax], 1
	jmp	.L9490
.L9317:
.L9770:
	nop
.L9318:
	jmp	.L9490
.L9761:
	nop
.L9295:
	cmp	DWORD PTR -216[rbp], 522
	jne	.L9771
	nop
.L9319:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	mov	edx, 3999999999
	cmp	rax, rdx
	ja	.L9772
	mov	QWORD PTR SCRDIRECTION$3.19098[rip], 1
	jmp	.L9323
.L9772:
	nop
.L9322:
	mov	QWORD PTR SCRDIRECTION$3.19098[rip], -1
.L9323:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2288
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9773
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	UNSCALEY
	movd	eax, xmm0
	mov	DWORD PTR -908[rbp], eax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 64
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	UNSCALEX
	movd	eax, xmm0
	mov	DWORD PTR -912[rbp], eax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2288[rax]
	mov	QWORD PTR -920[rbp], rax
	mov	rax, QWORD PTR -920[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1569
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -928[rbp], rax
	cmp	QWORD PTR -928[rbp], 0
	je	.L9774
	jmp	[QWORD PTR -928[rbp]]
.L9774:
	nop
.L9327:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	movzx	ebx, ax
	mov	eax, DWORD PTR -908[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	rsi, xmm0
	mov	eax, DWORD PTR -912[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	rdx, xmm0
	mov	rax, QWORD PTR SCRDIRECTION$3.19098[rip]
	mov	QWORD PTR 32[rsp], rbx
	mov	r10, QWORD PTR -920[rbp]
	mov	r9, rsi
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	r10
	jmp	.L9490
.L9773:
	nop
.L9325:
	jmp	.L9490
.L9771:
	nop
.L9320:
	cmp	DWORD PTR -216[rbp], 675
	jne	.L9775
	nop
.L9328:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2312
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9776
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2312[rax]
	mov	QWORD PTR -936[rbp], rax
	mov	rax, QWORD PTR -936[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1571
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -944[rbp], rax
	cmp	QWORD PTR -944[rbp], 0
	je	.L9777
	jmp	[QWORD PTR -944[rbp]]
.L9777:
	nop
.L9333:
	mov	rax, QWORD PTR -936[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L9331
.L9776:
	nop
.L9331:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 393
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 336
	mov	BYTE PTR [rax], 0
	jmp	.L9490
.L9775:
	nop
.L9329:
	cmp	DWORD PTR -216[rbp], 673
	jne	.L9778
	nop
.L9334:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2296
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9779
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	UNSCALEX
	movd	eax, xmm0
	mov	DWORD PTR -948[rbp], eax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 64
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	UNSCALEX
	movd	eax, xmm0
	mov	DWORD PTR -952[rbp], eax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2296[rax]
	mov	QWORD PTR -960[rbp], rax
	mov	rax, QWORD PTR -960[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1575
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -968[rbp], rax
	cmp	QWORD PTR -968[rbp], 0
	je	.L9780
	jmp	[QWORD PTR -968[rbp]]
.L9780:
	nop
.L9339:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	movzx	ebx, ax
	mov	eax, DWORD PTR -948[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	rsi, xmm0
	mov	eax, DWORD PTR -952[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	rdx, xmm0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 976
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR 32[rsp], rbx
	mov	r10, QWORD PTR -960[rbp]
	mov	r9, rsi
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	r10
	jmp	.L9337
.L9779:
	nop
.L9337:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 336
	mov	BYTE PTR [rax], 0
	jmp	.L9490
.L9778:
	nop
.L9335:
	cmp	DWORD PTR -216[rbp], 563
	jne	.L9781
	nop
.L9340:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2248
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9782
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR -976[rbp], rax
	mov	QWORD PTR -1704[rbp], 0
	mov	QWORD PTR -1712[rbp], 0
	mov	QWORD PTR -1720[rbp], 0
	mov	rax, QWORD PTR -976[rbp]
	mov	r9d, 0
	mov	r8d, 0
	mov	edx, -1
	mov	rcx, rax
	call	DragQueryFileW
	mov	DWORD PTR -980[rbp], eax
	mov	eax, DWORD PTR -980[rbp]
	mov	QWORD PTR -1704[rbp], rax
	mov	QWORD PTR -1728[rbp], 0
	mov	QWORD PTR -1720[rbp], 0
	mov	rax, QWORD PTR -1704[rbp]
	sub	rax, 1
	mov	QWORD PTR -992[rbp], rax
	jmp	.L9344
.L9785:
	nop
.L9345:
	lea	rax, -1728[rbp]
	mov	edx, 260
	mov	rcx, rax
	call	WREALLOCATE
	mov	rdx, QWORD PTR -1728[rbp]
	mov	rax, QWORD PTR -1720[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR -976[rbp]
	mov	r9d, 260
	mov	r8, rdx
	mov	edx, ecx
	mov	rcx, rax
	call	DragQueryFileW
	mov	DWORD PTR -996[rbp], eax
	mov	eax, DWORD PTR -996[rbp]
	mov	QWORD PTR -1712[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2248
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9783
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2248[rax]
	mov	QWORD PTR -1008[rbp], rax
	mov	rax, QWORD PTR -1008[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1587
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1016[rbp], rax
	cmp	QWORD PTR -1016[rbp], 0
	je	.L9784
	jmp	[QWORD PTR -1016[rbp]]
.L9784:
	nop
.L9349:
	mov	rax, QWORD PTR -1728[rbp]
	mov	r8, QWORD PTR -1008[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	r8
	jmp	.L9350
.L9347:
.L9783:
	nop
.L9350:
	mov	rax, QWORD PTR -1720[rbp]
	add	rax, 1
	mov	QWORD PTR -1720[rbp], rax
.L9344:
	mov	rax, QWORD PTR -1720[rbp]
	cmp	QWORD PTR -992[rbp], rax
	jge	.L9785
	nop
.L9351:
	mov	rax, QWORD PTR -976[rbp]
	mov	rcx, rax
	call	DragFinish
	jmp	.L9490
.L9343:
.L9782:
	nop
.L9352:
	jmp	.L9490
.L9781:
	nop
.L9341:
	cmp	DWORD PTR -216[rbp], 258
	jne	.L9786
	nop
.L9353:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2344
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9787
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2344[rax]
	mov	QWORD PTR -1024[rbp], rax
	mov	rax, QWORD PTR -1024[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1592
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1032[rbp], rax
	cmp	QWORD PTR -1032[rbp], 0
	je	.L9788
	jmp	[QWORD PTR -1032[rbp]]
.L9788:
	nop
.L9358:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR -1024[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	r8
	jmp	.L9490
.L9787:
	nop
.L9356:
	jmp	.L9490
.L9786:
	nop
.L9354:
	cmp	DWORD PTR -216[rbp], 256
	jne	.L9789
	nop
.L9359:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2352
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9790
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2352[rax]
	mov	QWORD PTR -1040[rbp], rax
	mov	rax, QWORD PTR -1040[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1594
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1048[rbp], rax
	cmp	QWORD PTR -1048[rbp], 0
	je	.L9791
	jmp	[QWORD PTR -1048[rbp]]
.L9791:
	nop
.L9364:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 32
	mov	rax, QWORD PTR [rax]
	movzx	edx, ax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	mov	r9, QWORD PTR -1040[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	r9
	jmp	.L9362
.L9790:
	nop
.L9362:
	mov	ecx, 18
	call	GetKeyState
	mov	WORD PTR -1050[rbp], ax
	cmp	WORD PTR -1050[rbp], 0
	js	.L9792
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	and	eax, 65535
	mov	QWORD PTR -1064[rbp], rax
	cmp	QWORD PTR -1064[rbp], 9
	jne	.L9793
	nop
.L9367:
	jmp	.L9420
.L9793:
	nop
.L9368:
	cmp	QWORD PTR -1064[rbp], 13
	jne	.L9794
	nop
.L9369:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL7GETFORMEv
	mov	QWORD PTR -1072[rbp], rax
	mov	rax, QWORD PTR -1072[rbp]
	mov	QWORD PTR -1080[rbp], rax
	cmp	QWORD PTR -1080[rbp], 0
	je	.L9795
	mov	rax, QWORD PTR -1080[rbp]
	mov	QWORD PTR -1088[rbp], rax
	mov	rax, QWORD PTR -1088[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1606
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1096[rbp], rax
	cmp	QWORD PTR -1096[rbp], 0
	je	.L9796
	jmp	[QWORD PTR -1096[rbp]]
.L9796:
	nop
.L9374:
	mov	rax, QWORD PTR -1088[rbp]
	add	rax, 984
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -136[rbp], rax
	jmp	.L9375
.L9795:
	nop
.L9372:
	mov	QWORD PTR -136[rbp], 0
.L9375:
	mov	rax, QWORD PTR -136[rbp]
	test	rax, rax
	je	.L9797
	mov	rax, QWORD PTR -1080[rbp]
	mov	QWORD PTR -1104[rbp], rax
	mov	rax, QWORD PTR -1104[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1606
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1112[rbp], rax
	cmp	QWORD PTR -1112[rbp], 0
	je	.L9798
	jmp	[QWORD PTR -1112[rbp]]
.L9798:
	nop
.L9379:
	mov	rax, QWORD PTR -1104[rbp]
	mov	rax, QWORD PTR 984[rax]
	mov	QWORD PTR -1120[rbp], rax
	mov	rax, QWORD PTR -1120[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1606
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1128[rbp], rax
	cmp	QWORD PTR -1128[rbp], 0
	je	.L9799
	jmp	[QWORD PTR -1128[rbp]]
.L9799:
	nop
.L9381:
	mov	rax, QWORD PTR -1120[rbp]
	add	rax, 2328
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -144[rbp], rax
	jmp	.L9382
.L9797:
	nop
.L9377:
	mov	QWORD PTR -144[rbp], 0
.L9382:
	cmp	QWORD PTR -144[rbp], 0
	je	.L9800
	mov	rax, QWORD PTR -1080[rbp]
	mov	QWORD PTR -1136[rbp], rax
	mov	rax, QWORD PTR -1136[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1607
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1144[rbp], rax
	cmp	QWORD PTR -1144[rbp], 0
	je	.L9801
	jmp	[QWORD PTR -1144[rbp]]
.L9801:
	nop
.L9386:
	mov	rax, QWORD PTR -1080[rbp]
	mov	QWORD PTR -1152[rbp], rax
	mov	rax, QWORD PTR -1152[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1607
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1160[rbp], rax
	cmp	QWORD PTR -1160[rbp], 0
	je	.L9802
	jmp	[QWORD PTR -1160[rbp]]
.L9802:
	nop
.L9388:
	mov	rax, QWORD PTR -1152[rbp]
	mov	rax, QWORD PTR 984[rax]
	mov	QWORD PTR -1168[rbp], rax
	mov	rax, QWORD PTR -1168[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1607
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1176[rbp], rax
	cmp	QWORD PTR -1176[rbp], 0
	je	.L9803
	jmp	[QWORD PTR -1176[rbp]]
.L9803:
	nop
.L9390:
	mov	rax, QWORD PTR -1168[rbp]
	mov	rax, QWORD PTR 2328[rax]
	mov	QWORD PTR -1184[rbp], rax
	mov	rax, QWORD PTR -1184[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1607
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1192[rbp], rax
	cmp	QWORD PTR -1192[rbp], 0
	je	.L9804
	jmp	[QWORD PTR -1192[rbp]]
.L9804:
	nop
.L9392:
	mov	rax, QWORD PTR -1136[rbp]
	add	rax, 984
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR -1184[rbp]
	mov	rcx, rax
	call	rdx
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], -1
	jmp	.L9490
.L9384:
.L9800:
	nop
.L9393:
	jmp	.L9420
.L9794:
	nop
.L9370:
	cmp	QWORD PTR -1064[rbp], 27
	jne	.L9805
	nop
.L9394:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL7GETFORMEv
	mov	QWORD PTR -1200[rbp], rax
	mov	rax, QWORD PTR -1200[rbp]
	mov	QWORD PTR -1208[rbp], rax
	cmp	QWORD PTR -1208[rbp], 0
	je	.L9806
	mov	rax, QWORD PTR -1208[rbp]
	mov	QWORD PTR -1216[rbp], rax
	mov	rax, QWORD PTR -1216[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1613
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1224[rbp], rax
	cmp	QWORD PTR -1224[rbp], 0
	je	.L9807
	jmp	[QWORD PTR -1224[rbp]]
.L9807:
	nop
.L9398:
	mov	rax, QWORD PTR -1216[rbp]
	add	rax, 992
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -152[rbp], rax
	jmp	.L9399
.L9806:
	nop
.L9396:
	mov	QWORD PTR -152[rbp], 0
.L9399:
	mov	rax, QWORD PTR -152[rbp]
	test	rax, rax
	je	.L9808
	mov	rax, QWORD PTR -1208[rbp]
	mov	QWORD PTR -1232[rbp], rax
	mov	rax, QWORD PTR -1232[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1613
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1240[rbp], rax
	cmp	QWORD PTR -1240[rbp], 0
	je	.L9809
	jmp	[QWORD PTR -1240[rbp]]
.L9809:
	nop
.L9403:
	mov	rax, QWORD PTR -1232[rbp]
	mov	rax, QWORD PTR 992[rax]
	mov	QWORD PTR -1248[rbp], rax
	mov	rax, QWORD PTR -1248[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1613
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1256[rbp], rax
	cmp	QWORD PTR -1256[rbp], 0
	je	.L9810
	jmp	[QWORD PTR -1256[rbp]]
.L9810:
	nop
.L9405:
	mov	rax, QWORD PTR -1248[rbp]
	add	rax, 2328
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -160[rbp], rax
	jmp	.L9406
.L9808:
	nop
.L9401:
	mov	QWORD PTR -160[rbp], 0
.L9406:
	cmp	QWORD PTR -160[rbp], 0
	je	.L9811
	mov	rax, QWORD PTR -1208[rbp]
	mov	QWORD PTR -1264[rbp], rax
	mov	rax, QWORD PTR -1264[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1614
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1272[rbp], rax
	cmp	QWORD PTR -1272[rbp], 0
	je	.L9812
	jmp	[QWORD PTR -1272[rbp]]
.L9812:
	nop
.L9409:
	mov	rax, QWORD PTR -1208[rbp]
	mov	QWORD PTR -1280[rbp], rax
	mov	rax, QWORD PTR -1280[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1614
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1288[rbp], rax
	cmp	QWORD PTR -1288[rbp], 0
	je	.L9813
	jmp	[QWORD PTR -1288[rbp]]
.L9813:
	nop
.L9411:
	mov	rax, QWORD PTR -1280[rbp]
	mov	rax, QWORD PTR 992[rax]
	mov	QWORD PTR -1296[rbp], rax
	mov	rax, QWORD PTR -1296[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1614
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1304[rbp], rax
	cmp	QWORD PTR -1304[rbp], 0
	je	.L9814
	jmp	[QWORD PTR -1304[rbp]]
.L9814:
	nop
.L9413:
	mov	rax, QWORD PTR -1296[rbp]
	mov	rax, QWORD PTR 2328[rax]
	mov	QWORD PTR -1312[rbp], rax
	mov	rax, QWORD PTR -1312[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1614
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1320[rbp], rax
	cmp	QWORD PTR -1320[rbp], 0
	je	.L9815
	jmp	[QWORD PTR -1320[rbp]]
.L9815:
	nop
.L9415:
	mov	rax, QWORD PTR -1264[rbp]
	add	rax, 992
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR -1312[rbp]
	mov	rcx, rax
	call	rdx
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], -1
	jmp	.L9490
.L9366:
.L9416:
.L9417:
.L9418:
.L9419:
.L9792:
	nop
	jmp	.L9490
.L9805:
	nop
	jmp	.L9490
.L9811:
	nop
.L9420:
	jmp	.L9490
.L9789:
	nop
.L9360:
	cmp	DWORD PTR -216[rbp], 257
	jne	.L9816
	nop
.L9421:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2360
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9817
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2360[rax]
	mov	QWORD PTR -1328[rbp], rax
	mov	rax, QWORD PTR -1328[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1621
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1336[rbp], rax
	cmp	QWORD PTR -1336[rbp], 0
	je	.L9818
	jmp	[QWORD PTR -1336[rbp]]
.L9818:
	nop
.L9426:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 32
	mov	rax, QWORD PTR [rax]
	movzx	edx, ax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	movzx	eax, ax
	mov	r9, QWORD PTR -1328[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	r9
	jmp	.L9490
.L9817:
	nop
.L9424:
	jmp	.L9490
.L9816:
	nop
.L9422:
	cmp	DWORD PTR -216[rbp], 7
	jne	.L9819
	nop
.L9427:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2392
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9820
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2392[rax]
	mov	QWORD PTR -1344[rbp], rax
	mov	rax, QWORD PTR -1344[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1623
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1352[rbp], rax
	cmp	QWORD PTR -1352[rbp], 0
	je	.L9821
	jmp	[QWORD PTR -1352[rbp]]
.L9821:
	nop
.L9432:
	mov	rax, QWORD PTR -1344[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L9430
.L9820:
	nop
.L9430:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	movzx	eax, BYTE PTR [rax]
	test	al, al
	jne	.L9822
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL7GETFORMEv
	mov	QWORD PTR -1360[rbp], rax
	mov	rax, QWORD PTR -1360[rbp]
	mov	QWORD PTR -1368[rbp], rax
	cmp	QWORD PTR -1368[rbp], 0
	je	.L9823
	mov	rax, QWORD PTR -1368[rbp]
	mov	QWORD PTR -1376[rbp], rax
	mov	rax, QWORD PTR -1376[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1627
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1384[rbp], rax
	cmp	QWORD PTR -1384[rbp], 0
	je	.L9824
	jmp	[QWORD PTR -1384[rbp]]
.L9824:
	nop
.L9437:
	mov	rax, QWORD PTR -1376[rbp]
	lea	rdx, 1000[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR -1368[rbp]
	mov	QWORD PTR -1392[rbp], rax
	mov	rax, QWORD PTR -1392[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1628
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1400[rbp], rax
	cmp	QWORD PTR -1400[rbp], 0
	je	.L9825
	jmp	[QWORD PTR -1400[rbp]]
.L9825:
	nop
.L9439:
	mov	rax, QWORD PTR -1392[rbp]
	add	rax, 1176
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9826
	mov	rax, QWORD PTR -1368[rbp]
	mov	QWORD PTR -1408[rbp], rax
	mov	rax, QWORD PTR -1408[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1628
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1416[rbp], rax
	cmp	QWORD PTR -1416[rbp], 0
	je	.L9827
	jmp	[QWORD PTR -1416[rbp]]
.L9827:
	nop
.L9442:
	mov	rax, QWORD PTR -1408[rbp]
	mov	rax, QWORD PTR 1176[rax]
	mov	QWORD PTR -1424[rbp], rax
	mov	rax, QWORD PTR -1424[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1628
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1432[rbp], rax
	cmp	QWORD PTR -1432[rbp], 0
	je	.L9828
	jmp	[QWORD PTR -1432[rbp]]
.L9828:
	nop
.L9444:
	mov	rax, QWORD PTR -1368[rbp]
	mov	rdx, QWORD PTR -1424[rbp]
	mov	rcx, rax
	call	rdx
	jmp	.L9490
.L9434:
.L9445:
.L9446:
.L9447:
.L9822:
	nop
	jmp	.L9490
.L9823:
	nop
	jmp	.L9490
.L9826:
	nop
.L9448:
	jmp	.L9490
.L9819:
	nop
.L9428:
	cmp	DWORD PTR -216[rbp], 8
	jne	.L9829
	nop
.L9449:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2400
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9830
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2400[rax]
	mov	QWORD PTR -1440[rbp], rax
	mov	rax, QWORD PTR -1440[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1632
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1448[rbp], rax
	cmp	QWORD PTR -1448[rbp], 0
	je	.L9831
	jmp	[QWORD PTR -1448[rbp]]
.L9831:
	nop
.L9454:
	mov	rax, QWORD PTR -1440[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L9490
.L9830:
	nop
.L9452:
	jmp	.L9490
.L9829:
	nop
.L9450:
	cmp	DWORD PTR -216[rbp], 78
	jne	.L9832
	nop
.L9455:
	mov	QWORD PTR -1736[rbp], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 32[rax]
	mov	QWORD PTR -1736[rbp], rax
	mov	rax, QWORD PTR -1736[rbp]
	mov	QWORD PTR -1456[rbp], rax
	mov	rax, QWORD PTR -1456[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1637
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1464[rbp], rax
	cmp	QWORD PTR -1464[rbp], 0
	je	.L9833
	jmp	[QWORD PTR -1464[rbp]]
.L9833:
	nop
.L9458:
	mov	rax, QWORD PTR -1456[rbp]
	add	rax, 16
	mov	eax, DWORD PTR [rax]
	cmp	eax, -530
	jne	.L9834
	mov	rax, QWORD PTR FWINDOW$3.19271[rip]
	test	rax, rax
	je	.L9835
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 32
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR FWINDOW$3.19271[rip]
	mov	r9, rcx
	mov	r8, rdx
	mov	edx, 40011
	mov	rcx, rax
	call	SendMessageW
	jmp	.L9471
.L9835:
	nop
.L9462:
	jmp	.L9471
.L9834:
	nop
.L9460:
	mov	rax, QWORD PTR -1736[rbp]
	mov	QWORD PTR -1472[rbp], rax
	mov	rax, QWORD PTR -1472[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1640
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1480[rbp], rax
	cmp	QWORD PTR -1480[rbp], 0
	je	.L9836
	jmp	[QWORD PTR -1480[rbp]]
.L9836:
	nop
.L9465:
	mov	rax, QWORD PTR -1472[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR FWINDOW$3.19271[rip], rax
	mov	rax, QWORD PTR FWINDOW$3.19271[rip]
	mov	edx, -21
	mov	rcx, rax
	call	GetWindowLongPtrW
	mov	QWORD PTR -1488[rbp], rax
	mov	rax, QWORD PTR -1488[rbp]
	mov	QWORD PTR -1496[rbp], rax
	cmp	QWORD PTR -1496[rbp], 0
	je	.L9837
	mov	rax, QWORD PTR -1496[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL7INDEXOFEPS2_
	mov	QWORD PTR -1504[rbp], rax
	cmp	QWORD PTR -1504[rbp], -1
	je	.L9838
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 16
	mov	DWORD PTR [rax], 40002
	mov	rax, QWORD PTR -1496[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 56
	mov	r8, QWORD PTR [rax]
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -1496[rbp]
	mov	rcx, rax
	call	r8
	jmp	.L9471
.L9838:
	nop
.L9468:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 32
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR FWINDOW$3.19271[rip]
	mov	r9, rcx
	mov	r8, rdx
	mov	edx, 40002
	mov	rcx, rax
	call	SendMessageW
	jmp	.L9490
.L9463:
.L9469:
.L9470:
.L9837:
	nop
.L9471:
	jmp	.L9490
.L9832:
	nop
.L9456:
	cmp	DWORD PTR -216[rbp], 83
	jne	.L9839
	nop
.L9472:
	jmp	.L9490
.L9839:
	nop
.L9473:
	cmp	DWORD PTR -216[rbp], 40
	jne	.L9840
	nop
.L9474:
	mov	QWORD PTR -1744[rbp], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL7GETFORMEv
	mov	QWORD PTR -1512[rbp], rax
	mov	rax, QWORD PTR -1512[rbp]
	mov	QWORD PTR -1520[rbp], rax
	cmp	QWORD PTR -1520[rbp], 0
	je	.L9841
	mov	rax, QWORD PTR -1520[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL17SELECTNEXTCONTROLEb
	mov	QWORD PTR -1528[rbp], rax
	mov	rax, QWORD PTR -1528[rbp]
	mov	QWORD PTR -1744[rbp], rax
	mov	rax, QWORD PTR -1744[rbp]
	test	rax, rax
	je	.L9842
	mov	rax, QWORD PTR -1744[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL8SETFOCUSEv
	jmp	.L9490
.L9477:
.L9479:
.L9841:
	nop
	jmp	.L9490
.L9842:
	nop
.L9480:
	jmp	.L9490
.L9840:
	nop
.L9475:
	cmp	DWORD PTR -216[rbp], 2
	jne	.L9843
	nop
.L9481:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1144
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR HBRBKGND$[rip]
	cmp	rdx, rax
	jne	.L9844
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1144
	mov	QWORD PTR [rax], 0
	jmp	.L9483
.L9844:
	nop
.L9483:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	r8d, 0
	mov	edx, -21
	mov	rcx, rax
	call	SetWindowLongPtrW
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2240
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9845
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2240[rax]
	mov	QWORD PTR -1536[rbp], rax
	mov	rax, QWORD PTR -1536[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1663
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -1544[rbp], rax
	cmp	QWORD PTR -1544[rbp], 0
	je	.L9846
	jmp	[QWORD PTR -1544[rbp]]
.L9846:
	nop
.L9487:
	mov	rax, QWORD PTR -1536[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L9490
.L9845:
	nop
.L9485:
	mov	edx, 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__set__EP6HWND__
	jmp	.L9490
.L9048:
.L9488:
.L9489:
.L9675:
	nop
	jmp	.L9490
.L9843:
	nop
.L9490:
	mov	rax, QWORD PTR -192[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -176[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	add	rsp, 1776
	pop	rbx
	pop	rsi
	pop	rbp
	ret
	.section .rdata,"dr"
.LC535:
	.ascii "PROCESSMESSAGEAFTER\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL19PROCESSMESSAGEAFTERER7MESSAGE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL19PROCESSMESSAGEAFTERER7MESSAGE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L9848:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC535[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	eax, DWORD PTR 16[rax]
	mov	DWORD PTR -36[rbp], eax
	cmp	DWORD PTR -36[rbp], 132
	jne	.L9866
	nop
.L9849:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L9867
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT9CLASSNAMEEv
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	rdx, .LC501[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -52[rbp], eax
	cmp	DWORD PTR -52[rbp], 0
	jmp	.L9855
.L9852:
.L9853:
.L9854:
.L9867:
	nop
.L9855:
	jmp	.L9863
.L9866:
	nop
.L9850:
	cmp	DWORD PTR -36[rbp], 2
	jne	.L9868
	nop
.L9857:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	r8d, 0
	mov	edx, -21
	mov	rcx, rax
	call	SetWindowLongPtrW
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2240
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9869
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2240[rax]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1688
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	je	.L9870
	jmp	[QWORD PTR -72[rbp]]
.L9870:
	nop
.L9860:
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L9863
.L9856:
.L9861:
.L9862:
.L9868:
	nop
	jmp	.L9863
.L9869:
	nop
.L9863:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC536:
	.ascii "ENUMPOPUPMENUITEMS\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL18ENUMPOPUPMENUITEMSERNS1_8MENUITEME;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL18ENUMPOPUPMENUITEMSERNS1_8MENUITEME:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	BYTE PTR -73[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC536[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L9872:
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEMcvPvEv
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 1008[rax]
	mov	rax, QWORD PTR -48[rbp]
	mov	rdx, rax
	call	_ZN4LIST3ADDEPv
	mov	QWORD PTR -8[rbp], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM12COUNT__get__Ev
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	sub	rax, 1
	mov	QWORD PTR -64[rbp], rax
	jmp	.L9873
.L9880:
	nop
.L9874:
	mov	rdx, QWORD PTR -8[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL18ENUMPOPUPMENUITEMSERNS1_8MENUITEME
.L9875:
	add	QWORD PTR -8[rbp], 1
.L9873:
	mov	rax, QWORD PTR -8[rbp]
	cmp	rax, QWORD PTR -64[rbp]
	jle	.L9880
	nop
.L9876:
	mov	BYTE PTR -73[rbp], 1
	nop
.L9877:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -73[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC537:
	.ascii "GETPOPUPMENUITEMS\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL17GETPOPUPMENUITEMSEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL17GETPOPUPMENUITEMSEv:
	push	rbp
	mov	rbp, rsp
	add	rsp, -128
	mov	QWORD PTR 16[rbp], rcx
.L9882:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC537[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1008
	mov	rcx, rax
	call	_ZN4LIST5CLEAREv
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL18CONTEXTMENU__get__Ev
	mov	QWORD PTR -48[rbp], rax
	cmp	QWORD PTR -48[rbp], 0
	je	.L9892
	mov	QWORD PTR -8[rbp], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL18CONTEXTMENU__get__Ev
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU12COUNT__get__Ev
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	sub	rax, 1
	mov	QWORD PTR -72[rbp], rax
	jmp	.L9885
.L9893:
	nop
.L9886:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL18CONTEXTMENU__get__Ev
	mov	QWORD PTR -80[rbp], rax
	mov	rdx, QWORD PTR -8[rbp]
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL18ENUMPOPUPMENUITEMSERNS1_8MENUITEME
.L9887:
	add	QWORD PTR -8[rbp], 1
.L9885:
	mov	rax, QWORD PTR -8[rbp]
	cmp	rax, QWORD PTR -72[rbp]
	jle	.L9893
	jmp	.L9890
.L9884:
.L9888:
.L9889:
.L9892:
	nop
.L9890:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS7CONTROL12ENUMCONTROLSEPS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL12ENUMCONTROLSEPS2_:
	push	rbp
	mov	rbp, rsp
	add	rsp, -128
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	BYTE PTR -89[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC457[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L9895:
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 1024[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	call	_ZN4LIST3ADDEPv
	mov	QWORD PTR -8[rbp], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL12CONTROLCOUNTEv
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	sub	rax, 1
	mov	QWORD PTR -56[rbp], rax
	jmp	.L9896
.L9911:
	nop
.L9897:
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1714
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	je	.L9909
	jmp	[QWORD PTR -72[rbp]]
.L9909:
	nop
.L9899:
	mov	rax, QWORD PTR -64[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1714
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -88[rbp], rax
	cmp	QWORD PTR -88[rbp], 0
	je	.L9910
	jmp	[QWORD PTR -88[rbp]]
.L9910:
	nop
.L9901:
	mov	rax, QWORD PTR -8[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -80[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12ENUMCONTROLSEPS2_
.L9902:
	add	QWORD PTR -8[rbp], 1
.L9896:
	mov	rax, QWORD PTR -8[rbp]
	cmp	rax, QWORD PTR -56[rbp]
	jle	.L9911
	nop
.L9903:
	mov	BYTE PTR -89[rbp], 1
	nop
.L9904:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -89[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS7CONTROL11GETCONTROLSEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL11GETCONTROLSEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
.L9913:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC458[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1024
	mov	rcx, rax
	call	_ZN4LIST5CLEAREv
	mov	QWORD PTR -8[rbp], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12CONTROLCOUNTEv
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	sub	rax, 1
	mov	QWORD PTR -56[rbp], rax
	jmp	.L9914
.L9924:
	nop
.L9915:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1722
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	je	.L9923
	jmp	[QWORD PTR -72[rbp]]
.L9923:
	nop
.L9917:
	mov	rax, QWORD PTR -8[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -64[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12ENUMCONTROLSEPS2_
.L9918:
	add	QWORD PTR -8[rbp], 1
.L9914:
	mov	rax, QWORD PTR -8[rbp]
	cmp	rax, QWORD PTR -56[rbp]
	jle	.L9924
.L9919:
	nop
.L9920:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC538:
	.ascii "DEFWNDPROC\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL10DEFWNDPROCEP6HWND__jyx;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL10DEFWNDPROCEP6HWND__jyx:
	push	rbp
	mov	rbp, rsp
	push	rdi
	sub	rsp, 248
	mov	QWORD PTR 16[rbp], rcx
	mov	DWORD PTR 24[rbp], edx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
	mov	QWORD PTR -112[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rcx, .LC538[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
.L9926:
	lea	rax, -208[rbp]
	mov	r8, rax
	mov	eax, 0
	mov	edx, 11
	mov	rdi, r8
	mov	rcx, rdx
	rep stosq
	mov	edx, -21
	mov	rcx, QWORD PTR 16[rbp]
	call	GetWindowLongPtrW
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	lea	rax, -208[rbp]
	mov	rdx, QWORD PTR -64[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -208[rbp]
	add	rax, 8
	mov	rdx, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -208[rbp]
	add	rax, 16
	mov	edx, DWORD PTR 24[rbp]
	mov	DWORD PTR [rax], edx
	lea	rax, -208[rbp]
	add	rax, 20
	mov	DWORD PTR [rax], 0
	lea	rax, -208[rbp]
	add	rax, 24
	mov	rdx, QWORD PTR 32[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -208[rbp]
	add	rax, 32
	mov	rdx, QWORD PTR 40[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -208[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], 0
	mov	rdx, QWORD PTR 32[rbp]
	lea	rax, -208[rbp]
	add	rax, 48
	movzx	edx, dx
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 32[rbp]
	shr	rax, 16
	mov	rdx, rax
	lea	rax, -208[rbp]
	add	rax, 56
	movzx	edx, dx
	mov	QWORD PTR [rax], rdx
	lea	rax, -208[rbp]
	add	rax, 64
	mov	rdx, QWORD PTR 40[rbp]
	movzx	edx, dx
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 40[rbp]
	shr	rax, 16
	mov	rdx, rax
	lea	rax, -208[rbp]
	add	rax, 72
	movzx	edx, dx
	mov	QWORD PTR [rax], rdx
	lea	rax, -208[rbp]
	add	rax, 80
	mov	QWORD PTR [rax], 0
	cmp	QWORD PTR -64[rbp], 0
	je	.L9950
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS6OBJECT9CLASSNAMEEv
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	rdx, .LC77[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -76[rbp], eax
	cmp	DWORD PTR -76[rbp], 0
	je	.L9951
	mov	rax, QWORD PTR -64[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 56
	mov	r8, QWORD PTR [rax]
	lea	rdx, -208[rbp]
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	r8
	lea	rax, -208[rbp]
	add	rax, 40
	mov	rax, QWORD PTR [rax]
	cmp	rax, -1
	jne	.L9952
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -112[rbp], rax
	jmp	.L9932
.L9952:
	nop
.L9931:
	lea	rax, -208[rbp]
	add	rax, 40
	mov	rax, QWORD PTR [rax]
	cmp	rax, -2
	jne	.L9953
	mov	eax, DWORD PTR -192[rbp]
	mov	DWORD PTR 24[rbp], eax
	mov	rax, QWORD PTR -184[rbp]
	mov	QWORD PTR 32[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	mov	QWORD PTR 40[rbp], rax
	jmp	.L9944
.L9953:
	nop
.L9934:
	lea	rax, -208[rbp]
	add	rax, 40
	mov	rax, QWORD PTR [rax]
	cmp	rax, -3
	jne	.L9954
	mov	rcx, QWORD PTR 40[rbp]
	mov	rdx, QWORD PTR 32[rbp]
	mov	eax, DWORD PTR 24[rbp]
	mov	r9, rcx
	mov	r8, rdx
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	DefMDIChildProcW
	mov	QWORD PTR -88[rbp], rax
	lea	rax, -208[rbp]
	add	rax, 40
	mov	rdx, QWORD PTR -88[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -112[rbp], rax
	jmp	.L9932
.L9954:
	nop
.L9936:
	lea	rax, -208[rbp]
	add	rax, 40
	mov	rax, QWORD PTR [rax]
	cmp	rax, -4
	jne	.L9955
	lea	rax, -208[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR 32[rbp]
	mov	ecx, DWORD PTR 24[rbp]
	mov	rdx, QWORD PTR 40[rbp]
	mov	QWORD PTR 32[rsp], rdx
	mov	r9, r8
	mov	r8d, ecx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	DefFrameProcW
	mov	QWORD PTR -96[rbp], rax
	lea	rax, -208[rbp]
	add	rax, 40
	mov	rdx, QWORD PTR -96[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -112[rbp], rax
	jmp	.L9932
.L9955:
	nop
.L9938:
	lea	rax, -208[rbp]
	add	rax, 40
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9956
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -112[rbp], rax
	jmp	.L9932
.L9928:
.L9940:
.L9941:
.L9942:
.L9943:
.L9950:
	nop
	jmp	.L9944
.L9951:
	nop
	jmp	.L9944
.L9956:
	nop
.L9944:
	mov	rcx, QWORD PTR 40[rbp]
	mov	rdx, QWORD PTR 32[rbp]
	mov	eax, DWORD PTR 24[rbp]
	mov	r9, rcx
	mov	r8, rdx
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	DefWindowProcW
	mov	QWORD PTR -104[rbp], rax
	lea	rax, -208[rbp]
	add	rax, 40
	mov	rdx, QWORD PTR -104[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -112[rbp], rax
	nop
.L9932:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -112[rbp]
	add	rsp, 248
	pop	rdi
	pop	rbp
	ret
	.section .rdata,"dr"
.LC539:
	.ascii "CALLWNDPROC\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL11CALLWNDPROCEP6HWND__jyx;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL11CALLWNDPROCEP6HWND__jyx:
	push	rbp
	mov	rbp, rsp
	push	rdi
	sub	rsp, 248
	mov	QWORD PTR 16[rbp], rcx
	mov	DWORD PTR 24[rbp], edx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
	mov	QWORD PTR -96[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rcx, .LC539[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
.L9958:
	lea	rax, -192[rbp]
	mov	r8, rax
	mov	eax, 0
	mov	edx, 11
	mov	rdi, r8
	mov	rcx, rdx
	rep stosq
	mov	QWORD PTR -200[rbp], 0
	mov	rax, QWORD PTR .refptr.DefWindowProcW[rip]
	mov	QWORD PTR -56[rbp], rax
	mov	edx, -21
	mov	rcx, QWORD PTR 16[rbp]
	call	GetWindowLongPtrW
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -200[rbp], rax
	lea	rax, -192[rbp]
	mov	rdx, QWORD PTR -200[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -192[rbp]
	add	rax, 8
	mov	rdx, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -192[rbp]
	add	rax, 16
	mov	edx, DWORD PTR 24[rbp]
	mov	DWORD PTR [rax], edx
	lea	rax, -192[rbp]
	add	rax, 20
	mov	DWORD PTR [rax], 0
	lea	rax, -192[rbp]
	add	rax, 24
	mov	rdx, QWORD PTR 32[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -192[rbp]
	add	rax, 32
	mov	rdx, QWORD PTR 40[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -192[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], 0
	mov	rdx, QWORD PTR 32[rbp]
	lea	rax, -192[rbp]
	add	rax, 48
	movzx	edx, dx
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 32[rbp]
	shr	rax, 16
	mov	rdx, rax
	lea	rax, -192[rbp]
	add	rax, 56
	movzx	edx, dx
	mov	QWORD PTR [rax], rdx
	lea	rax, -192[rbp]
	add	rax, 64
	mov	rdx, QWORD PTR 40[rbp]
	movzx	edx, dx
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 40[rbp]
	shr	rax, 16
	mov	rdx, rax
	lea	rax, -192[rbp]
	add	rax, 72
	movzx	edx, dx
	mov	QWORD PTR [rax], rdx
	lea	rax, -192[rbp]
	add	rax, 80
	mov	rdx, QWORD PTR -112[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR -200[rbp]
	test	rax, rax
	je	.L9976
	mov	rax, QWORD PTR -200[rbp]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1790
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L9977
	jmp	[QWORD PTR -80[rbp]]
.L9977:
	nop
.L9962:
	mov	rax, QWORD PTR -72[rbp]
	mov	rax, QWORD PTR 1048[rax]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 56
	mov	r8, QWORD PTR [rax]
	mov	rax, QWORD PTR -200[rbp]
	lea	rdx, -192[rbp]
	mov	rcx, rax
	call	r8
	lea	rax, -192[rbp]
	add	rax, 40
	mov	rax, QWORD PTR [rax]
	cmp	rax, -1
	jne	.L9978
	mov	rax, QWORD PTR -152[rbp]
	mov	QWORD PTR -96[rbp], rax
	jmp	.L9965
.L9978:
	nop
.L9964:
	lea	rax, -192[rbp]
	add	rax, 40
	mov	rax, QWORD PTR [rax]
	cmp	rax, -2
	jne	.L9979
	mov	eax, DWORD PTR -176[rbp]
	mov	DWORD PTR 24[rbp], eax
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR 32[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	mov	QWORD PTR 40[rbp], rax
	jmp	.L9970
.L9979:
	nop
.L9967:
	lea	rax, -192[rbp]
	add	rax, 40
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L9980
	mov	rax, QWORD PTR -152[rbp]
	mov	QWORD PTR -96[rbp], rax
	jmp	.L9965
.L9968:
.L9980:
	nop
.L9970:
	mov	rax, QWORD PTR -56[rbp]
	mov	r8, QWORD PTR 32[rbp]
	mov	ecx, DWORD PTR 24[rbp]
	mov	rdx, QWORD PTR 40[rbp]
	mov	QWORD PTR 32[rsp], rdx
	mov	r9, r8
	mov	r8d, ecx
	mov	rdx, QWORD PTR 16[rbp]
	mov	rcx, rax
	call	CallWindowProcW
	mov	QWORD PTR -88[rbp], rax
	lea	rax, -192[rbp]
	add	rax, 40
	mov	rdx, QWORD PTR -88[rbp]
	mov	QWORD PTR [rax], rdx
	jmp	.L9971
.L9960:
.L9976:
	nop
.L9971:
	mov	rax, QWORD PTR -152[rbp]
	mov	QWORD PTR -96[rbp], rax
	nop
.L9965:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -96[rbp]
	add	rsp, 248
	pop	rdi
	pop	rbp
	ret
	.section .rdata,"dr"
.LC540:
	.ascii "SUPERWNDPROC\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL12SUPERWNDPROCEP6HWND__jyx;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL12SUPERWNDPROCEP6HWND__jyx:
	push	rbp
	mov	rbp, rsp
	push	rdi
	sub	rsp, 248
	mov	QWORD PTR 16[rbp], rcx
	mov	DWORD PTR 24[rbp], edx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
	mov	QWORD PTR -112[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rcx, .LC540[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
.L9982:
	mov	QWORD PTR -120[rbp], 0
	lea	rax, -208[rbp]
	mov	r8, rax
	mov	eax, 0
	mov	edx, 11
	mov	rdi, r8
	mov	rcx, rdx
	rep stosq
	mov	edx, -21
	mov	rcx, QWORD PTR 16[rbp]
	call	GetWindowLongPtrW
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -120[rbp], rax
	lea	rax, -208[rbp]
	mov	rdx, QWORD PTR -120[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -208[rbp]
	add	rax, 8
	mov	rdx, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -208[rbp]
	add	rax, 16
	mov	edx, DWORD PTR 24[rbp]
	mov	DWORD PTR [rax], edx
	lea	rax, -208[rbp]
	add	rax, 20
	mov	DWORD PTR [rax], 0
	lea	rax, -208[rbp]
	add	rax, 24
	mov	rdx, QWORD PTR 32[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -208[rbp]
	add	rax, 32
	mov	rdx, QWORD PTR 40[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -208[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], 0
	mov	rdx, QWORD PTR 32[rbp]
	lea	rax, -208[rbp]
	add	rax, 48
	movzx	edx, dx
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 32[rbp]
	shr	rax, 16
	mov	rdx, rax
	lea	rax, -208[rbp]
	add	rax, 56
	movzx	edx, dx
	mov	QWORD PTR [rax], rdx
	lea	rax, -208[rbp]
	add	rax, 64
	mov	rdx, QWORD PTR 40[rbp]
	movzx	edx, dx
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 40[rbp]
	shr	rax, 16
	mov	rdx, rax
	lea	rax, -208[rbp]
	add	rax, 72
	movzx	edx, dx
	mov	QWORD PTR [rax], rdx
	lea	rax, -208[rbp]
	add	rax, 80
	mov	rdx, QWORD PTR -128[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR -120[rbp]
	test	rax, rax
	je	.L10003
	mov	rax, QWORD PTR -120[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS6OBJECT9CLASSNAMEEv
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	rdx, .LC77[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -76[rbp], eax
	cmp	DWORD PTR -76[rbp], 0
	je	.L10004
	mov	rax, QWORD PTR -64[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 56
	mov	r8, QWORD PTR [rax]
	lea	rdx, -208[rbp]
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	r8
	lea	rax, -208[rbp]
	add	rax, 40
	mov	rax, QWORD PTR [rax]
	cmp	rax, -1
	jne	.L10005
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -112[rbp], rax
	jmp	.L9988
.L10005:
	nop
.L9987:
	lea	rax, -208[rbp]
	add	rax, 40
	mov	rax, QWORD PTR [rax]
	cmp	rax, -2
	jne	.L10006
	mov	eax, DWORD PTR -192[rbp]
	mov	DWORD PTR 24[rbp], eax
	mov	rax, QWORD PTR -184[rbp]
	mov	QWORD PTR 32[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	mov	QWORD PTR 40[rbp], rax
	jmp	.L9996
.L10006:
	nop
.L9990:
	lea	rax, -208[rbp]
	add	rax, 40
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10007
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -112[rbp], rax
	jmp	.L9988
.L9984:
.L9992:
.L9993:
.L9994:
.L9995:
.L10003:
	nop
	jmp	.L9996
.L10004:
	nop
	jmp	.L9996
.L10007:
	nop
.L9996:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN14CLASSCONTAINER12GETCLASSPROCEP6HWND__
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	QWORD PTR -96[rbp], rax
	cmp	QWORD PTR -96[rbp], 0
	je	.L10008
	mov	rax, QWORD PTR -96[rbp]
	mov	r8, QWORD PTR 32[rbp]
	mov	ecx, DWORD PTR 24[rbp]
	mov	rdx, QWORD PTR 40[rbp]
	mov	QWORD PTR 32[rsp], rdx
	mov	r9, r8
	mov	r8d, ecx
	mov	rdx, QWORD PTR 16[rbp]
	mov	rcx, rax
	call	CallWindowProcW
	mov	QWORD PTR -104[rbp], rax
	lea	rax, -208[rbp]
	add	rax, 40
	mov	rdx, QWORD PTR -104[rbp]
	mov	QWORD PTR [rax], rdx
	jmp	.L9999
.L9998:
.L10008:
	nop
.L9999:
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -112[rbp], rax
	nop
.L9988:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -112[rbp]
	add	rsp, 248
	pop	rdi
	pop	rbp
	ret
	.section .rdata,"dr"
.LC541:
	.ascii "PERFORM\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL7PERFORMEjyx;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL7PERFORMEjyx:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	DWORD PTR 24[rbp], edx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
	mov	QWORD PTR -48[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC541[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L10010:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10017
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR 40[rbp]
	mov	rcx, QWORD PTR 32[rbp]
	mov	edx, DWORD PTR 24[rbp]
	mov	r9, r8
	mov	r8, rcx
	mov	rcx, rax
	call	SendMessageW
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	jmp	.L10014
.L10017:
	nop
.L10012:
	mov	QWORD PTR -48[rbp], 0
.L10013:
	nop
.L10014:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -48[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC542:
	.ascii "SELECTNEXTCONTROL\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL17SELECTNEXTCONTROLEb;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL17SELECTNEXTCONTROLEb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 352
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	BYTE PTR 24[rbp], al
	mov	QWORD PTR -312[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	lea	rcx, .LC542[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	QWORD PTR -96[rbp], rax
.L10019:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL7GETFORMEv
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	QWORD PTR -112[rbp], rax
	mov	QWORD PTR -320[rbp], 0
	cmp	QWORD PTR -112[rbp], 0
	je	.L10105
	mov	rax, QWORD PTR -112[rbp]
	add	rax, 936
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1000
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	_ZN11INTEGERLIST13INDEXOFOBJECTEPv
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	mov	QWORD PTR -136[rbp], rax
	cmp	BYTE PTR 24[rbp], 0
	je	.L10106
	mov	rax, QWORD PTR -136[rbp]
	sub	rax, 1
	mov	QWORD PTR -8[rbp], rax
	jmp	.L10024
.L10111:
	nop
.L10025:
	mov	rdx, QWORD PTR -8[rbp]
	mov	rax, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	_ZN11INTEGERLIST13OBJECT__get__Eu7INTEGER
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -192[rbp]
	mov	QWORD PTR -320[rbp], rax
	mov	rax, QWORD PTR -320[rbp]
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1870
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -208[rbp], rax
	cmp	QWORD PTR -208[rbp], 0
	je	.L10107
	jmp	[QWORD PTR -208[rbp]]
.L10107:
	nop
.L10027:
	mov	rax, QWORD PTR -200[rbp]
	add	rax, 921
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L10108
	mov	rax, QWORD PTR -320[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 88
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -320[rbp]
	mov	rcx, rax
	call	rdx
	mov	BYTE PTR -209[rbp], al
	cmp	BYTE PTR -209[rbp], 0
	setne	al
	mov	BYTE PTR -9[rbp], al
	jmp	.L10030
.L10108:
	nop
.L10029:
	mov	BYTE PTR -9[rbp], 0
.L10030:
	cmp	BYTE PTR -9[rbp], 0
	je	.L10109
	mov	rax, QWORD PTR -320[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL14ENABLED__get__Ev
	mov	BYTE PTR -210[rbp], al
	cmp	BYTE PTR -210[rbp], 0
	setne	al
	mov	BYTE PTR -10[rbp], al
	jmp	.L10033
.L10109:
	nop
.L10032:
	mov	BYTE PTR -10[rbp], 0
.L10033:
	cmp	BYTE PTR -10[rbp], 0
	je	.L10110
	mov	rax, QWORD PTR -320[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL8SETFOCUSEv
	mov	rax, QWORD PTR -320[rbp]
	mov	QWORD PTR -312[rbp], rax
	jmp	.L10036
.L10035:
.L10110:
	nop
.L10037:
	sub	QWORD PTR -8[rbp], 1
.L10024:
	cmp	QWORD PTR -8[rbp], 0
	jns	.L10111
	nop
.L10038:
	mov	rax, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	_ZN11INTEGERLIST12COUNT__get__Ev
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	sub	rax, 1
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	add	rax, 1
	mov	QWORD PTR -152[rbp], rax
	jmp	.L10039
.L10116:
	nop
.L10040:
	mov	rdx, QWORD PTR -24[rbp]
	mov	rax, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	_ZN11INTEGERLIST13OBJECT__get__Eu7INTEGER
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	mov	QWORD PTR -320[rbp], rax
	mov	rax, QWORD PTR -320[rbp]
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1874
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -176[rbp], rax
	cmp	QWORD PTR -176[rbp], 0
	je	.L10112
	jmp	[QWORD PTR -176[rbp]]
.L10112:
	nop
.L10042:
	mov	rax, QWORD PTR -168[rbp]
	add	rax, 921
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L10113
	mov	rax, QWORD PTR -320[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 88
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -320[rbp]
	mov	rcx, rax
	call	rdx
	mov	BYTE PTR -177[rbp], al
	cmp	BYTE PTR -177[rbp], 0
	setne	al
	mov	BYTE PTR -25[rbp], al
	jmp	.L10045
.L10113:
	nop
.L10044:
	mov	BYTE PTR -25[rbp], 0
.L10045:
	cmp	BYTE PTR -25[rbp], 0
	je	.L10114
	mov	rax, QWORD PTR -320[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL14ENABLED__get__Ev
	mov	BYTE PTR -178[rbp], al
	cmp	BYTE PTR -178[rbp], 0
	setne	al
	mov	BYTE PTR -26[rbp], al
	jmp	.L10048
.L10114:
	nop
.L10047:
	mov	BYTE PTR -26[rbp], 0
.L10048:
	cmp	BYTE PTR -26[rbp], 0
	je	.L10115
	mov	rax, QWORD PTR -320[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL8SETFOCUSEv
	mov	rax, QWORD PTR -320[rbp]
	mov	QWORD PTR -312[rbp], rax
	jmp	.L10036
.L10050:
.L10115:
	nop
.L10051:
	sub	QWORD PTR -24[rbp], 1
.L10039:
	mov	rax, QWORD PTR -24[rbp]
	cmp	rax, QWORD PTR -152[rbp]
	jge	.L10116
	nop
.L10052:
	jmp	.L10082
.L10106:
	nop
.L10023:
	mov	rax, QWORD PTR -136[rbp]
	add	rax, 1
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	_ZN11INTEGERLIST12COUNT__get__Ev
	mov	QWORD PTR -224[rbp], rax
	mov	rax, QWORD PTR -224[rbp]
	sub	rax, 1
	mov	QWORD PTR -232[rbp], rax
	jmp	.L10053
.L10121:
	nop
.L10054:
	mov	rdx, QWORD PTR -40[rbp]
	mov	rax, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	_ZN11INTEGERLIST13OBJECT__get__Eu7INTEGER
	mov	QWORD PTR -280[rbp], rax
	mov	rax, QWORD PTR -280[rbp]
	mov	QWORD PTR -320[rbp], rax
	mov	rax, QWORD PTR -320[rbp]
	mov	QWORD PTR -288[rbp], rax
	mov	rax, QWORD PTR -288[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1879
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -296[rbp], rax
	cmp	QWORD PTR -296[rbp], 0
	je	.L10117
	jmp	[QWORD PTR -296[rbp]]
.L10117:
	nop
.L10056:
	mov	rax, QWORD PTR -288[rbp]
	add	rax, 921
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L10118
	mov	rax, QWORD PTR -320[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 88
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -320[rbp]
	mov	rcx, rax
	call	rdx
	mov	BYTE PTR -297[rbp], al
	cmp	BYTE PTR -297[rbp], 0
	setne	al
	mov	BYTE PTR -41[rbp], al
	jmp	.L10059
.L10118:
	nop
.L10058:
	mov	BYTE PTR -41[rbp], 0
.L10059:
	cmp	BYTE PTR -41[rbp], 0
	je	.L10119
	mov	rax, QWORD PTR -320[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL14ENABLED__get__Ev
	mov	BYTE PTR -298[rbp], al
	cmp	BYTE PTR -298[rbp], 0
	setne	al
	mov	BYTE PTR -42[rbp], al
	jmp	.L10062
.L10119:
	nop
.L10061:
	mov	BYTE PTR -42[rbp], 0
.L10062:
	cmp	BYTE PTR -42[rbp], 0
	je	.L10120
	mov	rax, QWORD PTR -320[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL8SETFOCUSEv
	mov	rax, QWORD PTR -320[rbp]
	mov	QWORD PTR -312[rbp], rax
	jmp	.L10036
.L10064:
.L10120:
	nop
.L10065:
	add	QWORD PTR -40[rbp], 1
.L10053:
	mov	rax, QWORD PTR -40[rbp]
	cmp	rax, QWORD PTR -232[rbp]
	jle	.L10121
	nop
.L10066:
	mov	QWORD PTR -56[rbp], 0
	mov	rax, QWORD PTR -136[rbp]
	sub	rax, 1
	mov	QWORD PTR -240[rbp], rax
	jmp	.L10067
.L10126:
	nop
.L10068:
	mov	rdx, QWORD PTR -56[rbp]
	mov	rax, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	_ZN11INTEGERLIST13OBJECT__get__Eu7INTEGER
	mov	QWORD PTR -248[rbp], rax
	mov	rax, QWORD PTR -248[rbp]
	mov	QWORD PTR -320[rbp], rax
	mov	rax, QWORD PTR -320[rbp]
	mov	QWORD PTR -256[rbp], rax
	mov	rax, QWORD PTR -256[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 1883
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -264[rbp], rax
	cmp	QWORD PTR -264[rbp], 0
	je	.L10122
	jmp	[QWORD PTR -264[rbp]]
.L10122:
	nop
.L10070:
	mov	rax, QWORD PTR -256[rbp]
	add	rax, 921
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L10123
	mov	rax, QWORD PTR -320[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 88
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -320[rbp]
	mov	rcx, rax
	call	rdx
	mov	BYTE PTR -265[rbp], al
	cmp	BYTE PTR -265[rbp], 0
	setne	al
	mov	BYTE PTR -57[rbp], al
	jmp	.L10073
.L10123:
	nop
.L10072:
	mov	BYTE PTR -57[rbp], 0
.L10073:
	cmp	BYTE PTR -57[rbp], 0
	je	.L10124
	mov	rax, QWORD PTR -320[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL14ENABLED__get__Ev
	mov	BYTE PTR -266[rbp], al
	cmp	BYTE PTR -266[rbp], 0
	setne	al
	mov	BYTE PTR -58[rbp], al
	jmp	.L10076
.L10124:
	nop
.L10075:
	mov	BYTE PTR -58[rbp], 0
.L10076:
	cmp	BYTE PTR -58[rbp], 0
	je	.L10125
	mov	rax, QWORD PTR -320[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL8SETFOCUSEv
	mov	rax, QWORD PTR -320[rbp]
	mov	QWORD PTR -312[rbp], rax
	jmp	.L10036
.L10078:
.L10125:
	nop
.L10079:
	add	QWORD PTR -56[rbp], 1
.L10067:
	mov	rax, QWORD PTR -56[rbp]
	cmp	rax, QWORD PTR -240[rbp]
	jle	.L10126
	jmp	.L10082
.L10021:
.L10080:
.L10081:
.L10105:
	nop
.L10082:
	mov	QWORD PTR -312[rbp], 0
	nop
.L10036:
	mov	rax, QWORD PTR -96[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -312[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS7CONTROL4MOVEEu7INTEGERS3_S3_S3_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL4MOVEEu7INTEGERS3_S3_S3_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
.L10128:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	lea	rcx, .LC185[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2128
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10146
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2128[rax]
	mov	QWORD PTR -32[rbp], rax
	jmp	.L10131
.L10146:
	nop
.L10130:
	mov	rax, QWORD PTR 48[rbp]
	mov	QWORD PTR -32[rbp], rax
.L10131:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2120
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10147
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2120[rax]
	mov	QWORD PTR -24[rbp], rax
	jmp	.L10134
.L10147:
	nop
.L10133:
	mov	rax, QWORD PTR 40[rbp]
	mov	QWORD PTR -24[rbp], rax
.L10134:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2112
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10148
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2112[rax]
	mov	QWORD PTR -16[rbp], rax
	jmp	.L10137
.L10148:
	nop
.L10136:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -16[rbp], rax
.L10137:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2104
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10149
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2104[rax]
	mov	QWORD PTR -8[rbp], rax
	jmp	.L10140
.L10149:
	nop
.L10139:
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -8[rbp], rax
.L10140:
	mov	r8, QWORD PTR -24[rbp]
	mov	rcx, QWORD PTR -16[rbp]
	mov	rax, QWORD PTR -8[rbp]
	mov	rdx, QWORD PTR -32[rbp]
	mov	QWORD PTR 32[rsp], rdx
	mov	r9, r8
	mov	r8, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT4MOVEEu7INTEGERS3_S3_S3_
.L10141:
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC543:
	.ascii "REGISTERCLASS\0"
	.align 8
.LC544:
	.ascii "U\0n\0a\0b\0l\0e\0 \0t\0o\0 \0r\0e\0g\0i\0s\0t\0e\0r\0 \0c\0l\0a\0s\0s\0 \0'\0\0\0"
	.align 2
.LC545:
	.ascii "'\0\0\0"
	.align 2
.LC546:
	.ascii "C\0o\0n\0t\0r\0o\0l\0\0\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL13REGISTERCLASSERwS3_Pv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL13REGISTERCLASSERwS3_Pv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 352
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR -208[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	lea	rcx, .LC543[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
.L10151:
	mov	QWORD PTR -216[rbp], 0
	lea	rax, -304[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	QWORD PTR 32[rax], 0
	mov	QWORD PTR 40[rax], 0
	mov	QWORD PTR 48[rax], 0
	mov	QWORD PTR 56[rax], 0
	mov	QWORD PTR 64[rax], 0
	mov	QWORD PTR 72[rax], 0
	mov	QWORD PTR -312[rbp], 0
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -64[rbp], rax
	lea	rax, -304[rbp]
	mov	r8d, 80
	mov	edx, 0
	mov	rcx, rax
	call	memset
	lea	rax, -304[rbp]
	mov	DWORD PTR [rax], 80
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, .LC77[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -68[rbp], eax
	cmp	DWORD PTR -68[rbp], 0
	je	.L10191
	lea	rdx, -304[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	ecx, 0
	call	GetClassInfoExW
	mov	DWORD PTR -72[rbp], eax
	cmp	DWORD PTR -72[rbp], 0
	je	.L10192
	mov	rax, QWORD PTR -296[rbp]
	mov	QWORD PTR -312[rbp], rax
	lea	rax, -304[rbp]
	add	rax, 64
	mov	rdx, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rdx, .LC529[rip]
	mov	rcx, QWORD PTR 16[rbp]
	call	fb_WstrCompare
	mov	DWORD PTR -76[rbp], eax
	cmp	DWORD PTR -76[rbp], 0
	je	.L10193
	cmp	QWORD PTR 32[rbp], 0
	jne	.L10194
	lea	rax, _ZN2MY3SYS5FORMS7CONTROL12SUPERWNDPROCEP6HWND__jyx[rip]
	mov	QWORD PTR -8[rbp], rax
	jmp	.L10160
.L10194:
	nop
.L10159:
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -8[rbp], rax
.L10160:
	lea	rax, -304[rbp]
	add	rax, 8
	mov	rdx, QWORD PTR -8[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -304[rbp]
	add	rax, 20
	mov	edx, DWORD PTR [rax]
	lea	rax, -304[rbp]
	add	rax, 20
	add	edx, 4
	mov	DWORD PTR [rax], edx
	jmp	.L10161
.L10157:
.L10193:
	nop
.L10161:
	mov	ecx, 0
	call	GetModuleHandleW
	mov	QWORD PTR -88[rbp], rax
	lea	rax, -304[rbp]
	add	rax, 24
	mov	rdx, QWORD PTR -88[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -304[rbp]
	mov	rcx, rax
	call	RegisterClassExW
	mov	WORD PTR -90[rbp], ax
	movzx	eax, WORD PTR -90[rbp]
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR -216[rbp]
	test	rax, rax
	je	.L10195
	mov	rdx, QWORD PTR -312[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN14CLASSCONTAINER10STORECLASSERwS0_Pv
	jmp	.L10165
.L10163:
.L10195:
	nop
.L10164:
	jmp	.L10165
.L10192:
	nop
.L10155:
	mov	ecx, 0
	call	GetModuleHandleW
	mov	QWORD PTR -104[rbp], rax
	lea	rcx, -304[rbp]
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -104[rbp]
	mov	r8, rcx
	mov	rcx, rax
	call	GetClassInfoExW
	mov	DWORD PTR -108[rbp], eax
	cmp	DWORD PTR -108[rbp], 0
	je	.L10196
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN14CLASSCONTAINER12GETCLASSPROCERw
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	QWORD PTR -312[rbp], rax
	lea	rax, -304[rbp]
	add	rax, 64
	mov	rdx, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	cmp	QWORD PTR 32[rbp], 0
	jne	.L10197
	lea	rax, _ZN2MY3SYS5FORMS7CONTROL10DEFWNDPROCEP6HWND__jyx[rip]
	mov	QWORD PTR -16[rbp], rax
	jmp	.L10170
.L10197:
	nop
.L10169:
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -16[rbp], rax
.L10170:
	lea	rax, -304[rbp]
	add	rax, 8
	mov	rdx, QWORD PTR -16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -304[rbp]
	mov	rcx, rax
	call	RegisterClassExW
	mov	WORD PTR -122[rbp], ax
	movzx	eax, WORD PTR -122[rbp]
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR -216[rbp]
	test	rax, rax
	je	.L10198
	mov	rdx, QWORD PTR -312[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN14CLASSCONTAINER10STORECLASSERwS0_Pv
	jmp	.L10165
.L10172:
.L10198:
	nop
.L10173:
	jmp	.L10165
.L10196:
	nop
.L10167:
	mov	rdx, QWORD PTR 16[rbp]
	lea	rcx, .LC544[rip]
	call	fb_WstrConcat
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	lea	rdx, .LC545[rip]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	mov	r9d, 16
	lea	r8, .LC546[rip]
	mov	rdx, rax
	mov	ecx, 0
	call	MessageBoxW
	mov	rax, QWORD PTR -160[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -144[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L10180
.L10165:
	jmp	.L10180
.L10191:
	nop
.L10153:
	mov	ecx, 0
	call	GetModuleHandleW
	mov	QWORD PTR -168[rbp], rax
	lea	rdx, -304[rbp]
	mov	rax, QWORD PTR -168[rbp]
	mov	r8, rdx
	mov	rdx, QWORD PTR 16[rbp]
	mov	rcx, rax
	call	GetClassInfoExW
	mov	DWORD PTR -172[rbp], eax
	cmp	DWORD PTR -172[rbp], 0
	jne	.L10199
	lea	rax, -304[rbp]
	add	rax, 64
	mov	rdx, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	cmp	QWORD PTR 32[rbp], 0
	jne	.L10200
	lea	rax, _ZN2MY3SYS5FORMS7CONTROL10DEFWNDPROCEP6HWND__jyx[rip]
	mov	QWORD PTR -24[rbp], rax
	jmp	.L10178
.L10200:
	nop
.L10177:
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -24[rbp], rax
.L10178:
	lea	rax, -304[rbp]
	add	rax, 8
	mov	rdx, QWORD PTR -24[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -304[rbp]
	add	rax, 4
	mov	DWORD PTR [rax], 11
	mov	ecx, 0
	call	GetModuleHandleW
	mov	QWORD PTR -184[rbp], rax
	lea	rax, -304[rbp]
	add	rax, 24
	mov	rdx, QWORD PTR -184[rbp]
	mov	QWORD PTR [rax], rdx
	mov	edx, 32512
	mov	ecx, 0
	call	LoadCursorW
	mov	QWORD PTR -192[rbp], rax
	lea	rax, -304[rbp]
	add	rax, 40
	mov	rdx, QWORD PTR -192[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rax, -304[rbp]
	add	rax, 48
	mov	QWORD PTR [rax], 0
	lea	rax, -304[rbp]
	mov	rcx, rax
	call	RegisterClassExW
	mov	WORD PTR -194[rbp], ax
	movzx	eax, WORD PTR -194[rbp]
	mov	QWORD PTR -216[rbp], rax
	jmp	.L10180
.L10174:
.L10179:
.L10199:
	nop
.L10180:
	mov	rax, QWORD PTR -216[rbp]
	mov	QWORD PTR -208[rbp], rax
	nop
.L10181:
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -208[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC547:
	.ascii "REQUESTALIGN\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL12REQUESTALIGNEu7INTEGERS3_bPS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL12REQUESTALIGNEu7INTEGERS3_bPS2_:
	push	rbp
	mov	rbp, rsp
	push	rdi
	push	rsi
	push	rbx
	sub	rsp, 1032
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	eax, r9d
	mov	BYTE PTR 40[rbp], al
.L10202:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	mov	QWORD PTR -160[rbp], rax
	lea	rcx, .LC547[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -176[rbp], rax
	mov	QWORD PTR -888[rbp], 0
	mov	QWORD PTR -896[rbp], 0
	mov	QWORD PTR -904[rbp], 0
	mov	QWORD PTR -912[rbp], 0
	mov	QWORD PTR -920[rbp], 0
	mov	QWORD PTR -928[rbp], 0
	mov	QWORD PTR -48[rbp], 0
	mov	QWORD PTR -56[rbp], 0
	mov	QWORD PTR -64[rbp], 0
	mov	QWORD PTR -72[rbp], 0
	mov	QWORD PTR -80[rbp], 0
	mov	QWORD PTR -936[rbp], 0
	mov	QWORD PTR -944[rbp], 0
	mov	QWORD PTR -952[rbp], 0
	mov	QWORD PTR -960[rbp], 0
	mov	QWORD PTR -968[rbp], 0
	mov	QWORD PTR -976[rbp], 0
	mov	QWORD PTR -984[rbp], 0
	mov	QWORD PTR -992[rbp], 0
	cmp	QWORD PTR 24[rbp], -1
	jne	.L10433
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CLIENTWIDTHEv
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	mov	QWORD PTR 24[rbp], rax
	jmp	.L10204
.L10433:
	nop
.L10204:
	cmp	QWORD PTR 32[rbp], -1
	jne	.L10434
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12CLIENTHEIGHTEv
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -192[rbp]
	mov	QWORD PTR 32[rbp], rax
	jmp	.L10206
.L10434:
	nop
.L10206:
	cmp	QWORD PTR 24[rbp], 0
	jle	.L10435
	cmp	QWORD PTR 32[rbp], 0
	setle	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -40[rbp], rax
	jmp	.L10209
.L10435:
	nop
.L10208:
	mov	QWORD PTR -40[rbp], -1
.L10209:
	cmp	QWORD PTR -40[rbp], 0
	jne	.L10436
	nop
.L10211:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 224[rax]
	mov	QWORD PTR -952[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 240
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 24[rbp]
	sub	rdx, rax
	mov	rax, rdx
	mov	QWORD PTR -960[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 232[rax]
	mov	QWORD PTR -936[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 248
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 32[rbp]
	sub	rdx, rax
	mov	rax, rdx
	mov	QWORD PTR -944[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12CONTROLCOUNTEv
	mov	QWORD PTR -200[rbp], rax
	cmp	QWORD PTR -200[rbp], 0
	je	.L10437
	mov	QWORD PTR -928[rbp], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12CONTROLCOUNTEv
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR -208[rbp]
	sub	rax, 1
	mov	QWORD PTR -216[rbp], rax
	jmp	.L10215
.L10472:
	nop
.L10216:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -544[rbp], rax
	mov	rax, QWORD PTR -544[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2265
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -552[rbp], rax
	cmp	QWORD PTR -552[rbp], 0
	je	.L10438
	jmp	[QWORD PTR -552[rbp]]
.L10438:
	nop
.L10218:
	mov	rax, QWORD PTR -928[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -544[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL12ALIGN__get__Ev
	mov	QWORD PTR -560[rbp], rax
	mov	rax, QWORD PTR -560[rbp]
	mov	QWORD PTR -568[rbp], rax
	cmp	QWORD PTR -568[rbp], 1
	jne	.L10439
	nop
.L10219:
	add	QWORD PTR -48[rbp], 1
	mov	rax, QWORD PTR -48[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -888[rbp]
	mov	rcx, rax
	call	realloc
	mov	QWORD PTR -576[rbp], rax
	mov	rax, QWORD PTR -576[rbp]
	mov	QWORD PTR -888[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -584[rbp], rax
	mov	rax, QWORD PTR -584[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2269
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -592[rbp], rax
	cmp	QWORD PTR -592[rbp], 0
	je	.L10440
	jmp	[QWORD PTR -592[rbp]]
.L10440:
	nop
.L10222:
	mov	rax, QWORD PTR -888[rbp]
	mov	QWORD PTR -600[rbp], rax
	mov	rax, QWORD PTR -600[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2269
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -608[rbp], rax
	cmp	QWORD PTR -608[rbp], 0
	je	.L10441
	jmp	[QWORD PTR -608[rbp]]
.L10441:
	nop
.L10224:
	mov	rax, QWORD PTR -928[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -584[rbp]
	add	rax, rdx
	mov	rdx, QWORD PTR -48[rbp]
	sal	rdx, 3
	lea	rcx, -8[rdx]
	mov	rdx, QWORD PTR -600[rbp]
	add	rdx, rcx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L10249
.L10439:
	nop
.L10220:
	cmp	QWORD PTR -568[rbp], 2
	jne	.L10442
	nop
.L10226:
	add	QWORD PTR -56[rbp], 1
	mov	rax, QWORD PTR -56[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -896[rbp]
	mov	rcx, rax
	call	realloc
	mov	QWORD PTR -616[rbp], rax
	mov	rax, QWORD PTR -616[rbp]
	mov	QWORD PTR -896[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -624[rbp], rax
	mov	rax, QWORD PTR -624[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2273
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -632[rbp], rax
	cmp	QWORD PTR -632[rbp], 0
	je	.L10443
	jmp	[QWORD PTR -632[rbp]]
.L10443:
	nop
.L10229:
	mov	rax, QWORD PTR -896[rbp]
	mov	QWORD PTR -640[rbp], rax
	mov	rax, QWORD PTR -640[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2273
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -648[rbp], rax
	cmp	QWORD PTR -648[rbp], 0
	je	.L10444
	jmp	[QWORD PTR -648[rbp]]
.L10444:
	nop
.L10231:
	mov	rax, QWORD PTR -928[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -624[rbp]
	add	rax, rdx
	mov	rdx, QWORD PTR -56[rbp]
	sal	rdx, 3
	lea	rcx, -8[rdx]
	mov	rdx, QWORD PTR -640[rbp]
	add	rdx, rcx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L10249
.L10442:
	nop
.L10227:
	cmp	QWORD PTR -568[rbp], 3
	jne	.L10445
	nop
.L10232:
	add	QWORD PTR -64[rbp], 1
	mov	rax, QWORD PTR -64[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -904[rbp]
	mov	rcx, rax
	call	realloc
	mov	QWORD PTR -656[rbp], rax
	mov	rax, QWORD PTR -656[rbp]
	mov	QWORD PTR -904[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -664[rbp], rax
	mov	rax, QWORD PTR -664[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2277
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -672[rbp], rax
	cmp	QWORD PTR -672[rbp], 0
	je	.L10446
	jmp	[QWORD PTR -672[rbp]]
.L10446:
	nop
.L10235:
	mov	rax, QWORD PTR -904[rbp]
	mov	QWORD PTR -680[rbp], rax
	mov	rax, QWORD PTR -680[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2277
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -688[rbp], rax
	cmp	QWORD PTR -688[rbp], 0
	je	.L10447
	jmp	[QWORD PTR -688[rbp]]
.L10447:
	nop
.L10237:
	mov	rax, QWORD PTR -928[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -664[rbp]
	add	rax, rdx
	mov	rdx, QWORD PTR -64[rbp]
	sal	rdx, 3
	lea	rcx, -8[rdx]
	mov	rdx, QWORD PTR -680[rbp]
	add	rdx, rcx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L10249
.L10445:
	nop
.L10233:
	cmp	QWORD PTR -568[rbp], 4
	jne	.L10448
	nop
.L10238:
	add	QWORD PTR -72[rbp], 1
	mov	rax, QWORD PTR -72[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -912[rbp]
	mov	rcx, rax
	call	realloc
	mov	QWORD PTR -696[rbp], rax
	mov	rax, QWORD PTR -696[rbp]
	mov	QWORD PTR -912[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -704[rbp], rax
	mov	rax, QWORD PTR -704[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2281
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -712[rbp], rax
	cmp	QWORD PTR -712[rbp], 0
	je	.L10449
	jmp	[QWORD PTR -712[rbp]]
.L10449:
	nop
.L10241:
	mov	rax, QWORD PTR -912[rbp]
	mov	QWORD PTR -720[rbp], rax
	mov	rax, QWORD PTR -720[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2281
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -728[rbp], rax
	cmp	QWORD PTR -728[rbp], 0
	je	.L10450
	jmp	[QWORD PTR -728[rbp]]
.L10450:
	nop
.L10243:
	mov	rax, QWORD PTR -928[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -704[rbp]
	add	rax, rdx
	mov	rdx, QWORD PTR -72[rbp]
	sal	rdx, 3
	lea	rcx, -8[rdx]
	mov	rdx, QWORD PTR -720[rbp]
	add	rdx, rcx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L10249
.L10448:
	nop
.L10239:
	cmp	QWORD PTR -568[rbp], 5
	jne	.L10451
	nop
.L10244:
	add	QWORD PTR -80[rbp], 1
	mov	rax, QWORD PTR -80[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -920[rbp]
	mov	rcx, rax
	call	realloc
	mov	QWORD PTR -736[rbp], rax
	mov	rax, QWORD PTR -736[rbp]
	mov	QWORD PTR -920[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -744[rbp], rax
	mov	rax, QWORD PTR -744[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2285
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -752[rbp], rax
	cmp	QWORD PTR -752[rbp], 0
	je	.L10452
	jmp	[QWORD PTR -752[rbp]]
.L10452:
	nop
.L10246:
	mov	rax, QWORD PTR -920[rbp]
	mov	QWORD PTR -760[rbp], rax
	mov	rax, QWORD PTR -760[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2285
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -768[rbp], rax
	cmp	QWORD PTR -768[rbp], 0
	je	.L10453
	jmp	[QWORD PTR -768[rbp]]
.L10453:
	nop
.L10248:
	mov	rax, QWORD PTR -928[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -744[rbp]
	add	rax, rdx
	mov	rdx, QWORD PTR -80[rbp]
	sal	rdx, 3
	lea	rcx, -8[rdx]
	mov	rdx, QWORD PTR -760[rbp]
	add	rdx, rcx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L10249
.L10225:
.L10451:
	nop
.L10249:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -776[rbp], rax
	mov	rax, QWORD PTR -776[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2287
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -784[rbp], rax
	cmp	QWORD PTR -784[rbp], 0
	je	.L10454
	jmp	[QWORD PTR -784[rbp]]
.L10454:
	nop
.L10251:
	mov	rax, QWORD PTR -928[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -776[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -792[rbp], rax
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 2200
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 2216
	mov	rax, QWORD PTR [rax]
	add	rdx, rax
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 2208
	mov	rax, QWORD PTR [rax]
	add	rdx, rax
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 2224
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	test	rax, rax
	je	.L10455
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 970
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	neg	eax
	test	eax, eax
	je	.L10456
	mov	rax, QWORD PTR -792[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -800[rbp], rax
	cmp	QWORD PTR -800[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -88[rbp], rax
	jmp	.L10256
.L10456:
	nop
.L10255:
	mov	QWORD PTR -88[rbp], 0
.L10256:
	cmp	QWORD PTR -88[rbp], 0
	je	.L10457
	mov	rax, QWORD PTR -792[rbp]
	mov	rax, QWORD PTR 80[rax]
	mov	QWORD PTR -968[rbp], rax
	mov	rax, QWORD PTR -792[rbp]
	mov	rax, QWORD PTR 88[rax]
	mov	QWORD PTR -976[rbp], rax
	mov	rax, QWORD PTR -792[rbp]
	mov	rax, QWORD PTR 96[rax]
	mov	QWORD PTR -984[rbp], rax
	mov	rax, QWORD PTR -792[rbp]
	mov	rax, QWORD PTR 104[rax]
	mov	QWORD PTR -992[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12WIDTH__get__Ev
	mov	QWORD PTR -808[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 96[rax]
	mov	rax, QWORD PTR -808[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HEIGHT__get__Ev
	mov	QWORD PTR -816[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 104[rax]
	mov	rax, QWORD PTR -816[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 2200
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10458
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 2200
	mov	rax, QWORD PTR [rax]
	cmp	rax, 2
	jne	.L10459
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 96
	mov	rax, QWORD PTR [rax]
	cvtsi2sd	xmm0, rax
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 376
	mov	rax, QWORD PTR [rax]
	cvtsi2sd	xmm1, rax
	divsd	xmm0, xmm1
	movapd	xmm1, xmm0
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 344
	mov	rax, QWORD PTR [rax]
	cvtsi2sd	xmm0, rax
	mulsd	xmm0, xmm1
	call	nearbyint
	cvttsd2si	rax, xmm0
	mov	QWORD PTR -968[rbp], rax
	jmp	.L10261
.L10459:
	nop
.L10261:
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 2216
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10460
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 2216
	mov	rax, QWORD PTR [rax]
	cmp	rax, 1
	jne	.L10461
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 360
	mov	rax, QWORD PTR [rax]
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR -96[rbp], xmm0
	jmp	.L10266
.L10461:
	nop
.L10265:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 96
	mov	rax, QWORD PTR [rax]
	cvtsi2sd	xmm0, rax
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 376
	mov	rax, QWORD PTR [rax]
	cvtsi2sd	xmm1, rax
	divsd	xmm0, xmm1
	movapd	xmm1, xmm0
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 360
	mov	rax, QWORD PTR [rax]
	cvtsi2sd	xmm0, rax
	mulsd	xmm0, xmm1
	movsd	QWORD PTR -96[rbp], xmm0
.L10266:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 96
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -968[rbp]
	sub	rdx, rax
	mov	rax, rdx
	cvtsi2sd	xmm0, rax
	subsd	xmm0, QWORD PTR -96[rbp]
	call	nearbyint
	cvttsd2si	rax, xmm0
	mov	QWORD PTR -984[rbp], rax
	jmp	.L10272
.L10460:
	nop
.L10263:
	jmp	.L10272
.L10458:
	nop
.L10259:
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 2216
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10462
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 2216
	mov	rax, QWORD PTR [rax]
	cmp	rax, 1
	jne	.L10463
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 360
	mov	rax, QWORD PTR [rax]
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR -104[rbp], xmm0
	jmp	.L10271
.L10463:
	nop
.L10270:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 96
	mov	rax, QWORD PTR [rax]
	cvtsi2sd	xmm0, rax
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 376
	mov	rax, QWORD PTR [rax]
	cvtsi2sd	xmm1, rax
	divsd	xmm0, xmm1
	movapd	xmm1, xmm0
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 360
	mov	rax, QWORD PTR [rax]
	cvtsi2sd	xmm0, rax
	mulsd	xmm0, xmm1
	movsd	QWORD PTR -104[rbp], xmm0
.L10271:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 96
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 96
	mov	rax, QWORD PTR [rax]
	sub	rdx, rax
	mov	rax, rdx
	cvtsi2sd	xmm0, rax
	subsd	xmm0, QWORD PTR -104[rbp]
	call	nearbyint
	cvttsd2si	rax, xmm0
	mov	QWORD PTR -968[rbp], rax
	jmp	.L10272
.L10267:
.L10462:
	nop
.L10272:
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 2208
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10464
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 2208
	mov	rax, QWORD PTR [rax]
	cmp	rax, 2
	jne	.L10465
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	cvtsi2sd	xmm0, rax
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 384
	mov	rax, QWORD PTR [rax]
	cvtsi2sd	xmm1, rax
	divsd	xmm0, xmm1
	movapd	xmm1, xmm0
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 352
	mov	rax, QWORD PTR [rax]
	cvtsi2sd	xmm0, rax
	mulsd	xmm0, xmm1
	call	nearbyint
	cvttsd2si	rax, xmm0
	mov	QWORD PTR -976[rbp], rax
	jmp	.L10276
.L10465:
	nop
.L10276:
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 2224
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10466
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 2224
	mov	rax, QWORD PTR [rax]
	cmp	rax, 1
	jne	.L10467
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 368
	mov	rax, QWORD PTR [rax]
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR -112[rbp], xmm0
	jmp	.L10281
.L10467:
	nop
.L10280:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	cvtsi2sd	xmm0, rax
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 384
	mov	rax, QWORD PTR [rax]
	cvtsi2sd	xmm1, rax
	divsd	xmm0, xmm1
	movapd	xmm1, xmm0
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 368
	mov	rax, QWORD PTR [rax]
	cvtsi2sd	xmm0, rax
	mulsd	xmm0, xmm1
	movsd	QWORD PTR -112[rbp], xmm0
.L10281:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -976[rbp]
	sub	rdx, rax
	mov	rax, rdx
	cvtsi2sd	xmm0, rax
	subsd	xmm0, QWORD PTR -112[rbp]
	call	nearbyint
	cvttsd2si	rax, xmm0
	mov	QWORD PTR -992[rbp], rax
	jmp	.L10287
.L10466:
	nop
.L10278:
	jmp	.L10287
.L10464:
	nop
.L10274:
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 2224
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10468
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 2224
	mov	rax, QWORD PTR [rax]
	cmp	rax, 1
	jne	.L10469
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 368
	mov	rax, QWORD PTR [rax]
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR -120[rbp], xmm0
	jmp	.L10286
.L10469:
	nop
.L10285:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	cvtsi2sd	xmm0, rax
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 384
	mov	rax, QWORD PTR [rax]
	cvtsi2sd	xmm1, rax
	divsd	xmm0, xmm1
	movapd	xmm1, xmm0
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 368
	mov	rax, QWORD PTR [rax]
	cvtsi2sd	xmm0, rax
	mulsd	xmm0, xmm1
	movsd	QWORD PTR -120[rbp], xmm0
.L10286:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -792[rbp]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	sub	rdx, rax
	mov	rax, rdx
	cvtsi2sd	xmm0, rax
	subsd	xmm0, QWORD PTR -120[rbp]
	call	nearbyint
	cvttsd2si	rax, xmm0
	mov	QWORD PTR -976[rbp], rax
	jmp	.L10287
.L10282:
.L10468:
	nop
.L10287:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -824[rbp], rax
	mov	rax, QWORD PTR -824[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2308
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -832[rbp], rax
	cmp	QWORD PTR -832[rbp], 0
	je	.L10470
	jmp	[QWORD PTR -832[rbp]]
.L10470:
	nop
.L10289:
	mov	rax, QWORD PTR -928[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -824[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR 48[rbp], rax
	je	.L10471
	mov	rcx, QWORD PTR -992[rbp]
	mov	r9, QWORD PTR -984[rbp]
	mov	r8, QWORD PTR -976[rbp]
	mov	rdx, QWORD PTR -968[rbp]
	mov	rax, QWORD PTR -792[rbp]
	mov	QWORD PTR 32[rsp], rcx
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT9SETBOUNDSEu7INTEGERS3_S3_S3_
	jmp	.L10295
.L10253:
.L10291:
.L10292:
.L10293:
.L10294:
.L10455:
	nop
	jmp	.L10295
.L10457:
	nop
	jmp	.L10295
.L10471:
	nop
.L10295:
	mov	rax, QWORD PTR -928[rbp]
	add	rax, 1
	mov	QWORD PTR -928[rbp], rax
.L10215:
	mov	rax, QWORD PTR -928[rbp]
	cmp	QWORD PTR -216[rbp], rax
	jge	.L10472
	nop
.L10296:
	mov	QWORD PTR -928[rbp], 0
	mov	rax, QWORD PTR -64[rbp]
	sub	rax, 1
	mov	QWORD PTR -224[rbp], rax
	jmp	.L10297
.L10477:
	nop
.L10298:
	mov	rax, QWORD PTR -904[rbp]
	mov	QWORD PTR -480[rbp], rax
	mov	rax, QWORD PTR -480[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2337
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -488[rbp], rax
	cmp	QWORD PTR -488[rbp], 0
	je	.L10473
	jmp	[QWORD PTR -488[rbp]]
.L10473:
	nop
.L10300:
	mov	rax, QWORD PTR -928[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -480[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -496[rbp], rax
	mov	rax, QWORD PTR -496[rbp]
	add	rax, 970
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L10474
	mov	rax, QWORD PTR -496[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HEIGHT__get__Ev
	mov	QWORD PTR -504[rbp], rax
	mov	rax, QWORD PTR -496[rbp]
	add	rax, 312
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -936[rbp]
	add	rdx, rax
	mov	rax, QWORD PTR -504[rbp]
	add	rdx, rax
	mov	rax, QWORD PTR -496[rbp]
	add	rax, 328
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	mov	QWORD PTR -936[rbp], rax
	mov	rax, QWORD PTR -904[rbp]
	mov	QWORD PTR -512[rbp], rax
	mov	rax, QWORD PTR -512[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2340
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -520[rbp], rax
	cmp	QWORD PTR -520[rbp], 0
	je	.L10475
	jmp	[QWORD PTR -520[rbp]]
.L10475:
	nop
.L10304:
	mov	rax, QWORD PTR -928[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -512[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR 48[rbp], rax
	je	.L10476
	mov	rax, QWORD PTR -496[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HEIGHT__get__Ev
	mov	QWORD PTR -528[rbp], rax
	mov	rax, QWORD PTR -496[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HEIGHT__get__Ev
	mov	QWORD PTR -536[rbp], rax
	mov	rdx, QWORD PTR -960[rbp]
	mov	rax, QWORD PTR -952[rbp]
	sub	rdx, rax
	mov	rax, QWORD PTR -496[rbp]
	add	rax, 304
	mov	rax, QWORD PTR [rax]
	sub	rdx, rax
	mov	rax, QWORD PTR -496[rbp]
	add	rax, 320
	mov	rax, QWORD PTR [rax]
	sub	rdx, rax
	mov	r9, rdx
	mov	rax, QWORD PTR -936[rbp]
	sub	rax, QWORD PTR -536[rbp]
	mov	rdx, rax
	mov	rax, QWORD PTR -496[rbp]
	add	rax, 328
	mov	rax, QWORD PTR [rax]
	sub	rdx, rax
	mov	r8, rdx
	mov	rax, QWORD PTR -496[rbp]
	add	rax, 304
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -952[rbp]
	add	rdx, rax
	mov	rax, QWORD PTR -496[rbp]
	mov	rcx, QWORD PTR -528[rbp]
	mov	QWORD PTR 32[rsp], rcx
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT9SETBOUNDSEu7INTEGERS3_S3_S3_
	jmp	.L10308
.L10302:
.L10306:
.L10307:
.L10474:
	nop
	jmp	.L10308
.L10476:
	nop
.L10308:
	mov	rax, QWORD PTR -928[rbp]
	add	rax, 1
	mov	QWORD PTR -928[rbp], rax
.L10297:
	mov	rax, QWORD PTR -928[rbp]
	cmp	QWORD PTR -224[rbp], rax
	jge	.L10477
	nop
.L10309:
	mov	QWORD PTR -928[rbp], 0
	mov	rax, QWORD PTR -72[rbp]
	sub	rax, 1
	mov	QWORD PTR -232[rbp], rax
	jmp	.L10310
.L10482:
	nop
.L10311:
	mov	rax, QWORD PTR -912[rbp]
	mov	QWORD PTR -424[rbp], rax
	mov	rax, QWORD PTR -424[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2346
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -432[rbp], rax
	cmp	QWORD PTR -432[rbp], 0
	je	.L10478
	jmp	[QWORD PTR -432[rbp]]
.L10478:
	nop
.L10313:
	mov	rax, QWORD PTR -928[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -424[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -440[rbp], rax
	mov	rax, QWORD PTR -440[rbp]
	add	rax, 970
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L10479
	mov	rax, QWORD PTR -440[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HEIGHT__get__Ev
	mov	QWORD PTR -448[rbp], rax
	mov	rdx, QWORD PTR -944[rbp]
	mov	rax, QWORD PTR -440[rbp]
	add	rax, 312
	mov	rax, QWORD PTR [rax]
	sub	rdx, rax
	mov	rax, rdx
	sub	rax, QWORD PTR -448[rbp]
	mov	rdx, rax
	mov	rax, QWORD PTR -440[rbp]
	add	rax, 328
	mov	rax, QWORD PTR [rax]
	sub	rdx, rax
	mov	rax, rdx
	mov	QWORD PTR -944[rbp], rax
	mov	rax, QWORD PTR -912[rbp]
	mov	QWORD PTR -456[rbp], rax
	mov	rax, QWORD PTR -456[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2349
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -464[rbp], rax
	cmp	QWORD PTR -464[rbp], 0
	je	.L10480
	jmp	[QWORD PTR -464[rbp]]
.L10480:
	nop
.L10317:
	mov	rax, QWORD PTR -928[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -456[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR 48[rbp], rax
	je	.L10481
	mov	rax, QWORD PTR -440[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HEIGHT__get__Ev
	mov	QWORD PTR -472[rbp], rax
	mov	rdx, QWORD PTR -960[rbp]
	mov	rax, QWORD PTR -952[rbp]
	sub	rdx, rax
	mov	rax, QWORD PTR -440[rbp]
	add	rax, 304
	mov	rax, QWORD PTR [rax]
	sub	rdx, rax
	mov	rax, QWORD PTR -440[rbp]
	add	rax, 320
	mov	rax, QWORD PTR [rax]
	sub	rdx, rax
	mov	r9, rdx
	mov	rax, QWORD PTR -440[rbp]
	add	rax, 312
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -944[rbp]
	lea	r8, [rdx+rax]
	mov	rax, QWORD PTR -440[rbp]
	add	rax, 304
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -952[rbp]
	add	rdx, rax
	mov	rax, QWORD PTR -440[rbp]
	mov	rcx, QWORD PTR -472[rbp]
	mov	QWORD PTR 32[rsp], rcx
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT9SETBOUNDSEu7INTEGERS3_S3_S3_
	jmp	.L10321
.L10315:
.L10319:
.L10320:
.L10479:
	nop
	jmp	.L10321
.L10481:
	nop
.L10321:
	mov	rax, QWORD PTR -928[rbp]
	add	rax, 1
	mov	QWORD PTR -928[rbp], rax
.L10310:
	mov	rax, QWORD PTR -928[rbp]
	cmp	QWORD PTR -232[rbp], rax
	jge	.L10482
	nop
.L10322:
	mov	QWORD PTR -928[rbp], 0
	mov	rax, QWORD PTR -48[rbp]
	sub	rax, 1
	mov	QWORD PTR -240[rbp], rax
	jmp	.L10323
.L10487:
	nop
.L10324:
	mov	rax, QWORD PTR -888[rbp]
	mov	QWORD PTR -360[rbp], rax
	mov	rax, QWORD PTR -360[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2355
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -368[rbp], rax
	cmp	QWORD PTR -368[rbp], 0
	je	.L10483
	jmp	[QWORD PTR -368[rbp]]
.L10483:
	nop
.L10326:
	mov	rax, QWORD PTR -928[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -360[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -376[rbp], rax
	mov	rax, QWORD PTR -376[rbp]
	add	rax, 970
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L10484
	mov	rax, QWORD PTR -376[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12WIDTH__get__Ev
	mov	QWORD PTR -384[rbp], rax
	mov	rax, QWORD PTR -376[rbp]
	add	rax, 304
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -952[rbp]
	add	rdx, rax
	mov	rax, QWORD PTR -384[rbp]
	add	rdx, rax
	mov	rax, QWORD PTR -376[rbp]
	add	rax, 320
	mov	rax, QWORD PTR [rax]
	add	rax, rdx
	mov	QWORD PTR -952[rbp], rax
	mov	rax, QWORD PTR -888[rbp]
	mov	QWORD PTR -392[rbp], rax
	mov	rax, QWORD PTR -392[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2358
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -400[rbp], rax
	cmp	QWORD PTR -400[rbp], 0
	je	.L10485
	jmp	[QWORD PTR -400[rbp]]
.L10485:
	nop
.L10330:
	mov	rax, QWORD PTR -928[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -392[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR 48[rbp], rax
	je	.L10486
	mov	rax, QWORD PTR -376[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12WIDTH__get__Ev
	mov	QWORD PTR -408[rbp], rax
	mov	rax, QWORD PTR -376[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12WIDTH__get__Ev
	mov	QWORD PTR -416[rbp], rax
	mov	rdx, QWORD PTR -944[rbp]
	mov	rax, QWORD PTR -936[rbp]
	sub	rdx, rax
	mov	rax, QWORD PTR -376[rbp]
	add	rax, 312
	mov	rax, QWORD PTR [rax]
	sub	rdx, rax
	mov	rax, QWORD PTR -376[rbp]
	add	rax, 328
	mov	rax, QWORD PTR [rax]
	mov	rcx, rdx
	sub	rcx, rax
	mov	rax, QWORD PTR -376[rbp]
	add	rax, 312
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -936[rbp]
	lea	r10, [rdx+rax]
	mov	rax, QWORD PTR -952[rbp]
	sub	rax, QWORD PTR -416[rbp]
	mov	rdx, rax
	mov	rax, QWORD PTR -376[rbp]
	add	rax, 320
	mov	rax, QWORD PTR [rax]
	sub	rdx, rax
	mov	r8, QWORD PTR -408[rbp]
	mov	rax, QWORD PTR -376[rbp]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9, r8
	mov	r8, r10
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT9SETBOUNDSEu7INTEGERS3_S3_S3_
	jmp	.L10334
.L10328:
.L10332:
.L10333:
.L10484:
	nop
	jmp	.L10334
.L10486:
	nop
.L10334:
	mov	rax, QWORD PTR -928[rbp]
	add	rax, 1
	mov	QWORD PTR -928[rbp], rax
.L10323:
	mov	rax, QWORD PTR -928[rbp]
	cmp	QWORD PTR -240[rbp], rax
	jge	.L10487
	nop
.L10335:
	mov	QWORD PTR -928[rbp], 0
	mov	rax, QWORD PTR -56[rbp]
	sub	rax, 1
	mov	QWORD PTR -248[rbp], rax
	jmp	.L10336
.L10492:
	nop
.L10337:
	mov	rax, QWORD PTR -896[rbp]
	mov	QWORD PTR -304[rbp], rax
	mov	rax, QWORD PTR -304[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2364
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -312[rbp], rax
	cmp	QWORD PTR -312[rbp], 0
	je	.L10488
	jmp	[QWORD PTR -312[rbp]]
.L10488:
	nop
.L10339:
	mov	rax, QWORD PTR -928[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -304[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -320[rbp], rax
	mov	rax, QWORD PTR -320[rbp]
	add	rax, 970
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L10489
	mov	rax, QWORD PTR -320[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12WIDTH__get__Ev
	mov	QWORD PTR -328[rbp], rax
	mov	rdx, QWORD PTR -960[rbp]
	mov	rax, QWORD PTR -320[rbp]
	add	rax, 304
	mov	rax, QWORD PTR [rax]
	sub	rdx, rax
	mov	rax, rdx
	sub	rax, QWORD PTR -328[rbp]
	mov	rdx, rax
	mov	rax, QWORD PTR -320[rbp]
	add	rax, 320
	mov	rax, QWORD PTR [rax]
	sub	rdx, rax
	mov	rax, rdx
	mov	QWORD PTR -960[rbp], rax
	mov	rax, QWORD PTR -896[rbp]
	mov	QWORD PTR -336[rbp], rax
	mov	rax, QWORD PTR -336[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2367
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -344[rbp], rax
	cmp	QWORD PTR -344[rbp], 0
	je	.L10490
	jmp	[QWORD PTR -344[rbp]]
.L10490:
	nop
.L10343:
	mov	rax, QWORD PTR -928[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -336[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR 48[rbp], rax
	je	.L10491
	mov	rax, QWORD PTR -320[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12WIDTH__get__Ev
	mov	QWORD PTR -352[rbp], rax
	mov	rdx, QWORD PTR -944[rbp]
	mov	rax, QWORD PTR -936[rbp]
	sub	rdx, rax
	mov	rax, QWORD PTR -320[rbp]
	add	rax, 312
	mov	rax, QWORD PTR [rax]
	sub	rdx, rax
	mov	rax, QWORD PTR -320[rbp]
	add	rax, 328
	mov	rax, QWORD PTR [rax]
	mov	rcx, rdx
	sub	rcx, rax
	mov	rax, QWORD PTR -320[rbp]
	add	rax, 312
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -936[rbp]
	lea	r10, [rdx+rax]
	mov	rax, QWORD PTR -320[rbp]
	add	rax, 304
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -960[rbp]
	add	rdx, rax
	mov	r8, QWORD PTR -352[rbp]
	mov	rax, QWORD PTR -320[rbp]
	mov	QWORD PTR 32[rsp], rcx
	mov	r9, r8
	mov	r8, r10
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT9SETBOUNDSEu7INTEGERS3_S3_S3_
	jmp	.L10347
.L10341:
.L10345:
.L10346:
.L10489:
	nop
	jmp	.L10347
.L10491:
	nop
.L10347:
	mov	rax, QWORD PTR -928[rbp]
	add	rax, 1
	mov	QWORD PTR -928[rbp], rax
.L10336:
	mov	rax, QWORD PTR -928[rbp]
	cmp	QWORD PTR -248[rbp], rax
	jge	.L10492
	nop
.L10348:
	mov	QWORD PTR -928[rbp], 0
	mov	rax, QWORD PTR -80[rbp]
	sub	rax, 1
	mov	QWORD PTR -256[rbp], rax
	jmp	.L10349
.L10496:
	nop
.L10350:
	mov	rax, QWORD PTR -920[rbp]
	mov	QWORD PTR -264[rbp], rax
	mov	rax, QWORD PTR -264[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2372
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -272[rbp], rax
	cmp	QWORD PTR -272[rbp], 0
	je	.L10493
	jmp	[QWORD PTR -272[rbp]]
.L10493:
	nop
.L10352:
	mov	rax, QWORD PTR -928[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -264[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -280[rbp], rax
	mov	rax, QWORD PTR -920[rbp]
	mov	QWORD PTR -288[rbp], rax
	mov	rax, QWORD PTR -288[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2374
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -296[rbp], rax
	cmp	QWORD PTR -296[rbp], 0
	je	.L10494
	jmp	[QWORD PTR -296[rbp]]
.L10494:
	nop
.L10354:
	mov	rax, QWORD PTR -928[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -288[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR 48[rbp], rax
	je	.L10495
	mov	rdx, QWORD PTR -944[rbp]
	mov	rax, QWORD PTR -936[rbp]
	sub	rdx, rax
	mov	rax, QWORD PTR -280[rbp]
	add	rax, 312
	mov	rax, QWORD PTR [rax]
	sub	rdx, rax
	mov	rax, QWORD PTR -280[rbp]
	add	rax, 328
	mov	rax, QWORD PTR [rax]
	mov	rcx, rdx
	sub	rcx, rax
	mov	rdx, QWORD PTR -960[rbp]
	mov	rax, QWORD PTR -952[rbp]
	sub	rdx, rax
	mov	rax, QWORD PTR -280[rbp]
	add	rax, 304
	mov	rax, QWORD PTR [rax]
	sub	rdx, rax
	mov	rax, QWORD PTR -280[rbp]
	add	rax, 320
	mov	rax, QWORD PTR [rax]
	sub	rdx, rax
	mov	r9, rdx
	mov	rax, QWORD PTR -280[rbp]
	add	rax, 312
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -936[rbp]
	lea	r8, [rdx+rax]
	mov	rax, QWORD PTR -280[rbp]
	add	rax, 304
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -952[rbp]
	add	rdx, rax
	mov	rax, QWORD PTR -280[rbp]
	mov	QWORD PTR 32[rsp], rcx
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT9SETBOUNDSEu7INTEGERS3_S3_S3_
	jmp	.L10357
.L10356:
.L10495:
	nop
.L10357:
	mov	rax, QWORD PTR -928[rbp]
	add	rax, 1
	mov	QWORD PTR -928[rbp], rax
.L10349:
	mov	rax, QWORD PTR -928[rbp]
	cmp	QWORD PTR -256[rbp], rax
	jge	.L10496
	jmp	.L10359
.L10214:
.L10358:
.L10437:
	nop
.L10359:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 392
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L10497
	mov	QWORD PTR -1000[rbp], 0
	mov	QWORD PTR -1008[rbp], 0
	lea	rdx, -1008[rbp]
	lea	rax, -1000[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL6GETMAXERu7INTEGERS4_
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HEIGHT__get__Ev
	mov	QWORD PTR -840[rbp], rax
	mov	rdx, QWORD PTR -1008[rbp]
	mov	rax, QWORD PTR -840[rbp]
	add	rax, rdx
	cmp	QWORD PTR 32[rbp], rax
	je	.L10498
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12CONTROLCOUNTEv
	mov	QWORD PTR -848[rbp], rax
	cmp	QWORD PTR -848[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -128[rbp], rax
	jmp	.L10364
.L10498:
	nop
.L10363:
	mov	QWORD PTR -128[rbp], 0
.L10364:
	cmp	QWORD PTR -128[rbp], 0
	je	.L10499
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HEIGHT__get__Ev
	mov	QWORD PTR -856[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12WIDTH__get__Ev
	mov	QWORD PTR -864[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 24
	mov	r10, QWORD PTR [rax]
	mov	rdx, QWORD PTR -1008[rbp]
	mov	rax, QWORD PTR -856[rbp]
	add	rax, rdx
	sub	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR -1000[rbp]
	mov	rax, QWORD PTR -864[rbp]
	add	rax, rcx
	sub	rax, QWORD PTR 24[rbp]
	mov	r8, rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR 32[rsp], rdx
	mov	r9, r8
	mov	r8, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	r10
	jmp	.L10367
.L10366:
.L10361:
.L10497:
	nop
	jmp	.L10367
.L10499:
	nop
.L10367:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 424
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10500
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 432[rax]
	mov	rax, QWORD PTR -952[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 440[rax]
	mov	rax, QWORD PTR -936[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rdx, QWORD PTR -960[rbp]
	mov	rax, QWORD PTR -952[rbp]
	sub	rdx, rax
	mov	rax, rdx
	test	rax, rax
	jns	.L10501
	mov	QWORD PTR -136[rbp], 0
	jmp	.L10372
.L10501:
	nop
.L10371:
	mov	rdx, QWORD PTR -960[rbp]
	mov	rax, QWORD PTR -952[rbp]
	sub	rdx, rax
	mov	rax, rdx
	mov	QWORD PTR -136[rbp], rax
.L10372:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 448[rax]
	mov	rax, QWORD PTR -136[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rdx, QWORD PTR -944[rbp]
	mov	rax, QWORD PTR -936[rbp]
	sub	rdx, rax
	mov	rax, rdx
	test	rax, rax
	jns	.L10502
	mov	QWORD PTR -144[rbp], 0
	jmp	.L10375
.L10502:
	nop
.L10374:
	mov	rdx, QWORD PTR -944[rbp]
	mov	rax, QWORD PTR -936[rbp]
	sub	rdx, rax
	mov	rax, rdx
	mov	QWORD PTR -144[rbp], rax
.L10375:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 456[rax]
	mov	rax, QWORD PTR -144[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 456
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	SCALEY
	movd	eax, xmm0
	mov	DWORD PTR -868[rbp], eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 448
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	SCALEX
	movd	eax, xmm0
	mov	DWORD PTR -872[rbp], eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 440
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	SCALEY
	movd	eax, xmm0
	mov	DWORD PTR -876[rbp], eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 432
	mov	rax, QWORD PTR [rax]
	cvtsi2ss	xmm0, rax
	call	SCALEX
	movd	eax, xmm0
	mov	DWORD PTR -880[rbp], eax
	mov	eax, DWORD PTR -868[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	ebx, xmm0
	mov	eax, DWORD PTR -872[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	edi, xmm0
	mov	eax, DWORD PTR -876[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	esi, xmm0
	mov	eax, DWORD PTR -880[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	edx, xmm0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 424
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR 40[rsp], -1
	mov	DWORD PTR 32[rsp], ebx
	mov	r9d, edi
	mov	r8d, esi
	mov	rcx, rax
	call	MoveWindow
	jmp	.L10376
.L10369:
.L10500:
	nop
.L10376:
	mov	rax, QWORD PTR -888[rbp]
	test	rax, rax
	je	.L10503
	mov	rax, QWORD PTR -888[rbp]
	mov	rcx, rax
	call	free
	jmp	.L10378
.L10503:
	nop
.L10378:
	mov	rax, QWORD PTR -896[rbp]
	test	rax, rax
	je	.L10504
	mov	rax, QWORD PTR -896[rbp]
	mov	rcx, rax
	call	free
	jmp	.L10380
.L10504:
	nop
.L10380:
	mov	rax, QWORD PTR -904[rbp]
	test	rax, rax
	je	.L10505
	mov	rax, QWORD PTR -904[rbp]
	mov	rcx, rax
	call	free
	jmp	.L10382
.L10505:
	nop
.L10382:
	mov	rax, QWORD PTR -912[rbp]
	test	rax, rax
	je	.L10506
	mov	rax, QWORD PTR -912[rbp]
	mov	rcx, rax
	call	free
	jmp	.L10384
.L10506:
	nop
.L10384:
	mov	rax, QWORD PTR -920[rbp]
	test	rax, rax
	je	.L10507
	mov	rax, QWORD PTR -920[rbp]
	mov	rcx, rax
	call	free
	jmp	.L10386
.L10212:
.L10436:
	nop
	jmp	.L10386
.L10507:
	nop
.L10386:
	mov	rax, QWORD PTR -176[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -160[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	add	rsp, 1032
	pop	rbx
	pop	rsi
	pop	rdi
	pop	rbp
	ret
	.section .rdata,"dr"
.LC548:
	.ascii "CLIENTTOSCREEN\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL14CLIENTTOSCREENER8tagPOINT;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL14CLIENTTOSCREENER8tagPOINT:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L10509:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC548[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10513
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	ClientToScreen
	jmp	.L10512
.L10511:
.L10513:
	nop
.L10512:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC549:
	.ascii "INVALIDATE\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL10INVALIDATEEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL10INVALIDATEEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L10515:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC549[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10519
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	r8d, -1
	mov	edx, 0
	mov	rcx, rax
	call	InvalidateRect
	jmp	.L10518
.L10517:
.L10519:
	nop
.L10518:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC550:
	.ascii "REPAINT\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL7REPAINTEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL7REPAINTEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L10521:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC550[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10526
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	r9d, 1
	mov	r8d, 0
	mov	edx, 0
	mov	rcx, rax
	call	RedrawWindow
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL6UPDATEEv
	jmp	.L10525
.L10523:
.L10524:
.L10526:
	nop
.L10525:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC551:
	.ascii "UPDATE\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL6UPDATEEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL6UPDATEEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L10528:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC551[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10532
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	UpdateWindow
	jmp	.L10531
.L10530:
.L10532:
	nop
.L10531:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC552:
	.ascii "SETFOCUS\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL8SETFOCUSEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL8SETFOCUSEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L10534:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC552[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10538
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	SetFocus
	jmp	.L10537
.L10536:
.L10538:
	nop
.L10537:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC553:
	.ascii "BRINGTOFRONT\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL12BRINGTOFRONTEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL12BRINGTOFRONTEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
.L10540:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC553[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10544
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR 48[rsp], 3
	mov	DWORD PTR 40[rsp], 0
	mov	DWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8d, 0
	mov	edx, 0
	mov	rcx, rax
	call	SetWindowPos
	jmp	.L10543
.L10542:
.L10544:
	nop
.L10543:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC554:
	.ascii "ALLOCATEHINT\0"
	.align 8
.LC555:
	.ascii "t\0o\0o\0l\0t\0i\0p\0s\0_\0c\0l\0a\0s\0s\0"
	.ascii "3\0"
	.ascii "2\0\0\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL12ALLOCATEHINTEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL12ALLOCATEHINTEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 160
	mov	QWORD PTR 16[rbp], rcx
.L10546:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC554[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10555
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1200
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10556
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1200
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DestroyWindow
	jmp	.L10550
.L10556:
	nop
.L10550:
	mov	ecx, 0
	call	GetModuleHandleW
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR 88[rsp], 0
	mov	rdx, QWORD PTR -40[rbp]
	mov	QWORD PTR 80[rsp], rdx
	mov	QWORD PTR 72[rsp], 0
	mov	QWORD PTR 64[rsp], rax
	mov	DWORD PTR 56[rsp], 0
	mov	DWORD PTR 48[rsp], 0
	mov	DWORD PTR 40[rsp], 0
	mov	DWORD PTR 32[rsp], 0
	mov	r9d, -2147483647
	lea	r8, .LC77[rip]
	lea	rdx, .LC555[rip]
	mov	ecx, 0
	call	CreateWindowExW
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 1200[rax]
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 464
	mov	DWORD PTR [rax], 72
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 468
	mov	DWORD PTR [rax], 17
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1200
	mov	rax, QWORD PTR [rax]
	mov	r9d, 100
	mov	r8d, 3
	mov	edx, 1027
	mov	rcx, rax
	call	SendMessageW
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10557
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 472[rax]
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR [rdx], rax
	jmp	.L10552
.L10557:
	nop
.L10552:
	mov	ecx, 0
	call	GetModuleHandleW
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 504[rax]
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 480[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 160[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 512[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 632[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 464
	mov	rdx, rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1200
	mov	rax, QWORD PTR [rax]
	mov	r9, rdx
	mov	r8d, 0
	mov	edx, 1074
	mov	rcx, rax
	call	SendMessageW
	jmp	.L10554
.L10548:
.L10553:
.L10555:
	nop
.L10554:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 2
.LC556:
	.ascii " \0(\0\0\0"
	.align 2
.LC557:
	.ascii ")\0 \0\0\0"
	.align 2
.LC558:
	.ascii "i\0n\0 \0l\0i\0n\0e\0 \0\0\0"
	.align 8
.LC559:
	.ascii " \0(\0H\0a\0n\0d\0l\0e\0r\0 \0l\0i\0n\0e\0:\0 \0\0\0"
	.align 2
.LC560:
	.ascii "2\0"
	.ascii "6\0"
	.ascii "5\0"
	.ascii "0\0\0\0"
	.align 2
.LC561:
	.ascii "i\0n\0 \0f\0u\0n\0c\0t\0i\0o\0n\0 \0\0\0"
	.align 8
.LC562:
	.ascii " \0(\0H\0a\0n\0d\0l\0e\0r\0 \0f\0u\0n\0c\0t\0i\0o\0n\0:\0 \0\0\0"
	.align 8
.LC563:
	.ascii "M\0Y\0.\0S\0Y\0S\0.\0F\0O\0R\0M\0S\0.\0C\0O\0N\0T\0R\0O\0L\0.\0A\0D\0D\0\0\0"
	.align 2
.LC564:
	.ascii "i\0n\0 \0m\0o\0d\0u\0l\0e\0 \0\0\0"
	.align 8
.LC565:
	.ascii " \0(\0H\0a\0n\0d\0l\0e\0r\0 \0f\0i\0l\0e\0:\0 \0\0\0"
	.align 8
.LC566:
	.ascii "C\0:\0\\\0V\0i\0s\0u\0a\0l\0F\0B\0E\0d\0i\0t\0o\0r\0.\0"
	.ascii "1\0.\0"
	.ascii "3\0.\0"
	.ascii "3\0\\\0C\0o\0n\0t\0r\0o\0l\0s\0\\\0M\0y\0F\0b\0F\0r\0a\0m\0e\0w\0o\0r\0k\0\\\0m\0f\0f\0\\\0C\0o\0n\0t\0r\0o\0l\0.\0b\0a\0s\0\0\0"
	.text
	.def	_ZN2MY3SYS5FORMS7CONTROL3ADDEPS2_u7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL3ADDEPS2_u7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 896
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
.L10559:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC258[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	lea	rcx, .L10560[rip]
	call	fb_ErrorSetHandler
	cmp	QWORD PTR 24[rbp], 0
	je	.L10635
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 32
	mov	rcx, rax
	call	WGET
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	rdx, .LC93[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -52[rbp], eax
	cmp	DWORD PTR -52[rbp], 0
	nop
.L10563:
.L10564:
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL13PARENT__get__Ev
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2542
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -88[rbp], rax
	cmp	QWORD PTR -88[rbp], 0
	jne	.L10636
	nop
.L10566:
	mov	rax, QWORD PTR -80[rbp]
	lea	rdx, 128[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1040
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1040
	add	rdx, 1
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1040
	mov	rax, QWORD PTR [rax]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2144
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	realloc
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2144[rax]
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR [rdx], rax
	cmp	QWORD PTR 32[rbp], -1
	jne	.L10637
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2546
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -112[rbp], rax
	cmp	QWORD PTR -112[rbp], 0
	jne	.L10638
	nop
.L10571:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1040
	mov	rax, QWORD PTR [rax]
	sal	rax, 3
	lea	rdx, -8[rax]
	mov	rax, QWORD PTR -104[rbp]
	add	rdx, rax
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	jmp	.L10572
.L10637:
	nop
.L10569:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1040
	mov	rax, QWORD PTR [rax]
	sub	rax, 2
	mov	QWORD PTR -120[rbp], rax
	jmp	.L10573
.L10641:
	nop
.L10574:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2549
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -152[rbp], rax
	cmp	QWORD PTR -152[rbp], 0
	jne	.L10639
	nop
.L10576:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2549
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -168[rbp], rax
	cmp	QWORD PTR -168[rbp], 0
	jne	.L10640
	nop
.L10578:
	mov	rax, QWORD PTR -8[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -144[rbp]
	add	rax, rdx
	mov	rdx, QWORD PTR -8[rbp]
	sal	rdx, 3
	lea	rcx, 8[rdx]
	mov	rdx, QWORD PTR -160[rbp]
	add	rdx, rcx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
.L10579:
	add	QWORD PTR -8[rbp], 1
.L10573:
	mov	rax, QWORD PTR -8[rbp]
	cmp	rax, QWORD PTR -120[rbp]
	jle	.L10641
	nop
.L10580:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2551
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -136[rbp], rax
	cmp	QWORD PTR -136[rbp], 0
	jne	.L10642
	nop
.L10582:
	mov	rax, QWORD PTR 32[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -128[rbp]
	add	rdx, rax
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
.L10572:
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -176[rbp], rax
	cmp	QWORD PTR -176[rbp], 0
	je	.L10643
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10644
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -184[rbp]
	mov	rcx, rax
	call	SetParent
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12WIDTH__get__Ev
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2625
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -208[rbp], rax
	cmp	QWORD PTR -208[rbp], 0
	jne	.L10645
	nop
.L10588:
	mov	rax, QWORD PTR -200[rbp]
	lea	rdx, 376[rax]
	mov	rax, QWORD PTR -192[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HEIGHT__get__Ev
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -224[rbp], rax
	mov	rax, QWORD PTR -224[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2626
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -232[rbp], rax
	cmp	QWORD PTR -232[rbp], 0
	jne	.L10646
	nop
.L10590:
	mov	rax, QWORD PTR -224[rbp]
	lea	rdx, 384[rax]
	mov	rax, QWORD PTR -216[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -240[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2627
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -248[rbp], rax
	cmp	QWORD PTR -248[rbp], 0
	jne	.L10647
	nop
.L10592:
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -256[rbp], rax
	mov	rax, QWORD PTR -256[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2627
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -264[rbp], rax
	cmp	QWORD PTR -264[rbp], 0
	jne	.L10648
	nop
.L10594:
	mov	rax, QWORD PTR -256[rbp]
	lea	rdx, 344[rax]
	mov	rax, QWORD PTR -240[rbp]
	mov	rax, QWORD PTR 80[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -272[rbp], rax
	mov	rax, QWORD PTR -272[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2628
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -280[rbp], rax
	cmp	QWORD PTR -280[rbp], 0
	jne	.L10649
	nop
.L10596:
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -288[rbp], rax
	mov	rax, QWORD PTR -288[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2628
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -296[rbp], rax
	cmp	QWORD PTR -296[rbp], 0
	jne	.L10650
	nop
.L10598:
	mov	rax, QWORD PTR -288[rbp]
	lea	rdx, 352[rax]
	mov	rax, QWORD PTR -272[rbp]
	mov	rax, QWORD PTR 88[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -304[rbp], rax
	mov	rax, QWORD PTR -304[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2629
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -312[rbp], rax
	cmp	QWORD PTR -312[rbp], 0
	jne	.L10651
	nop
.L10600:
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -320[rbp], rax
	mov	rax, QWORD PTR -320[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2629
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -328[rbp], rax
	cmp	QWORD PTR -328[rbp], 0
	jne	.L10652
	nop
.L10602:
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -336[rbp], rax
	mov	rax, QWORD PTR -336[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2629
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -344[rbp], rax
	cmp	QWORD PTR -344[rbp], 0
	jne	.L10653
	nop
.L10604:
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -352[rbp], rax
	mov	rax, QWORD PTR -352[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2629
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -360[rbp], rax
	cmp	QWORD PTR -360[rbp], 0
	jne	.L10654
	nop
.L10606:
	mov	rax, QWORD PTR -304[rbp]
	add	rax, 376
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -320[rbp]
	add	rax, 96
	mov	rax, QWORD PTR [rax]
	mov	rcx, rdx
	sub	rcx, rax
	mov	rax, QWORD PTR -336[rbp]
	add	rax, 80
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -352[rbp]
	add	rax, 360
	sub	rcx, rdx
	mov	rdx, rcx
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -368[rbp], rax
	mov	rax, QWORD PTR -368[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2630
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -376[rbp], rax
	cmp	QWORD PTR -376[rbp], 0
	jne	.L10655
	nop
.L10608:
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -384[rbp], rax
	mov	rax, QWORD PTR -384[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2630
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -392[rbp], rax
	cmp	QWORD PTR -392[rbp], 0
	jne	.L10656
	nop
.L10610:
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -400[rbp], rax
	mov	rax, QWORD PTR -400[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2630
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -408[rbp], rax
	cmp	QWORD PTR -408[rbp], 0
	jne	.L10657
	nop
.L10612:
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -416[rbp], rax
	mov	rax, QWORD PTR -416[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2630
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -424[rbp], rax
	cmp	QWORD PTR -424[rbp], 0
	jne	.L10658
	nop
.L10614:
	mov	rax, QWORD PTR -368[rbp]
	add	rax, 384
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -384[rbp]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	mov	rcx, rdx
	sub	rcx, rax
	mov	rax, QWORD PTR -400[rbp]
	add	rax, 88
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -416[rbp]
	add	rax, 368
	sub	rcx, rdx
	mov	rdx, rcx
	mov	QWORD PTR [rax], rdx
	jmp	.L10618
.L10586:
.L10644:
	nop
.L10615:
	jmp	.L10618
.L10643:
	nop
.L10584:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10659
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 104
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	rdx
	jmp	.L10618
.L10616:
.L10659:
	nop
.L10618:
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -432[rbp], rax
	mov	rax, QWORD PTR -432[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2638
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -440[rbp], rax
	cmp	QWORD PTR -440[rbp], 0
	jne	.L10660
	nop
.L10620:
	mov	rax, QWORD PTR -432[rbp]
	add	rax, 928
	mov	rax, QWORD PTR [rax]
	cmp	rax, -1
	jne	.L10661
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, -1
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL14CHANGETABINDEXEu7INTEGER
	jmp	.L10622
.L10661:
	nop
.L10622:
	mov	QWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8, -1
	mov	rdx, -1
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12REQUESTALIGNEu7INTEGERS3_bPS2_
	cmp	QWORD PTR -72[rbp], 0
	je	.L10662
	mov	rax, QWORD PTR -72[rbp]
	cmp	rax, QWORD PTR 16[rbp]
	je	.L10663
	mov	rdx, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL6REMOVEEPS2_
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8, -1
	mov	rdx, -1
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL12REQUESTALIGNEu7INTEGERS3_bPS2_
	jmp	.L10630
.L10562:
.L10625:
.L10626:
.L10627:
.L10628:
.L10635:
	nop
	jmp	.L10630
.L10662:
	nop
	jmp	.L10630
.L10663:
	nop
.L10629:
	jmp	.L10630
.L10636:
	nop
	jmp	.L10560
.L10638:
	nop
	jmp	.L10560
.L10639:
	nop
	jmp	.L10560
.L10640:
	nop
	jmp	.L10560
.L10642:
	nop
	jmp	.L10560
.L10645:
	nop
	jmp	.L10560
.L10646:
	nop
	jmp	.L10560
.L10647:
	nop
	jmp	.L10560
.L10648:
	nop
	jmp	.L10560
.L10649:
	nop
	jmp	.L10560
.L10650:
	nop
	jmp	.L10560
.L10651:
	nop
	jmp	.L10560
.L10652:
	nop
	jmp	.L10560
.L10653:
	nop
	jmp	.L10560
.L10654:
	nop
	jmp	.L10560
.L10655:
	nop
	jmp	.L10560
.L10656:
	nop
	jmp	.L10560
.L10657:
	nop
	jmp	.L10560
.L10658:
	nop
	jmp	.L10560
.L10660:
	nop
.L10560:
	call	fb_ErrorGetModName
	mov	QWORD PTR -448[rbp], rax
	mov	rax, QWORD PTR -448[rbp]
	mov	QWORD PTR -840[rbp], rax
	lea	rax, -840[rbp]
	mov	rcx, rax
	call	ZGET
	mov	QWORD PTR -456[rbp], rax
	call	fb_ErrorGetFuncName
	mov	QWORD PTR -464[rbp], rax
	mov	rax, QWORD PTR -464[rbp]
	mov	QWORD PTR -832[rbp], rax
	lea	rax, -832[rbp]
	mov	rcx, rax
	call	ZGET
	mov	QWORD PTR -472[rbp], rax
	call	fb_ErrorGetLineNum
	mov	DWORD PTR -476[rbp], eax
	mov	eax, DWORD PTR -476[rbp]
	mov	ecx, eax
	call	fb_IntToWstr
	mov	QWORD PTR -488[rbp], rax
	mov	rax, QWORD PTR -488[rbp]
	mov	QWORD PTR -496[rbp], rax
	call	fb_ErrorGetNum
	mov	DWORD PTR -500[rbp], eax
	mov	eax, DWORD PTR -500[rbp]
	mov	ecx, eax
	call	fb_IntToWstr
	mov	QWORD PTR -512[rbp], rax
	mov	rax, QWORD PTR -512[rbp]
	mov	QWORD PTR -520[rbp], rax
	call	fb_ErrorGetNum
	mov	DWORD PTR -524[rbp], eax
	mov	eax, DWORD PTR -524[rbp]
	cdqe
	mov	rcx, rax
	call	ERRDESCRIPTION
	mov	QWORD PTR -536[rbp], rax
	mov	rax, QWORD PTR -536[rbp]
	lea	rdx, .LC556[rip]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -544[rbp], rax
	mov	rax, QWORD PTR -544[rbp]
	mov	QWORD PTR -552[rbp], rax
	mov	rdx, QWORD PTR -520[rbp]
	mov	rax, QWORD PTR -552[rbp]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -560[rbp], rax
	mov	rax, QWORD PTR -560[rbp]
	mov	QWORD PTR -568[rbp], rax
	mov	rax, QWORD PTR -568[rbp]
	lea	rdx, .LC557[rip]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -576[rbp], rax
	mov	rax, QWORD PTR -576[rbp]
	mov	QWORD PTR -584[rbp], rax
	mov	rax, QWORD PTR -584[rbp]
	lea	rdx, .LC558[rip]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -592[rbp], rax
	mov	rax, QWORD PTR -592[rbp]
	mov	QWORD PTR -600[rbp], rax
	mov	rdx, QWORD PTR -496[rbp]
	mov	rax, QWORD PTR -600[rbp]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -608[rbp], rax
	mov	rax, QWORD PTR -608[rbp]
	mov	QWORD PTR -616[rbp], rax
	mov	rax, QWORD PTR -616[rbp]
	lea	rdx, .LC559[rip]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -624[rbp], rax
	mov	rax, QWORD PTR -624[rbp]
	mov	QWORD PTR -632[rbp], rax
	mov	rax, QWORD PTR -632[rbp]
	lea	rdx, .LC560[rip]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -640[rbp], rax
	mov	rax, QWORD PTR -640[rbp]
	mov	QWORD PTR -648[rbp], rax
	mov	rax, QWORD PTR -648[rbp]
	lea	rdx, .LC557[rip]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -656[rbp], rax
	mov	rax, QWORD PTR -656[rbp]
	mov	QWORD PTR -664[rbp], rax
	mov	rax, QWORD PTR -664[rbp]
	lea	rdx, .LC561[rip]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -672[rbp], rax
	mov	rax, QWORD PTR -672[rbp]
	mov	QWORD PTR -680[rbp], rax
	mov	rdx, QWORD PTR -472[rbp]
	mov	rax, QWORD PTR -680[rbp]
	mov	r8, -1
	mov	rcx, rax
	call	fb_WstrConcatWA
	mov	QWORD PTR -688[rbp], rax
	mov	rax, QWORD PTR -688[rbp]
	mov	QWORD PTR -696[rbp], rax
	mov	rax, QWORD PTR -696[rbp]
	lea	rdx, .LC562[rip]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -704[rbp], rax
	mov	rax, QWORD PTR -704[rbp]
	mov	QWORD PTR -712[rbp], rax
	mov	rax, QWORD PTR -712[rbp]
	lea	rdx, .LC563[rip]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -720[rbp], rax
	mov	rax, QWORD PTR -720[rbp]
	mov	QWORD PTR -728[rbp], rax
	mov	rax, QWORD PTR -728[rbp]
	lea	rdx, .LC557[rip]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -736[rbp], rax
	mov	rax, QWORD PTR -736[rbp]
	mov	QWORD PTR -744[rbp], rax
	mov	rax, QWORD PTR -744[rbp]
	lea	rdx, .LC564[rip]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -752[rbp], rax
	mov	rax, QWORD PTR -752[rbp]
	mov	QWORD PTR -760[rbp], rax
	mov	rdx, QWORD PTR -456[rbp]
	mov	rax, QWORD PTR -760[rbp]
	mov	r8, -1
	mov	rcx, rax
	call	fb_WstrConcatWA
	mov	QWORD PTR -768[rbp], rax
	mov	rax, QWORD PTR -768[rbp]
	mov	QWORD PTR -776[rbp], rax
	mov	rax, QWORD PTR -776[rbp]
	lea	rdx, .LC565[rip]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -784[rbp], rax
	mov	rax, QWORD PTR -784[rbp]
	mov	QWORD PTR -792[rbp], rax
	mov	rax, QWORD PTR -792[rbp]
	lea	rdx, .LC566[rip]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -800[rbp], rax
	mov	rax, QWORD PTR -800[rbp]
	mov	QWORD PTR -808[rbp], rax
	mov	rax, QWORD PTR -808[rbp]
	lea	rdx, .LC557[rip]
	mov	rcx, rax
	call	fb_WstrConcat
	mov	QWORD PTR -816[rbp], rax
	mov	rax, QWORD PTR -816[rbp]
	mov	QWORD PTR -824[rbp], rax
	mov	rax, QWORD PTR -824[rbp]
	mov	r8d, 1
	mov	rdx, rax
	mov	ecx, 0
	call	fb_PrintWstr
	mov	rax, QWORD PTR -824[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -808[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -792[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -776[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -760[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -744[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -728[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -712[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -696[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -680[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -664[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -648[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -632[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -616[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -496[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -600[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -584[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -568[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -520[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -552[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L10630:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS7CONTROL6REMOVEEPS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL6REMOVEEPS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 176
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L10665:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC261[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	QWORD PTR -112[rbp], 0
	mov	QWORD PTR -120[rbp], 0
	mov	QWORD PTR -128[rbp], 0
	mov	QWORD PTR -136[rbp], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2671
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -48[rbp], rax
	cmp	QWORD PTR -48[rbp], 0
	je	.L10690
	jmp	[QWORD PTR -48[rbp]]
.L10690:
	nop
.L10667:
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 928
	mov	rax, QWORD PTR [rax]
	cmp	rax, -2
	je	.L10691
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, -1
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL14CHANGETABINDEXEu7INTEGER
	jmp	.L10669
.L10691:
	nop
.L10669:
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL7INDEXOFEPS2_
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	not	rax
	shr	rax, 63
	movzx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1040
	mov	rax, QWORD PTR [rax]
	lea	rcx, -1[rax]
	mov	rax, QWORD PTR -136[rbp]
	cmp	rcx, rax
	setge	al
	movzx	eax, al
	neg	eax
	and	eax, edx
	test	eax, eax
	je	.L10692
	mov	rax, QWORD PTR -136[rbp]
	add	rax, 1
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1040
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR -64[rbp], rax
	jmp	.L10672
.L10695:
	nop
.L10673:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2675
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -88[rbp], rax
	cmp	QWORD PTR -88[rbp], 0
	je	.L10693
	jmp	[QWORD PTR -88[rbp]]
.L10693:
	nop
.L10675:
	mov	rax, QWORD PTR -120[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -80[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2676
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -104[rbp], rax
	cmp	QWORD PTR -104[rbp], 0
	je	.L10694
	jmp	[QWORD PTR -104[rbp]]
.L10694:
	nop
.L10677:
	mov	rax, QWORD PTR -120[rbp]
	sal	rax, 3
	lea	rdx, -8[rax]
	mov	rax, QWORD PTR -96[rbp]
	add	rdx, rax
	mov	rax, QWORD PTR -112[rbp]
	mov	QWORD PTR [rdx], rax
.L10678:
	mov	rax, QWORD PTR -120[rbp]
	add	rax, 1
	mov	QWORD PTR -120[rbp], rax
.L10672:
	mov	rax, QWORD PTR -120[rbp]
	cmp	QWORD PTR -64[rbp], rax
	jge	.L10695
	nop
.L10679:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1040
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1040
	sub	rdx, 1
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1040
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jne	.L10696
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2144
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	free
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2144
	mov	QWORD PTR [rax], 0
	jmp	.L10684
.L10696:
	nop
.L10681:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1040
	mov	rax, QWORD PTR [rax]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2144
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	realloc
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2144[rax]
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR [rdx], rax
	jmp	.L10684
.L10671:
.L10682:
.L10683:
.L10692:
	nop
.L10684:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS7CONTROL7INDEXOFEPS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL7INDEXOFEPS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -72[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC263[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L10698:
	mov	QWORD PTR -80[rbp], 0
	mov	QWORD PTR -80[rbp], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12CONTROLCOUNTEv
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	sub	rax, 1
	mov	QWORD PTR -48[rbp], rax
	jmp	.L10699
.L10714:
	nop
.L10700:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2692
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -64[rbp], rax
	cmp	QWORD PTR -64[rbp], 0
	je	.L10712
	jmp	[QWORD PTR -64[rbp]]
.L10712:
	nop
.L10702:
	mov	rax, QWORD PTR -80[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -56[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR 24[rbp], rax
	jne	.L10713
	mov	rax, QWORD PTR -80[rbp]
	mov	QWORD PTR -72[rbp], rax
	jmp	.L10705
.L10704:
.L10713:
	nop
.L10706:
	mov	rax, QWORD PTR -80[rbp]
	add	rax, 1
	mov	QWORD PTR -80[rbp], rax
.L10699:
	mov	rax, QWORD PTR -80[rbp]
	cmp	QWORD PTR -48[rbp], rax
	jge	.L10714
	nop
.L10707:
	mov	QWORD PTR -72[rbp], -1
	nop
.L10705:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -72[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS7CONTROL7INDEXOFER8FBSTRING;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROL7INDEXOFER8FBSTRING:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 160
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -112[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC263[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L10716:
	mov	QWORD PTR -120[rbp], 0
	mov	QWORD PTR -120[rbp], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12CONTROLCOUNTEv
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	sub	rax, 1
	mov	QWORD PTR -48[rbp], rax
	jmp	.L10717
.L10732:
	nop
.L10718:
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2144[rax]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	r8, .LC81[rip]
	mov	edx, 2700
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L10730
	jmp	[QWORD PTR -80[rbp]]
.L10730:
	nop
.L10720:
	mov	rax, QWORD PTR -120[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -72[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT11NAME__get__Ev
	mov	QWORD PTR -88[rbp], rax
	mov	rdx, QWORD PTR -64[rbp]
	mov	rax, QWORD PTR -88[rbp]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -92[rbp], eax
	cmp	DWORD PTR -92[rbp], 0
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -104[rbp], 0
	je	.L10731
	mov	rax, QWORD PTR -120[rbp]
	mov	QWORD PTR -112[rbp], rax
	jmp	.L10723
.L10722:
.L10731:
	nop
.L10724:
	mov	rax, QWORD PTR -120[rbp]
	add	rax, 1
	mov	QWORD PTR -120[rbp], rax
.L10717:
	mov	rax, QWORD PTR -120[rbp]
	cmp	QWORD PTR -48[rbp], rax
	jge	.L10732
	nop
.L10725:
	mov	QWORD PTR -112[rbp], -1
	nop
.L10723:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -112[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS7CONTROLcvPvEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROLcvPvEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L10734:
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR -40[rbp], rax
	nop
.L10735:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS7CONTROLC1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROLC1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L10738:
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 336
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 344
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 352
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 360
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 368
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 376
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 384
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 392
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 393
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 400
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 408
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 416
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 424
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 432
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 440
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 448
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 456
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 464
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	QWORD PTR 32[rax], 0
	mov	QWORD PTR 40[rax], 0
	mov	QWORD PTR 48[rax], 0
	mov	QWORD PTR 56[rax], 0
	mov	QWORD PTR 64[rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 536
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 544
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 552
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 560
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 568
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 576
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 584
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 592
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 600
	mov	rcx, rax
	call	_ZN7USTRINGC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 632
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 640
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 648
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 656
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 664
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 672
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 680
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 688
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 696
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 704
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 712
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 720
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 728
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 736
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 744
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4FONTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 904
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 912
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 920
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 921
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 928
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 936
	mov	rcx, rax
	call	_ZN11INTEGERLISTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 968
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 969
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 970
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 976
	mov	QWORD PTR [rax], -1
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 984
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 992
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1000
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1008
	mov	rcx, rax
	call	_ZN4LISTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1024
	mov	rcx, rax
	call	_ZN4LISTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1040
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1048
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1056
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1064
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1072
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING5BRUSHC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1168
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1176
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1184
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1192
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1200
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1208
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING6CANVASC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1760
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1768
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4FONTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1928
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING6CURSORC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2048
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2056
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS15SIZECONSTRAINTSC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2136
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2144
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2152
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS10ANCHORTYPEC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2232
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2240
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2248
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2256
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2264
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2272
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2280
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2288
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2296
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2304
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2312
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2320
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2328
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2336
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2344
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2352
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2360
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2368
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2376
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2384
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2392
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2400
	mov	QWORD PTR [rax], 0
	lea	rdx, _ZTVN2MY3SYS5FORMS7CONTROLE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 32
	lea	rdx, .LC546[rip]
	mov	rcx, rax
	call	WLET
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	lea	rdx, .LC77[rip]
	mov	rcx, rax
	call	WLET
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	lea	rdx, .LC77[rip]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 96
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 680
	mov	QWORD PTR [rax], -1
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 672[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 680[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 928
	mov	QWORD PTR [rax], -2
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 640
	mov	BYTE PTR [rax], 1
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 970
	mov	BYTE PTR [rax], 1
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 969
	mov	BYTE PTR [rax], 1
.L10739:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS7CONTROLD1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS7CONTROLD1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	lea	rdx, _ZTVN2MY3SYS5FORMS7CONTROLE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rcx, .LC81[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L10741:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL7FREEWNDEv
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 632
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10747
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 632
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	free
	jmp	.L10743
.L10747:
	nop
.L10743:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2144
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10748
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2144
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	free
	jmp	.L10745
.L10748:
	nop
.L10745:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1008
	mov	rcx, rax
	call	_ZN4LIST5CLEAREv
.L10746:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2152
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS10ANCHORTYPED1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2056
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS15SIZECONSTRAINTSD1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1928
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING6CURSORD1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1768
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4FONTD1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1208
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING6CANVASD1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1072
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING5BRUSHD1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1024
	mov	rcx, rax
	call	_ZN4LISTD1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1008
	mov	rcx, rax
	call	_ZN4LISTD1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 936
	mov	rcx, rax
	call	_ZN11INTEGERLISTD1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 744
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4FONTD1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 600
	mov	rcx, rax
	call	_ZN7USTRINGD1Ev
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENTD1Ev
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC567:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\ContainerControl.bi\0"
	.text
	.def	_ZN2MY3SYS5FORMS16CONTAINERCONTROLaSERKS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS16CONTAINERCONTROLaSERKS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L10750:
	lea	rcx, .LC567[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROLaSERKS2_
.L10751:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 2
.LC568:
	.ascii "a\0u\0t\0o\0s\0i\0z\0e\0\0\0"
	.align 2
.LC569:
	.ascii "c\0a\0n\0v\0a\0s\0\0\0"
	.text
	.def	_ZN2MY3SYS5FORMS16CONTAINERCONTROL12READPROPERTYER8FBSTRING;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS16CONTAINERCONTROL12READPROPERTYER8FBSTRING:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 176
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -104[rbp], 0
	lea	rcx, .LC83[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC152[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L10753:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 136
	mov	rdx, QWORD PTR -40[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrAssign
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 136[rax]
	lea	rax, -128[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -128[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC568[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L10765
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L10756:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 392
	mov	QWORD PTR -104[rbp], rax
	lea	rax, -128[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L10761
.L10765:
	nop
.L10755:
	lea	rax, -128[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	rdx, .LC569[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -84[rbp], eax
	cmp	DWORD PTR -84[rbp], 0
	jne	.L10766
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L10760:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1208
	mov	QWORD PTR -104[rbp], rax
	lea	rax, -128[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L10761
.L10766:
	nop
.L10759:
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12READPROPERTYER8FBSTRING
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	lea	rax, -128[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	nop
.L10761:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -104[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS16CONTAINERCONTROL13WRITEPROPERTYER8FBSTRINGPv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS16CONTAINERCONTROL13WRITEPROPERTYER8FBSTRINGPv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 160
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	BYTE PTR -82[rbp], 0
	lea	rcx, .LC83[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC154[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L10768:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -112[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -112[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC568[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L10780
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L10771:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	r8, .LC83[rip]
	mov	edx, 22
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L10781
	jmp	[QWORD PTR -80[rbp]]
.L10781:
	nop
.L10773:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 144
	mov	r8, QWORD PTR [rax]
	mov	rax, QWORD PTR -72[rbp]
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	r8
	nop
.L10776:
	lea	rax, -112[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	mov	BYTE PTR -82[rbp], 1
	jmp	.L10775
.L10774:
.L10780:
	nop
.L10770:
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL13WRITEPROPERTYER8FBSTRINGPv
	mov	BYTE PTR -81[rbp], al
	movzx	eax, BYTE PTR -81[rbp]
	mov	BYTE PTR -82[rbp], al
	lea	rax, -112[rbp]
	mov	rcx, rax
	call	fb_StrDelete
.L10775:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -82[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS16CONTAINERCONTROL14PROCESSMESSAGEER7MESSAGE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS16CONTAINERCONTROL14PROCESSMESSAGEER7MESSAGE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L10783:
	lea	rcx, .LC83[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC369[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL14PROCESSMESSAGEER7MESSAGE
.L10784:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC570:
	.ascii "C\0o\0n\0t\0a\0i\0n\0e\0r\0C\0o\0n\0t\0r\0o\0l\0\0\0"
	.text
	.def	_ZN2MY3SYS5FORMS16CONTAINERCONTROLC1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS16CONTAINERCONTROLC1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L10786:
	lea	rcx, .LC83[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROLC1Ev
	lea	rdx, _ZTVN2MY3SYS5FORMS16CONTAINERCONTROLE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 32
	lea	rdx, .LC570[rip]
	mov	rcx, rax
	call	WLET
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 576
	mov	QWORD PTR [rax], -1
.L10787:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS16CONTAINERCONTROLD1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS16CONTAINERCONTROLD1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	lea	rdx, _ZTVN2MY3SYS5FORMS16CONTAINERCONTROLE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rcx, .LC83[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L10789:
.L10790:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROLD1Ev
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC571:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Graphic.bi\0"
	.text
	.def	_ZN2MY3SYS7DRAWING11GRAPHICTYPEaSERKS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING11GRAPHICTYPEaSERKS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L10792:
	lea	rcx, .LC571[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTaSERKS1_
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 48[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rcx, rax
	call	_ZN7USTRINGaSERS_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 80[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 80[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 88[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPEaSERKS2_
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 424[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 424
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4ICONaSERS2_
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 520[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 520
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING6CURSORaSERS2_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 640[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 640[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 648[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 648[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 656[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 656[rax]
	mov	QWORD PTR [rdx], rax
.L10793:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC572:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Graphic.bas\0"
	.align 2
.LC573:
	.ascii "b\0i\0t\0m\0a\0p\0\0\0"
	.align 2
.LC574:
	.ascii "i\0c\0o\0n\0\0\0"
	.text
	.def	_ZN2MY3SYS7DRAWING11GRAPHICTYPE12READPROPERTYER8FBSTRING;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING11GRAPHICTYPE12READPROPERTYER8FBSTRING:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 256
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -176[rbp], 0
	lea	rcx, .LC572[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC152[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L10795:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -208[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -208[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC573[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L10819
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L10798:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	QWORD PTR -176[rbp], rax
	lea	rax, -208[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L10812
.L10819:
	nop
.L10797:
	lea	rax, -208[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	rdx, .LC574[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -84[rbp], eax
	cmp	DWORD PTR -84[rbp], 0
	jne	.L10820
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L10802:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 424
	mov	QWORD PTR -176[rbp], rax
	lea	rax, -208[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L10812
.L10820:
	nop
.L10801:
	lea	rax, -208[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	lea	rdx, .LC486[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -108[rbp], eax
	cmp	DWORD PTR -108[rbp], 0
	jne	.L10821
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L10805:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 520
	mov	QWORD PTR -176[rbp], rax
	lea	rax, -208[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L10812
.L10821:
	nop
.L10804:
	lea	rax, -208[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	rdx, .LC333[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -132[rbp], eax
	cmp	DWORD PTR -132[rbp], 0
	jne	.L10822
	mov	rax, QWORD PTR -128[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L10808:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 640[rax]
	mov	QWORD PTR -176[rbp], rax
	lea	rax, -208[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L10812
.L10822:
	nop
.L10807:
	lea	rax, -208[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	lea	rdx, .LC307[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -156[rbp], eax
	cmp	DWORD PTR -156[rbp], 0
	jne	.L10823
	mov	rax, QWORD PTR -152[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L10811:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 648
	mov	QWORD PTR -176[rbp], rax
	lea	rax, -208[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L10812
.L10823:
	nop
.L10810:
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT12READPROPERTYER8FBSTRING
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -176[rbp], rax
	lea	rax, -208[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	nop
.L10812:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -176[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING11GRAPHICTYPE13WRITEPROPERTYER8FBSTRINGPv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING11GRAPHICTYPE13WRITEPROPERTYER8FBSTRINGPv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 192
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	BYTE PTR -110[rbp], 0
	lea	rcx, .LC572[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC154[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L10825:
	cmp	QWORD PTR 32[rbp], 0
	je	.L10845
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -144[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -144[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC573[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L10846
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L10830:
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 88[rax]
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPEaSERw
	jmp	.L10839
.L10846:
	nop
.L10829:
	lea	rax, -144[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	rdx, .LC574[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -84[rbp], eax
	cmp	DWORD PTR -84[rbp], 0
	jne	.L10847
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L10834:
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 424[rax]
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING4ICONaSERw
	jmp	.L10839
.L10847:
	nop
.L10833:
	lea	rax, -144[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	lea	rdx, .LC486[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -108[rbp], eax
	cmp	DWORD PTR -108[rbp], 0
	jne	.L10848
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L10837:
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 520[rax]
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING6CURSORaSERw
	jmp	.L10839
.L10848:
	nop
.L10836:
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECT13WRITEPROPERTYER8FBSTRINGPv
	mov	BYTE PTR -109[rbp], al
	movzx	eax, BYTE PTR -109[rbp]
	mov	BYTE PTR -110[rbp], al
	lea	rax, -144[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L10838
.L10831:
.L10839:
	lea	rax, -144[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L10840
.L10827:
.L10845:
	nop
.L10840:
	mov	BYTE PTR -110[rbp], 1
	nop
.L10838:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -110[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING11GRAPHICTYPE13BITMAPCHANGEDERNS1_10BITMAPTYPEE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING11GRAPHICTYPE13BITMAPCHANGEDERNS1_10BITMAPTYPEE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
.L10850:
	lea	rcx, .LC572[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC362[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10863
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 104[rax]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	lea	rdx, 640[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 112[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 648
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10864
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 656
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10865
	mov	rax, QWORD PTR -40[rbp]
	mov	rax, QWORD PTR 656[rax]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	r8, .LC572[rip]
	mov	edx, 49
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L10866
	jmp	[QWORD PTR -56[rbp]]
.L10866:
	nop
.L10856:
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 648
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 112
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	mov	r9, QWORD PTR -48[rbp]
	mov	r8, rcx
	mov	rcx, rax
	call	r9
	jmp	.L10861
.L10852:
.L10857:
.L10858:
.L10859:
.L10860:
.L10863:
	nop
	jmp	.L10861
.L10864:
	nop
	jmp	.L10861
.L10865:
	nop
.L10861:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC575:
	.ascii "ICONCHANGED\0"
	.text
	.def	_ZN2MY3SYS7DRAWING11GRAPHICTYPE11ICONCHANGEDERNS1_4ICONE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING11GRAPHICTYPE11ICONCHANGEDERNS1_4ICONE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
.L10868:
	lea	rcx, .LC572[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC575[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10881
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 72[rax]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	lea	rdx, 640[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 80[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 648
	mov	QWORD PTR [rax], 1
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10882
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 656
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10883
	mov	rax, QWORD PTR -40[rbp]
	mov	rax, QWORD PTR 656[rax]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	r8, .LC572[rip]
	mov	edx, 63
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L10884
	jmp	[QWORD PTR -56[rbp]]
.L10884:
	nop
.L10874:
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 648
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	r9, QWORD PTR -48[rbp]
	mov	r8, rcx
	mov	rcx, rax
	call	r9
	jmp	.L10879
.L10870:
.L10875:
.L10876:
.L10877:
.L10878:
.L10881:
	nop
	jmp	.L10879
.L10882:
	nop
	jmp	.L10879
.L10883:
	nop
.L10879:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC576:
	.ascii "CURSORCHANGED\0"
	.text
	.def	_ZN2MY3SYS7DRAWING11GRAPHICTYPE13CURSORCHANGEDERNS1_6CURSORE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING11GRAPHICTYPE13CURSORCHANGEDERNS1_6CURSORE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
.L10886:
	lea	rcx, .LC572[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC576[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 96
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10899
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 96[rax]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	lea	rdx, 640[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 104[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 648
	mov	QWORD PTR [rax], 2
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10900
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 656
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L10901
	mov	rax, QWORD PTR -40[rbp]
	mov	rax, QWORD PTR 656[rax]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	r8, .LC572[rip]
	mov	edx, 77
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L10902
	jmp	[QWORD PTR -56[rbp]]
.L10902:
	nop
.L10892:
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 648
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 104
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 96
	mov	rax, QWORD PTR [rax]
	mov	r9, QWORD PTR -48[rbp]
	mov	r8, rcx
	mov	rcx, rax
	call	r9
	jmp	.L10897
.L10888:
.L10893:
.L10894:
.L10895:
.L10896:
.L10899:
	nop
	jmp	.L10897
.L10900:
	nop
	jmp	.L10897
.L10901:
	nop
.L10897:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING11GRAPHICTYPE12LOADFROMFILEERwu7INTEGERS4_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING11GRAPHICTYPE12LOADFROMFILEERwu7INTEGERS4_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 176
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
	mov	BYTE PTR -143[rbp], 0
	lea	rcx, .LC572[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC68[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L10904:
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, -1
	lea	rdx, .LC212[rip]
	mov	rcx, rax
	call	fb_WstrInstrRev
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	rdx, 1[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, -1
	mov	rcx, rax
	call	fb_WstrMid
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrLcase2
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrLen
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	rcx, rax
	call	fb_WstrAlloc
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rdx, QWORD PTR -80[rbp]
	mov	rax, QWORD PTR -104[rbp]
	mov	r8, rdx
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrAssign
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	mov	rax, QWORD PTR -104[rbp]
	lea	rdx, .LC213[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -116[rbp], eax
	cmp	DWORD PTR -116[rbp], 0
	jne	.L10919
	nop
.L10905:
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 88[rax]
	mov	r8, QWORD PTR 40[rbp]
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r9, r8
	mov	r8, rdx
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE12LOADFROMFILEERwu7INTEGERS4_
	mov	BYTE PTR -117[rbp], al
	movzx	eax, BYTE PTR -117[rbp]
	mov	BYTE PTR -143[rbp], al
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L10907
.L10919:
	nop
.L10906:
	mov	rax, QWORD PTR -104[rbp]
	lea	rdx, .LC318[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -124[rbp], eax
	cmp	DWORD PTR -124[rbp], 0
	jne	.L10920
	nop
.L10908:
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 88[rax]
	mov	r8, QWORD PTR 40[rbp]
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r9, r8
	mov	r8, rdx
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE12LOADFROMFILEERwu7INTEGERS4_
	mov	BYTE PTR -125[rbp], al
	movzx	eax, BYTE PTR -125[rbp]
	mov	BYTE PTR -143[rbp], al
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L10907
.L10920:
	nop
.L10909:
	mov	rax, QWORD PTR -104[rbp]
	lea	rdx, .LC319[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -132[rbp], eax
	cmp	DWORD PTR -132[rbp], 0
	jne	.L10921
	nop
.L10910:
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 424[rax]
	mov	r8, QWORD PTR 40[rbp]
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r9, r8
	mov	r8, rdx
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING4ICON12LOADFROMFILEERwu7INTEGERS4_
	mov	BYTE PTR -133[rbp], al
	movzx	eax, BYTE PTR -133[rbp]
	mov	BYTE PTR -143[rbp], al
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L10907
.L10921:
	nop
.L10911:
	mov	rax, QWORD PTR -104[rbp]
	lea	rdx, .LC320[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -140[rbp], eax
	cmp	DWORD PTR -140[rbp], 0
	jne	.L10922
	nop
.L10912:
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 520[rax]
	mov	r8, QWORD PTR 40[rbp]
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r9, r8
	mov	r8, rdx
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING6CURSOR12LOADFROMFILEERwu7INTEGERS4_
	mov	BYTE PTR -141[rbp], al
	movzx	eax, BYTE PTR -141[rbp]
	mov	BYTE PTR -143[rbp], al
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L10907
.L10922:
	nop
.L10913:
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 88[rax]
	mov	r8, QWORD PTR 40[rbp]
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r9, r8
	mov	r8, rdx
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE12LOADFROMFILEERwu7INTEGERS4_
	mov	BYTE PTR -142[rbp], al
	movzx	eax, BYTE PTR -142[rbp]
	mov	BYTE PTR -143[rbp], al
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	nop
.L10907:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -143[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING11GRAPHICTYPE18LOADFROMRESOURCEIDEu7INTEGERPvS3_S3_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING11GRAPHICTYPE18LOADFROMRESOURCEIDEu7INTEGERPvS3_S3_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 256
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
	mov	BYTE PTR -193[rbp], 0
	lea	rcx, .LC572[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC220[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L10924:
	lea	rax, -192[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	fb_LongintToStr
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -192[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrAssign
	lea	rax, -192[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 16[rbp]
	lea	rcx, 48[rdx]
	mov	rdx, rax
	call	_ZN7USTRINGaSERKc
	lea	rax, -192[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rcx, rax
	call	_ZN7USTRINGcvPvEv
	mov	QWORD PTR -48[rbp], rax
	mov	rdx, QWORD PTR -48[rbp]
	mov	rax, QWORD PTR 32[rbp]
	mov	r8d, 2
	mov	rcx, rax
	call	FindResourceW
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L10943
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 88[rax]
	mov	r9, QWORD PTR 40[rbp]
	mov	r8, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, QWORD PTR 48[rbp]
	mov	QWORD PTR 32[rsp], rdx
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE18LOADFROMRESOURCEIDEu7INTEGERPvS3_S3_
	mov	BYTE PTR -57[rbp], al
	movzx	eax, BYTE PTR -57[rbp]
	mov	BYTE PTR -193[rbp], al
	jmp	.L10936
.L10943:
	nop
.L10926:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rcx, rax
	call	_ZN7USTRINGcvPvEv
	mov	QWORD PTR -72[rbp], rax
	mov	rdx, QWORD PTR -72[rbp]
	mov	rax, QWORD PTR 32[rbp]
	lea	r8, .LC219[rip]
	mov	rcx, rax
	call	FindResourceW
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L10944
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 88[rax]
	mov	r9, QWORD PTR 40[rbp]
	mov	r8, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, QWORD PTR 48[rbp]
	mov	QWORD PTR 32[rsp], rdx
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE18LOADFROMRESOURCEIDEu7INTEGERPvS3_S3_
	mov	BYTE PTR -81[rbp], al
	movzx	eax, BYTE PTR -81[rbp]
	mov	BYTE PTR -193[rbp], al
	jmp	.L10936
.L10944:
	nop
.L10929:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rcx, rax
	call	_ZN7USTRINGcvPvEv
	mov	QWORD PTR -96[rbp], rax
	mov	rdx, QWORD PTR -96[rbp]
	mov	rax, QWORD PTR 32[rbp]
	mov	r8d, 3
	mov	rcx, rax
	call	FindResourceW
	mov	QWORD PTR -104[rbp], rax
	cmp	QWORD PTR -104[rbp], 0
	je	.L10945
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 424[rax]
	mov	r9, QWORD PTR 40[rbp]
	mov	r8, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, QWORD PTR 48[rbp]
	mov	QWORD PTR 32[rsp], rdx
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING4ICON18LOADFROMRESOURCEIDEu7INTEGERPvS3_S3_
	mov	BYTE PTR -105[rbp], al
	movzx	eax, BYTE PTR -105[rbp]
	mov	BYTE PTR -193[rbp], al
	jmp	.L10936
.L10945:
	nop
.L10931:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rcx, rax
	call	_ZN7USTRINGcvPvEv
	mov	QWORD PTR -120[rbp], rax
	mov	rdx, QWORD PTR -120[rbp]
	mov	rax, QWORD PTR 32[rbp]
	mov	r8d, 1
	mov	rcx, rax
	call	FindResourceW
	mov	QWORD PTR -128[rbp], rax
	cmp	QWORD PTR -128[rbp], 0
	je	.L10946
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 520[rax]
	mov	r9, QWORD PTR 40[rbp]
	mov	r8, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, QWORD PTR 48[rbp]
	mov	QWORD PTR 32[rsp], rdx
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING6CURSOR18LOADFROMRESOURCEIDEu7INTEGERPvS3_S3_
	mov	BYTE PTR -129[rbp], al
	movzx	eax, BYTE PTR -129[rbp]
	mov	BYTE PTR -193[rbp], al
	jmp	.L10936
.L10946:
	nop
.L10933:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rcx, rax
	call	_ZN7USTRINGcvPvEv
	mov	QWORD PTR -144[rbp], rax
	mov	rdx, QWORD PTR -144[rbp]
	mov	rax, QWORD PTR 32[rbp]
	mov	r8d, 10
	mov	rcx, rax
	call	FindResourceW
	mov	QWORD PTR -152[rbp], rax
	cmp	QWORD PTR -152[rbp], 0
	je	.L10947
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 88[rax]
	mov	r9, QWORD PTR 40[rbp]
	mov	r8, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, QWORD PTR 48[rbp]
	mov	QWORD PTR 32[rsp], rdx
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE18LOADFROMRESOURCEIDEu7INTEGERPvS3_S3_
	mov	BYTE PTR -153[rbp], al
	movzx	eax, BYTE PTR -153[rbp]
	mov	BYTE PTR -193[rbp], al
	jmp	.L10936
.L10947:
	nop
.L10935:
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 88[rax]
	mov	r9, QWORD PTR 40[rbp]
	mov	r8, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, QWORD PTR 48[rbp]
	mov	QWORD PTR 32[rsp], rdx
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE18LOADFROMRESOURCEIDEu7INTEGERPvS3_S3_
	mov	BYTE PTR -154[rbp], al
	movzx	eax, BYTE PTR -154[rbp]
	mov	BYTE PTR -193[rbp], al
.L10927:
	nop
.L10936:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -193[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING11GRAPHICTYPE20LOADFROMRESOURCENAMEER8FBSTRINGPvu7INTEGERS6_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING11GRAPHICTYPE20LOADFROMRESOURCENAMEER8FBSTRINGPvu7INTEGERS6_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 320
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	QWORD PTR 40[rbp], r9
	mov	BYTE PTR -259[rbp], 0
	lea	rcx, .LC572[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC215[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L10949:
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 16[rbp]
	lea	rcx, 48[rdx]
	mov	rdx, rax
	call	_ZN7USTRINGaSERKc
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	mov	rdx, QWORD PTR -48[rbp]
	mov	rax, QWORD PTR 32[rbp]
	mov	r8d, 2
	mov	rcx, rax
	call	FindResourceW
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -64[rbp], 0
	je	.L10968
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 88[rax]
	mov	r9, QWORD PTR 40[rbp]
	mov	r8, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR 40[rsp], 0
	mov	rdx, QWORD PTR 48[rbp]
	mov	QWORD PTR 32[rsp], rdx
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE20LOADFROMRESOURCENAMEER8FBSTRINGPvu7INTEGERS6_S6_
	mov	BYTE PTR -65[rbp], al
	movzx	eax, BYTE PTR -65[rbp]
	mov	BYTE PTR -259[rbp], al
	jmp	.L10961
.L10968:
	nop
.L10951:
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	QWORD PTR -88[rbp], rax
	mov	rdx, QWORD PTR -88[rbp]
	mov	rax, QWORD PTR 32[rbp]
	lea	r8, .LC219[rip]
	mov	rcx, rax
	call	FindResourceW
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -104[rbp], 0
	je	.L10969
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 88[rax]
	mov	r9, QWORD PTR 40[rbp]
	mov	r8, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR 40[rsp], 0
	mov	rdx, QWORD PTR 48[rbp]
	mov	QWORD PTR 32[rsp], rdx
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE20LOADFROMRESOURCENAMEER8FBSTRINGPvu7INTEGERS6_S6_
	mov	BYTE PTR -105[rbp], al
	movzx	eax, BYTE PTR -105[rbp]
	mov	BYTE PTR -259[rbp], al
	jmp	.L10961
.L10969:
	nop
.L10954:
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	QWORD PTR -128[rbp], rax
	mov	rdx, QWORD PTR -128[rbp]
	mov	rax, QWORD PTR 32[rbp]
	mov	r8d, 3
	mov	rcx, rax
	call	FindResourceW
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -144[rbp], 0
	je	.L10970
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 424[rax]
	mov	r9, QWORD PTR 40[rbp]
	mov	r8, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR -160[rbp]
	mov	rdx, QWORD PTR 48[rbp]
	mov	QWORD PTR 32[rsp], rdx
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING4ICON20LOADFROMRESOURCENAMEERwPvu7INTEGERS5_
	mov	BYTE PTR -161[rbp], al
	movzx	eax, BYTE PTR -161[rbp]
	mov	BYTE PTR -259[rbp], al
	mov	rax, QWORD PTR -160[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L10961
.L10970:
	nop
.L10956:
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	mov	QWORD PTR -184[rbp], rax
	mov	rdx, QWORD PTR -184[rbp]
	mov	rax, QWORD PTR 32[rbp]
	mov	r8d, 1
	mov	rcx, rax
	call	FindResourceW
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -192[rbp]
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -200[rbp], 0
	je	.L10971
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR -208[rbp]
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 520[rax]
	mov	r9, QWORD PTR 40[rbp]
	mov	r8, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR -216[rbp]
	mov	rdx, QWORD PTR 48[rbp]
	mov	QWORD PTR 32[rsp], rdx
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING6CURSOR20LOADFROMRESOURCENAMEERwPvu7INTEGERS5_
	mov	BYTE PTR -217[rbp], al
	movzx	eax, BYTE PTR -217[rbp]
	mov	BYTE PTR -259[rbp], al
	mov	rax, QWORD PTR -216[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L10961
.L10971:
	nop
.L10958:
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -232[rbp], rax
	mov	rax, QWORD PTR -232[rbp]
	mov	QWORD PTR -240[rbp], rax
	mov	rdx, QWORD PTR -240[rbp]
	mov	rax, QWORD PTR 32[rbp]
	mov	r8d, 10
	mov	rcx, rax
	call	FindResourceW
	mov	QWORD PTR -248[rbp], rax
	mov	rax, QWORD PTR -248[rbp]
	mov	QWORD PTR -256[rbp], rax
	mov	rax, QWORD PTR -240[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	cmp	QWORD PTR -256[rbp], 0
	je	.L10972
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 88[rax]
	mov	r9, QWORD PTR 40[rbp]
	mov	r8, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR 40[rsp], 0
	mov	rdx, QWORD PTR 48[rbp]
	mov	QWORD PTR 32[rsp], rdx
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE20LOADFROMRESOURCENAMEER8FBSTRINGPvu7INTEGERS6_S6_
	mov	BYTE PTR -257[rbp], al
	movzx	eax, BYTE PTR -257[rbp]
	mov	BYTE PTR -259[rbp], al
	jmp	.L10961
.L10972:
	nop
.L10960:
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 88[rax]
	mov	r9, QWORD PTR 40[rbp]
	mov	r8, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR 40[rsp], 0
	mov	rdx, QWORD PTR 48[rbp]
	mov	QWORD PTR 32[rsp], rdx
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPE20LOADFROMRESOURCENAMEER8FBSTRINGPvu7INTEGERS6_S6_
	mov	BYTE PTR -258[rbp], al
	movzx	eax, BYTE PTR -258[rbp]
	mov	BYTE PTR -259[rbp], al
.L10952:
	nop
.L10961:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -259[rbp]
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING11GRAPHICTYPEaSERw;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING11GRAPHICTYPEaSERw:
	push	rbp
	mov	rbp, rsp
	add	rsp, -128
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L10974:
	lea	rcx, .LC572[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	fb_WstrVal
	movq	rax, xmm0
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	movq	xmm0, rax
	call	nearbyint
	cvttsd2si	rax, xmm0
	mov	QWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8d, 0
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING11GRAPHICTYPE18LOADFROMRESOURCEIDEu7INTEGERPvS3_S3_
	mov	BYTE PTR -49[rbp], al
	cmp	BYTE PTR -49[rbp], 0
	jne	.L10985
	lea	rax, -80[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	rdx, QWORD PTR 24[rbp]
	lea	rax, -80[rbp]
	mov	r9d, 0
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_WstrAssignToA
	lea	rax, -80[rbp]
	mov	QWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8d, 0
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING11GRAPHICTYPE20LOADFROMRESOURCENAMEER8FBSTRINGPvu7INTEGERS6_
	mov	BYTE PTR -50[rbp], al
	cmp	BYTE PTR -50[rbp], 0
	jne	.L10977
	mov	eax, 1
	jmp	.L10978
.L10977:
	mov	eax, 0
.L10978:
	mov	BYTE PTR -1[rbp], al
	lea	rax, -80[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L10979
.L10985:
	nop
.L10976:
	mov	BYTE PTR -1[rbp], 0
.L10979:
	cmp	BYTE PTR -1[rbp], 0
	je	.L10986
	mov	rax, QWORD PTR 24[rbp]
	mov	r9d, 0
	mov	r8d, 0
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS7DRAWING11GRAPHICTYPE12LOADFROMFILEERwu7INTEGERS4_
	jmp	.L10983
.L10981:
.L10982:
.L10986:
	nop
.L10983:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING11GRAPHICTYPE8TOSTRINGEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING11GRAPHICTYPE8TOSTRINGEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -48[rbp], 0
	lea	rcx, .LC572[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC155[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L10988:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rcx, rax
	call	_ZN7USTRING4VPTREv
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	nop
.L10989:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -48[rbp]
	leave
	ret
	.section .rdata,"dr"
	.align 2
.LC577:
	.ascii "G\0r\0a\0p\0h\0i\0c\0T\0y\0p\0e\0\0\0"
	.text
	.def	_ZN2MY3SYS7DRAWING11GRAPHICTYPEC1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING11GRAPHICTYPEC1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L10992:
	lea	rcx, .LC572[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rcx, rax
	call	_ZN7USTRINGC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 80
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPEC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 424
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4ICONC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 520
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING6CURSORC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 640
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 648
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 656
	mov	QWORD PTR [rax], 0
	lea	rdx, _ZTVN2MY3SYS7DRAWING11GRAPHICTYPEE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 32
	lea	rdx, .LC577[rip]
	mov	rcx, rax
	call	WLET
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 192[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 416
	lea	rdx, _ZN2MY3SYS7DRAWING11GRAPHICTYPE13BITMAPCHANGEDERNS1_10BITMAPTYPEE[rip]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 496[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 512
	lea	rdx, _ZN2MY3SYS7DRAWING11GRAPHICTYPE11ICONCHANGEDERNS1_4ICONE[rip]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 616[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 632
	lea	rdx, _ZN2MY3SYS7DRAWING11GRAPHICTYPE13CURSORCHANGEDERNS1_6CURSORE[rip]
	mov	QWORD PTR [rax], rdx
.L10993:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS7DRAWING11GRAPHICTYPED1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS7DRAWING11GRAPHICTYPED1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	lea	rdx, _ZTVN2MY3SYS7DRAWING11GRAPHICTYPEE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rcx, .LC572[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L10995:
.L10996:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 520
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING6CURSORD1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 424
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4ICOND1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 88
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING10BITMAPTYPED1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	mov	rcx, rax
	call	_ZN7USTRINGD1Ev
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS6OBJECTD1Ev
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC578:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\Form.bi\0"
	.text
	.def	_ZN2MY3SYS5FORMS4FORMaSERKS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORMaSERKS2_:
	push	rbp
	mov	rbp, rsp
	and	rsp, -16
	sub	rsp, 208
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L10998:
	lea	rcx, .LC578[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR 56[rsp], rax
	mov	rax, QWORD PTR 56[rsp]
	mov	QWORD PTR 48[rsp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR 40[rsp], rax
	mov	rax, QWORD PTR 40[rsp]
	mov	QWORD PTR 32[rsp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS16CONTAINERCONTROLaSERKS2_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2408[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 2408[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2416
	mov	QWORD PTR 192[rsp], rax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 2416
	mov	QWORD PTR 184[rsp], rax
	mov	QWORD PTR 200[rsp], 0
.L10999:
	mov	rax, QWORD PTR 184[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 192[rsp]
	mov	QWORD PTR [rax], rdx
	add	QWORD PTR 192[rsp], 8
	add	QWORD PTR 184[rsp], 8
	add	QWORD PTR 200[rsp], 1
	cmp	QWORD PTR 200[rsp], 3
	je	.L11000
	jmp	.L10999
.L11000:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 2440
	mov	rdx, QWORD PTR 16[rbp]
	lea	rcx, 2440[rdx]
	mov	rdx, QWORD PTR 8[rax]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR 8[rcx], rdx
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2456[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2456[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2464[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2464[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2472[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2472[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2480
	mov	QWORD PTR 168[rsp], rax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 2480
	mov	QWORD PTR 160[rsp], rax
	mov	QWORD PTR 176[rsp], 0
.L11001:
	mov	rax, QWORD PTR 160[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 168[rsp]
	mov	QWORD PTR [rax], rdx
	add	QWORD PTR 168[rsp], 8
	add	QWORD PTR 160[rsp], 8
	add	QWORD PTR 176[rsp], 1
	cmp	QWORD PTR 176[rsp], 7
	je	.L11002
	jmp	.L11001
.L11002:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2536
	mov	QWORD PTR 144[rsp], rax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 2536
	mov	QWORD PTR 136[rsp], rax
	mov	QWORD PTR 152[rsp], 0
.L11003:
	mov	rax, QWORD PTR 136[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 144[rsp]
	mov	QWORD PTR [rax], rdx
	add	QWORD PTR 144[rsp], 8
	add	QWORD PTR 136[rsp], 8
	add	QWORD PTR 152[rsp], 1
	cmp	QWORD PTR 152[rsp], 5
	je	.L11004
	jmp	.L11003
.L11004:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2576
	mov	QWORD PTR 120[rsp], rax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 2576
	mov	QWORD PTR 112[rsp], rax
	mov	QWORD PTR 128[rsp], 0
.L11005:
	mov	rax, QWORD PTR 112[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 120[rsp]
	mov	QWORD PTR [rax], rdx
	add	QWORD PTR 120[rsp], 8
	add	QWORD PTR 112[rsp], 8
	add	QWORD PTR 128[rsp], 1
	cmp	QWORD PTR 128[rsp], 3
	je	.L11006
	jmp	.L11005
.L11006:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2600
	mov	QWORD PTR 96[rsp], rax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 2600
	mov	QWORD PTR 88[rsp], rax
	mov	QWORD PTR 104[rsp], 0
.L11007:
	mov	rax, QWORD PTR 88[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 96[rsp]
	mov	QWORD PTR [rax], rdx
	add	QWORD PTR 96[rsp], 8
	add	QWORD PTR 88[rsp], 8
	add	QWORD PTR 104[rsp], 1
	cmp	QWORD PTR 104[rsp], 7
	je	.L11008
	jmp	.L11007
.L11008:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2656
	mov	QWORD PTR 72[rsp], rax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 2656
	mov	QWORD PTR 64[rsp], rax
	mov	QWORD PTR 80[rsp], 0
.L11009:
	mov	rax, QWORD PTR 64[rsp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 72[rsp]
	mov	QWORD PTR [rax], rdx
	add	QWORD PTR 72[rsp], 8
	add	QWORD PTR 64[rsp], 8
	add	QWORD PTR 80[rsp], 1
	cmp	QWORD PTR 80[rsp], 7
	je	.L11010
	jmp	.L11009
.L11010:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2712[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2712[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2720[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 2720[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2728[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2728[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2736[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 2736[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2737[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 2737[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2738[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 2738[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2744[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2744[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 2752[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2752
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4ICONaSERS2_
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 2848[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2848
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING11GRAPHICTYPEaSERKS2_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 3512[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 3512[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 3520[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 3520[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 3528[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 3528[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 3536[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 3536[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 3544[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 3544[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 3552[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 3552[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 3560[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 3560[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 3568[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 3568[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 3576[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 3576[rax]
	mov	QWORD PTR [rdx], rax
.L11011:
	mov	rax, QWORD PTR 32[rsp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR 48[rsp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 2
.LC579:
	.ascii "a\0c\0t\0i\0v\0e\0c\0o\0n\0t\0r\0o\0l\0\0\0"
	.align 2
.LC580:
	.ascii "c\0a\0n\0c\0e\0l\0b\0u\0t\0t\0o\0n\0\0\0"
	.align 2
.LC581:
	.ascii "d\0e\0f\0a\0u\0l\0t\0b\0u\0t\0t\0o\0n\0\0\0"
	.align 2
.LC582:
	.ascii "c\0o\0n\0t\0r\0o\0l\0b\0o\0x\0\0\0"
	.align 2
.LC583:
	.ascii "m\0i\0n\0i\0m\0i\0z\0e\0b\0o\0x\0\0\0"
	.align 2
.LC584:
	.ascii "m\0a\0x\0i\0m\0i\0z\0e\0b\0o\0x\0\0\0"
	.align 2
.LC585:
	.ascii "f\0o\0r\0m\0s\0t\0y\0l\0e\0\0\0"
	.align 2
.LC586:
	.ascii "m\0e\0n\0u\0\0\0"
	.align 2
.LC587:
	.ascii "m\0o\0d\0a\0l\0r\0e\0s\0u\0l\0t\0\0\0"
	.align 2
.LC588:
	.ascii "o\0p\0a\0c\0i\0t\0y\0\0\0"
	.align 2
.LC589:
	.ascii "w\0i\0n\0d\0o\0w\0s\0t\0a\0t\0e\0\0\0"
	.align 2
.LC590:
	.ascii "s\0t\0a\0r\0t\0p\0o\0s\0i\0t\0i\0o\0n\0\0\0"
	.text
	.def	_ZN2MY3SYS5FORMS4FORM12READPROPERTYER8FBSTRING;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM12READPROPERTYER8FBSTRING:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 576
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -504[rbp], 0
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC152[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L11013:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 136
	mov	rdx, QWORD PTR -40[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrAssign
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 136[rax]
	lea	rax, -528[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC579[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L11089
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11016:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 1000[rax]
	mov	QWORD PTR -504[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L11069
.L11089:
	nop
.L11015:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	rdx, .LC477[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -84[rbp], eax
	cmp	DWORD PTR -84[rbp], 0
	jne	.L11090
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11020:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2456
	mov	QWORD PTR -504[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L11069
.L11090:
	nop
.L11019:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	lea	rdx, .LC580[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -108[rbp], eax
	cmp	DWORD PTR -108[rbp], 0
	jne	.L11091
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11023:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 992[rax]
	mov	QWORD PTR -504[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L11069
.L11091:
	nop
.L11022:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	rdx, .LC329[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -132[rbp], eax
	cmp	DWORD PTR -132[rbp], 0
	jne	.L11092
	mov	rax, QWORD PTR -128[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11026:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 600
	mov	rcx, rax
	call	_ZN7USTRING4VPTREv
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	mov	QWORD PTR -504[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L11069
.L11092:
	nop
.L11025:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	lea	rdx, .LC581[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -164[rbp], eax
	cmp	DWORD PTR -164[rbp], 0
	jne	.L11093
	mov	rax, QWORD PTR -160[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11029:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 984[rax]
	mov	QWORD PTR -504[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L11069
.L11093:
	nop
.L11028:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	lea	rdx, .LC574[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -188[rbp], eax
	cmp	DWORD PTR -188[rbp], 0
	jne	.L11094
	mov	rax, QWORD PTR -184[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11032:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2752
	mov	QWORD PTR -504[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L11069
.L11094:
	nop
.L11031:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR -208[rbp]
	lea	rdx, .LC582[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -212[rbp], eax
	cmp	DWORD PTR -212[rbp], 0
	jne	.L11095
	mov	rax, QWORD PTR -208[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11035:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2736
	mov	QWORD PTR -504[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L11069
.L11095:
	nop
.L11034:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -224[rbp], rax
	mov	rax, QWORD PTR -224[rbp]
	mov	QWORD PTR -232[rbp], rax
	mov	rax, QWORD PTR -232[rbp]
	lea	rdx, .LC583[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -236[rbp], eax
	cmp	DWORD PTR -236[rbp], 0
	jne	.L11096
	mov	rax, QWORD PTR -232[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11038:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2737
	mov	QWORD PTR -504[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L11069
.L11096:
	nop
.L11037:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -248[rbp], rax
	mov	rax, QWORD PTR -248[rbp]
	mov	QWORD PTR -256[rbp], rax
	mov	rax, QWORD PTR -256[rbp]
	lea	rdx, .LC584[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -260[rbp], eax
	cmp	DWORD PTR -260[rbp], 0
	jne	.L11097
	mov	rax, QWORD PTR -256[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11041:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2738
	mov	QWORD PTR -504[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L11069
.L11097:
	nop
.L11040:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -272[rbp], rax
	mov	rax, QWORD PTR -272[rbp]
	mov	QWORD PTR -280[rbp], rax
	mov	rax, QWORD PTR -280[rbp]
	lea	rdx, .LC585[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -284[rbp], eax
	cmp	DWORD PTR -284[rbp], 0
	jne	.L11098
	mov	rax, QWORD PTR -280[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11044:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2464
	mov	QWORD PTR -504[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L11069
.L11098:
	nop
.L11043:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -296[rbp], rax
	mov	rax, QWORD PTR -296[rbp]
	mov	QWORD PTR -304[rbp], rax
	mov	rax, QWORD PTR -304[rbp]
	lea	rdx, .LC586[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -308[rbp], eax
	cmp	DWORD PTR -308[rbp], 0
	jne	.L11099
	mov	rax, QWORD PTR -304[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11047:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM11MENU__get__Ev
	mov	QWORD PTR -320[rbp], rax
	mov	rax, QWORD PTR -320[rbp]
	mov	QWORD PTR -504[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L11069
.L11099:
	nop
.L11046:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -328[rbp], rax
	mov	rax, QWORD PTR -328[rbp]
	mov	QWORD PTR -336[rbp], rax
	mov	rax, QWORD PTR -336[rbp]
	lea	rdx, .LC436[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -340[rbp], eax
	cmp	DWORD PTR -340[rbp], 0
	jne	.L11100
	mov	rax, QWORD PTR -336[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11050:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2408
	mov	QWORD PTR -504[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L11069
.L11100:
	nop
.L11049:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -352[rbp], rax
	mov	rax, QWORD PTR -352[rbp]
	mov	QWORD PTR -360[rbp], rax
	mov	rax, QWORD PTR -360[rbp]
	lea	rdx, .LC587[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -364[rbp], eax
	cmp	DWORD PTR -364[rbp], 0
	jne	.L11101
	mov	rax, QWORD PTR -360[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11053:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 3512
	mov	QWORD PTR -504[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L11069
.L11101:
	nop
.L11052:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -376[rbp], rax
	mov	rax, QWORD PTR -376[rbp]
	mov	QWORD PTR -384[rbp], rax
	mov	rax, QWORD PTR -384[rbp]
	lea	rdx, .LC588[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -388[rbp], eax
	cmp	DWORD PTR -388[rbp], 0
	jne	.L11102
	mov	rax, QWORD PTR -384[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11056:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2744
	mov	QWORD PTR -504[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L11069
.L11102:
	nop
.L11055:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -400[rbp], rax
	mov	rax, QWORD PTR -400[rbp]
	mov	QWORD PTR -408[rbp], rax
	mov	rax, QWORD PTR -408[rbp]
	lea	rdx, .LC337[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -412[rbp], eax
	cmp	DWORD PTR -412[rbp], 0
	jne	.L11103
	mov	rax, QWORD PTR -408[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11059:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 400[rax]
	mov	QWORD PTR -504[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L11069
.L11103:
	nop
.L11058:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -424[rbp], rax
	mov	rax, QWORD PTR -424[rbp]
	mov	QWORD PTR -432[rbp], rax
	mov	rax, QWORD PTR -432[rbp]
	lea	rdx, .LC589[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -436[rbp], eax
	cmp	DWORD PTR -436[rbp], 0
	jne	.L11104
	mov	rax, QWORD PTR -432[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11062:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2712
	mov	QWORD PTR -504[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L11069
.L11104:
	nop
.L11061:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -448[rbp], rax
	mov	rax, QWORD PTR -448[rbp]
	mov	QWORD PTR -456[rbp], rax
	mov	rax, QWORD PTR -456[rbp]
	lea	rdx, .LC590[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -460[rbp], eax
	cmp	DWORD PTR -460[rbp], 0
	jne	.L11105
	mov	rax, QWORD PTR -456[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11065:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 584
	mov	QWORD PTR -504[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L11069
.L11105:
	nop
.L11064:
	lea	rax, -528[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -472[rbp], rax
	mov	rax, QWORD PTR -472[rbp]
	mov	QWORD PTR -480[rbp], rax
	mov	rax, QWORD PTR -480[rbp]
	lea	rdx, .LC230[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -484[rbp], eax
	cmp	DWORD PTR -484[rbp], 0
	jne	.L11106
	mov	rax, QWORD PTR -480[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11068:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2848
	mov	QWORD PTR -504[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L11069
.L11106:
	nop
.L11067:
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS16CONTAINERCONTROL12READPROPERTYER8FBSTRING
	mov	QWORD PTR -496[rbp], rax
	mov	rax, QWORD PTR -496[rbp]
	mov	QWORD PTR -504[rbp], rax
	lea	rax, -528[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	nop
.L11069:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -504[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4FORM13WRITEPROPERTYER8FBSTRINGPv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM13WRITEPROPERTYER8FBSTRINGPv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 928
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	BYTE PTR -822[rbp], 0
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC154[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L11108:
	cmp	QWORD PTR 32[rbp], 0
	jne	.L11252
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -848[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -848[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC579[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L11253
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11113:
	mov	edx, 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM20ACTIVECONTROL__set__EPNS1_7CONTROLE
	jmp	.L11128
.L11253:
	nop
.L11112:
	lea	rax, -848[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	rdx, .LC586[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -84[rbp], eax
	cmp	DWORD PTR -84[rbp], 0
	jne	.L11254
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11117:
	mov	edx, 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM11MENU__set__EPNS1_8MAINMENUE
	jmp	.L11128
.L11254:
	nop
.L11116:
	lea	rax, -848[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	lea	rdx, .LC580[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -108[rbp], eax
	cmp	DWORD PTR -108[rbp], 0
	jne	.L11255
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11120:
	mov	edx, 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM19CANCELBUTTON__set__EPNS1_7CONTROLE
	jmp	.L11128
.L11255:
	nop
.L11119:
	lea	rax, -848[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	lea	rdx, .LC581[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -132[rbp], eax
	cmp	DWORD PTR -132[rbp], 0
	jne	.L11256
	mov	rax, QWORD PTR -128[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11123:
	mov	edx, 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM20DEFAULTBUTTON__set__EPNS1_7CONTROLE
	jmp	.L11128
.L11256:
	nop
.L11122:
	lea	rax, -848[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	lea	rdx, .LC337[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -156[rbp], eax
	cmp	DWORD PTR -156[rbp], 0
	jne	.L11257
	mov	rax, QWORD PTR -152[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11126:
	mov	edx, 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM12OWNER__set__EPS2_
	jmp	.L11128
.L11257:
	nop
.L11125:
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS16CONTAINERCONTROL13WRITEPROPERTYER8FBSTRINGPv
	mov	BYTE PTR -157[rbp], al
	movzx	eax, BYTE PTR -157[rbp]
	mov	BYTE PTR -822[rbp], al
	lea	rax, -848[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L11127
.L11114:
.L11128:
	lea	rax, -848[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L11129
.L11252:
	nop
.L11110:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -168[rbp], rax
	mov	rdx, QWORD PTR -168[rbp]
	lea	rax, -880[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	lea	rdx, .LC579[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -188[rbp], eax
	cmp	DWORD PTR -188[rbp], 0
	jne	.L11258
	mov	rax, QWORD PTR -184[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11132:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM20ACTIVECONTROL__set__EPNS1_7CONTROLE
	jmp	.L11213
.L11258:
	nop
.L11131:
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR -208[rbp]
	lea	rdx, .LC477[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -212[rbp], eax
	cmp	DWORD PTR -212[rbp], 0
	jne	.L11259
	mov	rax, QWORD PTR -208[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11136:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -224[rbp], rax
	mov	rax, QWORD PTR -224[rbp]
	lea	r8, .LC86[rip]
	mov	edx, 59
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -232[rbp], rax
	cmp	QWORD PTR -232[rbp], 0
	je	.L11260
	jmp	[QWORD PTR -232[rbp]]
.L11260:
	nop
.L11138:
	mov	rax, QWORD PTR -224[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM18BORDERSTYLE__set__Eu7INTEGER
	jmp	.L11213
.L11259:
	nop
.L11135:
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -240[rbp], rax
	mov	rax, QWORD PTR -240[rbp]
	mov	QWORD PTR -248[rbp], rax
	mov	rax, QWORD PTR -248[rbp]
	lea	rdx, .LC580[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -252[rbp], eax
	cmp	DWORD PTR -252[rbp], 0
	jne	.L11261
	mov	rax, QWORD PTR -248[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11141:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM19CANCELBUTTON__set__EPNS1_7CONTROLE
	jmp	.L11213
.L11261:
	nop
.L11140:
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -264[rbp], rax
	mov	rax, QWORD PTR -264[rbp]
	mov	QWORD PTR -272[rbp], rax
	mov	rax, QWORD PTR -272[rbp]
	lea	rdx, .LC329[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -276[rbp], eax
	cmp	DWORD PTR -276[rbp], 0
	jne	.L11262
	mov	rax, QWORD PTR -272[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11144:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM14CAPTION__set__ERw
	jmp	.L11213
.L11262:
	nop
.L11143:
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -288[rbp], rax
	mov	rax, QWORD PTR -288[rbp]
	mov	QWORD PTR -296[rbp], rax
	mov	rax, QWORD PTR -296[rbp]
	lea	rdx, .LC581[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -300[rbp], eax
	cmp	DWORD PTR -300[rbp], 0
	jne	.L11263
	mov	rax, QWORD PTR -296[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11147:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM20DEFAULTBUTTON__set__EPNS1_7CONTROLE
	jmp	.L11213
.L11263:
	nop
.L11146:
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -312[rbp], rax
	mov	rax, QWORD PTR -312[rbp]
	mov	QWORD PTR -320[rbp], rax
	mov	rax, QWORD PTR -320[rbp]
	lea	rdx, .LC585[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -324[rbp], eax
	cmp	DWORD PTR -324[rbp], 0
	jne	.L11264
	mov	rax, QWORD PTR -320[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11150:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -336[rbp], rax
	mov	rax, QWORD PTR -336[rbp]
	lea	r8, .LC86[rip]
	mov	edx, 63
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -344[rbp], rax
	cmp	QWORD PTR -344[rbp], 0
	je	.L11265
	jmp	[QWORD PTR -344[rbp]]
.L11265:
	nop
.L11152:
	mov	rax, QWORD PTR -336[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM16FORMSTYLE__set__Eu7INTEGER
	jmp	.L11213
.L11264:
	nop
.L11149:
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -352[rbp], rax
	mov	rax, QWORD PTR -352[rbp]
	mov	QWORD PTR -360[rbp], rax
	mov	rax, QWORD PTR -360[rbp]
	lea	rdx, .LC582[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -364[rbp], eax
	cmp	DWORD PTR -364[rbp], 0
	jne	.L11266
	mov	rax, QWORD PTR -360[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11155:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -376[rbp], rax
	mov	rax, QWORD PTR -376[rbp]
	lea	r8, .LC86[rip]
	mov	edx, 64
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -384[rbp], rax
	cmp	QWORD PTR -384[rbp], 0
	je	.L11267
	jmp	[QWORD PTR -384[rbp]]
.L11267:
	nop
.L11157:
	mov	rax, QWORD PTR -376[rbp]
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM17CONTROLBOX__set__Eb
	jmp	.L11213
.L11266:
	nop
.L11154:
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -392[rbp], rax
	mov	rax, QWORD PTR -392[rbp]
	mov	QWORD PTR -400[rbp], rax
	mov	rax, QWORD PTR -400[rbp]
	lea	rdx, .LC583[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -404[rbp], eax
	cmp	DWORD PTR -404[rbp], 0
	jne	.L11268
	mov	rax, QWORD PTR -400[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11160:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -416[rbp], rax
	mov	rax, QWORD PTR -416[rbp]
	lea	r8, .LC86[rip]
	mov	edx, 65
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -424[rbp], rax
	cmp	QWORD PTR -424[rbp], 0
	je	.L11269
	jmp	[QWORD PTR -424[rbp]]
.L11269:
	nop
.L11162:
	mov	rax, QWORD PTR -416[rbp]
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM18MINIMIZEBOX__set__Eb
	jmp	.L11213
.L11268:
	nop
.L11159:
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -432[rbp], rax
	mov	rax, QWORD PTR -432[rbp]
	mov	QWORD PTR -440[rbp], rax
	mov	rax, QWORD PTR -440[rbp]
	lea	rdx, .LC584[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -444[rbp], eax
	cmp	DWORD PTR -444[rbp], 0
	jne	.L11270
	mov	rax, QWORD PTR -440[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11165:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -456[rbp], rax
	mov	rax, QWORD PTR -456[rbp]
	lea	r8, .LC86[rip]
	mov	edx, 66
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -464[rbp], rax
	cmp	QWORD PTR -464[rbp], 0
	je	.L11271
	jmp	[QWORD PTR -464[rbp]]
.L11271:
	nop
.L11167:
	mov	rax, QWORD PTR -456[rbp]
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM18MAXIMIZEBOX__set__Eb
	jmp	.L11213
.L11270:
	nop
.L11164:
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -472[rbp], rax
	mov	rax, QWORD PTR -472[rbp]
	mov	QWORD PTR -480[rbp], rax
	mov	rax, QWORD PTR -480[rbp]
	lea	rdx, .LC574[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -484[rbp], eax
	cmp	DWORD PTR -484[rbp], 0
	jne	.L11272
	mov	rax, QWORD PTR -480[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11170:
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 2752[rax]
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING4ICONaSERw
	jmp	.L11213
.L11272:
	nop
.L11169:
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -496[rbp], rax
	mov	rax, QWORD PTR -496[rbp]
	mov	QWORD PTR -504[rbp], rax
	mov	rax, QWORD PTR -504[rbp]
	lea	rdx, .LC436[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -508[rbp], eax
	cmp	DWORD PTR -508[rbp], 0
	jne	.L11273
	mov	rax, QWORD PTR -504[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11173:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -520[rbp], rax
	mov	rax, QWORD PTR -520[rbp]
	lea	r8, .LC86[rip]
	mov	edx, 68
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -528[rbp], rax
	cmp	QWORD PTR -528[rbp], 0
	je	.L11274
	jmp	[QWORD PTR -528[rbp]]
.L11274:
	nop
.L11175:
	mov	rax, QWORD PTR -520[rbp]
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM15MAINFORM__set__Eb
	jmp	.L11213
.L11273:
	nop
.L11172:
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -536[rbp], rax
	mov	rax, QWORD PTR -536[rbp]
	mov	QWORD PTR -544[rbp], rax
	mov	rax, QWORD PTR -544[rbp]
	lea	rdx, .LC586[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -548[rbp], eax
	cmp	DWORD PTR -548[rbp], 0
	jne	.L11275
	mov	rax, QWORD PTR -544[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11178:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM11MENU__set__EPNS1_8MAINMENUE
	jmp	.L11213
.L11275:
	nop
.L11177:
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -560[rbp], rax
	mov	rax, QWORD PTR -560[rbp]
	mov	QWORD PTR -568[rbp], rax
	mov	rax, QWORD PTR -568[rbp]
	lea	rdx, .LC587[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -572[rbp], eax
	cmp	DWORD PTR -572[rbp], 0
	jne	.L11276
	mov	rax, QWORD PTR -568[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11181:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -584[rbp], rax
	mov	rax, QWORD PTR -584[rbp]
	lea	r8, .LC86[rip]
	mov	edx, 70
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -592[rbp], rax
	cmp	QWORD PTR -592[rbp], 0
	je	.L11277
	jmp	[QWORD PTR -592[rbp]]
.L11277:
	nop
.L11183:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 3512[rax]
	mov	rax, QWORD PTR -584[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
	jmp	.L11213
.L11276:
	nop
.L11180:
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -600[rbp], rax
	mov	rax, QWORD PTR -600[rbp]
	mov	QWORD PTR -608[rbp], rax
	mov	rax, QWORD PTR -608[rbp]
	lea	rdx, .LC588[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -612[rbp], eax
	cmp	DWORD PTR -612[rbp], 0
	jne	.L11278
	mov	rax, QWORD PTR -608[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11186:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -624[rbp], rax
	mov	rax, QWORD PTR -624[rbp]
	lea	r8, .LC86[rip]
	mov	edx, 71
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -632[rbp], rax
	cmp	QWORD PTR -632[rbp], 0
	je	.L11279
	jmp	[QWORD PTR -632[rbp]]
.L11279:
	nop
.L11188:
	mov	rax, QWORD PTR -624[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM14OPACITY__set__Eu7INTEGER
	jmp	.L11213
.L11278:
	nop
.L11185:
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -640[rbp], rax
	mov	rax, QWORD PTR -640[rbp]
	mov	QWORD PTR -648[rbp], rax
	mov	rax, QWORD PTR -648[rbp]
	lea	rdx, .LC337[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -652[rbp], eax
	cmp	DWORD PTR -652[rbp], 0
	jne	.L11280
	mov	rax, QWORD PTR -648[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11191:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM12OWNER__set__EPS2_
	jmp	.L11213
.L11280:
	nop
.L11190:
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -664[rbp], rax
	mov	rax, QWORD PTR -664[rbp]
	mov	QWORD PTR -672[rbp], rax
	mov	rax, QWORD PTR -672[rbp]
	lea	rdx, .LC498[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -676[rbp], eax
	cmp	DWORD PTR -676[rbp], 0
	jne	.L11281
	mov	rax, QWORD PTR -672[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11194:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM11TEXT__set__ERw
	jmp	.L11213
.L11281:
	nop
.L11193:
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -688[rbp], rax
	mov	rax, QWORD PTR -688[rbp]
	mov	QWORD PTR -696[rbp], rax
	mov	rax, QWORD PTR -696[rbp]
	lea	rdx, .LC589[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -700[rbp], eax
	cmp	DWORD PTR -700[rbp], 0
	jne	.L11282
	mov	rax, QWORD PTR -696[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11197:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -712[rbp], rax
	mov	rax, QWORD PTR -712[rbp]
	lea	r8, .LC86[rip]
	mov	edx, 77
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -720[rbp], rax
	cmp	QWORD PTR -720[rbp], 0
	je	.L11283
	jmp	[QWORD PTR -720[rbp]]
.L11283:
	nop
.L11199:
	mov	rax, QWORD PTR -712[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM18WINDOWSTATE__set__Eu7INTEGER
	jmp	.L11213
.L11282:
	nop
.L11196:
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -728[rbp], rax
	mov	rax, QWORD PTR -728[rbp]
	mov	QWORD PTR -736[rbp], rax
	mov	rax, QWORD PTR -736[rbp]
	lea	rdx, .LC590[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -740[rbp], eax
	cmp	DWORD PTR -740[rbp], 0
	jne	.L11284
	mov	rax, QWORD PTR -736[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11202:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -752[rbp], rax
	mov	rax, QWORD PTR -752[rbp]
	lea	r8, .LC86[rip]
	mov	edx, 78
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -760[rbp], rax
	cmp	QWORD PTR -760[rbp], 0
	je	.L11285
	jmp	[QWORD PTR -760[rbp]]
.L11285:
	nop
.L11204:
	mov	rax, QWORD PTR -752[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM20STARTPOSITION__set__Eu7INTEGER
	jmp	.L11213
.L11284:
	nop
.L11201:
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -768[rbp], rax
	mov	rax, QWORD PTR -768[rbp]
	mov	QWORD PTR -776[rbp], rax
	mov	rax, QWORD PTR -776[rbp]
	lea	rdx, .LC341[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -780[rbp], eax
	cmp	DWORD PTR -780[rbp], 0
	jne	.L11286
	mov	rax, QWORD PTR -776[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11207:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -792[rbp], rax
	mov	rax, QWORD PTR -792[rbp]
	lea	r8, .LC86[rip]
	mov	edx, 79
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -800[rbp], rax
	cmp	QWORD PTR -800[rbp], 0
	je	.L11287
	jmp	[QWORD PTR -800[rbp]]
.L11287:
	nop
.L11209:
	mov	rax, QWORD PTR -792[rbp]
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM14VISIBLE__set__Eb
	jmp	.L11213
.L11286:
	nop
.L11206:
	lea	rax, -880[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -808[rbp], rax
	mov	rax, QWORD PTR -808[rbp]
	mov	QWORD PTR -816[rbp], rax
	mov	rax, QWORD PTR -816[rbp]
	lea	rdx, .LC230[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -820[rbp], eax
	cmp	DWORD PTR -820[rbp], 0
	jne	.L11288
	mov	rax, QWORD PTR -816[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L11212:
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 2848[rax]
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING11GRAPHICTYPEaSERw
	jmp	.L11213
.L11288:
	nop
.L11211:
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS16CONTAINERCONTROL13WRITEPROPERTYER8FBSTRINGPv
	mov	BYTE PTR -821[rbp], al
	movzx	eax, BYTE PTR -821[rbp]
	mov	BYTE PTR -822[rbp], al
	lea	rax, -880[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L11127
.L11133:
.L11213:
	lea	rax, -880[rbp]
	mov	rcx, rax
	call	fb_StrDelete
.L11129:
	mov	BYTE PTR -822[rbp], 1
	nop
.L11127:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -822[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC591:
	.ascii "ACTIVECONTROL\0"
	.text
	.def	_ZN2MY3SYS5FORMS4FORM20ACTIVECONTROL__set__EPNS1_7CONTROLE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM20ACTIVECONTROL__set__EPNS1_7CONTROLE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L11290:
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC591[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 1000[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1000
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L11299
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1000
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL8SETFOCUSEv
	jmp	.L11292
.L11299:
	nop
.L11292:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 3536
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L11300
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 3536[rax]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	lea	r8, .LC86[rip]
	mov	edx, 94
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -48[rbp], rax
	cmp	QWORD PTR -48[rbp], 0
	je	.L11301
	jmp	[QWORD PTR -48[rbp]]
.L11301:
	nop
.L11296:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L11297
.L11294:
.L11300:
	nop
.L11297:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4FORM12OWNER__set__EPS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM12OWNER__set__EPS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L11303:
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rcx, .LC353[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 400
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 24[rbp]
	cmp	rdx, rax
	je	.L11319
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 400[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L11320
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 400
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L11308
.L11320:
	nop
.L11307:
	mov	QWORD PTR -8[rbp], 0
.L11308:
	cmp	QWORD PTR -8[rbp], 0
	je	.L11321
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 400
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -64[rbp], rax
	cmp	QWORD PTR -64[rbp], 0
	setne	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -16[rbp], rax
	jmp	.L11311
.L11321:
	nop
.L11310:
	mov	QWORD PTR -16[rbp], 0
.L11311:
	cmp	QWORD PTR -16[rbp], 0
	je	.L11322
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 400
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -80[rbp], rax
	mov	rdx, QWORD PTR -72[rbp]
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	SetParent
	jmp	.L11316
.L11305:
.L11313:
.L11314:
.L11315:
.L11319:
	nop
	jmp	.L11316
.L11322:
	nop
.L11316:
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC592:
	.ascii "DEFAULTBUTTON\0"
	.align 2
.LC593:
	.ascii "C\0O\0M\0M\0A\0N\0D\0B\0U\0T\0T\0O\0N\0\0\0"
	.text
	.def	_ZN2MY3SYS5FORMS4FORM20DEFAULTBUTTON__set__EPNS1_7CONTROLE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM20DEFAULTBUTTON__set__EPNS1_7CONTROLE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L11324:
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC592[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 984[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 984
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L11332
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 984
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS6OBJECT9CLASSNAMEEv
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_WstrUcase2
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	lea	rdx, .LC593[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -68[rbp], eax
	cmp	DWORD PTR -68[rbp], 0
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
	jmp	.L11327
.L11332:
	nop
.L11326:
	mov	QWORD PTR -8[rbp], 0
.L11327:
	cmp	QWORD PTR -8[rbp], 0
	nop
.L11328:
.L11329:
.L11330:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC594:
	.ascii "CANCELBUTTON\0"
	.text
	.def	_ZN2MY3SYS5FORMS4FORM19CANCELBUTTON__set__EPNS1_7CONTROLE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM19CANCELBUTTON__set__EPNS1_7CONTROLE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L11334:
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC594[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 992[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
.L11335:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4FORM15MAINFORM__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM15MAINFORM__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	BYTE PTR -33[rbp], 0
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC448[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L11337:
	mov	rax, QWORD PTR 16[rbp]
	movzx	eax, BYTE PTR 2408[rax]
	mov	BYTE PTR -33[rbp], al
	nop
.L11338:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -33[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4FORM15MAINFORM__set__Eb;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM15MAINFORM__set__Eb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	BYTE PTR 24[rbp], al
.L11341:
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC448[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2408
	movzx	eax, BYTE PTR [rax]
	cmp	BYTE PTR 24[rbp], al
	je	.L11355
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2408[rax]
	movzx	eax, BYTE PTR 24[rbp]
	mov	BYTE PTR [rdx], al
	lea	rax, PAPP$[rip]
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L11356
	lea	rax, PAPP$[rip]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY11APPLICATION15MAINFORM__get__Ev
	mov	QWORD PTR -40[rbp], rax
	cmp	QWORD PTR -40[rbp], 0
	je	.L11357
	lea	rax, PAPP$[rip]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY11APPLICATION15MAINFORM__get__Ev
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4FORM15MAINFORM__set__Eb
	jmp	.L11346
.L11357:
	nop
.L11346:
	movsx	eax, BYTE PTR 24[rbp]
	mov	r8d, eax
	mov	edx, 262144
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL13CHANGEEXSTYLEEu7INTEGERb
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2408
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L11358
	lea	rax, PAPP$[rip]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 16[rbp]
	mov	rcx, rax
	call	_ZN2MY11APPLICATION15MAINFORM__set__EPNS_3SYS5FORMS7CONTROLE
	jmp	.L11353
.L11358:
	nop
.L11348:
	lea	rax, PAPP$[rip]
	mov	rax, QWORD PTR [rax]
	mov	edx, 0
	mov	rcx, rax
	call	_ZN2MY11APPLICATION15MAINFORM__set__EPNS_3SYS5FORMS7CONTROLE
	jmp	.L11353
.L11343:
.L11349:
.L11350:
.L11351:
.L11352:
.L11355:
	nop
	jmp	.L11353
.L11356:
	nop
.L11353:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC595:
	.ascii "MENU\0"
	.text
	.def	_ZN2MY3SYS5FORMS4FORM11MENU__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM11MENU__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC595[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L11360:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 904[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L11361:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4FORM11MENU__set__EPNS1_8MAINMENUE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM11MENU__set__EPNS1_8MAINMENUE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L11364:
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC595[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 904[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 904
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L11368
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 904
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 16[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MAINMENU19PARENTWINDOW__set__EPNS0_14COMPONENTMODEL9COMPONENTE
	jmp	.L11367
.L11366:
.L11368:
	nop
.L11367:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC596:
	.ascii "STARTPOSITION\0"
	.text
	.def	_ZN2MY3SYS5FORMS4FORM20STARTPOSITION__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM20STARTPOSITION__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L11370:
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC596[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 584[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
.L11371:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC597:
	.ascii "OPACITY\0"
	.text
	.def	_ZN2MY3SYS5FORMS4FORM14OPACITY__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM14OPACITY__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC597[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L11373:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2744[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L11374:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4FORM14OPACITY__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM14OPACITY__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L11377:
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC597[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2744[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2744
	mov	rax, QWORD PTR [rax]
	cmp	rax, 255
	setne	al
	movzx	eax, al
	mov	r8d, eax
	mov	edx, 524288
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL13CHANGEEXSTYLEEu7INTEGERb
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L11382
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2744
	mov	rax, QWORD PTR [rax]
	movzx	edx, al
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	r9d, 2
	mov	r8d, edx
	mov	edx, 0
	mov	rcx, rax
	call	SetLayeredWindowAttributes
	jmp	.L11381
.L11379:
.L11380:
.L11382:
	nop
.L11381:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC598:
	.ascii "CONTROLBOX\0"
	.text
	.def	_ZN2MY3SYS5FORMS4FORM17CONTROLBOX__set__Eb;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM17CONTROLBOX__set__Eb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	BYTE PTR 24[rbp], al
.L11384:
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC598[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2736[rax]
	movzx	eax, BYTE PTR 24[rbp]
	mov	BYTE PTR [rdx], al
	movsx	eax, BYTE PTR 24[rbp]
	mov	r8d, eax
	mov	edx, 524288
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR 48[rsp], 35
	mov	DWORD PTR 40[rsp], 0
	mov	DWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8d, 0
	mov	edx, 0
	mov	rcx, rax
	call	SetWindowPos
.L11385:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC599:
	.ascii "MINIMIZEBOX\0"
	.text
	.def	_ZN2MY3SYS5FORMS4FORM18MINIMIZEBOX__set__Eb;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM18MINIMIZEBOX__set__Eb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	BYTE PTR 24[rbp], al
.L11387:
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC599[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2737[rax]
	movzx	eax, BYTE PTR 24[rbp]
	mov	BYTE PTR [rdx], al
	movsx	eax, BYTE PTR 24[rbp]
	mov	r8d, eax
	mov	edx, 131072
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR 48[rsp], 35
	mov	DWORD PTR 40[rsp], 0
	mov	DWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8d, 0
	mov	edx, 0
	mov	rcx, rax
	call	SetWindowPos
.L11388:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC600:
	.ascii "MAXIMIZEBOX\0"
	.text
	.def	_ZN2MY3SYS5FORMS4FORM18MAXIMIZEBOX__set__Eb;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM18MAXIMIZEBOX__set__Eb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	BYTE PTR 24[rbp], al
.L11390:
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC600[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2738[rax]
	movzx	eax, BYTE PTR 24[rbp]
	mov	BYTE PTR [rdx], al
	movsx	eax, BYTE PTR 24[rbp]
	mov	r8d, eax
	mov	edx, 65536
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR 48[rsp], 35
	mov	DWORD PTR 40[rsp], 0
	mov	DWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8d, 0
	mov	edx, 0
	mov	rcx, rax
	call	SetWindowPos
.L11391:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4FORM18BORDERSTYLE__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM18BORDERSTYLE__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC504[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L11393:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2456[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L11394:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4FORM18BORDERSTYLE__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM18BORDERSTYLE__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L11397:
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC504[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2456[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	r8d, 0
	mov	edx, 2147483648
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	mov	r8d, 0
	mov	edx, 8388608
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	mov	r8d, 0
	mov	edx, 262144
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	mov	r8d, 0
	mov	edx, 4194304
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	mov	r8d, 0
	mov	edx, 1024
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	mov	r8d, 0
	mov	edx, 128
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL13CHANGEEXSTYLEEu7INTEGERb
	mov	r8d, 0
	mov	edx, 512
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL13CHANGEEXSTYLEEu7INTEGERb
	mov	r8d, 0
	mov	edx, 256
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL13CHANGEEXSTYLEEu7INTEGERb
	mov	r8d, 0
	mov	edx, 1
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL13CHANGEEXSTYLEEu7INTEGERb
	cmp	QWORD PTR 24[rbp], 0
	jne	.L11424
	nop
.L11398:
	mov	r8d, 0
	mov	edx, 12582912
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	mov	r8d, 1
	mov	edx, 1024
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	movzx	eax, BYTE PTR [rax]
	test	al, al
	jne	.L11425
	mov	r8d, 1
	mov	edx, 2147483648
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	jmp	.L11401
.L11425:
	nop
.L11401:
	mov	r8d, 1
	mov	edx, 65536
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL13CHANGEEXSTYLEEu7INTEGERb
	jmp	.L11414
.L11424:
	nop
.L11399:
	cmp	QWORD PTR 24[rbp], 1
	jne	.L11426
	nop
.L11403:
	mov	r8d, 1
	mov	edx, 8388608
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	mov	r8d, 1
	mov	edx, 262144
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	mov	r8d, 1
	mov	edx, 128
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL13CHANGEEXSTYLEEu7INTEGERb
	jmp	.L11414
.L11426:
	nop
.L11404:
	cmp	QWORD PTR 24[rbp], 2
	jne	.L11427
	nop
.L11405:
	mov	r8d, 1
	mov	edx, 8388608
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	mov	r8d, 1
	mov	edx, 4194304
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	mov	r8d, 1
	mov	edx, 128
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL13CHANGEEXSTYLEEu7INTEGERb
	jmp	.L11414
.L11427:
	nop
.L11406:
	cmp	QWORD PTR 24[rbp], 3
	jne	.L11428
	nop
.L11407:
	mov	r8d, 1
	mov	edx, 262144
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	mov	r8d, 1
	mov	edx, 4194304
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	mov	r8d, 1
	mov	edx, 8388608
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	mov	r8d, 1
	mov	edx, 256
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL13CHANGEEXSTYLEEu7INTEGERb
	jmp	.L11414
.L11428:
	nop
.L11408:
	cmp	QWORD PTR 24[rbp], 4
	jne	.L11429
	nop
.L11409:
	mov	r8d, 1
	mov	edx, 4194304
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	mov	r8d, 1
	mov	edx, 8388608
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	mov	r8d, 1
	mov	edx, 256
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL13CHANGEEXSTYLEEu7INTEGERb
	mov	r8d, 1
	mov	edx, 512
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL13CHANGEEXSTYLEEu7INTEGERb
	jmp	.L11414
.L11429:
	nop
.L11410:
	cmp	QWORD PTR 24[rbp], 5
	jne	.L11430
	nop
.L11411:
	mov	r8d, 1
	mov	edx, 4194304
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	mov	r8d, 1
	mov	edx, 8388608
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	mov	r8d, 1
	mov	edx, 256
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL13CHANGEEXSTYLEEu7INTEGERb
	jmp	.L11414
.L11430:
	nop
.L11412:
	cmp	QWORD PTR 24[rbp], 6
	jne	.L11431
	nop
.L11413:
	mov	r8d, 1
	mov	edx, 4194304
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	mov	r8d, 1
	mov	edx, 8388608
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	mov	r8d, 1
	mov	edx, 1
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL13CHANGEEXSTYLEEu7INTEGERb
	jmp	.L11414
.L11402:
.L11431:
	nop
.L11414:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L11432
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR 48[rsp], 35
	mov	DWORD PTR 40[rsp], 0
	mov	DWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8d, 0
	mov	edx, 0
	mov	rcx, rax
	call	SetWindowPos
	jmp	.L11417
.L11416:
.L11432:
	nop
.L11417:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC601:
	.ascii "FORMSTYLE\0"
	.text
	.def	_ZN2MY3SYS5FORMS4FORM16FORMSTYLE__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM16FORMSTYLE__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 176
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L11434:
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC601[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2464
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR 24[rbp], rax
	je	.L11467
	nop
.L11436:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2464[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2464[rax]
	mov	QWORD PTR -48[rbp], rax
	cmp	QWORD PTR -48[rbp], 0
	jne	.L11468
	nop
.L11438:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL14EXSTYLE__get__Ev
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	and	eax, 8
	test	rax, rax
	je	.L11469
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL14EXSTYLE__get__Ev
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	and	rax, -9
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL14EXSTYLE__set__Eu7INTEGER
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L11470
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	DWORD PTR 48[rsp], 19
	mov	DWORD PTR 40[rsp], 0
	mov	DWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8d, 0
	mov	rdx, -2
	mov	rcx, rax
	call	SetWindowPos
	jmp	.L11461
.L11441:
.L11443:
.L11469:
	nop
	jmp	.L11461
.L11470:
	nop
.L11444:
	jmp	.L11461
.L11468:
	nop
.L11439:
	cmp	QWORD PTR -48[rbp], 1
	jne	.L11471
	nop
.L11445:
	jmp	.L11461
.L11471:
	nop
.L11446:
	cmp	QWORD PTR -48[rbp], 2
	jne	.L11472
	nop
.L11447:
	mov	r8d, 1
	mov	edx, 64
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL13CHANGEEXSTYLEEu7INTEGERb
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L11473
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 32
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	mov	BYTE PTR -73[rbp], al
	cmp	BYTE PTR -73[rbp], 0
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -8[rbp], rax
	jmp	.L11451
.L11473:
	nop
.L11450:
	mov	QWORD PTR -8[rbp], 0
.L11451:
	cmp	QWORD PTR -8[rbp], 0
	je	.L11474
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11RECREATEWNDEv
	jmp	.L11461
.L11474:
	nop
.L11453:
	jmp	.L11461
.L11472:
	nop
.L11448:
	cmp	QWORD PTR -48[rbp], 3
	jne	.L11475
	nop
.L11454:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL14EXSTYLE__get__Ev
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	and	eax, 8
	test	rax, rax
	jne	.L11476
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL14EXSTYLE__get__Ev
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	or	rax, 8
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL14EXSTYLE__set__Eu7INTEGER
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L11477
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	DWORD PTR 48[rsp], 19
	mov	DWORD PTR 40[rsp], 0
	mov	DWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8d, 0
	mov	rdx, -1
	mov	rcx, rax
	call	SetWindowPos
	jmp	.L11461
.L11437:
.L11457:
.L11458:
.L11459:
.L11460:
.L11467:
	nop
	jmp	.L11461
.L11475:
	nop
	jmp	.L11461
.L11476:
	nop
	jmp	.L11461
.L11477:
	nop
.L11461:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4FORM18WINDOWSTATE__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM18WINDOWSTATE__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L11479:
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC87[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2712[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -40[rbp], rax
	cmp	QWORD PTR -40[rbp], 0
	je	.L11513
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 56
	movzx	eax, BYTE PTR [rax]
	test	al, al
	jne	.L11514
	mov	DWORD PTR -68[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2712[rax]
	mov	QWORD PTR -48[rbp], rax
	cmp	QWORD PTR -48[rbp], 3
	jne	.L11515
	nop
.L11484:
	mov	DWORD PTR -68[rbp], 2
	jmp	.L11492
.L11515:
	nop
.L11485:
	cmp	QWORD PTR -48[rbp], 2
	jne	.L11516
	nop
.L11487:
	mov	DWORD PTR -68[rbp], 3
	jmp	.L11492
.L11516:
	nop
.L11488:
	cmp	QWORD PTR -48[rbp], 1
	jne	.L11517
	nop
.L11489:
	mov	DWORD PTR -68[rbp], 1
	jmp	.L11492
.L11517:
	nop
.L11490:
	cmp	QWORD PTR -48[rbp], 0
	jne	.L11518
	nop
.L11491:
	mov	DWORD PTR -68[rbp], 0
	jmp	.L11492
.L11486:
.L11518:
	nop
.L11492:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -56[rbp], rax
	mov	edx, DWORD PTR -68[rbp]
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	ShowWindow
	jmp	.L11504
.L11483:
.L11514:
	nop
.L11493:
	jmp	.L11504
.L11513:
	nop
.L11481:
	mov	r8d, 0
	mov	edx, 536870912
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	mov	r8d, 0
	mov	edx, 16777216
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	mov	r8d, 1
	mov	edx, 268435456
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2712[rax]
	mov	QWORD PTR -64[rbp], rax
	cmp	QWORD PTR -64[rbp], 3
	jne	.L11519
	nop
.L11495:
	mov	r8d, 1
	mov	edx, 536870912
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	jmp	.L11504
.L11519:
	nop
.L11496:
	cmp	QWORD PTR -64[rbp], 2
	jne	.L11520
	nop
.L11497:
	mov	r8d, 1
	mov	edx, 16777216
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	jmp	.L11504
.L11520:
	nop
.L11498:
	cmp	QWORD PTR -64[rbp], 1
	jne	.L11521
	nop
.L11499:
	jmp	.L11504
.L11521:
	nop
.L11500:
	cmp	QWORD PTR -64[rbp], 0
	jne	.L11522
	nop
.L11501:
	mov	r8d, 0
	mov	edx, 268435456
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	jmp	.L11504
.L11494:
.L11502:
.L11503:
.L11522:
	nop
.L11504:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4FORM14CAPTION__set__ERw;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM14CAPTION__set__ERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L11524:
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC356[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM11TEXT__set__ERw
.L11525:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4FORM11TEXT__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM11TEXT__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -48[rbp], 0
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC268[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L11527:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11TEXT__get__Ev
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	nop
.L11528:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -48[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4FORM11TEXT__set__ERw;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM11TEXT__set__ERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L11531:
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC268[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11TEXT__set__ERw
.L11532:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4FORM14ENABLED__set__Eb;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM14ENABLED__set__Eb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	BYTE PTR 24[rbp], al
.L11534:
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC359[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	movsx	eax, BYTE PTR 24[rbp]
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL14ENABLED__set__Eb
.L11535:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC602:
	.ascii "ACTIVECONTROLCHANGED\0"
	.text
	.def	_ZN2MY3SYS5FORMS4FORM20ACTIVECONTROLCHANGEDERNS1_7CONTROLE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM20ACTIVECONTROLCHANGEDERNS1_7CONTROLE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
.L11537:
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC602[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1056
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L11547
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 1056[rax]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 3536
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L11548
	mov	rax, QWORD PTR -40[rbp]
	mov	rax, QWORD PTR 3536[rax]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	r8, .LC86[rip]
	mov	edx, 666
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L11549
	jmp	[QWORD PTR -56[rbp]]
.L11549:
	nop
.L11542:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1056
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	rdx
	jmp	.L11545
.L11539:
.L11543:
.L11544:
.L11547:
	nop
	jmp	.L11545
.L11548:
	nop
.L11545:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC603:
	.ascii "WNDPROC\0"
	.text
	.def	_ZN2MY3SYS5FORMS4FORM7WNDPROCER7MESSAGE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM7WNDPROCER7MESSAGE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L11551:
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC603[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L11552:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC604:
	.ascii "HANDLEISALLOCATED\0"
	.align 2
.LC605:
	.ascii "M\0D\0I\0C\0L\0I\0E\0N\0T\0\0\0"
	.text
	.def	_ZN2MY3SYS5FORMS4FORM17HANDLEISALLOCATEDERNS1_7CONTROLE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM17HANDLEISALLOCATEDERNS1_7CONTROLE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 368
	mov	QWORD PTR 16[rbp], rcx
.L11554:
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC604[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1056
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L11594
	mov	QWORD PTR -248[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 1056[rax]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4FORM18BORDERSTYLE__get__Ev
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	r9, .LC86[rip]
	mov	r8d, 748
	mov	edx, 6
	mov	rcx, rax
	call	fb_ArraySngBoundChk
	mov	QWORD PTR -64[rbp], rax
	cmp	QWORD PTR -64[rbp], 0
	je	.L11595
	jmp	[QWORD PTR -64[rbp]]
.L11595:
	nop
.L11558:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	sal	rax, 3
	lea	rdx, 2656[rax]
	mov	rax, QWORD PTR -40[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	edx, eax
	mov	rax, QWORD PTR -72[rbp]
	mov	r8d, edx
	mov	edx, -26
	mov	rcx, rax
	call	SetClassLongW
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 2456
	mov	rax, QWORD PTR [rax]
	cmp	rax, 2
	jne	.L11596
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	r8d, 0
	mov	edx, -14
	mov	rcx, rax
	call	SetClassLongPtrW
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	mov	r9d, 0
	mov	r8d, 1
	mov	edx, 128
	mov	rcx, rax
	call	SendMessageW
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	GetSystemMenu
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	QWORD PTR -248[rbp], rax
	mov	rax, QWORD PTR -248[rbp]
	mov	r8d, 0
	mov	edx, 61744
	mov	rcx, rax
	call	DeleteMenu
	mov	rax, QWORD PTR -248[rbp]
	mov	r8d, 1024
	mov	edx, 7
	mov	rcx, rax
	call	DeleteMenu
	mov	rax, QWORD PTR -248[rbp]
	mov	r8d, 1024
	mov	edx, 5
	mov	rcx, rax
	call	DeleteMenu
	mov	rax, QWORD PTR -248[rbp]
	mov	r8d, 0
	mov	edx, 61488
	mov	rcx, rax
	call	DeleteMenu
	mov	rax, QWORD PTR -248[rbp]
	mov	r8d, 0
	mov	edx, 61472
	mov	rcx, rax
	call	DeleteMenu
	mov	rax, QWORD PTR -248[rbp]
	mov	r8d, 0
	mov	edx, 61440
	mov	rcx, rax
	call	DeleteMenu
	mov	rax, QWORD PTR -248[rbp]
	mov	r8d, 0
	mov	edx, 61728
	mov	rcx, rax
	call	DeleteMenu
	jmp	.L11561
.L11596:
	nop
.L11560:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 2832
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -112[rbp]
	mov	r9, rdx
	mov	r8d, 1
	mov	edx, 128
	mov	rcx, rax
	call	SendMessageW
.L11561:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4FORM14OPACITY__get__Ev
	mov	QWORD PTR -120[rbp], rax
	cmp	QWORD PTR -120[rbp], 255
	je	.L11597
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4FORM14OPACITY__get__Ev
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	movzx	edx, al
	mov	rax, QWORD PTR -136[rbp]
	mov	r9d, 2
	mov	r8d, edx
	mov	edx, 0
	mov	rcx, rax
	call	SetLayeredWindowAttributes
	jmp	.L11563
.L11597:
	nop
.L11563:
	mov	rax, QWORD PTR -40[rbp]
	mov	rdx, -2
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL14CHANGETABINDEXEu7INTEGER
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -144[rbp], rax
	mov	rax, QWORD PTR -144[rbp]
	mov	r9d, 0
	mov	r8d, 65538
	mov	edx, 296
	mov	rcx, rax
	call	SendMessageW
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4FORM11MENU__get__Ev
	mov	QWORD PTR -152[rbp], rax
	cmp	QWORD PTR -152[rbp], 0
	je	.L11598
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4FORM11MENU__get__Ev
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	mov	rdx, QWORD PTR 16[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MAINMENU19PARENTWINDOW__set__EPNS0_14COMPONENTMODEL9COMPONENTE
	jmp	.L11565
.L11598:
	nop
.L11565:
	mov	rax, QWORD PTR -40[rbp]
	mov	rax, QWORD PTR 2464[rax]
	mov	QWORD PTR -168[rbp], rax
	cmp	QWORD PTR -168[rbp], 1
	jne	.L11599
	nop
.L11566:
	lea	rax, -272[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	lea	rax, -272[rbp]
	mov	QWORD PTR [rax], 0
	lea	rax, -272[rbp]
	add	rax, 8
	mov	DWORD PTR [rax], 255
	mov	ecx, 0
	call	GetModuleHandleW
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	lea	rdx, -272[rbp]
	mov	QWORD PTR 88[rsp], rdx
	mov	rdx, QWORD PTR -176[rbp]
	mov	QWORD PTR 80[rsp], rdx
	mov	QWORD PTR 72[rsp], 3244
	mov	QWORD PTR 64[rsp], rax
	mov	DWORD PTR 56[rsp], 100
	mov	DWORD PTR 48[rsp], 100
	mov	DWORD PTR 40[rsp], 0
	mov	DWORD PTR 32[rsp], 0
	mov	r9d, 1445986304
	lea	r8, .LC77[rip]
	lea	rdx, .LC605[rip]
	mov	ecx, 0
	call	CreateWindowExW
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	lea	rdx, 424[rax]
	mov	rax, QWORD PTR -184[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 424
	mov	rax, QWORD PTR [rax]
	mov	edx, -4
	mov	rcx, rax
	call	GetWindowLongPtrW
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -192[rbp]
	lea	rdx, _ZN2MY3SYS5FORMS4FORM14HOOKCLIENTPROCEP6HWND__jyx[rip]
	cmp	rax, rdx
	je	.L11600
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1056
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 424
	mov	rax, QWORD PTR [rax]
	mov	r8, rdx
	lea	rdx, .LC89[rip]
	mov	rcx, rax
	call	SetPropW
	lea	rdx, _ZN2MY3SYS5FORMS4FORM14HOOKCLIENTPROCEP6HWND__jyx[rip]
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 424
	mov	rax, QWORD PTR [rax]
	mov	r8, rdx
	mov	edx, -4
	mov	rcx, rax
	call	SetWindowLongPtrW
	mov	QWORD PTR -200[rbp], rax
	mov	rdx, QWORD PTR -200[rbp]
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 424
	mov	rax, QWORD PTR [rax]
	mov	r8, rdx
	lea	rdx, .LC90[rip]
	mov	rcx, rax
	call	SetPropW
	jmp	.L11570
.L11569:
.L11600:
	nop
.L11570:
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 424
	mov	rax, QWORD PTR [rax]
	mov	edx, 5
	mov	rcx, rax
	call	ShowWindow
	jmp	.L11588
.L11599:
	nop
.L11567:
	cmp	QWORD PTR -168[rbp], 2
	jne	.L11601
	nop
.L11572:
	mov	rax, QWORD PTR -40[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L11602
	mov	rax, QWORD PTR -40[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	lea	rdx, _ZTSN2MY3SYS5FORMS4FORME[rip]
	mov	rcx, rax
	call	fb_IsTypeOf
	mov	DWORD PTR -204[rbp], eax
	cmp	DWORD PTR -204[rbp], 0
	je	.L11603
	mov	rax, QWORD PTR -40[rbp]
	mov	rax, QWORD PTR 128[rax]
	mov	QWORD PTR -216[rbp], rax
	mov	rax, QWORD PTR -216[rbp]
	lea	r8, .LC86[rip]
	mov	edx, 784
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -224[rbp], rax
	cmp	QWORD PTR -224[rbp], 0
	je	.L11604
	jmp	[QWORD PTR -224[rbp]]
.L11604:
	nop
.L11576:
	mov	rax, QWORD PTR -216[rbp]
	add	rax, 2464
	mov	rax, QWORD PTR [rax]
	cmp	rax, 1
	jne	.L11605
	mov	rax, QWORD PTR -40[rbp]
	mov	rax, QWORD PTR 128[rax]
	mov	QWORD PTR -232[rbp], rax
	mov	rax, QWORD PTR -232[rbp]
	lea	r8, .LC86[rip]
	mov	edx, 785
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -240[rbp], rax
	cmp	QWORD PTR -240[rbp], 0
	je	.L11606
	jmp	[QWORD PTR -240[rbp]]
.L11606:
	nop
.L11579:
	mov	rax, QWORD PTR -232[rbp]
	add	rax, 424
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	SetParent
	jmp	.L11588
.L11571:
.L11580:
.L11581:
.L11582:
.L11583:
.L11584:
.L11585:
.L11586:
.L11556:
.L11587:
.L11594:
	nop
	jmp	.L11588
.L11601:
	nop
	jmp	.L11588
.L11602:
	nop
	jmp	.L11588
.L11603:
	nop
	jmp	.L11588
.L11605:
	nop
.L11588:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4FORM7SETDARKEb;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM7SETDARKEb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	BYTE PTR 24[rbp], al
.L11608:
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC526[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	movsx	eax, BYTE PTR 24[rbp]
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL7SETDARKEb
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	REFRESHTITLEBARTHEMECOLOR
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 424
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L11613
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 424
	mov	rax, QWORD PTR [rax]
	mov	r8d, 0
	lea	rdx, .LC527[rip]
	mov	rcx, rax
	call	SetWindowTheme
	lea	rax, G_DARKMODEENABLED$[rip]
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 424
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	ALLOWDARKMODEFORWINDOW
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 424
	mov	rax, QWORD PTR [rax]
	mov	r9d, 0
	mov	r8d, 0
	mov	edx, 794
	mov	rcx, rax
	call	SendMessageW
	jmp	.L11611
.L11610:
.L11613:
	nop
.L11611:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	r9d, 129
	mov	r8d, 0
	mov	edx, 0
	mov	rcx, rax
	call	RedrawWindow
.L11612:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 2
.LC609:
	.ascii "M\0e\0n\0u\0\0\0"
	.text
	.def	_ZN2MY3SYS5FORMS4FORM14PROCESSMESSAGEER7MESSAGE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM14PROCESSMESSAGEER7MESSAGE:
	push	rbp
	mov	rbp, rsp
	push	rdi
	push	rbx
	and	rsp, -16
	sub	rsp, 1888
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L11615:
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR 1800[rsp], rax
	mov	rax, QWORD PTR 1800[rsp]
	mov	QWORD PTR 1792[rsp], rax
	lea	rcx, .LC369[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR 1784[rsp], rax
	mov	rax, QWORD PTR 1784[rsp]
	mov	QWORD PTR 1776[rsp], rax
	mov	QWORD PTR 928[rsp], 1
	mov	rax, QWORD PTR 24[rbp]
	mov	eax, DWORD PTR 16[rax]
	mov	DWORD PTR 1772[rsp], eax
	cmp	DWORD PTR 1772[rsp], 36
	jne	.L11973
	nop
.L11616:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR 1760[rsp], rax
	mov	rax, QWORD PTR 1760[rsp]
	mov	edx, -20
	mov	rcx, rax
	call	GetWindowLongPtrW
	mov	QWORD PTR 1752[rsp], rax
	mov	rax, QWORD PTR 1752[rsp]
	and	eax, 64
	test	rax, rax
	je	.L11974
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 32[rax]
	mov	QWORD PTR 1744[rsp], rax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], 0
	jmp	.L11888
.L11619:
.L11974:
	nop
.L11620:
	jmp	.L11888
.L11973:
	nop
.L11617:
	cmp	DWORD PTR 1772[rsp], 794
	jne	.L11975
	nop
.L11622:
	lea	rax, G_DARKMODESUPPORTED$[rip]
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L11976
	lea	rax, G_DARKMODEENABLED$[rip]
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	ALLOWDARKMODEFORWINDOW
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	REFRESHTITLEBARTHEMECOLOR
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	UpdateWindow
	jmp	.L11888
.L11625:
.L11976:
	nop
.L11626:
	jmp	.L11888
.L11975:
	nop
.L11623:
	cmp	DWORD PTR 1772[rsp], 145
	jne	.L11977
	nop
.L11627:
	lea	rax, G_DARKMODESUPPORTED$[rip]
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L11978
	lea	rax, G_DARKMODEENABLED$[rip]
	movzx	eax, BYTE PTR [rax]
	test	al, al
	setne	al
	mov	BYTE PTR 1887[rsp], al
	jmp	.L11631
.L11978:
	nop
.L11630:
	mov	BYTE PTR 1887[rsp], 0
.L11631:
	cmp	BYTE PTR 1887[rsp], 0
	je	.L11979
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 32[rax]
	mov	QWORD PTR 1736[rsp], rax
	lea	rax, 912[rsp]
	mov	DWORD PTR [rax], 0
	lea	rax, 912[rsp]
	add	rax, 4
	mov	QWORD PTR [rax], 0
	mov	DWORD PTR 8[rax], 0
	lea	rax, 240[rsp]
	mov	DWORD PTR [rax], 48
	lea	rax, 240[rsp]
	add	rax, 4
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	QWORD PTR 32[rax], 0
	mov	DWORD PTR 40[rax], 0
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	lea	rdx, 240[rsp]
	mov	r9, rdx
	mov	r8d, 0
	mov	edx, -3
	mov	rcx, rax
	call	GetMenuBarInfo
	lea	rax, 896[rsp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	lea	rdx, 896[rsp]
	mov	rcx, rax
	call	GetWindowRect
	lea	rax, 240[rsp]
	add	rax, 4
	mov	rdx, QWORD PTR 8[rax]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR 912[rsp], rax
	mov	QWORD PTR 920[rsp], rdx
	lea	rax, 896[rsp]
	add	rax, 4
	mov	eax, DWORD PTR [rax]
	neg	eax
	mov	ecx, eax
	lea	rax, 896[rsp]
	mov	eax, DWORD PTR [rax]
	neg	eax
	mov	edx, eax
	lea	rax, 912[rsp]
	mov	r8d, ecx
	mov	rcx, rax
	call	OffsetRect
	mov	rax, QWORD PTR 1736[rsp]
	mov	QWORD PTR 1728[rsp], rax
	mov	rax, QWORD PTR 1728[rsp]
	lea	r8, .LC86[rip]
	mov	edx, 935
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR 1720[rsp], rax
	cmp	QWORD PTR 1720[rsp], 0
	je	.L11980
	jmp	[QWORD PTR 1720[rsp]]
.L11980:
	nop
.L11635:
	mov	rcx, QWORD PTR HBRBKGND$[rip]
	mov	rax, QWORD PTR 1728[rsp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	lea	rdx, 912[rsp]
	mov	r8, rcx
	mov	rcx, rax
	call	FillRect
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], -1
	jmp	.L11896
.L11633:
.L11979:
	nop
.L11637:
	jmp	.L11888
.L11977:
	nop
.L11628:
	cmp	DWORD PTR 1772[rsp], 146
	jne	.L11981
	nop
.L11638:
	lea	rax, G_DARKMODESUPPORTED$[rip]
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L11982
	lea	rax, G_DARKMODEENABLED$[rip]
	movzx	eax, BYTE PTR [rax]
	test	al, al
	setne	al
	mov	BYTE PTR 1886[rsp], al
	jmp	.L11642
.L11982:
	nop
.L11641:
	mov	BYTE PTR 1886[rsp], 0
.L11642:
	cmp	BYTE PTR 1886[rsp], 0
	je	.L11983
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 32[rax]
	mov	QWORD PTR 1712[rsp], rax
	lea	rax, HBRBKGND$[rip]
	mov	QWORD PTR 1856[rsp], rax
	lea	rax, 240[rsp]
	mov	r8, rax
	mov	eax, 0
	mov	edx, 64
	mov	rdi, r8
	mov	rcx, rdx
	rep stosq
	lea	rax, 80[rsp]
	mov	DWORD PTR [rax], 80
	lea	rax, 80[rsp]
	add	rax, 4
	mov	DWORD PTR [rax], 192
	lea	rax, 80[rsp]
	add	rax, 8
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	QWORD PTR 32[rax], 0
	mov	QWORD PTR 40[rax], 0
	mov	QWORD PTR 48[rax], 0
	mov	QWORD PTR 56[rax], 0
	mov	QWORD PTR 64[rax], 0
	lea	rax, 80[rsp]
	add	rax, 56
	lea	rdx, 240[rsp]
	mov	QWORD PTR [rax], rdx
	lea	rax, 80[rsp]
	add	rax, 64
	mov	DWORD PTR [rax], 256
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 88
	mov	rax, QWORD PTR [rax]
	mov	ecx, eax
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 64
	mov	rax, QWORD PTR [rax]
	lea	rdx, 80[rsp]
	mov	r9, rdx
	mov	r8d, -1
	mov	edx, ecx
	mov	rcx, rax
	call	GetMenuItemInfoW
	lea	rax, 80[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	cmp	rax, 3
	je	.L11984
	lea	rax, 80[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	cmp	rax, 2
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR 1872[rsp], rax
	jmp	.L11647
.L11984:
	nop
.L11646:
	mov	QWORD PTR 1872[rsp], -1
.L11647:
	cmp	QWORD PTR 1872[rsp], 0
	jne	.L11985
	lea	rax, 80[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	cmp	rax, 5
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR 1864[rsp], rax
	jmp	.L11650
.L11985:
	nop
.L11649:
	mov	QWORD PTR 1864[rsp], -1
.L11650:
	cmp	QWORD PTR 1864[rsp], 0
	je	.L11986
	lea	rax, 80[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	cmp	rax, 3
	jne	.L11987
	lea	rax, 160[rsp]
	mov	DWORD PTR [rax], 80
	lea	rax, 160[rsp]
	add	rax, 4
	mov	DWORD PTR [rax], 232
	lea	rax, 160[rsp]
	add	rax, 8
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	QWORD PTR 32[rax], 0
	mov	QWORD PTR 40[rax], 0
	mov	QWORD PTR 48[rax], 0
	mov	QWORD PTR 56[rax], 0
	mov	QWORD PTR 64[rax], 0
	lea	rax, 160[rsp]
	add	rax, 56
	lea	rdx, 240[rsp]
	mov	QWORD PTR [rax], rdx
	lea	rax, 160[rsp]
	add	rax, 64
	mov	DWORD PTR [rax], 256
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 64
	mov	rax, QWORD PTR [rax]
	lea	rdx, 160[rsp]
	mov	r9, rdx
	mov	r8d, -1
	mov	edx, 0
	mov	rcx, rax
	call	GetMenuItemInfoW
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 424
	mov	rax, QWORD PTR [rax]
	mov	r9d, 0
	mov	r8d, 0
	mov	edx, 553
	mov	rcx, rax
	call	SendMessageW
	mov	QWORD PTR 1704[rsp], rax
	mov	rax, QWORD PTR 1704[rsp]
	mov	QWORD PTR 1696[rsp], rax
	cmp	QWORD PTR 1696[rsp], 0
	je	.L11988
	mov	rax, QWORD PTR 1696[rsp]
	mov	r9d, 0
	mov	r8d, 0
	mov	edx, 127
	mov	rcx, rax
	call	SendMessageW
	mov	QWORD PTR 1688[rsp], rax
	mov	rax, QWORD PTR 1688[rsp]
	mov	QWORD PTR 1840[rsp], rax
	movss	xmm0, DWORD PTR .LC606[rip]
	call	SCALEY
	movd	eax, xmm0
	mov	DWORD PTR 1684[rsp], eax
	movss	xmm0, DWORD PTR .LC607[rip]
	call	SCALEY
	movd	eax, xmm0
	mov	DWORD PTR 1680[rsp], eax
	cvtss2sd	xmm1, DWORD PTR 1684[rsp]
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 52
	mov	eax, DWORD PTR [rax]
	movsx	rdx, eax
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 44
	mov	eax, DWORD PTR [rax]
	cdqe
	sub	rdx, rax
	mov	rax, rdx
	sub	rax, 1
	cvtsi2ss	xmm0, rax
	subss	xmm0, DWORD PTR 1680[rsp]
	cvtss2sd	xmm0, xmm0
	movsd	xmm2, QWORD PTR .LC608[rip]
	divsd	xmm0, xmm2
	addsd	xmm0, xmm1
	call	nearbyint
	cvttsd2si	rax, xmm0
	mov	QWORD PTR 1672[rsp], rax
	cmp	QWORD PTR 1840[rsp], 0
	jne	.L11989
	mov	edx, 32512
	mov	ecx, 0
	call	LoadIconW
	mov	QWORD PTR 1664[rsp], rax
	mov	rax, QWORD PTR 1664[rsp]
	mov	QWORD PTR 1840[rsp], rax
	jmp	.L11658
.L11989:
	nop
.L11658:
	movss	xmm0, DWORD PTR .LC607[rip]
	call	SCALEY
	movd	eax, xmm0
	mov	DWORD PTR 1660[rsp], eax
	movss	xmm0, DWORD PTR .LC607[rip]
	call	SCALEX
	movd	eax, xmm0
	mov	DWORD PTR 1656[rsp], eax
	mov	eax, DWORD PTR 1660[rsp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	ebx, xmm0
	mov	eax, DWORD PTR 1656[rsp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	edx, xmm0
	mov	rax, QWORD PTR 1672[rsp]
	mov	r8d, eax
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR 1840[rsp]
	mov	DWORD PTR 64[rsp], 3
	mov	QWORD PTR 56[rsp], 0
	mov	DWORD PTR 48[rsp], 0
	mov	DWORD PTR 40[rsp], ebx
	mov	DWORD PTR 32[rsp], edx
	mov	r9, rcx
	mov	edx, 15
	mov	rcx, rax
	call	DrawIconEx
	jmp	.L11660
.L11656:
.L11659:
.L11654:
.L11987:
	nop
	jmp	.L11660
.L11988:
	nop
.L11660:
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 16
	mov	eax, DWORD PTR [rax]
	mov	eax, eax
	and	eax, 1
	test	rax, rax
	je	.L11990
	mov	DWORD PTR 1852[rsp], 10066329
	jmp	.L11663
.L11990:
	nop
.L11662:
	mov	DWORD PTR 1852[rsp], 6447714
.L11663:
	mov	eax, DWORD PTR 1852[rsp]
	mov	r8d, eax
	mov	edx, 0
	mov	ecx, 0
	call	CreatePen
	mov	QWORD PTR 1648[rsp], rax
	mov	rax, QWORD PTR 1648[rsp]
	mov	QWORD PTR 1640[rsp], rax
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 1640[rsp]
	mov	rcx, rax
	call	SelectObject
	mov	QWORD PTR 1632[rsp], rax
	mov	rax, QWORD PTR 1632[rsp]
	mov	QWORD PTR 1624[rsp], rax
	mov	rdx, QWORD PTR HBRBKGND$[rip]
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	SelectObject
	mov	QWORD PTR 1616[rsp], rax
	mov	rax, QWORD PTR 1616[rsp]
	mov	QWORD PTR 1608[rsp], rax
	mov	rax, QWORD PTR 1856[rsp]
	mov	QWORD PTR 1600[rsp], rax
	mov	rax, QWORD PTR 1600[rsp]
	lea	r8, .LC86[rip]
	mov	edx, 973
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR 1592[rsp], rax
	cmp	QWORD PTR 1592[rsp], 0
	je	.L11991
	jmp	[QWORD PTR 1592[rsp]]
.L11991:
	nop
.L11665:
	mov	rax, QWORD PTR 1600[rsp]
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR 1712[rsp]
	lea	rdx, 40[rax]
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	r8, rcx
	mov	rcx, rax
	call	FillRect
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 16
	mov	eax, DWORD PTR [rax]
	mov	eax, eax
	and	eax, 1
	test	rax, rax
	je	.L11992
	mov	rdx, QWORD PTR HBRHLBKGND$[rip]
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	SelectObject
	jmp	.L11667
.L11992:
	nop
.L11667:
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 52
	mov	ecx, DWORD PTR [rax]
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 48
	mov	eax, DWORD PTR [rax]
	lea	r9d, -1[rax]
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 44
	mov	eax, DWORD PTR [rax]
	lea	r8d, 1[rax]
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 40
	mov	edx, DWORD PTR [rax]
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR 32[rsp], ecx
	mov	rcx, rax
	call	Rectangle
	mov	rax, QWORD PTR 1640[rsp]
	mov	rcx, rax
	call	DeleteObject
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 40
	mov	eax, DWORD PTR [rax]
	cvtsi2sd	xmm1, eax
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 48
	mov	eax, DWORD PTR [rax]
	movsx	rdx, eax
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 40
	mov	eax, DWORD PTR [rax]
	cdqe
	sub	rdx, rax
	mov	rax, rdx
	sub	rax, 9
	cvtsi2sd	xmm0, rax
	movsd	xmm2, QWORD PTR .LC608[rip]
	divsd	xmm0, xmm2
	addsd	xmm0, xmm1
	call	nearbyint
	cvttsd2si	rax, xmm0
	mov	QWORD PTR 1584[rsp], rax
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 44
	mov	eax, DWORD PTR [rax]
	cvtsi2sd	xmm1, eax
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 52
	mov	eax, DWORD PTR [rax]
	movsx	rdx, eax
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 44
	mov	eax, DWORD PTR [rax]
	cdqe
	sub	rdx, rax
	mov	rax, rdx
	sub	rax, 9
	cvtsi2sd	xmm0, rax
	movsd	xmm2, QWORD PTR .LC608[rip]
	divsd	xmm0, xmm2
	addsd	xmm1, xmm0
	movsd	xmm0, QWORD PTR .LC297[rip]
	addsd	xmm0, xmm1
	call	nearbyint
	cvttsd2si	rax, xmm0
	mov	QWORD PTR 1576[rsp], rax
	mov	rax, QWORD PTR 152[rsp]
	mov	QWORD PTR 1568[rsp], rax
	cmp	QWORD PTR 1568[rsp], 3
	jne	.L11993
	nop
.L11668:
	mov	r8d, 9865338
	mov	edx, 0
	mov	ecx, 0
	call	CreatePen
	mov	QWORD PTR 1560[rsp], rax
	mov	rax, QWORD PTR 1560[rsp]
	mov	QWORD PTR 1640[rsp], rax
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 1640[rsp]
	mov	rcx, rax
	call	SelectObject
	mov	rax, QWORD PTR 1576[rsp]
	lea	edx, 8[rax]
	mov	rax, QWORD PTR 1584[rsp]
	lea	r8d, 6[rax]
	mov	rax, QWORD PTR 1576[rsp]
	lea	ecx, 6[rax]
	mov	rax, QWORD PTR 1584[rsp]
	mov	r10d, eax
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR 32[rsp], edx
	mov	r9d, r8d
	mov	r8d, ecx
	mov	edx, r10d
	mov	rcx, rax
	call	Rectangle
	mov	rax, QWORD PTR 1640[rsp]
	mov	rcx, rax
	call	DeleteObject
	jmp	.L11674
.L11993:
	nop
.L11669:
	cmp	QWORD PTR 1568[rsp], 2
	jne	.L11994
	nop
.L11671:
	mov	r8d, 9865338
	mov	edx, 0
	mov	ecx, 0
	call	CreatePen
	mov	QWORD PTR 1552[rsp], rax
	mov	rax, QWORD PTR 1552[rsp]
	mov	QWORD PTR 1640[rsp], rax
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 1640[rsp]
	mov	rcx, rax
	call	SelectObject
	mov	rax, QWORD PTR 1576[rsp]
	lea	edx, 8[rax]
	mov	rax, QWORD PTR 1584[rsp]
	lea	r8d, 6[rax]
	mov	rax, QWORD PTR 1576[rsp]
	lea	ecx, 4[rax]
	mov	rax, QWORD PTR 1584[rsp]
	mov	r10d, eax
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR 32[rsp], edx
	mov	r9d, r8d
	mov	r8d, ecx
	mov	edx, r10d
	mov	rcx, rax
	call	Rectangle
	mov	rax, QWORD PTR 1576[rsp]
	lea	edx, 3[rax]
	mov	rax, QWORD PTR 1584[rsp]
	mov	ecx, eax
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	r9d, 0
	mov	r8d, edx
	mov	edx, ecx
	mov	rcx, rax
	call	MoveToEx
	mov	rax, QWORD PTR 1576[rsp]
	lea	ecx, 3[rax]
	mov	rax, QWORD PTR 1584[rsp]
	lea	edx, 6[rax]
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	r8d, ecx
	mov	rcx, rax
	call	LineTo
	mov	rax, QWORD PTR 1576[rsp]
	lea	ecx, 2[rax]
	mov	rax, QWORD PTR 1584[rsp]
	lea	edx, 2[rax]
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	r9d, 9865338
	mov	r8d, ecx
	mov	rcx, rax
	call	SetPixel
	mov	rax, QWORD PTR 1576[rsp]
	lea	ecx, 2[rax]
	mov	rax, QWORD PTR 1584[rsp]
	lea	edx, 7[rax]
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	r9d, 0
	mov	r8d, ecx
	mov	rcx, rax
	call	MoveToEx
	mov	rax, QWORD PTR 1576[rsp]
	lea	ecx, 5[rax]
	mov	rax, QWORD PTR 1584[rsp]
	lea	edx, 7[rax]
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	r8d, ecx
	mov	rcx, rax
	call	LineTo
	mov	rax, QWORD PTR 1576[rsp]
	lea	ecx, 2[rax]
	mov	rax, QWORD PTR 1584[rsp]
	lea	r8d, 8[rax]
	mov	rax, QWORD PTR 1576[rsp]
	mov	r10d, eax
	mov	rax, QWORD PTR 1584[rsp]
	lea	edx, 2[rax]
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR 32[rsp], ecx
	mov	r9d, r8d
	mov	r8d, r10d
	mov	rcx, rax
	call	Rectangle
	mov	rax, QWORD PTR 1640[rsp]
	mov	rcx, rax
	call	DeleteObject
	jmp	.L11674
.L11994:
	nop
.L11672:
	cmp	QWORD PTR 1568[rsp], 5
	jne	.L11995
	nop
.L11673:
	mov	r8d, 9865338
	mov	edx, 2
	mov	ecx, 0
	call	CreatePen
	mov	QWORD PTR 1544[rsp], rax
	mov	rax, QWORD PTR 1544[rsp]
	mov	QWORD PTR 1640[rsp], rax
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 1640[rsp]
	mov	rcx, rax
	call	SelectObject
	mov	rax, QWORD PTR 1576[rsp]
	lea	ecx, 1[rax]
	mov	rax, QWORD PTR 1584[rsp]
	lea	edx, 1[rax]
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	r9d, 0
	mov	r8d, ecx
	mov	rcx, rax
	call	MoveToEx
	mov	rax, QWORD PTR 1576[rsp]
	lea	ecx, 7[rax]
	mov	rax, QWORD PTR 1584[rsp]
	lea	edx, 7[rax]
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	r8d, ecx
	mov	rcx, rax
	call	LineTo
	mov	rax, QWORD PTR 1576[rsp]
	lea	ecx, 1[rax]
	mov	rax, QWORD PTR 1584[rsp]
	lea	edx, 7[rax]
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	r9d, 0
	mov	r8d, ecx
	mov	rcx, rax
	call	MoveToEx
	mov	rax, QWORD PTR 1576[rsp]
	lea	ecx, 7[rax]
	mov	rax, QWORD PTR 1584[rsp]
	lea	edx, 1[rax]
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	r8d, ecx
	mov	rcx, rax
	call	LineTo
	mov	rax, QWORD PTR 1640[rsp]
	mov	rcx, rax
	call	DeleteObject
	jmp	.L11674
.L11670:
.L11995:
	nop
.L11674:
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 1624[rsp]
	mov	rcx, rax
	call	SelectObject
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 1608[rsp]
	mov	rcx, rax
	call	SelectObject
	jmp	.L11675
.L11986:
	nop
.L11652:
	mov	DWORD PTR 1836[rsp], 37
	mov	QWORD PTR 1824[rsp], 0
	mov	QWORD PTR 1536[rsp], 0
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 16
	mov	eax, DWORD PTR [rax]
	mov	eax, eax
	and	eax, 160
	test	rax, rax
	je	.L11996
	mov	QWORD PTR 1824[rsp], 1
	mov	QWORD PTR 1536[rsp], 1
	jmp	.L11678
.L11677:
.L11996:
	nop
.L11678:
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 16
	mov	eax, DWORD PTR [rax]
	mov	eax, eax
	and	eax, 64
	test	rax, rax
	je	.L11997
	mov	QWORD PTR 1824[rsp], 2
	mov	QWORD PTR 1536[rsp], 2
	lea	rax, HBRHLBKGND$[rip]
	mov	QWORD PTR 1856[rsp], rax
	jmp	.L11681
.L11680:
.L11997:
	nop
.L11681:
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 16
	mov	eax, DWORD PTR [rax]
	mov	eax, eax
	and	eax, 1
	test	rax, rax
	je	.L11998
	mov	QWORD PTR 1824[rsp], 2
	mov	QWORD PTR 1536[rsp], 2
	lea	rax, HBRHLBKGND$[rip]
	mov	QWORD PTR 1856[rsp], rax
	jmp	.L11684
.L11683:
.L11998:
	nop
.L11684:
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 16
	mov	eax, DWORD PTR [rax]
	mov	eax, eax
	and	eax, 6
	test	rax, rax
	je	.L11999
	mov	QWORD PTR 1824[rsp], 3
	mov	QWORD PTR 1536[rsp], 3
	lea	rax, HBRBKGND$[rip]
	mov	QWORD PTR 1856[rsp], rax
	jmp	.L11687
.L11686:
.L11999:
	nop
.L11687:
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 16
	mov	eax, DWORD PTR [rax]
	mov	eax, eax
	and	eax, 256
	test	rax, rax
	je	.L12000
	or	DWORD PTR 1836[rsp], 1048576
	jmp	.L11690
.L11689:
.L12000:
	nop
.L11690:
	mov	rax, QWORD PTR G_MENUTHEME$[rip]
	test	rax, rax
	jne	.L12001
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	lea	rdx, .LC609[rip]
	mov	rcx, rax
	call	OpenThemeData
	mov	QWORD PTR 1528[rsp], rax
	mov	rax, QWORD PTR 1528[rsp]
	mov	QWORD PTR G_MENUTHEME$[rip], rax
	jmp	.L11693
.L11692:
.L12001:
	nop
.L11693:
	mov	rax, QWORD PTR 1856[rsp]
	mov	QWORD PTR 1520[rsp], rax
	mov	rax, QWORD PTR 1520[rsp]
	lea	r8, .LC86[rip]
	mov	edx, 1060
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR 1512[rsp], rax
	cmp	QWORD PTR 1512[rsp], 0
	je	.L12002
	jmp	[QWORD PTR 1512[rsp]]
.L12002:
	nop
.L11695:
	mov	rax, QWORD PTR 1520[rsp]
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR 1712[rsp]
	lea	rdx, 40[rax]
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	r8, rcx
	mov	rcx, rax
	call	FillRect
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, rax
	call	SetBkMode
	cmp	QWORD PTR 1824[rsp], 3
	jne	.L12003
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	edx, 6447714
	mov	rcx, rax
	call	SetTextColor
	jmp	.L11698
.L12003:
	nop
.L11697:
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	edx, 16777215
	mov	rcx, rax
	call	SetTextColor
.L11698:
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	edx, 3684408
	mov	rcx, rax
	call	SetBkColor
	mov	rax, QWORD PTR 1712[rsp]
	lea	r9, 40[rax]
	lea	rax, 80[rsp]
	add	rax, 64
	mov	r8d, DWORD PTR [rax]
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	lea	rdx, 240[rsp]
	mov	ecx, DWORD PTR 1836[rsp]
	mov	DWORD PTR 32[rsp], ecx
	mov	rcx, rax
	call	DrawTextW
	mov	rax, QWORD PTR 1712[rsp]
	add	rax, 72
	mov	rax, QWORD PTR [rax]
	mov	edx, 2
	mov	rcx, rax
	call	SetBkMode
.L11675:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], -1
	jmp	.L11896
.L11644:
.L11983:
	nop
.L11699:
	jmp	.L11888
.L11981:
	nop
.L11639:
	cmp	DWORD PTR 1772[rsp], 133
	je	.L12004
	nop
.L11700:
	cmp	DWORD PTR 1772[rsp], 134
	jne	.L12005
	jmp	.L11701
.L12004:
	nop
.L11701:
	lea	rax, G_DARKMODESUPPORTED$[rip]
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L12006
	lea	rax, G_DARKMODEENABLED$[rip]
	movzx	eax, BYTE PTR [rax]
	test	al, al
	setne	al
	mov	BYTE PTR 1823[rsp], al
	jmp	.L11705
.L12006:
	nop
.L11704:
	mov	BYTE PTR 1823[rsp], 0
.L11705:
	cmp	BYTE PTR 1823[rsp], 0
	je	.L12007
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 32
	mov	r8, QWORD PTR [rax]
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 16
	mov	edx, DWORD PTR [rax]
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	r9, r8
	mov	r8, rcx
	mov	rcx, rax
	call	DefWindowProcW
	lea	rax, 240[rsp]
	mov	DWORD PTR [rax], 48
	lea	rax, 240[rsp]
	add	rax, 4
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	QWORD PTR 32[rax], 0
	mov	DWORD PTR 40[rax], 0
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	lea	rdx, 240[rsp]
	mov	r9, rdx
	mov	r8d, 0
	mov	edx, -3
	mov	rcx, rax
	call	GetMenuBarInfo
	mov	DWORD PTR 964[rsp], eax
	cmp	DWORD PTR 964[rsp], 0
	jne	.L12008
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], -1
	jmp	.L11896
.L11709:
.L12008:
	nop
.L11711:
	lea	rax, 880[rsp]
	mov	DWORD PTR [rax], 0
	lea	rax, 880[rsp]
	add	rax, 4
	mov	QWORD PTR [rax], 0
	mov	DWORD PTR 8[rax], 0
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	lea	rdx, 880[rsp]
	mov	rcx, rax
	call	GetClientRect
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	lea	rdx, 880[rsp]
	mov	r9d, 2
	mov	r8, rdx
	mov	edx, 0
	mov	rcx, rax
	call	MapWindowPoints
	lea	rax, 864[rsp]
	mov	DWORD PTR [rax], 0
	lea	rax, 864[rsp]
	add	rax, 4
	mov	QWORD PTR [rax], 0
	mov	DWORD PTR 8[rax], 0
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	lea	rdx, 864[rsp]
	mov	rcx, rax
	call	GetWindowRect
	lea	rax, 864[rsp]
	add	rax, 4
	mov	eax, DWORD PTR [rax]
	neg	eax
	mov	ecx, eax
	lea	rax, 864[rsp]
	mov	eax, DWORD PTR [rax]
	neg	eax
	mov	edx, eax
	lea	rax, 880[rsp]
	mov	r8d, ecx
	mov	rcx, rax
	call	OffsetRect
	mov	rax, QWORD PTR 880[rsp]
	mov	rdx, QWORD PTR 888[rsp]
	mov	QWORD PTR 848[rsp], rax
	mov	QWORD PTR 856[rsp], rdx
	lea	rax, 848[rsp]
	add	rax, 12
	mov	edx, DWORD PTR 852[rsp]
	mov	DWORD PTR [rax], edx
	lea	rax, 848[rsp]
	add	rax, 4
	mov	edx, DWORD PTR [rax]
	lea	rax, 848[rsp]
	add	rax, 4
	sub	edx, 1
	mov	DWORD PTR [rax], edx
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	GetWindowDC
	mov	QWORD PTR 952[rsp], rax
	mov	rax, QWORD PTR 952[rsp]
	mov	QWORD PTR 944[rsp], rax
	mov	rcx, QWORD PTR HBRBKGND$[rip]
	lea	rdx, 848[rsp]
	mov	rax, QWORD PTR 944[rsp]
	mov	r8, rcx
	mov	rcx, rax
	call	FillRect
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 944[rsp]
	mov	rcx, rax
	call	ReleaseDC
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], -1
	jmp	.L11896
.L11707:
.L12007:
	nop
.L11712:
	jmp	.L11888
.L12005:
	nop
.L11702:
	cmp	DWORD PTR 1772[rsp], 15
	je	.L12009
	nop
.L11713:
	cmp	DWORD PTR 1772[rsp], 20
	jne	.L12010
	jmp	.L11714
.L12009:
	nop
.L11714:
	mov	QWORD PTR 840[rsp], 0
	mov	QWORD PTR 832[rsp], 0
	mov	QWORD PTR 824[rsp], 0
	lea	rax, 240[rsp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	QWORD PTR 32[rax], 0
	mov	QWORD PTR 40[rax], 0
	mov	QWORD PTR 48[rax], 0
	mov	QWORD PTR 56[rax], 0
	mov	QWORD PTR 64[rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1368
	mov	BYTE PTR [rax], 1
	lea	rax, G_DARKMODESUPPORTED$[rip]
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L12011
	lea	rax, G_DARKMODEENABLED$[rip]
	movzx	eax, BYTE PTR [rax]
	test	al, al
	setne	al
	mov	BYTE PTR 1822[rsp], al
	jmp	.L11718
.L12011:
	nop
.L11717:
	mov	BYTE PTR 1822[rsp], 0
.L11718:
	cmp	BYTE PTR 1822[rsp], 0
	je	.L12012
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 536
	movzx	eax, BYTE PTR [rax]
	test	al, al
	jne	.L12013
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 48
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L11727
.L11722:
.L12013:
	nop
.L11723:
	jmp	.L11727
.L12012:
	nop
.L11720:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 536
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L12014
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 48
	mov	rax, QWORD PTR [rax]
	mov	edx, 0
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L11727
.L11724:
.L11726:
.L12014:
	nop
.L11727:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR 1040[rsp], rax
	lea	rdx, 240[rsp]
	mov	rax, QWORD PTR 1040[rsp]
	mov	rcx, rax
	call	BeginPaint
	mov	QWORD PTR 1032[rsp], rax
	mov	rax, QWORD PTR 1032[rsp]
	mov	QWORD PTR 840[rsp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2136
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L12015
	mov	rax, QWORD PTR 840[rsp]
	mov	rcx, rax
	call	CreateCompatibleDC
	mov	QWORD PTR 1024[rsp], rax
	mov	rax, QWORD PTR 1024[rsp]
	mov	QWORD PTR 832[rsp], rax
	lea	rax, 240[rsp]
	add	rax, 24
	mov	ecx, DWORD PTR [rax]
	lea	rax, 240[rsp]
	add	rax, 20
	mov	edx, DWORD PTR [rax]
	mov	rax, QWORD PTR 840[rsp]
	mov	r8d, ecx
	mov	rcx, rax
	call	CreateCompatibleBitmap
	mov	QWORD PTR 1016[rsp], rax
	mov	rax, QWORD PTR 1016[rsp]
	mov	QWORD PTR 824[rsp], rax
	mov	rdx, QWORD PTR 824[rsp]
	mov	rax, QWORD PTR 832[rsp]
	mov	rcx, rax
	call	SelectObject
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR 1008[rsp], rax
	mov	rax, QWORD PTR 832[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR 832[rsp]
	mov	rdx, rax
	mov	rax, QWORD PTR 1008[rsp]
	mov	r9, rcx
	mov	r8, rdx
	mov	edx, 20
	mov	rcx, rax
	call	SendMessageW
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1144
	mov	rdx, QWORD PTR [rax]
	lea	rax, 240[rsp]
	add	rax, 12
	mov	rcx, QWORD PTR 832[rsp]
	mov	r8, rdx
	mov	rdx, rax
	call	FillRect
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 1376[rax]
	mov	rax, QWORD PTR 832[rsp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 3048
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L12016
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 3048
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1208
	mov	r9, rdx
	pxor	xmm2, xmm2
	pxor	xmm1, xmm1
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING6CANVAS4DRAWEddPv
	jmp	.L11731
.L12016:
	nop
.L11731:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2256
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L12017
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2256[rax]
	mov	QWORD PTR 1000[rsp], rax
	mov	rax, QWORD PTR 1000[rsp]
	lea	r8, .LC86[rip]
	mov	edx, 1144
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR 992[rsp], rax
	cmp	QWORD PTR 992[rsp], 0
	je	.L12018
	jmp	[QWORD PTR 992[rsp]]
.L12018:
	nop
.L11735:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 1208[rax]
	mov	rax, QWORD PTR 1000[rsp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L11733
.L12017:
	nop
.L11733:
	mov	rcx, QWORD PTR 832[rsp]
	lea	rax, 240[rsp]
	add	rax, 24
	mov	edx, DWORD PTR [rax]
	lea	rax, 240[rsp]
	add	rax, 20
	mov	r8d, DWORD PTR [rax]
	mov	rax, QWORD PTR 840[rsp]
	mov	DWORD PTR 64[rsp], 13369376
	mov	DWORD PTR 56[rsp], 0
	mov	DWORD PTR 48[rsp], 0
	mov	QWORD PTR 40[rsp], rcx
	mov	DWORD PTR 32[rsp], edx
	mov	r9d, r8d
	mov	r8d, 0
	mov	edx, 0
	mov	rcx, rax
	call	BitBlt
	mov	rax, QWORD PTR 824[rsp]
	mov	rcx, rax
	call	DeleteObject
	mov	rax, QWORD PTR 832[rsp]
	mov	rcx, rax
	call	DeleteDC
	jmp	.L11742
.L12015:
	nop
.L11729:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1144
	mov	rdx, QWORD PTR [rax]
	lea	rax, 240[rsp]
	add	rax, 12
	mov	rcx, QWORD PTR 840[rsp]
	mov	r8, rdx
	mov	rdx, rax
	call	FillRect
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 1376[rax]
	mov	rax, QWORD PTR 840[rsp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 3048
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L12019
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 3048
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1208
	mov	r9, rdx
	pxor	xmm2, xmm2
	pxor	xmm1, xmm1
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING6CANVAS4DRAWEddPv
	jmp	.L11738
.L12019:
	nop
.L11738:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2256
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L12020
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2256[rax]
	mov	QWORD PTR 984[rsp], rax
	mov	rax, QWORD PTR 984[rsp]
	lea	r8, .LC86[rip]
	mov	edx, 1152
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR 976[rsp], rax
	cmp	QWORD PTR 976[rsp], 0
	je	.L12021
	jmp	[QWORD PTR 976[rsp]]
.L12021:
	nop
.L11741:
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 1208[rax]
	mov	rax, QWORD PTR 984[rsp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L11742
.L11736:
.L12020:
	nop
.L11742:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR 968[rsp], rax
	lea	rdx, 240[rsp]
	mov	rax, QWORD PTR 968[rsp]
	mov	rcx, rax
	call	EndPaint
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1368
	mov	BYTE PTR [rax], 0
	jmp	.L11896
.L12010:
	nop
.L11715:
	cmp	DWORD PTR 1772[rsp], 5
	jne	.L12022
	nop
.L11743:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	IsIconic
	mov	DWORD PTR 1508[rsp], eax
	cmp	DWORD PTR 1508[rsp], -1
	je	.L12023
	mov	QWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8, -1
	mov	rdx, -1
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12REQUESTALIGNEu7INTEGERS3_bPS2_
	jmp	.L11747
.L11746:
.L12023:
	nop
.L11747:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2376
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L12024
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HEIGHT__get__Ev
	mov	QWORD PTR 1496[rsp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12WIDTH__get__Ev
	mov	QWORD PTR 1488[rsp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2376[rax]
	mov	QWORD PTR 1480[rsp], rax
	mov	rax, QWORD PTR 1480[rsp]
	lea	r8, .LC86[rip]
	mov	edx, 1164
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR 1472[rsp], rax
	cmp	QWORD PTR 1472[rsp], 0
	je	.L12025
	jmp	[QWORD PTR 1472[rsp]]
.L12025:
	nop
.L11751:
	mov	rdx, QWORD PTR 1496[rsp]
	mov	rax, QWORD PTR 1488[rsp]
	mov	r9, QWORD PTR 1480[rsp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	r9
	jmp	.L11888
.L12024:
	nop
.L11749:
	jmp	.L11888
.L12022:
	nop
.L11744:
	cmp	DWORD PTR 1772[rsp], 16
	jne	.L12026
	nop
.L11752:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 3544
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L12027
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 3544[rax]
	mov	QWORD PTR 1464[rsp], rax
	mov	rax, QWORD PTR 1464[rsp]
	lea	r8, .LC86[rip]
	mov	edx, 1176
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR 1456[rsp], rax
	cmp	QWORD PTR 1456[rsp], 0
	je	.L12028
	jmp	[QWORD PTR 1456[rsp]]
.L12028:
	nop
.L11757:
	lea	rax, 928[rsp]
	mov	r8, QWORD PTR 1464[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	r8
	jmp	.L11758
.L11755:
.L12027:
	nop
.L11758:
	mov	rax, QWORD PTR 928[rsp]
	test	rax, rax
	jne	.L12029
	nop
.L11759:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], -1
	jmp	.L11770
.L12029:
	nop
.L11760:
	mov	rax, QWORD PTR 928[rsp]
	cmp	rax, 1
	jne	.L12030
	nop
.L11762:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM15MAINFORM__get__Ev
	mov	BYTE PTR 1455[rsp], al
	cmp	BYTE PTR 1455[rsp], 0
	je	.L12031
	mov	ecx, 0
	call	fb_End
	jmp	.L11766
.L11765:
.L12031:
	nop
.L11766:
	jmp	.L11770
.L12030:
	nop
.L11763:
	mov	rax, QWORD PTR 928[rsp]
	cmp	rax, 2
	jne	.L12032
	nop
.L11767:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR 1440[rsp], rax
	mov	rax, QWORD PTR 1440[rsp]
	mov	edx, 6
	mov	rcx, rax
	call	ShowWindow
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], -1
	jmp	.L11770
.L12032:
	nop
.L11768:
	mov	rax, QWORD PTR 928[rsp]
	cmp	rax, 3
	jne	.L12033
	nop
.L11769:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR 1432[rsp], rax
	mov	rax, QWORD PTR 1432[rsp]
	mov	edx, 0
	mov	rcx, rax
	call	ShowWindow
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], -1
	jmp	.L11888
.L11761:
.L12033:
	nop
.L11770:
	jmp	.L11888
.L12026:
	nop
.L11753:
	cmp	DWORD PTR 1772[rsp], 273
	jne	.L12034
	nop
.L11771:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM12GETMENUITEMSEv
	mov	QWORD PTR 816[rsp], 0
	mov	QWORD PTR 1808[rsp], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2440
	mov	rax, QWORD PTR [rax]
	sub	rax, 1
	mov	QWORD PTR 1424[rsp], rax
	jmp	.L11773
.L12039:
	nop
.L11774:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2448[rax]
	mov	QWORD PTR 1416[rsp], rax
	mov	rax, QWORD PTR 1416[rsp]
	lea	r8, .LC86[rip]
	mov	edx, 1202
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR 1408[rsp], rax
	cmp	QWORD PTR 1408[rsp], 0
	je	.L12035
	jmp	[QWORD PTR 1408[rsp]]
.L12035:
	nop
.L11776:
	mov	rax, QWORD PTR 1808[rsp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR 1416[rsp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR 816[rsp], rax
	mov	rax, QWORD PTR 816[rsp]
	mov	QWORD PTR 1400[rsp], rax
	mov	rax, QWORD PTR 1400[rsp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM14COMMAND__get__Ev
	mov	QWORD PTR 1392[rsp], rax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 48
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR 1392[rsp], rax
	jne	.L12036
	mov	rax, QWORD PTR 1400[rsp]
	add	rax, 624
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L12037
	mov	rax, QWORD PTR 1400[rsp]
	mov	rax, QWORD PTR 624[rax]
	mov	QWORD PTR 1384[rsp], rax
	mov	rax, QWORD PTR 1384[rsp]
	lea	r8, .LC86[rip]
	mov	edx, 1205
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR 1376[rsp], rax
	cmp	QWORD PTR 1376[rsp], 0
	je	.L12038
	jmp	[QWORD PTR 1376[rsp]]
.L12038:
	nop
.L11782:
	mov	rax, QWORD PTR 816[rsp]
	mov	rdx, QWORD PTR 1384[rsp]
	mov	rcx, rax
	call	rdx
	jmp	.L11780
.L12037:
	nop
.L11780:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], -2
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 16
	mov	DWORD PTR [rax], 0
	jmp	.L11783
.L11778:
.L11784:
.L12036:
	nop
.L11785:
	add	QWORD PTR 1808[rsp], 1
.L11773:
	mov	rax, QWORD PTR 1808[rsp]
	cmp	rax, QWORD PTR 1424[rsp]
	jle	.L12039
	nop
.L11783:
	mov	BYTE PTR ISMENUITEM$1.21587[rip], 0
	jmp	.L11888
.L12034:
	nop
.L11772:
	cmp	DWORD PTR 1772[rsp], 287
	jne	.L12040
	nop
.L11786:
	mov	BYTE PTR ISMENUITEM$1.21587[rip], 1
	jmp	.L11888
.L12040:
	nop
.L11787:
	cmp	DWORD PTR 1772[rsp], 278
	jne	.L12041
	nop
.L11788:
	jmp	.L11888
.L12041:
	nop
.L11789:
	cmp	DWORD PTR 1772[rsp], 279
	jne	.L12042
	nop
.L11790:
	jmp	.L11888
.L12042:
	nop
.L11791:
	cmp	DWORD PTR 1772[rsp], 546
	jne	.L12043
	nop
.L11792:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 32
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	cmp	rdx, rax
	jne	.L12044
	lea	rax, PAPP$[rip]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 16[rbp]
	mov	rcx, rax
	call	_ZN2MY11APPLICATION21ACTIVEMDICHILD__set__EPNS_3SYS5FORMS7CONTROLE
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 3520
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L12045
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 3520[rax]
	mov	QWORD PTR 1368[rsp], rax
	mov	rax, QWORD PTR 1368[rsp]
	lea	r8, .LC86[rip]
	mov	edx, 1222
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR 1360[rsp], rax
	cmp	QWORD PTR 1360[rsp], 0
	je	.L12046
	jmp	[QWORD PTR 1360[rsp]]
.L12046:
	nop
.L11798:
	mov	rax, QWORD PTR 1368[rsp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L11800
.L11795:
.L11799:
.L12044:
	nop
	jmp	.L11800
.L12045:
	nop
.L11800:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	cmp	rdx, rax
	jne	.L12047
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 3552
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L12048
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 3552[rax]
	mov	QWORD PTR 1352[rsp], rax
	mov	rax, QWORD PTR 1352[rsp]
	lea	r8, .LC86[rip]
	mov	edx, 1225
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR 1344[rsp], rax
	cmp	QWORD PTR 1344[rsp], 0
	je	.L12049
	jmp	[QWORD PTR 1344[rsp]]
.L12049:
	nop
.L11805:
	mov	rax, QWORD PTR 1352[rsp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L11888
.L11802:
.L11806:
.L12047:
	nop
	jmp	.L11888
.L12048:
	nop
.L11807:
	jmp	.L11888
.L12043:
	nop
.L11793:
	cmp	DWORD PTR 1772[rsp], 6
	jne	.L12050
	nop
.L11808:
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 48[rax]
	mov	QWORD PTR 1336[rsp], rax
	cmp	QWORD PTR 1336[rsp], 1
	je	.L12051
	nop
.L11810:
	cmp	QWORD PTR 1336[rsp], 2
	jne	.L12052
	jmp	.L11811
.L12051:
	nop
.L11811:
	lea	rax, PAPP$[rip]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 16[rbp]
	mov	rcx, rax
	call	_ZN2MY11APPLICATION17ACTIVEFORM__set__EPNS_3SYS5FORMS7CONTROLE
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 3520
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L12053
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 3520[rax]
	mov	QWORD PTR 1312[rsp], rax
	mov	rax, QWORD PTR 1312[rsp]
	lea	r8, .LC86[rip]
	mov	edx, 1231
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR 1304[rsp], rax
	cmp	QWORD PTR 1304[rsp], 0
	je	.L12054
	jmp	[QWORD PTR 1304[rsp]]
.L12054:
	nop
.L11816:
	mov	rax, QWORD PTR 1312[rsp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L11823
.L12053:
	nop
.L11814:
	jmp	.L11823
.L12052:
	nop
.L11812:
	cmp	QWORD PTR 1336[rsp], 0
	jne	.L12055
	nop
.L11818:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 3552
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L12056
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 3552[rax]
	mov	QWORD PTR 1328[rsp], rax
	mov	rax, QWORD PTR 1328[rsp]
	lea	r8, .LC86[rip]
	mov	edx, 1233
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR 1320[rsp], rax
	cmp	QWORD PTR 1320[rsp], 0
	je	.L12057
	jmp	[QWORD PTR 1320[rsp]]
.L12057:
	nop
.L11821:
	mov	rax, QWORD PTR 1328[rsp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L11888
.L11817:
.L11822:
.L12055:
	nop
	jmp	.L11888
.L12056:
	nop
.L11823:
	jmp	.L11888
.L12050:
	nop
.L11809:
	cmp	DWORD PTR 1772[rsp], 28
	jne	.L12058
	nop
.L11824:
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 24[rax]
	mov	QWORD PTR 1296[rsp], rax
	cmp	QWORD PTR 1296[rsp], 1
	jne	.L12059
	nop
.L11826:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 3528
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L12060
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 3528[rax]
	mov	QWORD PTR 1288[rsp], rax
	mov	rax, QWORD PTR 1288[rsp]
	lea	r8, .LC86[rip]
	mov	edx, 1238
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR 1280[rsp], rax
	cmp	QWORD PTR 1280[rsp], 0
	je	.L12061
	jmp	[QWORD PTR 1280[rsp]]
.L12061:
	nop
.L11831:
	mov	rax, QWORD PTR 1288[rsp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L11838
.L12060:
	nop
.L11829:
	jmp	.L11838
.L12059:
	nop
.L11827:
	cmp	QWORD PTR 1296[rsp], 0
	jne	.L12062
	nop
.L11833:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 3560
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L12063
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 3560[rax]
	mov	QWORD PTR 1272[rsp], rax
	mov	rax, QWORD PTR 1272[rsp]
	lea	r8, .LC86[rip]
	mov	edx, 1240
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR 1264[rsp], rax
	cmp	QWORD PTR 1264[rsp], 0
	je	.L12064
	jmp	[QWORD PTR 1264[rsp]]
.L12064:
	nop
.L11836:
	mov	rax, QWORD PTR 1272[rsp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L11888
.L11832:
.L11837:
.L12062:
	nop
	jmp	.L11888
.L12063:
	nop
.L11838:
	jmp	.L11888
.L12058:
	nop
.L11825:
	cmp	DWORD PTR 1772[rsp], 2
	jne	.L12065
	nop
.L11839:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L12066
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DestroyAcceleratorTable
	jmp	.L11888
.L12066:
	nop
.L11842:
	jmp	.L11888
.L12065:
	nop
.L11840:
	cmp	DWORD PTR 1772[rsp], 43
	jne	.L12067
	nop
.L11843:
	mov	QWORD PTR 808[rsp], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 32[rax]
	mov	QWORD PTR 808[rsp], rax
	mov	rax, QWORD PTR 808[rsp]
	mov	QWORD PTR 1256[rsp], rax
	mov	rax, QWORD PTR 1256[rsp]
	lea	r8, .LC86[rip]
	mov	edx, 1247
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR 1248[rsp], rax
	cmp	QWORD PTR 1248[rsp], 0
	je	.L12068
	jmp	[QWORD PTR 1248[rsp]]
.L12068:
	nop
.L11846:
	mov	rax, QWORD PTR 1256[rsp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR 1244[rsp], eax
	cmp	DWORD PTR 1244[rsp], 1
	nop
.L11847:
.L11848:
.L11849:
	jmp	.L11888
.L12067:
	nop
.L11844:
	cmp	DWORD PTR 1772[rsp], 40010
	jne	.L12069
	nop
.L11850:
	lea	rax, 800[rsp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 792[rsp], 0
	mov	QWORD PTR 784[rsp], 0
	mov	QWORD PTR 776[rsp], 0
	mov	QWORD PTR 768[rsp], 0
	mov	QWORD PTR 760[rsp], 0
	mov	QWORD PTR 752[rsp], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 32[rax]
	mov	QWORD PTR 752[rsp], rax
	mov	rax, QWORD PTR 752[rsp]
	mov	QWORD PTR 1232[rsp], rax
	mov	rax, QWORD PTR 1232[rsp]
	lea	r8, .LC86[rip]
	mov	edx, 1260
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR 1224[rsp], rax
	cmp	QWORD PTR 1224[rsp], 0
	je	.L12070
	jmp	[QWORD PTR 1224[rsp]]
.L12070:
	nop
.L11852:
	mov	rax, QWORD PTR 1232[rsp]
	add	rax, 4
	mov	eax, DWORD PTR [rax]
	cmp	eax, 1
	jne	.L12071
	mov	rax, QWORD PTR 752[rsp]
	mov	QWORD PTR 1216[rsp], rax
	mov	rax, QWORD PTR 1216[rsp]
	lea	r8, .LC86[rip]
	mov	edx, 1261
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR 1208[rsp], rax
	cmp	QWORD PTR 1208[rsp], 0
	je	.L12072
	jmp	[QWORD PTR 1208[rsp]]
.L12072:
	nop
.L11856:
	mov	rax, QWORD PTR 1216[rsp]
	mov	rax, QWORD PTR 16[rax]
	mov	QWORD PTR 792[rsp], rax
	mov	rax, QWORD PTR 792[rsp]
	mov	edx, -21
	mov	rcx, rax
	call	GetWindowLongPtrW
	mov	QWORD PTR 1200[rsp], rax
	mov	rax, QWORD PTR 1200[rsp]
	mov	QWORD PTR 784[rsp], rax
	mov	rax, QWORD PTR 784[rsp]
	test	rax, rax
	je	.L12073
	mov	rax, QWORD PTR 784[rsp]
	mov	QWORD PTR 1192[rsp], rax
	mov	rax, QWORD PTR 1192[rsp]
	lea	r8, .LC86[rip]
	mov	edx, 1264
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR 1184[rsp], rax
	cmp	QWORD PTR 1184[rsp], 0
	je	.L12074
	jmp	[QWORD PTR 1184[rsp]]
.L12074:
	nop
.L11860:
	mov	rax, QWORD PTR 1192[rsp]
	add	rax, 2048
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L12075
	mov	rax, QWORD PTR 784[rsp]
	mov	QWORD PTR 1176[rsp], rax
	mov	rax, QWORD PTR 1176[rsp]
	lea	r8, .LC86[rip]
	mov	edx, 1265
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR 1168[rsp], rax
	cmp	QWORD PTR 1168[rsp], 0
	je	.L12076
	jmp	[QWORD PTR 1168[rsp]]
.L12076:
	nop
.L11864:
	mov	rax, QWORD PTR 1176[rsp]
	mov	rax, QWORD PTR 2048[rax]
	mov	QWORD PTR 776[rsp], rax
	jmp	.L11871
.L12075:
	nop
.L11862:
	mov	rax, QWORD PTR 784[rsp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL13PARENT__get__Ev
	mov	QWORD PTR 1160[rsp], rax
	cmp	QWORD PTR 1160[rsp], 0
	je	.L12077
	mov	rax, QWORD PTR 784[rsp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL13PARENT__get__Ev
	mov	QWORD PTR 1152[rsp], rax
	mov	rax, QWORD PTR 1152[rsp]
	mov	QWORD PTR 784[rsp], rax
	mov	rax, QWORD PTR 784[rsp]
	mov	QWORD PTR 1144[rsp], rax
	mov	rax, QWORD PTR 1144[rsp]
	lea	r8, .LC86[rip]
	mov	edx, 1269
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR 1136[rsp], rax
	cmp	QWORD PTR 1136[rsp], 0
	je	.L12078
	jmp	[QWORD PTR 1136[rsp]]
.L12078:
	nop
.L11868:
	mov	rax, QWORD PTR 1144[rsp]
	mov	rax, QWORD PTR 2048[rax]
	mov	QWORD PTR 776[rsp], rax
	jmp	.L11871
.L11866:
.L11858:
.L11869:
.L11870:
.L12073:
	nop
.L11871:
	mov	rax, QWORD PTR 784[rsp]
	lea	rdx, 800[rsp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL14CLIENTTOSCREENER8tagPOINT
	jmp	.L11872
.L12071:
	nop
.L11854:
	mov	QWORD PTR 768[rsp], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM11MENU__get__Ev
	mov	QWORD PTR 1128[rsp], rax
	cmp	QWORD PTR 1128[rsp], 0
	je	.L12079
	mov	QWORD PTR 760[rsp], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM11MENU__get__Ev
	mov	QWORD PTR 1120[rsp], rax
	mov	rax, QWORD PTR 1120[rsp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU12COUNT__get__Ev
	mov	QWORD PTR 1112[rsp], rax
	mov	rax, QWORD PTR 1112[rsp]
	sub	rax, 1
	mov	QWORD PTR 1104[rsp], rax
	jmp	.L11875
.L12082:
	nop
.L11876:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM11MENU__get__Ev
	mov	QWORD PTR 1096[rsp], rax
	mov	rdx, QWORD PTR 760[rsp]
	mov	rax, QWORD PTR 1096[rsp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU11ITEM__get__Eu7INTEGER
	mov	QWORD PTR 1088[rsp], rax
	mov	rax, QWORD PTR 1088[rsp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM14COMMAND__get__Ev
	mov	QWORD PTR 1080[rsp], rax
	mov	rax, QWORD PTR 752[rsp]
	mov	QWORD PTR 1072[rsp], rax
	mov	rax, QWORD PTR 1072[rsp]
	lea	r8, .LC86[rip]
	mov	edx, 1280
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR 1064[rsp], rax
	cmp	QWORD PTR 1064[rsp], 0
	je	.L12080
	jmp	[QWORD PTR 1064[rsp]]
.L12080:
	nop
.L11878:
	mov	rax, QWORD PTR 1072[rsp]
	add	rax, 8
	mov	eax, DWORD PTR [rax]
	cdqe
	cmp	QWORD PTR 1080[rsp], rax
	jne	.L12081
	mov	rax, QWORD PTR 760[rsp]
	mov	QWORD PTR 768[rsp], rax
	jmp	.L11884
.L11880:
.L11881:
.L12081:
	nop
.L11882:
	mov	rax, QWORD PTR 760[rsp]
	add	rax, 1
	mov	QWORD PTR 760[rsp], rax
.L11875:
	mov	rax, QWORD PTR 760[rsp]
	cmp	QWORD PTR 1104[rsp], rax
	jge	.L12082
	jmp	.L11884
.L11874:
.L11883:
.L12079:
	nop
.L11884:
	lea	rax, 800[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL14CLIENTTOSCREENER8tagPOINT
.L11872:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR 1056[rsp], rax
	mov	rax, QWORD PTR 1056[rsp]
	mov	edx, -20
	mov	rcx, rax
	call	GetWindowLongW
	mov	DWORD PTR 1052[rsp], eax
	mov	eax, DWORD PTR 1052[rsp]
	cdqe
	and	eax, 1024
	test	rax, rax
	je	.L12083
	lea	rax, 800[rsp]
	mov	edx, eax
	lea	rax, PAPP$[rip]
	mov	rax, QWORD PTR [rax]
	mov	r8d, edx
	mov	edx, 13
	mov	rcx, rax
	call	_ZN2MY11APPLICATION11HELPCOMMANDEu7INTEGERi
	mov	rax, QWORD PTR 776[rsp]
	mov	edx, eax
	lea	rax, PAPP$[rip]
	mov	rax, QWORD PTR [rax]
	mov	r8d, edx
	mov	edx, 8
	mov	rcx, rax
	call	_ZN2MY11APPLICATION11HELPCOMMANDEu7INTEGERi
	jmp	.L11888
.L12083:
	nop
.L11886:
	mov	rax, QWORD PTR 776[rsp]
	mov	edx, eax
	lea	rax, PAPP$[rip]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY11APPLICATION11HELPCONTEXTEi
	jmp	.L11888
.L11887:
.L11621:
.L12069:
	nop
	jmp	.L11888
.L12077:
	nop
.L11888:
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS16CONTAINERCONTROL14PROCESSMESSAGEER7MESSAGE
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 40
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	jne	.L12084
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2464[rax]
	mov	QWORD PTR 936[rsp], rax
	cmp	QWORD PTR 936[rsp], 2
	jne	.L12085
	nop
.L11890:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], -3
	jmp	.L11896
.L12085:
	nop
.L11891:
	cmp	QWORD PTR 936[rsp], 1
	jne	.L12086
	nop
.L11892:
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 8[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 424[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], -4
	jmp	.L11896
.L11636:
.L11893:
.L11894:
.L11895:
.L12084:
	nop
	jmp	.L11896
.L12086:
	nop
.L11896:
	mov	rax, QWORD PTR 1776[rsp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR 1792[rsp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	lea	rsp, -16[rbp]
	pop	rbx
	pop	rdi
	pop	rbp
	ret
	.def	_ZN2MY3SYS5FORMS4FORM14VISIBLE__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM14VISIBLE__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	BYTE PTR -37[rbp], 0
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC84[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L12088:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L12094
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	IsWindowVisible
	mov	DWORD PTR -36[rbp], eax
	cmp	DWORD PTR -36[rbp], 0
	setne	dl
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 970
	mov	BYTE PTR [rax], dl
	jmp	.L12091
.L12090:
.L12094:
	nop
.L12091:
	mov	rax, QWORD PTR 16[rbp]
	movzx	eax, BYTE PTR 970[rax]
	mov	BYTE PTR -37[rbp], al
	nop
.L12092:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -37[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4FORM14VISIBLE__set__Eb;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM14VISIBLE__set__Eb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	BYTE PTR 24[rbp], al
.L12096:
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC84[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 970[rax]
	movzx	eax, BYTE PTR 24[rbp]
	mov	BYTE PTR [rdx], al
	cmp	BYTE PTR 24[rbp], 0
	je	.L12102
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM4SHOWEv
	jmp	.L12100
.L12102:
	nop
.L12098:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM4HIDEEv
.L12099:
.L12100:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4FORM4SHOWEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM4SHOWEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 160
	mov	QWORD PTR 16[rbp], rcx
.L12104:
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC524[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	IsIconic
	mov	DWORD PTR -44[rbp], eax
	cmp	DWORD PTR -44[rbp], 0
	je	.L12125
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	edx, 1
	mov	rcx, rax
	call	ShowWindow
	jmp	.L12115
.L12125:
	nop
.L12106:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -64[rbp], rax
	cmp	QWORD PTR -64[rbp], 0
	je	.L12126
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2712[rax]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	lea	r9, .LC86[rip]
	mov	r8d, 1523
	mov	edx, 4
	mov	rcx, rax
	call	fb_ArraySngBoundChk
	mov	QWORD PTR -80[rbp], rax
	cmp	QWORD PTR -80[rbp], 0
	je	.L12127
	jmp	[QWORD PTR -80[rbp]]
.L12127:
	nop
.L12111:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	sal	rax, 3
	lea	rdx, 2536[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	edx, eax
	mov	rax, QWORD PTR -88[rbp]
	mov	rcx, rax
	call	ShowWindow
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L12128
	mov	rax, QWORD PTR 16[rbp]
	sub	rax, -128
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR 32[rsp], 0
	mov	r9d, 0
	mov	r8, -1
	mov	rdx, -1
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL12REQUESTALIGNEu7INTEGERS3_bPS2_
	jmp	.L12115
.L12128:
	nop
.L12113:
	jmp	.L12115
.L12126:
	nop
.L12109:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 104
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L12119
.L12107:
.L12115:
	mov	edx, 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL17SELECTNEXTCONTROLEb
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 3576
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L12129
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 3576[rax]
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	lea	r8, .LC86[rip]
	mov	edx, 1532
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -104[rbp], rax
	cmp	QWORD PTR -104[rbp], 0
	je	.L12130
	jmp	[QWORD PTR -104[rbp]]
.L12130:
	nop
.L12118:
	mov	rax, QWORD PTR -96[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L12119
.L12114:
.L12129:
	nop
.L12119:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC611:
	.ascii "SHOWMODAL\0"
	.text
	.def	_ZN2MY3SYS5FORMS4FORM9SHOWMODALEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM9SHOWMODALEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 336
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -216[rbp], 0
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC611[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L12132:
	mov	QWORD PTR -224[rbp], 0
	mov	QWORD PTR -232[rbp], 0
	call	GetFocus
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 416[rax]
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	IsWindowVisible
	mov	DWORD PTR -44[rbp], eax
	cmp	DWORD PTR -44[rbp], 0
	je	.L12182
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL8SETFOCUSEv
	jmp	.L12135
.L12134:
.L12182:
	nop
.L12136:
	call	GetCapture
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L12183
	call	GetCapture
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	r9d, 0
	mov	r8d, 0
	mov	edx, 31
	mov	rcx, rax
	call	SendMessageW
	jmp	.L12138
.L12183:
	nop
.L12138:
	mov	QWORD PTR -224[rbp], 0
	lea	rax, PAPP$[rip]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY11APPLICATION9FORMCOUNTEv
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	sub	rax, 1
	mov	QWORD PTR -80[rbp], rax
	jmp	.L12139
.L12185:
	nop
.L12140:
	lea	rax, PAPP$[rip]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY11APPLICATION12FORMS__get__Ev
	mov	QWORD PTR -192[rbp], rax
	mov	rax, QWORD PTR -192[rbp]
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	lea	r8, .LC86[rip]
	mov	edx, 1570
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -208[rbp], rax
	cmp	QWORD PTR -208[rbp], 0
	je	.L12184
	jmp	[QWORD PTR -208[rbp]]
.L12184:
	nop
.L12142:
	mov	rax, QWORD PTR -224[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -200[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	edx, 0
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL14ENABLED__set__Eb
.L12143:
	mov	rax, QWORD PTR -224[rbp]
	add	rax, 1
	mov	QWORD PTR -224[rbp], rax
.L12139:
	mov	rax, QWORD PTR -224[rbp]
	cmp	QWORD PTR -80[rbp], rax
	jge	.L12185
	nop
.L12144:
	mov	edx, 1
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM14ENABLED__set__Eb
	mov	edx, 1
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM14VISIBLE__set__Eb
	lea	rax, -288[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	QWORD PTR 32[rax], 0
	mov	QWORD PTR 40[rax], 0
	mov	BYTE PTR -289[rbp], 0
.L12145:
	lea	rax, -288[rbp]
	mov	r9d, 0
	mov	r8d, 0
	mov	edx, 0
	mov	rcx, rax
	call	GetMessageW
	mov	DWORD PTR -84[rbp], eax
	cmp	DWORD PTR -84[rbp], 0
	je	.L12186
	mov	BYTE PTR -289[rbp], 1
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L12187
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	lea	rcx, -288[rbp]
	mov	r8, rcx
	mov	rcx, rax
	call	TranslateAcceleratorW
	mov	DWORD PTR -88[rbp], eax
	cmp	DWORD PTR -88[rbp], 0
	sete	al
	mov	BYTE PTR -289[rbp], al
	jmp	.L12149
.L12187:
	nop
.L12149:
	movzx	eax, BYTE PTR -289[rbp]
	test	al, al
	je	.L12188
	mov	eax, DWORD PTR -280[rbp]
	mov	DWORD PTR -92[rbp], eax
	cmp	DWORD PTR -92[rbp], 256
	jne	.L12189
	nop
.L12152:
	mov	rax, QWORD PTR -272[rbp]
	mov	QWORD PTR -104[rbp], rax
	cmp	QWORD PTR -104[rbp], 9
	jne	.L12190
	nop
.L12153:
	call	GetFocus
	mov	QWORD PTR -112[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	cmp	rax, QWORD PTR -120[rbp]
	je	.L12191
	mov	ecx, 16
	call	GetKeyState
	mov	WORD PTR -122[rbp], ax
	movsx	rax, WORD PTR -122[rbp]
	and	eax, 8000
	test	rax, rax
	setne	al
	movzx	eax, al
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL17SELECTNEXTCONTROLEb
	mov	BYTE PTR -289[rbp], 0
	jmp	.L12163
.L12191:
	nop
.L12155:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -136[rbp], rax
	lea	rdx, -288[rbp]
	mov	rax, QWORD PTR -136[rbp]
	mov	rcx, rax
	call	IsDialogMessageW
	mov	DWORD PTR -140[rbp], eax
	cmp	DWORD PTR -140[rbp], 0
	je	.L12192
	mov	BYTE PTR -289[rbp], 0
	jmp	.L12163
.L12151:
.L12157:
.L12158:
.L12159:
.L12160:
.L12161:
.L12162:
.L12188:
	nop
	jmp	.L12163
.L12189:
	nop
	jmp	.L12163
.L12190:
	nop
	jmp	.L12163
.L12192:
	nop
.L12163:
	movzx	eax, BYTE PTR -289[rbp]
	test	al, al
	je	.L12193
	lea	rax, -288[rbp]
	mov	rcx, rax
	call	TranslateMessage
	lea	rax, -288[rbp]
	mov	rcx, rax
	call	DispatchMessageW
	jmp	.L12166
.L12165:
.L12193:
	nop
.L12166:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	IsWindowVisible
	mov	DWORD PTR -144[rbp], eax
	cmp	DWORD PTR -144[rbp], 0
	je	.L12194
	nop
.L12168:
	jmp	.L12145
.L12186:
	nop
	jmp	.L12147
.L12194:
	nop
.L12147:
	mov	edx, 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM14VISIBLE__set__Eb
	mov	QWORD PTR -224[rbp], 0
	lea	rax, PAPP$[rip]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY11APPLICATION9FORMCOUNTEv
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	sub	rax, 1
	mov	QWORD PTR -160[rbp], rax
	jmp	.L12169
.L12196:
	nop
.L12170:
	lea	rax, PAPP$[rip]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY11APPLICATION12FORMS__get__Ev
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	lea	r8, .LC86[rip]
	mov	edx, 1601
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -184[rbp], rax
	cmp	QWORD PTR -184[rbp], 0
	je	.L12195
	jmp	[QWORD PTR -184[rbp]]
.L12195:
	nop
.L12172:
	mov	rax, QWORD PTR -224[rbp]
	sal	rax, 3
	mov	rdx, rax
	mov	rax, QWORD PTR -176[rbp]
	add	rax, rdx
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL14ENABLED__set__Eb
.L12173:
	mov	rax, QWORD PTR -224[rbp]
	add	rax, 1
	mov	QWORD PTR -224[rbp], rax
.L12169:
	mov	rax, QWORD PTR -224[rbp]
	cmp	QWORD PTR -160[rbp], rax
	jge	.L12196
	nop
.L12174:
	call	ReleaseCapture
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 416
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	SetForegroundWindow
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 3512[rax]
	mov	QWORD PTR -216[rbp], rax
.L12135:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -216[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4FORM4HIDEEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM4HIDEEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
.L12198:
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC525[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -40[rbp], rax
	cmp	QWORD PTR -40[rbp], 0
	je	.L12211
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	rcx, rax
	call	IsWindowVisible
	mov	DWORD PTR -52[rbp], eax
	cmp	DWORD PTR -52[rbp], 0
	je	.L12212
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 3568
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L12213
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 3568[rax]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	lea	r8, .LC86[rip]
	mov	edx, 1624
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	je	.L12214
	jmp	[QWORD PTR -72[rbp]]
.L12214:
	nop
.L12205:
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L12203
.L12213:
	nop
.L12203:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	ShowWindow
	jmp	.L12209
.L12200:
.L12206:
.L12207:
.L12208:
.L12211:
	nop
	jmp	.L12209
.L12212:
	nop
.L12209:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4FORM13ENUMMENUITEMSERNS1_8MENUITEME;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM13ENUMMENUITEMSERNS1_8MENUITEME:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	BYTE PTR -73[rbp], 0
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC370[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L12216:
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEMcvPvEv
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 2440[rax]
	mov	rax, QWORD PTR -48[rbp]
	mov	rdx, rax
	call	_ZN4LIST3ADDEPv
	mov	QWORD PTR -8[rbp], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM12COUNT__get__Ev
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	sub	rax, 1
	mov	QWORD PTR -64[rbp], rax
	jmp	.L12217
.L12224:
	nop
.L12218:
	mov	rdx, QWORD PTR -8[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM13ENUMMENUITEMSERNS1_8MENUITEME
.L12219:
	add	QWORD PTR -8[rbp], 1
.L12217:
	mov	rax, QWORD PTR -8[rbp]
	cmp	rax, QWORD PTR -64[rbp]
	jle	.L12224
	nop
.L12220:
	mov	BYTE PTR -73[rbp], 1
	nop
.L12221:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -73[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC612:
	.ascii "GETMENUITEMS\0"
	.text
	.def	_ZN2MY3SYS5FORMS4FORM12GETMENUITEMSEv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM12GETMENUITEMSEv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 144
	mov	QWORD PTR 16[rbp], rcx
.L12226:
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC612[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2440
	mov	rcx, rax
	call	_ZN4LIST5CLEAREv
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM11MENU__get__Ev
	mov	QWORD PTR -48[rbp], rax
	cmp	QWORD PTR -48[rbp], 0
	je	.L12238
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM11MENU__get__Ev
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU13HANDLE__get__Ev
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	IsMenu
	mov	DWORD PTR -68[rbp], eax
	cmp	DWORD PTR -68[rbp], 0
	je	.L12239
	nop
.L12230:
	mov	QWORD PTR -8[rbp], 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM11MENU__get__Ev
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU12COUNT__get__Ev
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	sub	rax, 1
	mov	QWORD PTR -96[rbp], rax
	jmp	.L12231
.L12240:
	nop
.L12232:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM11MENU__get__Ev
	mov	QWORD PTR -104[rbp], rax
	mov	rdx, QWORD PTR -8[rbp]
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4MENU11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM13ENUMMENUITEMSERNS1_8MENUITEME
.L12233:
	add	QWORD PTR -8[rbp], 1
.L12231:
	mov	rax, QWORD PTR -8[rbp]
	cmp	rax, QWORD PTR -96[rbp]
	jle	.L12240
	jmp	.L12236
.L12228:
.L12234:
.L12235:
.L12238:
	nop
	jmp	.L12236
.L12239:
	nop
.L12236:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC613:
	.ascii "GRAPHICCHANGE\0"
	.text
	.def	_ZN2MY3SYS5FORMS4FORM13GRAPHICCHANGEERNS0_7DRAWING11GRAPHICTYPEEPvu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM13GRAPHICCHANGEERNS0_7DRAWING11GRAPHICTYPEEPvu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
.L12242:
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC613[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	rax, QWORD PTR 80[rax]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	r8, .LC86[rip]
	mov	edx, 1739
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L12250
	jmp	[QWORD PTR -56[rbp]]
.L12250:
	nop
.L12244:
	mov	rax, QWORD PTR -48[rbp]
	add	rax, 1056
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L12251
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 80
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL7REPAINTEv
	jmp	.L12248
.L12246:
.L12247:
.L12251:
	nop
.L12248:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4FORM11ICONCHANGEDERNS0_7DRAWING4ICONE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORM11ICONCHANGEDERNS0_7DRAWING4ICONE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
.L12253:
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC575[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 72[rax]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 2832
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -48[rbp]
	mov	r9, rdx
	mov	r8d, 1
	mov	edx, 128
	mov	rcx, rax
	call	SendMessageW
.L12254:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4FORMC1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORMC1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 96
	mov	QWORD PTR 16[rbp], rcx
.L12256:
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS16CONTAINERCONTROLC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2408
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2416
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2440
	mov	rcx, rax
	call	_ZN4LISTC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2456
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2464
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2472
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2480
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	QWORD PTR 32[rax], 0
	mov	QWORD PTR 40[rax], 0
	mov	QWORD PTR 48[rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2536
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	QWORD PTR 32[rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2576
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2600
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	QWORD PTR 32[rax], 0
	mov	QWORD PTR 40[rax], 0
	mov	QWORD PTR 48[rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2656
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	QWORD PTR 32[rax], 0
	mov	QWORD PTR 40[rax], 0
	mov	QWORD PTR 48[rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2712
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2720
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2728
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2736
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2737
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2738
	mov	BYTE PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2744
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2752
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4ICONC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2848
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING11GRAPHICTYPEC1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 3512
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 3520
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 3528
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 3536
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 3544
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 3552
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 3560
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 3568
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 3576
	mov	QWORD PTR [rax], 0
	lea	rdx, _ZTVN2MY3SYS5FORMS4FORME[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2416
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2424
	mov	QWORD PTR [rax], 262144
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2656
	mov	QWORD PTR [rax], 11
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2664
	mov	QWORD PTR [rax], 8
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2672
	mov	QWORD PTR [rax], 10248
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2680
	mov	QWORD PTR [rax], 8
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2688
	mov	QWORD PTR [rax], 8
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2696
	mov	QWORD PTR [rax], 8
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2480
	mov	QWORD PTR [rax], 65536
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2488
	mov	QWORD PTR [rax], 65536
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2496
	mov	QWORD PTR [rax], 65537
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2504
	mov	QWORD PTR [rax], 65536
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2512
	mov	QWORD PTR [rax], 65664
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2520
	mov	QWORD PTR [rax], 65664
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2600
	mov	QWORD PTR [rax], 1024
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2608
	mov	QWORD PTR [rax], 12583936
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2616
	mov	QWORD PTR [rax], 13107200
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2624
	mov	QWORD PTR [rax], 13565952
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2632
	mov	QWORD PTR [rax], 13107200
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2640
	mov	QWORD PTR [rax], 13369344
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2576
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2584
	mov	QWORD PTR [rax], 1073741824
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2536
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2544
	mov	QWORD PTR [rax], 1
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2552
	mov	QWORD PTR [rax], 3
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2560
	mov	QWORD PTR [rax], 2
	mov	r8d, 0
	lea	rdx, .LC77[rip]
	lea	rcx, .LC501[rip]
	call	_ZN2MY3SYS5FORMS7CONTROL13REGISTERCLASSERwS3_Pv
	lea	rdx, .LC501[rip]
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM11TEXT__set__ERw
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2456
	mov	QWORD PTR [rax], 3
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2712
	mov	QWORD PTR [rax], 1
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2736
	mov	BYTE PTR [rax], 1
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2737
	mov	BYTE PTR [rax], 1
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2738
	mov	BYTE PTR [rax], 1
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2744
	mov	QWORD PTR [rax], 255
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1208
	mov	rdx, QWORD PTR 16[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING6CANVAS11CTRL__set__EPNS0_14COMPONENTMODEL9COMPONENTE
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2928[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 3504
	lea	rdx, _ZN2MY3SYS5FORMS4FORM13GRAPHICCHANGEERNS0_7DRAWING11GRAPHICTYPEEPvu7INTEGER[rip]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2824[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2840
	lea	rdx, _ZN2MY3SYS5FORMS4FORM11ICONCHANGEDERNS0_7DRAWING4ICONE[rip]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	lea	rdx, 1056[rax]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 1064
	lea	rdx, _ZN2MY3SYS5FORMS4FORM7WNDPROCER7MESSAGE[rip]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 32
	lea	rdx, .LC501[rip]
	mov	rcx, rax
	call	WLET
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 1176
	lea	rdx, _ZN2MY3SYS5FORMS4FORM20ACTIVECONTROLCHANGEDERNS1_7CONTROLE[rip]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR -40[rbp]
	mov	edx, 65792
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL14EXSTYLE__set__Eu7INTEGER
	mov	rax, QWORD PTR -40[rbp]
	mov	edx, 13565952
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL12STYLE__set__Eu7INTEGER
	mov	ecx, 15
	call	GetSysColor
	mov	DWORD PTR -44[rbp], eax
	mov	edx, DWORD PTR -44[rbp]
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL16BACKCOLOR__set__Eu7INTEGER
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL16BACKCOLOR__get__Ev
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 672[rax]
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 1184
	lea	rdx, _ZN2MY3SYS5FORMS4FORM17HANDLEISALLOCATEDERNS1_7CONTROLE[rip]
	mov	QWORD PTR [rax], rdx
	mov	rax, QWORD PTR -40[rbp]
	mov	edx, 350
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12WIDTH__set__Eu7INTEGER
	mov	rax, QWORD PTR -40[rbp]
	mov	edx, 300
	mov	rcx, rax
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HEIGHT__set__Eu7INTEGER
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 48
	lea	rdx, .LC77[rip]
	mov	rcx, rax
	call	WLET
	mov	rax, QWORD PTR -40[rbp]
	mov	edx, 2
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS4FORM20STARTPOSITION__set__Eu7INTEGER
	lea	rax, PAPP$[rip]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	_ZN2MY11APPLICATION15MAINFORM__get__Ev
	mov	QWORD PTR -64[rbp], rax
	cmp	QWORD PTR -64[rbp], 0
	jne	.L12261
	lea	rax, PAPP$[rip]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR 16[rbp]
	mov	rcx, rax
	call	_ZN2MY11APPLICATION15MAINFORM__set__EPNS_3SYS5FORMS7CONTROLE
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2408
	mov	BYTE PTR [rax], 1
	jmp	.L12260
.L12258:
.L12259:
.L12261:
	nop
.L12260:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS4FORMD1Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS4FORMD1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	lea	rdx, _ZTVN2MY3SYS5FORMS4FORME[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rcx, .LC86[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L12263:
	mov	edx, 0
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORM11MENU__set__EPNS1_8MAINMENUE
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2440
	mov	rcx, rax
	call	_ZN4LIST5CLEAREv
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L12267
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	DestroyAcceleratorTable
	jmp	.L12266
.L12265:
.L12267:
	nop
.L12266:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2848
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING11GRAPHICTYPED1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2752
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING4ICOND1Ev
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2440
	mov	rcx, rax
	call	_ZN4LISTD1Ev
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS16CONTAINERCONTROLD1Ev
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC614:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\GroupBox.bi\0"
	.text
	.def	_ZN2MY3SYS5FORMS8GROUPBOXaSERKS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8GROUPBOXaSERKS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L12269:
	lea	rcx, .LC614[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS16CONTAINERCONTROLaSERKS2_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2408[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2408[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2416[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2416[rax]
	mov	QWORD PTR [rdx], rax
.L12270:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC615:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\GroupBox.bas\0"
	.align 2
.LC616:
	.ascii "t\0a\0b\0i\0n\0d\0e\0x\0\0\0"
	.text
	.def	_ZN2MY3SYS5FORMS8GROUPBOX12READPROPERTYER8FBSTRING;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8GROUPBOX12READPROPERTYER8FBSTRING:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 224
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -144[rbp], 0
	lea	rcx, .LC615[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC152[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L12272:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -176[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -176[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC329[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L12288
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L12275:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 600
	mov	rcx, rax
	call	_ZN7USTRING4VPTREv
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -144[rbp], rax
	lea	rax, -176[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L12283
.L12288:
	nop
.L12274:
	lea	rax, -176[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	rdx, .LC498[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -92[rbp], eax
	cmp	DWORD PTR -92[rbp], 0
	jne	.L12289
	mov	rax, QWORD PTR -88[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L12279:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 600
	mov	rcx, rax
	call	_ZN7USTRING4VPTREv
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	QWORD PTR -144[rbp], rax
	lea	rax, -176[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L12283
.L12289:
	nop
.L12278:
	lea	rax, -176[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	lea	rdx, .LC616[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -124[rbp], eax
	cmp	DWORD PTR -124[rbp], 0
	jne	.L12290
	mov	rax, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L12282:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 928
	mov	QWORD PTR -144[rbp], rax
	lea	rax, -176[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L12283
.L12290:
	nop
.L12281:
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS16CONTAINERCONTROL12READPROPERTYER8FBSTRING
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	mov	QWORD PTR -144[rbp], rax
	lea	rax, -176[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	nop
.L12283:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -144[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8GROUPBOX13WRITEPROPERTYER8FBSTRINGPv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8GROUPBOX13WRITEPROPERTYER8FBSTRINGPv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 208
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	BYTE PTR -130[rbp], 0
	lea	rcx, .LC615[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC154[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L12292:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -160[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -160[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC329[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L12312
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L12295:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8GROUPBOX14CAPTION__set__ERw
	jmp	.L12306
.L12312:
	nop
.L12294:
	lea	rax, -160[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	rdx, .LC498[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -84[rbp], eax
	cmp	DWORD PTR -84[rbp], 0
	jne	.L12313
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L12299:
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8GROUPBOX11TEXT__set__ERw
	jmp	.L12306
.L12313:
	nop
.L12298:
	lea	rax, -160[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	lea	rdx, .LC616[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -108[rbp], eax
	cmp	DWORD PTR -108[rbp], 0
	jne	.L12314
	mov	rax, QWORD PTR -104[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L12302:
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	lea	r8, .LC615[rip]
	mov	edx, 34
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -128[rbp], rax
	cmp	QWORD PTR -128[rbp], 0
	je	.L12315
	jmp	[QWORD PTR -128[rbp]]
.L12315:
	nop
.L12304:
	mov	rax, QWORD PTR -120[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8GROUPBOX15TABINDEX__set__Eu7INTEGER
	jmp	.L12306
.L12314:
	nop
.L12301:
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS16CONTAINERCONTROL13WRITEPROPERTYER8FBSTRINGPv
	mov	BYTE PTR -129[rbp], al
	movzx	eax, BYTE PTR -129[rbp]
	mov	BYTE PTR -130[rbp], al
	lea	rax, -160[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L12305
.L12296:
.L12306:
	lea	rax, -160[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	mov	BYTE PTR -130[rbp], 1
	nop
.L12305:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -130[rbp]
	leave
	ret
	.section .rdata,"dr"
.LC617:
	.ascii "TABINDEX\0"
	.text
	.def	_ZN2MY3SYS5FORMS8GROUPBOX15TABINDEX__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8GROUPBOX15TABINDEX__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L12317:
	lea	rcx, .LC615[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC617[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL14CHANGETABINDEXEu7INTEGER
.L12318:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8GROUPBOX14CAPTION__set__ERw;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8GROUPBOX14CAPTION__set__ERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L12320:
	lea	rcx, .LC615[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC356[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8GROUPBOX11TEXT__set__ERw
.L12321:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8GROUPBOX11TEXT__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8GROUPBOX11TEXT__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -48[rbp], 0
	lea	rcx, .LC615[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC268[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L12323:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11TEXT__get__Ev
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	nop
.L12324:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -48[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8GROUPBOX11TEXT__set__ERw;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8GROUPBOX11TEXT__set__ERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L12327:
	lea	rcx, .LC615[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC268[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11TEXT__set__ERw
.L12328:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8GROUPBOX7WNDPROCER7MESSAGE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8GROUPBOX7WNDPROCER7MESSAGE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L12330:
	lea	rcx, .LC615[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC603[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	nop
.L12331:
.L12332:
.L12333:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8GROUPBOX17HANDLEISALLOCATEDERNS1_7CONTROLE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8GROUPBOX17HANDLEISALLOCATEDERNS1_7CONTROLE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
.L12335:
	lea	rcx, .LC615[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC604[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1056
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L12340
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 1056[rax]
	mov	QWORD PTR -40[rbp], rax
	jmp	.L12339
.L12337:
.L12338:
.L12340:
	nop
.L12339:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS8GROUPBOX14PROCESSMESSAGEER7MESSAGE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS8GROUPBOX14PROCESSMESSAGEER7MESSAGE:
	push	rbp
	mov	rbp, rsp
	push	rbx
	sub	rsp, 440
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L12342:
	lea	rcx, .LC615[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	lea	rcx, .LC369[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	eax, DWORD PTR 16[rax]
	mov	DWORD PTR -76[rbp], eax
	cmp	DWORD PTR -76[rbp], 20
	jne	.L12383
	nop
.L12343:
	jmp	.L12373
.L12383:
	nop
.L12344:
	cmp	DWORD PTR -76[rbp], 15
	jne	.L12384
	nop
.L12346:
	lea	rax, G_DARKMODESUPPORTED$[rip]
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L12385
	lea	rax, G_DARKMODEENABLED$[rip]
	movzx	eax, BYTE PTR [rax]
	test	al, al
	setne	al
	mov	BYTE PTR -17[rbp], al
	jmp	.L12350
.L12385:
	nop
.L12349:
	mov	BYTE PTR -17[rbp], 0
.L12350:
	movsx	eax, BYTE PTR -17[rbp]
	neg	eax
	test	eax, eax
	je	.L12386
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 672
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 680
	mov	rax, QWORD PTR [rax]
	cmp	rdx, rax
	sete	al
	movzx	eax, al
	neg	eax
	cdqe
	mov	QWORD PTR -32[rbp], rax
	jmp	.L12353
.L12386:
	nop
.L12352:
	mov	QWORD PTR -32[rbp], 0
.L12353:
	cmp	QWORD PTR -32[rbp], 0
	je	.L12387
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 536
	movzx	eax, BYTE PTR [rax]
	test	al, al
	jne	.L12388
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 48
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L12362
.L12357:
.L12388:
	nop
.L12358:
	jmp	.L12362
.L12387:
	nop
.L12355:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 536
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L12389
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 48
	mov	rax, QWORD PTR [rax]
	mov	edx, 0
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L12362
.L12359:
.L12361:
.L12389:
	nop
.L12362:
	mov	QWORD PTR -256[rbp], 0
	mov	QWORD PTR -264[rbp], 0
	mov	QWORD PTR -272[rbp], 0
	mov	QWORD PTR -280[rbp], 0
	mov	QWORD PTR -288[rbp], 0
	lea	rax, -304[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	lea	rax, -400[rbp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 16[rax], 0
	mov	QWORD PTR 24[rax], 0
	mov	QWORD PTR 32[rax], 0
	mov	QWORD PTR 40[rax], 0
	mov	QWORD PTR 48[rax], 0
	mov	QWORD PTR 56[rax], 0
	mov	QWORD PTR 64[rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1368
	mov	BYTE PTR [rax], 1
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -88[rbp], rax
	lea	rdx, -400[rbp]
	mov	rax, QWORD PTR -88[rbp]
	mov	rcx, rax
	call	BeginPaint
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	mov	QWORD PTR -272[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1144
	mov	rdx, QWORD PTR [rax]
	lea	rax, -400[rbp]
	add	rax, 12
	mov	rcx, QWORD PTR -272[rbp]
	mov	r8, rdx
	mov	rdx, rax
	call	FillRect
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 1376[rax]
	mov	rax, QWORD PTR -272[rbp]
	mov	QWORD PTR [rdx], rax
	lea	rax, G_DARKMODESUPPORTED$[rip]
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L12390
	lea	rax, G_DARKMODEENABLED$[rip]
	movzx	eax, BYTE PTR [rax]
	test	al, al
	setne	al
	mov	BYTE PTR -33[rbp], al
	jmp	.L12365
.L12390:
	nop
.L12364:
	mov	BYTE PTR -33[rbp], 0
.L12365:
	cmp	BYTE PTR -33[rbp], 0
	je	.L12391
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	r9d, 0
	mov	r8d, 0
	mov	edx, 242
	mov	rcx, rax
	call	SendMessageW
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	QWORD PTR -112[rbp], rax
	mov	QWORD PTR -312[rbp], 0
	mov	QWORD PTR -312[rbp], 1
	mov	r8d, 6447714
	mov	edx, 1
	mov	ecx, 0
	call	CreatePen
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -272[rbp]
	mov	rdx, QWORD PTR -128[rbp]
	mov	rcx, rax
	call	SelectObject
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	mov	QWORD PTR -144[rbp], rax
	mov	rdx, QWORD PTR HBRBKGND$[rip]
	mov	rax, QWORD PTR -272[rbp]
	mov	rcx, rax
	call	SelectObject
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	mov	QWORD PTR -160[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HEIGHT__get__Ev
	mov	QWORD PTR -168[rbp], rax
	cvtsi2ss	xmm0, QWORD PTR -168[rbp]
	call	SCALEY
	movd	eax, xmm0
	mov	DWORD PTR -172[rbp], eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT12WIDTH__get__Ev
	mov	QWORD PTR -184[rbp], rax
	cvtsi2ss	xmm0, QWORD PTR -184[rbp]
	call	SCALEX
	movd	eax, xmm0
	mov	DWORD PTR -188[rbp], eax
	movss	xmm0, DWORD PTR -172[rbp]
	movss	xmm1, DWORD PTR .LC125[rip]
	subss	xmm0, xmm1
	call	nearbyintf
	cvttss2si	ebx, xmm0
	mov	eax, DWORD PTR -188[rbp]
	movd	xmm0, eax
	call	nearbyintf
	cvttss2si	edx, xmm0
	mov	rax, QWORD PTR -272[rbp]
	mov	DWORD PTR 32[rsp], ebx
	mov	r9d, edx
	mov	r8d, 6
	mov	edx, 0
	mov	rcx, rax
	call	Rectangle
	mov	rax, QWORD PTR -272[rbp]
	mov	edx, 16777215
	mov	rcx, rax
	call	SetTextColor
	mov	rax, QWORD PTR -272[rbp]
	mov	edx, 3684408
	mov	rcx, rax
	call	SetBkColor
	mov	QWORD PTR -320[rbp], 0
	mov	QWORD PTR -328[rbp], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1912
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -272[rbp]
	mov	rcx, rax
	call	SelectObject
	mov	QWORD PTR -200[rbp], rax
	mov	rax, QWORD PTR -200[rbp]
	mov	QWORD PTR -320[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8GROUPBOX11TEXT__get__Ev
	mov	QWORD PTR -208[rbp], rax
	mov	rax, QWORD PTR -208[rbp]
	mov	rcx, rax
	call	fb_WstrLen
	mov	QWORD PTR -216[rbp], rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS8GROUPBOX11TEXT__get__Ev
	mov	QWORD PTR -224[rbp], rax
	mov	rax, QWORD PTR -216[rbp]
	mov	ecx, eax
	mov	rax, QWORD PTR -272[rbp]
	mov	rdx, QWORD PTR -224[rbp]
	mov	DWORD PTR 32[rsp], ecx
	mov	r9, rdx
	mov	r8d, 0
	mov	edx, 6
	mov	rcx, rax
	call	TextOutW
	mov	rdx, QWORD PTR -320[rbp]
	mov	rax, QWORD PTR -272[rbp]
	mov	rcx, rax
	call	SelectObject
	mov	QWORD PTR -232[rbp], rax
	mov	rax, QWORD PTR -232[rbp]
	mov	QWORD PTR -328[rbp], rax
	mov	rax, QWORD PTR -272[rbp]
	mov	rdx, QWORD PTR -144[rbp]
	mov	rcx, rax
	call	SelectObject
	mov	rax, QWORD PTR -272[rbp]
	mov	rdx, QWORD PTR -160[rbp]
	mov	rcx, rax
	call	SelectObject
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -240[rbp], rax
	lea	rdx, -400[rbp]
	mov	rax, QWORD PTR -240[rbp]
	mov	rcx, rax
	call	EndPaint
	mov	rax, QWORD PTR -128[rbp]
	mov	rcx, rax
	call	DeleteObject
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1368
	mov	BYTE PTR [rax], 0
	jmp	.L12368
.L12391:
	nop
.L12367:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS14COMPONENTMODEL9COMPONENT13HANDLE__get__Ev
	mov	QWORD PTR -248[rbp], rax
	lea	rdx, -400[rbp]
	mov	rax, QWORD PTR -248[rbp]
	mov	rcx, rax
	call	EndPaint
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 160
	mov	rax, QWORD PTR [rax]
	mov	r9d, 1
	mov	r8d, 0
	mov	edx, 0
	mov	rcx, rax
	call	RedrawWindow
.L12369:
	jmp	.L12373
.L12384:
	nop
.L12347:
	cmp	DWORD PTR -76[rbp], 273
	jne	.L12392
	nop
.L12370:
	jmp	.L12373
.L12392:
	nop
.L12371:
	cmp	DWORD PTR -76[rbp], 40001
.L12345:
.L12372:
	nop
.L12373:
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS16CONTAINERCONTROL14PROCESSMESSAGEER7MESSAGE
.L12368:
	mov	rax, QWORD PTR -72[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	add	rsp, 440
	pop	rbx
	pop	rbp
	ret
	.section .rdata,"dr"
	.align 8
.LC618:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\CommandButton.bi\0"
	.text
	.def	_ZN2MY3SYS5FORMS13COMMANDBUTTONaSERKS2_;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS13COMMANDBUTTONaSERKS2_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L12394:
	lea	rcx, .LC618[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROLaSERKS2_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2408[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2408[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2416[rax]
	mov	rax, QWORD PTR 24[rbp]
	movzx	eax, BYTE PTR 2416[rax]
	mov	BYTE PTR [rdx], al
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2424[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 2424[rax]
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2432
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 2432
	mov	QWORD PTR -24[rbp], rax
	mov	QWORD PTR -8[rbp], 0
.L12395:
	mov	rax, QWORD PTR -24[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR [rax], rdx
	add	QWORD PTR -16[rbp], 8
	add	QWORD PTR -24[rbp], 8
	add	QWORD PTR -8[rbp], 1
	cmp	QWORD PTR -8[rbp], 5
	je	.L12396
	jmp	.L12395
.L12396:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2472
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 2472
	mov	QWORD PTR -48[rbp], rax
	mov	QWORD PTR -32[rbp], 0
.L12397:
	mov	rax, QWORD PTR -48[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR [rax], rdx
	add	QWORD PTR -40[rbp], 8
	add	QWORD PTR -48[rbp], 8
	add	QWORD PTR -32[rbp], 1
	cmp	QWORD PTR -32[rbp], 3
	je	.L12398
	jmp	.L12397
.L12398:
	mov	rax, QWORD PTR 24[rbp]
	lea	rdx, 2496[rax]
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2496
	mov	rcx, rax
	call	_ZN2MY3SYS7DRAWING11GRAPHICTYPEaSERKS2_
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 3160[rax]
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 3160[rax]
	mov	QWORD PTR [rdx], rax
.L12399:
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -64[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
	.align 8
.LC619:
	.ascii "C:\\VisualFBEditor.1.3.3\\Controls\\MyFbFramework\\mff\\CommandButton.bas\0"
	.align 2
.LC620:
	.ascii "d\0e\0f\0a\0u\0l\0t\0\0\0"
	.text
	.def	_ZN2MY3SYS5FORMS13COMMANDBUTTON12READPROPERTYER8FBSTRING;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS13COMMANDBUTTON12READPROPERTYER8FBSTRING:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 272
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR -192[rbp], 0
	lea	rcx, .LC619[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC152[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L12401:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -224[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -224[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC329[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L12425
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L12404:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 600
	mov	rcx, rax
	call	_ZN7USTRING4VPTREv
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -192[rbp], rax
	lea	rax, -224[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L12418
.L12425:
	nop
.L12403:
	lea	rax, -224[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	mov	QWORD PTR -88[rbp], rax
	mov	rax, QWORD PTR -88[rbp]
	lea	rdx, .LC620[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -92[rbp], eax
	cmp	DWORD PTR -92[rbp], 0
	jne	.L12426
	mov	rax, QWORD PTR -88[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L12408:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2416
	mov	QWORD PTR -192[rbp], rax
	lea	rax, -224[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L12418
.L12426:
	nop
.L12407:
	lea	rax, -224[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -104[rbp], rax
	mov	rax, QWORD PTR -104[rbp]
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	lea	rdx, .LC616[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -116[rbp], eax
	cmp	DWORD PTR -116[rbp], 0
	jne	.L12427
	mov	rax, QWORD PTR -112[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L12411:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 928
	mov	QWORD PTR -192[rbp], rax
	lea	rax, -224[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L12418
.L12427:
	nop
.L12410:
	lea	rax, -224[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -128[rbp], rax
	mov	rax, QWORD PTR -128[rbp]
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	lea	rdx, .LC498[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -140[rbp], eax
	cmp	DWORD PTR -140[rbp], 0
	jne	.L12428
	mov	rax, QWORD PTR -136[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L12414:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 600
	mov	rcx, rax
	call	_ZN7USTRING4VPTREv
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	mov	QWORD PTR -192[rbp], rax
	lea	rax, -224[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L12418
.L12428:
	nop
.L12413:
	lea	rax, -224[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	mov	QWORD PTR -168[rbp], rax
	mov	rax, QWORD PTR -168[rbp]
	lea	rdx, .LC230[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -172[rbp], eax
	cmp	DWORD PTR -172[rbp], 0
	jne	.L12429
	mov	rax, QWORD PTR -168[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L12417:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2496
	mov	QWORD PTR -192[rbp], rax
	lea	rax, -224[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L12418
.L12429:
	nop
.L12416:
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL12READPROPERTYER8FBSTRING
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	mov	QWORD PTR -192[rbp], rax
	lea	rax, -224[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	nop
.L12418:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -192[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS13COMMANDBUTTON13WRITEPROPERTYER8FBSTRINGPv;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS13COMMANDBUTTON13WRITEPROPERTYER8FBSTRINGPv:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 272
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	BYTE PTR -190[rbp], 0
	lea	rcx, .LC619[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC154[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L12431:
	mov	rax, QWORD PTR 24[rbp]
	mov	edx, 0
	mov	rcx, rax
	call	fb_StrLcase2
	mov	QWORD PTR -40[rbp], rax
	mov	rdx, QWORD PTR -40[rbp]
	lea	rax, -224[rbp]
	mov	DWORD PTR 32[rsp], 0
	mov	r9, -1
	mov	r8, rdx
	mov	rdx, -1
	mov	rcx, rax
	call	fb_StrInit
	lea	rax, -224[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	mov	rax, QWORD PTR -56[rbp]
	lea	rdx, .LC329[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -60[rbp], eax
	cmp	DWORD PTR -60[rbp], 0
	jne	.L12477
	mov	rax, QWORD PTR -56[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L12434:
	cmp	QWORD PTR 32[rbp], 0
	je	.L12478
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS13COMMANDBUTTON11TEXT__set__ERw
	jmp	.L12463
.L12478:
	nop
.L12436:
	jmp	.L12463
.L12477:
	nop
.L12433:
	lea	rax, -224[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -72[rbp], rax
	mov	rax, QWORD PTR -72[rbp]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	rdx, .LC620[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -84[rbp], eax
	cmp	DWORD PTR -84[rbp], 0
	jne	.L12479
	mov	rax, QWORD PTR -80[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L12440:
	cmp	QWORD PTR 32[rbp], 0
	je	.L12480
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	lea	r8, .LC619[rip]
	mov	edx, 32
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -104[rbp], rax
	cmp	QWORD PTR -104[rbp], 0
	je	.L12481
	jmp	[QWORD PTR -104[rbp]]
.L12481:
	nop
.L12444:
	mov	rax, QWORD PTR -96[rbp]
	movzx	eax, BYTE PTR [rax]
	movsx	eax, al
	mov	edx, eax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS13COMMANDBUTTON14DEFAULT__set__Eb
	jmp	.L12463
.L12480:
	nop
.L12442:
	jmp	.L12463
.L12479:
	nop
.L12439:
	lea	rax, -224[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -112[rbp], rax
	mov	rax, QWORD PTR -112[rbp]
	mov	QWORD PTR -120[rbp], rax
	mov	rax, QWORD PTR -120[rbp]
	lea	rdx, .LC616[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -124[rbp], eax
	cmp	DWORD PTR -124[rbp], 0
	jne	.L12482
	mov	rax, QWORD PTR -120[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L12447:
	cmp	QWORD PTR 32[rbp], 0
	je	.L12483
	mov	rax, QWORD PTR 32[rbp]
	mov	QWORD PTR -136[rbp], rax
	mov	rax, QWORD PTR -136[rbp]
	lea	r8, .LC619[rip]
	mov	edx, 33
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -144[rbp], rax
	cmp	QWORD PTR -144[rbp], 0
	je	.L12484
	jmp	[QWORD PTR -144[rbp]]
.L12484:
	nop
.L12451:
	mov	rax, QWORD PTR -136[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS13COMMANDBUTTON15TABINDEX__set__Eu7INTEGER
	jmp	.L12463
.L12483:
	nop
.L12449:
	jmp	.L12463
.L12482:
	nop
.L12446:
	lea	rax, -224[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -152[rbp], rax
	mov	rax, QWORD PTR -152[rbp]
	mov	QWORD PTR -160[rbp], rax
	mov	rax, QWORD PTR -160[rbp]
	lea	rdx, .LC498[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -164[rbp], eax
	cmp	DWORD PTR -164[rbp], 0
	jne	.L12485
	mov	rax, QWORD PTR -160[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L12454:
	cmp	QWORD PTR 32[rbp], 0
	je	.L12486
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS13COMMANDBUTTON11TEXT__set__ERw
	jmp	.L12463
.L12486:
	nop
.L12456:
	jmp	.L12463
.L12485:
	nop
.L12453:
	lea	rax, -224[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, rax
	call	fb_StrToWstr
	mov	QWORD PTR -176[rbp], rax
	mov	rax, QWORD PTR -176[rbp]
	mov	QWORD PTR -184[rbp], rax
	mov	rax, QWORD PTR -184[rbp]
	lea	rdx, .LC230[rip]
	mov	rcx, rax
	call	fb_WstrCompare
	mov	DWORD PTR -188[rbp], eax
	cmp	DWORD PTR -188[rbp], 0
	jne	.L12487
	mov	rax, QWORD PTR -184[rbp]
	mov	rcx, rax
	call	fb_WstrDelete
.L12459:
	cmp	QWORD PTR 32[rbp], 0
	je	.L12488
	mov	rax, QWORD PTR 16[rbp]
	lea	rcx, 2496[rax]
	mov	rax, QWORD PTR 32[rbp]
	mov	rdx, rax
	call	_ZN2MY3SYS7DRAWING11GRAPHICTYPEaSERw
	jmp	.L12463
.L12488:
	nop
.L12461:
	jmp	.L12463
.L12487:
	nop
.L12458:
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL13WRITEPROPERTYER8FBSTRINGPv
	mov	BYTE PTR -189[rbp], al
	movzx	eax, BYTE PTR -189[rbp]
	mov	BYTE PTR -190[rbp], al
	lea	rax, -224[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	jmp	.L12462
.L12437:
.L12463:
	lea	rax, -224[rbp]
	mov	rcx, rax
	call	fb_StrDelete
	mov	BYTE PTR -190[rbp], 1
	nop
.L12462:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -190[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS13COMMANDBUTTON15TABINDEX__set__Eu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS13COMMANDBUTTON15TABINDEX__set__Eu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L12490:
	lea	rcx, .LC619[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC617[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL14CHANGETABINDEXEu7INTEGER
.L12491:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS13COMMANDBUTTON11TEXT__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS13COMMANDBUTTON11TEXT__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -48[rbp], 0
	lea	rcx, .LC619[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC268[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L12493:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11TEXT__get__Ev
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	QWORD PTR -48[rbp], rax
	nop
.L12494:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -48[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS13COMMANDBUTTON11TEXT__set__ERw;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS13COMMANDBUTTON11TEXT__set__ERw:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L12497:
	lea	rcx, .LC619[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC268[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11TEXT__set__ERw
.L12498:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC621:
	.ascii "DEFAULT\0"
	.text
	.def	_ZN2MY3SYS5FORMS13COMMANDBUTTON14DEFAULT__set__Eb;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS13COMMANDBUTTON14DEFAULT__set__Eb:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	eax, edx
	mov	BYTE PTR 24[rbp], al
.L12500:
	lea	rcx, .LC619[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC621[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2416
	movzx	eax, BYTE PTR [rax]
	cmp	BYTE PTR 24[rbp], al
	je	.L12515
	mov	rax, QWORD PTR 16[rbp]
	lea	rdx, 2416[rax]
	movzx	eax, BYTE PTR 24[rbp]
	mov	BYTE PTR [rdx], al
	mov	r8d, 0
	mov	edx, 4096
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	movsx	eax, BYTE PTR 24[rbp]
	mov	r8d, eax
	mov	edx, 1
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL11CHANGESTYLEEu7INTEGERb
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL7GETFORMEv
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L12516
	cmp	BYTE PTR 24[rbp], 0
	je	.L12517
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR -8[rbp], rax
	jmp	.L12506
.L12517:
	nop
.L12505:
	mov	QWORD PTR -8[rbp], 0
.L12506:
	mov	rax, QWORD PTR -56[rbp]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	lea	r8, .LC619[rip]
	mov	edx, 99
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	je	.L12518
	jmp	[QWORD PTR -72[rbp]]
.L12518:
	nop
.L12508:
	mov	rax, QWORD PTR -64[rbp]
	lea	rdx, 984[rax]
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR [rdx], rax
	jmp	.L12512
.L12502:
.L12509:
.L12510:
.L12511:
.L12515:
	nop
	jmp	.L12512
.L12516:
	nop
.L12512:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS13COMMANDBUTTON12STYLE__get__Ev;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS13COMMANDBUTTON12STYLE__get__Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR -40[rbp], 0
	lea	rcx, .LC619[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC200[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L12520:
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2408[rax]
	mov	QWORD PTR -40[rbp], rax
	nop
.L12521:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	mov	rax, QWORD PTR -40[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS13COMMANDBUTTON13GRAPHICCHANGEERNS0_7DRAWING11GRAPHICTYPEEPvu7INTEGER;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS13COMMANDBUTTON13GRAPHICCHANGEERNS0_7DRAWING11GRAPHICTYPEEPvu7INTEGER:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 144
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
.L12524:
	lea	rcx, .LC619[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC613[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	mov	rax, QWORD PTR 80[rax]
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	lea	r8, .LC619[rip]
	mov	edx, 120
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -56[rbp], rax
	cmp	QWORD PTR -56[rbp], 0
	je	.L12550
	jmp	[QWORD PTR -56[rbp]]
.L12550:
	nop
.L12526:
	mov	rax, QWORD PTR -48[rbp]
	add	rax, 1056
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L12551
	cmp	QWORD PTR 32[rbp], 0
	jne	.L12552
	nop
.L12529:
	mov	rax, QWORD PTR -40[rbp]
	mov	rax, QWORD PTR 80[rax]
	mov	QWORD PTR -64[rbp], rax
	mov	rax, QWORD PTR -64[rbp]
	lea	r8, .LC619[rip]
	mov	edx, 125
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -72[rbp], rax
	cmp	QWORD PTR -72[rbp], 0
	je	.L12553
	jmp	[QWORD PTR -72[rbp]]
.L12553:
	nop
.L12532:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 200
	mov	rcx, QWORD PTR [rax]
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR -64[rbp]
	add	rax, 1056
	mov	rax, QWORD PTR [rax]
	mov	r9, rcx
	mov	r8, rdx
	mov	edx, 247
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL7PERFORMEjyx
	jmp	.L12543
.L12552:
	nop
.L12530:
	cmp	QWORD PTR 32[rbp], 1
	jne	.L12554
	nop
.L12533:
	mov	rax, QWORD PTR -40[rbp]
	mov	rax, QWORD PTR 80[rax]
	mov	QWORD PTR -80[rbp], rax
	mov	rax, QWORD PTR -80[rbp]
	lea	r8, .LC619[rip]
	mov	edx, 128
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -88[rbp], rax
	cmp	QWORD PTR -88[rbp], 0
	je	.L12555
	jmp	[QWORD PTR -88[rbp]]
.L12555:
	nop
.L12536:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 504
	mov	rcx, QWORD PTR [rax]
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR -80[rbp]
	add	rax, 1056
	mov	rax, QWORD PTR [rax]
	mov	r9, rcx
	mov	r8, rdx
	mov	edx, 247
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL7PERFORMEjyx
	jmp	.L12543
.L12554:
	nop
.L12534:
	cmp	QWORD PTR 32[rbp], 2
	jne	.L12556
	nop
.L12537:
	mov	rax, QWORD PTR -40[rbp]
	mov	rax, QWORD PTR 80[rax]
	mov	QWORD PTR -96[rbp], rax
	mov	rax, QWORD PTR -96[rbp]
	lea	r8, .LC619[rip]
	mov	edx, 131
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR -104[rbp], rax
	cmp	QWORD PTR -104[rbp], 0
	je	.L12557
	jmp	[QWORD PTR -104[rbp]]
.L12557:
	nop
.L12539:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 504
	mov	rcx, QWORD PTR [rax]
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR -96[rbp]
	add	rax, 1056
	mov	rax, QWORD PTR [rax]
	mov	r9, rcx
	mov	r8, rdx
	mov	edx, 247
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL7PERFORMEjyx
	jmp	.L12543
.L12528:
.L12540:
.L12541:
.L12542:
.L12551:
	nop
	jmp	.L12543
.L12556:
	nop
.L12543:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS13COMMANDBUTTON17HANDLEISALLOCATEDERNS1_7CONTROLE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS13COMMANDBUTTON17HANDLEISALLOCATEDERNS1_7CONTROLE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 80
	mov	QWORD PTR 16[rbp], rcx
.L12559:
	lea	rcx, .LC619[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC604[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 1056
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L12564
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 1056[rax]
	mov	QWORD PTR -40[rbp], rax
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 3136
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR -40[rbp]
	add	rax, 3144
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR -40[rbp]
	mov	r9, rcx
	mov	r8, rdx
	mov	edx, 247
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS7CONTROL7PERFORMEjyx
	jmp	.L12563
.L12561:
.L12562:
.L12564:
	nop
.L12563:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS13COMMANDBUTTON7WNDPROCER7MESSAGE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS13COMMANDBUTTON7WNDPROCER7MESSAGE:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
.L12566:
	lea	rcx, .LC619[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC603[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L12567:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN2MY3SYS5FORMS13COMMANDBUTTON13ENUMMENUITEMSERNS1_8MENUITEMER4LIST;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS13COMMANDBUTTON13ENUMMENUITEMSERNS1_8MENUITEMER4LIST:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 112
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
	mov	QWORD PTR 32[rbp], r8
	mov	BYTE PTR -73[rbp], 0
	lea	rcx, .LC619[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -16[rbp], rax
	mov	rax, QWORD PTR -16[rbp]
	mov	QWORD PTR -24[rbp], rax
	lea	rcx, .LC370[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR -32[rbp]
	mov	QWORD PTR -40[rbp], rax
.L12569:
	mov	QWORD PTR -8[rbp], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM12COUNT__get__Ev
	mov	QWORD PTR -48[rbp], rax
	mov	rax, QWORD PTR -48[rbp]
	sub	rax, 1
	mov	QWORD PTR -56[rbp], rax
	jmp	.L12570
.L12577:
	nop
.L12571:
	mov	rdx, QWORD PTR -8[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -64[rbp], rax
	mov	rdx, QWORD PTR -64[rbp]
	mov	rax, QWORD PTR 32[rbp]
	mov	rcx, rax
	call	_ZN4LIST3ADDEPv
	mov	rdx, QWORD PTR -8[rbp]
	mov	rax, QWORD PTR 24[rbp]
	mov	rcx, rax
	call	_ZN2MY3SYS5FORMS8MENUITEM11ITEM__get__Eu7INTEGER
	mov	QWORD PTR -72[rbp], rax
	mov	rdx, QWORD PTR 32[rbp]
	mov	rax, QWORD PTR -72[rbp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS13COMMANDBUTTON13ENUMMENUITEMSERNS1_8MENUITEMER4LIST
.L12572:
	add	QWORD PTR -8[rbp], 1
.L12570:
	mov	rax, QWORD PTR -8[rbp]
	cmp	rax, QWORD PTR -56[rbp]
	jle	.L12577
	nop
.L12573:
	mov	BYTE PTR -73[rbp], 1
	nop
.L12574:
	mov	rax, QWORD PTR -40[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -24[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	movzx	eax, BYTE PTR -73[rbp]
	leave
	ret
	.def	_ZN2MY3SYS5FORMS13COMMANDBUTTON14PROCESSMESSAGEER7MESSAGE;	.scl	3;	.type	32;	.endef
_ZN2MY3SYS5FORMS13COMMANDBUTTON14PROCESSMESSAGEER7MESSAGE:
	push	rbp
	mov	rbp, rsp
	and	rsp, -16
	sub	rsp, 176
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L12579:
	lea	rcx, .LC619[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR 160[rsp], rax
	mov	rax, QWORD PTR 160[rsp]
	mov	QWORD PTR 152[rsp], rax
	lea	rcx, .LC369[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR 144[rsp], rax
	mov	rax, QWORD PTR 144[rsp]
	mov	QWORD PTR 136[rsp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	eax, DWORD PTR 16[rax]
	mov	DWORD PTR 132[rsp], eax
	cmp	DWORD PTR 132[rsp], 15
	jne	.L12617
	nop
.L12580:
	jmp	.L12608
.L12617:
	nop
.L12581:
	cmp	DWORD PTR 132[rsp], 40001
	jne	.L12618
	nop
.L12583:
	jmp	.L12608
.L12618:
	nop
.L12584:
	cmp	DWORD PTR 132[rsp], 135
	jne	.L12619
	nop
.L12585:
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2416
	movzx	eax, BYTE PTR [rax]
	test	al, al
	je	.L12620
	mov	QWORD PTR 168[rsp], 16
	jmp	.L12589
.L12620:
	nop
.L12588:
	mov	QWORD PTR 168[rsp], 0
.L12589:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 40
	mov	rdx, QWORD PTR 168[rsp]
	or	rdx, 8194
	mov	QWORD PTR [rax], rdx
	jmp	.L12608
.L12619:
	nop
.L12586:
	cmp	DWORD PTR 132[rsp], 40006
	jne	.L12621
	nop
.L12590:
	mov	QWORD PTR 72[rsp], 0
	lea	rax, 48[rsp]
	mov	QWORD PTR [rax], 0
	mov	QWORD PTR 8[rax], 0
	mov	QWORD PTR 40[rsp], 0
	mov	rax, QWORD PTR 24[rbp]
	mov	rax, QWORD PTR 32[rax]
	mov	QWORD PTR 72[rsp], rax
	mov	rax, QWORD PTR 72[rsp]
	add	rax, 40
	mov	rdx, QWORD PTR 8[rax]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR 48[rsp], rax
	mov	QWORD PTR 56[rsp], rdx
	mov	rax, QWORD PTR 72[rsp]
	mov	QWORD PTR 120[rsp], rax
	mov	rax, QWORD PTR 120[rsp]
	lea	r8, .LC619[rip]
	mov	edx, 186
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR 112[rsp], rax
	cmp	QWORD PTR 112[rsp], 0
	je	.L12622
	jmp	[QWORD PTR 112[rsp]]
.L12622:
	nop
.L12593:
	mov	rax, QWORD PTR 120[rsp]
	mov	rax, QWORD PTR 32[rax]
	mov	QWORD PTR 40[rsp], rax
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 3160
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L12623
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 3160[rax]
	mov	QWORD PTR 104[rsp], rax
	mov	rax, QWORD PTR 104[rsp]
	lea	r8, .LC619[rip]
	mov	edx, 188
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR 96[rsp], rax
	cmp	QWORD PTR 96[rsp], 0
	je	.L12624
	jmp	[QWORD PTR 96[rsp]]
.L12624:
	nop
.L12597:
	mov	rdx, QWORD PTR 40[rsp]
	lea	rax, 48[rsp]
	mov	r9, QWORD PTR 104[rsp]
	mov	r8, rdx
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	r9
	jmp	.L12598
.L12595:
.L12623:
	nop
.L12598:
	jmp	.L12608
.L12621:
	nop
.L12591:
	cmp	DWORD PTR 132[rsp], 257
	jne	.L12625
	nop
.L12599:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	movzx	eax, ax
	cmp	rax, 32
	sete	al
	movzx	eax, al
	neg	eax
	mov	edx, eax
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 24
	mov	rax, QWORD PTR [rax]
	movzx	eax, ax
	cmp	rax, 13
	sete	al
	movzx	eax, al
	neg	eax
	or	eax, edx
	test	eax, eax
	je	.L12626
	mov	rax, QWORD PTR 16[rbp]
	add	rax, 2328
	mov	rax, QWORD PTR [rax]
	test	rax, rax
	je	.L12627
	mov	rax, QWORD PTR 16[rbp]
	mov	rax, QWORD PTR 2328[rax]
	mov	QWORD PTR 88[rsp], rax
	mov	rax, QWORD PTR 88[rsp]
	lea	r8, .LC619[rip]
	mov	edx, 193
	mov	rcx, rax
	call	fb_NullPtrChk
	mov	QWORD PTR 80[rsp], rax
	cmp	QWORD PTR 80[rsp], 0
	je	.L12628
	jmp	[QWORD PTR 80[rsp]]
.L12628:
	nop
.L12604:
	mov	rax, QWORD PTR 88[rsp]
	mov	rcx, QWORD PTR 16[rbp]
	call	rax
	jmp	.L12602
.L12627:
	nop
.L12602:
	mov	rax, QWORD PTR 24[rbp]
	add	rax, 40
	mov	QWORD PTR [rax], -1
	jmp	.L12605
.L12582:
.L12606:
.L12607:
.L12625:
	nop
	jmp	.L12608
.L12626:
	nop
.L12608:
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS7CONTROL14PROCESSMESSAGEER7MESSAGE
.L12605:
	mov	rax, QWORD PTR 136[rsp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR 152[rsp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN9FORM1TYPEaSERKS_;	.scl	3;	.type	32;	.endef
_ZN9FORM1TYPEaSERKS_:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	mov	QWORD PTR 24[rbp], rdx
.L12630:
	lea	rcx, .LC91[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	mov	rax, QWORD PTR 24[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORMaSERKS2_
.L12631:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.def	_ZN9FORM1TYPED1Ev;	.scl	3;	.type	32;	.endef
_ZN9FORM1TYPED1Ev:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	QWORD PTR 16[rbp], rcx
	lea	rdx, _ZTVN9FORM1TYPEE[rip+16]
	mov	rax, QWORD PTR 16[rbp]
	mov	QWORD PTR [rax], rdx
	lea	rcx, .LC91[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC92[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
.L12633:
.L12634:
	mov	rcx, QWORD PTR 16[rbp]
	call	_ZN2MY3SYS5FORMS4FORMD1Ev
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section .rdata,"dr"
.LC622:
	.ascii "LABEL$8774\0"
	.text
	.def	_GLOBAL__I;	.scl	3;	.type	32;	.endef
_GLOBAL__I:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
.L12636:
	lea	rcx, .LC91[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC622[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rcx, DEFAULTFONT$[rip]
	call	_ZN2MY3SYS7DRAWING4FONTC1Ev
	lea	rcx, G_DARKSCROLLBARWINDOWS$[rip]
	call	_ZN4LISTC1Ev
	lea	rcx, APP$[rip]
	call	_ZN2MY11APPLICATIONC1Ev
	lea	rcx, FORM1$[rip]
	call	_ZN9FORM1TYPEC1Ev
.L12637:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section	.ctors,"w"
	.align 8
	.quad	_GLOBAL__I
	.section .rdata,"dr"
.LC623:
	.ascii "LABEL$8777\0"
	.text
	.def	_GLOBAL__D;	.scl	3;	.type	32;	.endef
_GLOBAL__D:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
.L12639:
	lea	rcx, .LC91[rip]
	call	fb_ErrorSetModName
	mov	QWORD PTR -8[rbp], rax
	mov	rax, QWORD PTR -8[rbp]
	mov	QWORD PTR -16[rbp], rax
	lea	rcx, .LC623[rip]
	call	fb_ErrorSetFuncName
	mov	QWORD PTR -24[rbp], rax
	mov	rax, QWORD PTR -24[rbp]
	mov	QWORD PTR -32[rbp], rax
	lea	rcx, FORM1$[rip]
	call	_ZN9FORM1TYPED1Ev
	lea	rcx, APP$[rip]
	call	_ZN2MY11APPLICATIOND1Ev
	lea	rcx, G_DARKSCROLLBARWINDOWS$[rip]
	call	_ZN4LISTD1Ev
	lea	rcx, DEFAULTFONT$[rip]
	call	_ZN2MY3SYS7DRAWING4FONTD1Ev
	lea	r8, _ZN14CLASSCONTAINER9CLASSTYPED1Ev[rip]
	lea	rdx, _ZN14CLASSCONTAINER9CLASSTYPEC1Ev[rip]
	lea	rcx, _ZN14CLASSCONTAINER8CLASSES$E[rip]
	call	fb_ArrayEraseObj
.L12640:
	mov	rax, QWORD PTR -32[rbp]
	mov	rcx, rax
	call	fb_ErrorSetFuncName
	mov	rax, QWORD PTR -16[rbp]
	mov	rcx, rax
	call	fb_ErrorSetModName
	nop
	leave
	ret
	.section	.dtors,"w"
	.align 8
	.quad	_GLOBAL__D
.lcomm PBUFF$1.6953,8,8
.lcomm BB$1.7937,4,4
.lcomm BB$1.7954,4,4
.lcomm BB$1.7971,4,4
.lcomm BB$1.7988,4,4
.lcomm BM$1.9489,54,32
.lcomm UNIQUEID$1.13124,8,8
.lcomm BSHIFT$1.18746,1,1
.lcomm BCTRL$1.18747,1,1
.lcomm SCRDIRECTION$3.19098,8,8
.lcomm FWINDOW$3.19271,8,8
.lcomm ISMENUITEM$1.21587,1,1
	.section .rdata,"dr"
	.align 8
.LC124:
	.long	0
	.long	1079508992
	.align 4
.LC125:
	.long	1065353216
	.align 8
.LC297:
	.long	0
	.long	1072693248
	.align 8
.LC514:
	.long	0
	.long	1081073664
	.align 4
.LC606:
	.long	1106771968
	.align 4
.LC607:
	.long	1098907648
	.align 8
.LC608:
	.long	0
	.long	1073741824
	.ident	"GCC: (MinGW-W64 x86_64-posix-sjlj, built by Brecht Sanders) 9.3.0"
	.def	fb_ErrorSetModName;	.scl	2;	.type	32;	.endef
	.def	fb_ErrorSetFuncName;	.scl	2;	.type	32;	.endef
	.def	fb_ThreadCreate;	.scl	2;	.type	32;	.endef
	.def	fb_NullPtrChk;	.scl	2;	.type	32;	.endef
	.def	fb_ArraySngBoundChk;	.scl	2;	.type	32;	.endef
	.def	strcmp;	.scl	2;	.type	32;	.endef
	.def	_stricmp;	.scl	2;	.type	32;	.endef
	.def	SystemParametersInfoW;	.scl	2;	.type	32;	.endef
	.def	SetPropW;	.scl	2;	.type	32;	.endef
	.def	lstrcmpiW;	.scl	2;	.type	32;	.endef
	.def	GetAncestor;	.scl	2;	.type	32;	.endef
	.def	wcscmp;	.scl	2;	.type	32;	.endef
	.def	LoadLibraryExW;	.scl	2;	.type	32;	.endef
	.def	fb_StrAssign;	.scl	2;	.type	32;	.endef
	.def	fb_StrDelete;	.scl	2;	.type	32;	.endef
	.def	VirtualProtect;	.scl	2;	.type	32;	.endef
	.def	GetModuleHandleW;	.scl	2;	.type	32;	.endef
	.def	GetProcAddress;	.scl	2;	.type	32;	.endef
	.def	fb_WstrAssignToA;	.scl	2;	.type	32;	.endef
	.def	fb_FileOpen;	.scl	2;	.type	32;	.endef
	.def	fb_FileSize;	.scl	2;	.type	32;	.endef
	.def	fb_StrFill1;	.scl	2;	.type	32;	.endef
	.def	fb_FileGetStrLarge;	.scl	2;	.type	32;	.endef
	.def	fb_ErrorThrowAt;	.scl	2;	.type	32;	.endef
	.def	fb_StrAllocTempDescZEx;	.scl	2;	.type	32;	.endef
	.def	fb_StrInstr;	.scl	2;	.type	32;	.endef
	.def	fb_WstrConcat;	.scl	2;	.type	32;	.endef
	.def	fb_WstrDelete;	.scl	2;	.type	32;	.endef
	.def	fb_FileOpenEncod;	.scl	2;	.type	32;	.endef
	.def	realloc;	.scl	2;	.type	32;	.endef
	.def	fb_FileStrInput;	.scl	2;	.type	32;	.endef
	.def	fb_UTFToWChar;	.scl	2;	.type	32;	.endef
	.def	fb_FileWstrInput;	.scl	2;	.type	32;	.endef
	.def	fb_WstrAssign;	.scl	2;	.type	32;	.endef
	.def	fb_StrToWstr;	.scl	2;	.type	32;	.endef
	.def	fb_WstrCompare;	.scl	2;	.type	32;	.endef
	.def	fb_PrintString;	.scl	2;	.type	32;	.endef
	.def	fb_WstrToStr;	.scl	2;	.type	32;	.endef
	.def	fb_PrintWstr;	.scl	2;	.type	32;	.endef
	.def	IsIconic;	.scl	2;	.type	32;	.endef
	.def	IsZoomed;	.scl	2;	.type	32;	.endef
	.def	GetPropW;	.scl	2;	.type	32;	.endef
	.def	nearbyintf;	.scl	2;	.type	32;	.endef
	.def	CallWindowProcW;	.scl	2;	.type	32;	.endef
	.def	fb_Init;	.scl	2;	.type	32;	.endef
	.def	fb_InitSignals;	.scl	2;	.type	32;	.endef
	.def	CreateSolidBrush;	.scl	2;	.type	32;	.endef
	.def	fb_End;	.scl	2;	.type	32;	.endef
	.def	fb_FileClose;	.scl	2;	.type	32;	.endef
	.def	calloc;	.scl	2;	.type	32;	.endef
	.def	fb_WstrLen;	.scl	2;	.type	32;	.endef
	.def	free;	.scl	2;	.type	32;	.endef
	.def	malloc;	.scl	2;	.type	32;	.endef
	.def	fb_StrLen;	.scl	2;	.type	32;	.endef
	.def	fb_WstrAssignFromA;	.scl	2;	.type	32;	.endef
	.def	fb_WstrLcase2;	.scl	2;	.type	32;	.endef
	.def	fb_StrInit;	.scl	2;	.type	32;	.endef
	.def	fb_WCharToUTF;	.scl	2;	.type	32;	.endef
	.def	fb_StrAllocTempResult;	.scl	2;	.type	32;	.endef
	.def	PathFileExistsW;	.scl	2;	.type	32;	.endef
	.def	GetWindowLongW;	.scl	2;	.type	32;	.endef
	.def	fb_WstrAssignToA_Init;	.scl	2;	.type	32;	.endef
	.def	fb_ArrayUBound;	.scl	2;	.type	32;	.endef
	.def	fb_WstrUcase2;	.scl	2;	.type	32;	.endef
	.def	fb_ArrayBoundChk;	.scl	2;	.type	32;	.endef
	.def	fb_ArrayRedimPresvObj;	.scl	2;	.type	32;	.endef
	.def	GetClassNameW;	.scl	2;	.type	32;	.endef
	.def	fb_WstrLeft;	.scl	2;	.type	32;	.endef
	.def	UnregisterClassW;	.scl	2;	.type	32;	.endef
	.def	GetDC;	.scl	2;	.type	32;	.endef
	.def	GetDeviceCaps;	.scl	2;	.type	32;	.endef
	.def	ReleaseDC;	.scl	2;	.type	32;	.endef
	.def	fb_WstrInstr;	.scl	2;	.type	32;	.endef
	.def	fb_StrLcase2;	.scl	2;	.type	32;	.endef
	.def	_ZN10fb_Object$C1Ev;	.scl	2;	.type	32;	.endef
	.def	fb_LongintToWstr;	.scl	2;	.type	32;	.endef
	.def	fb_LongintToStr;	.scl	2;	.type	32;	.endef
	.def	fb_WstrConcatAW;	.scl	2;	.type	32;	.endef
	.def	GetParent;	.scl	2;	.type	32;	.endef
	.def	SetParent;	.scl	2;	.type	32;	.endef
	.def	MoveWindow;	.scl	2;	.type	32;	.endef
	.def	GetWindowRect;	.scl	2;	.type	32;	.endef
	.def	MapWindowPoints;	.scl	2;	.type	32;	.endef
	.def	DestroyWindow;	.scl	2;	.type	32;	.endef
	.def	DeleteObject;	.scl	2;	.type	32;	.endef
	.def	CreatePen;	.scl	2;	.type	32;	.endef
	.def	CreateBrushIndirect;	.scl	2;	.type	32;	.endef
	.def	fb_WstrInstrRev;	.scl	2;	.type	32;	.endef
	.def	fb_WstrMid;	.scl	2;	.type	32;	.endef
	.def	fb_WstrAlloc;	.scl	2;	.type	32;	.endef
	.def	LoadImageW;	.scl	2;	.type	32;	.endef
	.def	GetObjectW;	.scl	2;	.type	32;	.endef
	.def	GdiplusStartup;	.scl	2;	.type	32;	.endef
	.def	GdipLoadImageFromFile;	.scl	2;	.type	32;	.endef
	.def	GdipGetImageWidth;	.scl	2;	.type	32;	.endef
	.def	GdipGetImageHeight;	.scl	2;	.type	32;	.endef
	.def	GdipCreateHBITMAPFromBitmap;	.scl	2;	.type	32;	.endef
	.def	GdipDisposeImage;	.scl	2;	.type	32;	.endef
	.def	GdiplusShutdown;	.scl	2;	.type	32;	.endef
	.def	fb_FileFree;	.scl	2;	.type	32;	.endef
	.def	fb_ArrayRedimEx;	.scl	2;	.type	32;	.endef
	.def	GetPixel;	.scl	2;	.type	32;	.endef
	.def	fb_FilePutLarge;	.scl	2;	.type	32;	.endef
	.def	fb_FilePutArrayLarge;	.scl	2;	.type	32;	.endef
	.def	fb_ArrayErase;	.scl	2;	.type	32;	.endef
	.def	GetIconInfo;	.scl	2;	.type	32;	.endef
	.def	CreateCompatibleDC;	.scl	2;	.type	32;	.endef
	.def	GdipCreateBitmapFromHICON;	.scl	2;	.type	32;	.endef
	.def	GetDIBits;	.scl	2;	.type	32;	.endef
	.def	DeleteDC;	.scl	2;	.type	32;	.endef
	.def	GdipCreateBitmapFromScan0;	.scl	2;	.type	32;	.endef
	.def	GdipBitmapLockBits;	.scl	2;	.type	32;	.endef
	.def	GdipBitmapUnlockBits;	.scl	2;	.type	32;	.endef
	.def	fb_ExePath;	.scl	2;	.type	32;	.endef
	.def	fb_WstrConcatWA;	.scl	2;	.type	32;	.endef
	.def	FindResourceW;	.scl	2;	.type	32;	.endef
	.def	SizeofResource;	.scl	2;	.type	32;	.endef
	.def	LoadResource;	.scl	2;	.type	32;	.endef
	.def	LockResource;	.scl	2;	.type	32;	.endef
	.def	GlobalAlloc;	.scl	2;	.type	32;	.endef
	.def	GlobalLock;	.scl	2;	.type	32;	.endef
	.def	GlobalFree;	.scl	2;	.type	32;	.endef
	.def	memcpy;	.scl	2;	.type	32;	.endef
	.def	CreateStreamOnHGlobal;	.scl	2;	.type	32;	.endef
	.def	GdipCreateBitmapFromStream;	.scl	2;	.type	32;	.endef
	.def	GlobalUnlock;	.scl	2;	.type	32;	.endef
	.def	fb_WstrVal;	.scl	2;	.type	32;	.endef
	.def	nearbyint;	.scl	2;	.type	32;	.endef
	.def	GetDesktopWindow;	.scl	2;	.type	32;	.endef
	.def	CreateCompatibleBitmap;	.scl	2;	.type	32;	.endef
	.def	SelectObject;	.scl	2;	.type	32;	.endef
	.def	GetSysColorBrush;	.scl	2;	.type	32;	.endef
	.def	DrawIconEx;	.scl	2;	.type	32;	.endef
	.def	DestroyIcon;	.scl	2;	.type	32;	.endef
	.def	DestroyCursor;	.scl	2;	.type	32;	.endef
	.def	MulDiv;	.scl	2;	.type	32;	.endef
	.def	CreateFontW;	.scl	2;	.type	32;	.endef
	.def	fb_IsTypeOf;	.scl	2;	.type	32;	.endef
	.def	SendMessageW;	.scl	2;	.type	32;	.endef
	.def	InvalidateRect;	.scl	2;	.type	32;	.endef
	.def	fb_WstrTrim;	.scl	2;	.type	32;	.endef
	.def	fb_WstrTrimAny;	.scl	2;	.type	32;	.endef
	.def	fb_WstrChr;	.scl	2;	.type	32;	.endef
	.def	SetBkColor;	.scl	2;	.type	32;	.endef
	.def	GetDCEx;	.scl	2;	.type	32;	.endef
	.def	SetROP2;	.scl	2;	.type	32;	.endef
	.def	BitBlt;	.scl	2;	.type	32;	.endef
	.def	Rectangle;	.scl	2;	.type	32;	.endef
	.def	DPtoLP;	.scl	2;	.type	32;	.endef
	.def	CreateBitmap;	.scl	2;	.type	32;	.endef
	.def	GetMapMode;	.scl	2;	.type	32;	.endef
	.def	SetMapMode;	.scl	2;	.type	32;	.endef
	.def	ImageList_SetIconSize;	.scl	2;	.type	32;	.endef
	.def	ImageList_SetBkColor;	.scl	2;	.type	32;	.endef
	.def	ImageList_GetImageCount;	.scl	2;	.type	32;	.endef
	.def	ImageList_SetImageCount;	.scl	2;	.type	32;	.endef
	.def	RedrawWindow;	.scl	2;	.type	32;	.endef
	.def	ImageList_Add;	.scl	2;	.type	32;	.endef
	.def	ImageList_ReplaceIcon;	.scl	2;	.type	32;	.endef
	.def	StretchBlt;	.scl	2;	.type	32;	.endef
	.def	ImageList_AddMasked;	.scl	2;	.type	32;	.endef
	.def	ImageList_Remove;	.scl	2;	.type	32;	.endef
	.def	ImageList_GetImageInfo;	.scl	2;	.type	32;	.endef
	.def	ImageList_GetIcon;	.scl	2;	.type	32;	.endef
	.def	GetMenuItemInfoW;	.scl	2;	.type	32;	.endef
	.def	SetMenuItemInfoW;	.scl	2;	.type	32;	.endef
	.def	fb_CHR;	.scl	2;	.type	32;	.endef
	.def	DrawMenuBar;	.scl	2;	.type	32;	.endef
	.def	CheckMenuItem;	.scl	2;	.type	32;	.endef
	.def	CheckMenuRadioItem;	.scl	2;	.type	32;	.endef
	.def	EnableMenuItem;	.scl	2;	.type	32;	.endef
	.def	RemoveMenu;	.scl	2;	.type	32;	.endef
	.def	InsertMenuItemW;	.scl	2;	.type	32;	.endef
	.def	SetMenuInfo;	.scl	2;	.type	32;	.endef
	.def	CreatePopupMenu;	.scl	2;	.type	32;	.endef
	.def	DestroyMenu;	.scl	2;	.type	32;	.endef
	.def	GetMenuInfo;	.scl	2;	.type	32;	.endef
	.def	UpdateWindow;	.scl	2;	.type	32;	.endef
	.def	IsWindow;	.scl	2;	.type	32;	.endef
	.def	fb_ASC;	.scl	2;	.type	32;	.endef
	.def	SetMenu;	.scl	2;	.type	32;	.endef
	.def	fb_StrMid;	.scl	2;	.type	32;	.endef
	.def	fb_ArrayRedimPresvEx;	.scl	2;	.type	32;	.endef
	.def	fb_StrInstrRev;	.scl	2;	.type	32;	.endef
	.def	DestroyAcceleratorTable;	.scl	2;	.type	32;	.endef
	.def	CreateAcceleratorTableW;	.scl	2;	.type	32;	.endef
	.def	TrackPopupMenuEx;	.scl	2;	.type	32;	.endef
	.def	GetModuleFileNameW;	.scl	2;	.type	32;	.endef
	.def	WinHelpW;	.scl	2;	.type	32;	.endef
	.def	GetMessageW;	.scl	2;	.type	32;	.endef
	.def	TranslateAcceleratorW;	.scl	2;	.type	32;	.endef
	.def	GetKeyState;	.scl	2;	.type	32;	.endef
	.def	TranslateMessage;	.scl	2;	.type	32;	.endef
	.def	DispatchMessageW;	.scl	2;	.type	32;	.endef
	.def	GetWindowLongPtrW;	.scl	2;	.type	32;	.endef
	.def	GetCurrentThreadId;	.scl	2;	.type	32;	.endef
	.def	EnumThreadWindows;	.scl	2;	.type	32;	.endef
	.def	VerQueryValueW;	.scl	2;	.type	32;	.endef
	.def	InitCommonControlsEx;	.scl	2;	.type	32;	.endef
	.def	GetFileVersionInfoSizeW;	.scl	2;	.type	32;	.endef
	.def	GetFileVersionInfoW;	.scl	2;	.type	32;	.endef
	.def	fb_HEXEx_s;	.scl	2;	.type	32;	.endef
	.def	fb_StrConcat;	.scl	2;	.type	32;	.endef
	.def	fb_SPACE;	.scl	2;	.type	32;	.endef
	.def	fb_Time;	.scl	2;	.type	32;	.endef
	.def	ShowWindow;	.scl	2;	.type	32;	.endef
	.def	BringWindowToTop;	.scl	2;	.type	32;	.endef
	.def	MessageBoxW;	.scl	2;	.type	32;	.endef
	.def	SetWindowLongW;	.scl	2;	.type	32;	.endef
	.def	GetWindowTextW;	.scl	2;	.type	32;	.endef
	.def	SetWindowTextW;	.scl	2;	.type	32;	.endef
	.def	GetClientRect;	.scl	2;	.type	32;	.endef
	.def	IsWindowEnabled;	.scl	2;	.type	32;	.endef
	.def	EnableWindow;	.scl	2;	.type	32;	.endef
	.def	IsWindowVisible;	.scl	2;	.type	32;	.endef
	.def	SetWindowTheme;	.scl	2;	.type	32;	.endef
	.def	GetSystemMetrics;	.scl	2;	.type	32;	.endef
	.def	CreateWindowExW;	.scl	2;	.type	32;	.endef
	.def	SetWindowLongPtrW;	.scl	2;	.type	32;	.endef
	.def	SetCursor;	.scl	2;	.type	32;	.endef
	.def	SetTextColor;	.scl	2;	.type	32;	.endef
	.def	SetBkMode;	.scl	2;	.type	32;	.endef
	.def	ClientToScreen;	.scl	2;	.type	32;	.endef
	.def	GetDlgItem;	.scl	2;	.type	32;	.endef
	.def	TrackMouseEvent;	.scl	2;	.type	32;	.endef
	.def	DragQueryFileW;	.scl	2;	.type	32;	.endef
	.def	DragFinish;	.scl	2;	.type	32;	.endef
	.def	DefMDIChildProcW;	.scl	2;	.type	32;	.endef
	.def	DefFrameProcW;	.scl	2;	.type	32;	.endef
	.def	DefWindowProcW;	.scl	2;	.type	32;	.endef
	.def	memset;	.scl	2;	.type	32;	.endef
	.def	GetClassInfoExW;	.scl	2;	.type	32;	.endef
	.def	RegisterClassExW;	.scl	2;	.type	32;	.endef
	.def	LoadCursorW;	.scl	2;	.type	32;	.endef
	.def	SetFocus;	.scl	2;	.type	32;	.endef
	.def	SetWindowPos;	.scl	2;	.type	32;	.endef
	.def	fb_ErrorSetHandler;	.scl	2;	.type	32;	.endef
	.def	fb_ErrorGetModName;	.scl	2;	.type	32;	.endef
	.def	fb_ErrorGetFuncName;	.scl	2;	.type	32;	.endef
	.def	fb_ErrorGetLineNum;	.scl	2;	.type	32;	.endef
	.def	fb_IntToWstr;	.scl	2;	.type	32;	.endef
	.def	fb_ErrorGetNum;	.scl	2;	.type	32;	.endef
	.def	SetLayeredWindowAttributes;	.scl	2;	.type	32;	.endef
	.def	SetClassLongW;	.scl	2;	.type	32;	.endef
	.def	SetClassLongPtrW;	.scl	2;	.type	32;	.endef
	.def	GetSystemMenu;	.scl	2;	.type	32;	.endef
	.def	DeleteMenu;	.scl	2;	.type	32;	.endef
	.def	GetMenuBarInfo;	.scl	2;	.type	32;	.endef
	.def	OffsetRect;	.scl	2;	.type	32;	.endef
	.def	FillRect;	.scl	2;	.type	32;	.endef
	.def	LoadIconW;	.scl	2;	.type	32;	.endef
	.def	MoveToEx;	.scl	2;	.type	32;	.endef
	.def	LineTo;	.scl	2;	.type	32;	.endef
	.def	SetPixel;	.scl	2;	.type	32;	.endef
	.def	OpenThemeData;	.scl	2;	.type	32;	.endef
	.def	DrawTextW;	.scl	2;	.type	32;	.endef
	.def	GetWindowDC;	.scl	2;	.type	32;	.endef
	.def	BeginPaint;	.scl	2;	.type	32;	.endef
	.def	EndPaint;	.scl	2;	.type	32;	.endef
	.def	GetFocus;	.scl	2;	.type	32;	.endef
	.def	GetCapture;	.scl	2;	.type	32;	.endef
	.def	IsDialogMessageW;	.scl	2;	.type	32;	.endef
	.def	ReleaseCapture;	.scl	2;	.type	32;	.endef
	.def	SetForegroundWindow;	.scl	2;	.type	32;	.endef
	.def	IsMenu;	.scl	2;	.type	32;	.endef
	.def	GetSysColor;	.scl	2;	.type	32;	.endef
	.def	TextOutW;	.scl	2;	.type	32;	.endef
	.def	fb_ArrayEraseObj;	.scl	2;	.type	32;	.endef
	.section	.rdata$.refptr.DefWindowProcW, "dr"
	.globl	.refptr.DefWindowProcW
	.linkonce	discard
.refptr.DefWindowProcW:
	.quad	DefWindowProcW
